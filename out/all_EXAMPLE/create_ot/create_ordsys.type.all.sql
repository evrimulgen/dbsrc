CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME231_COLL" AS VARRAY(2147483647) OF VARCHAR2(64 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME311_COLL" AS VARRAY(2147483647) OF VARCHAR2(64 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME391_COLL" AS VARRAY(2147483647) OF VARCHAR2(64 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."supplementalCategory469_COLL" AS VARRAY(2147483647) OF VARCHAR2(4000 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTRIBUTE_TAG482_COLL" AS VARRAY(2147483647) OF VARCHAR2(1999 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME492_COLL" AS VARRAY(2147483647) OF VARCHAR2(128 CHAR)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORD_STR_LIST" as table  of varchar2(2000 CHAR);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORD_NUM_LIST" as table  of  integer;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDSOURCE"

authid current_user
AS OBJECT
(
-------------
-- Attributes
-------------

  -- storage for data within oracle. Every operation
  -- for the data stored in this field will be under
  -- the control of transaction within which the
  -- methods are called. This means that all the changes can
  -- either be commited or rolled back as desired by the
  -- user
  localData   BLOB,

  --
  -- srcType, srcLocation and srcName are limited to 4K
  -- due to system limitation on the size of varchar2 field
  --
  srcType     VARCHAR2(4000),
  srcLocation VARCHAR2(4000),
  srcName     VARCHAR2(4000),

  -- updateTime maintains the time when the users updated either
  -- source or the object containing the source last. This attribute
  -- is not updated when import is called, but importFrom updates
  -- this method since the source information is changed.
  --
  -- For recoding updates when the top level objevt changes, users
  -- must call set method at appropriate time.
  updateTime  DATE,

  -- 1 or NULL means data is in LOB
  -- 0 means that the data is in external sources
  local       NUMBER,
  --
----------
-- Methods
----------
  --
  -- METHODS RELATED TO 'local' FIELD
  MEMBER PROCEDURE setLocal(SELF IN OUT NOCOPY ORDSource),
  MEMBER PROCEDURE clearLocal(SELF IN OUT NOCOPY ORDSource),
  MEMBER FUNCTION  isLocal RETURN BOOLEAN,
  PRAGMA RESTRICT_REFERENCES(isLocal, WNDS, WNPS, RNDS, RNPS),
  --
  -- DATE RELATED METHODS
  MEMBER FUNCTION  getUpdateTime RETURN DATE,
  PRAGMA RESTRICT_REFERENCES(getUpdateTime, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setUpdateTime(SELF IN OUT NOCOPY ORDSource,
                                 current_time DATE),
  --
  -- SOURCE INFORMATION
  MEMBER PROCEDURE setSourceInformation(SELF IN OUT NOCOPY ORDSource,
                                        source_type   IN VARCHAR2,
                                        source_location IN VARCHAR2,
                                        source_name     IN VARCHAR2),
  MEMBER FUNCTION  getSourceInformation
                   RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceInformation, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceLocation, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceName RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceName, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getBFile RETURN BFILE,
  PRAGMA RESTRICT_REFERENCES(getBFile, WNDS, WNPS, RNDS, RNPS),
  --
  -- SOURCE IMPORT/EXPORT OPERATIONS
  MEMBER PROCEDURE import(
                          SELF     IN OUT NOCOPY ORDSource,
                          ctx      IN OUT RAW,
                          mimetype OUT VARCHAR2,
                          format   OUT VARCHAR2),
  MEMBER PROCEDURE import(
                          SELF     IN OUT NOCOPY ORDSource,
                          ctx      IN OUT RAW,
                          dlob     IN OUT NOCOPY BLOB,
                          mimetype OUT VARCHAR2,
                          format   OUT VARCHAR2),
  MEMBER PROCEDURE importFrom( SELF            IN OUT NOCOPY ORDSource,
                               ctx             IN OUT RAW,
                               mimetype        OUT VARCHAR2,
                               format          OUT VARCHAR2,
                               source_type     IN VARCHAR2,
                               source_location IN VARCHAR2,
			       source_name     IN VARCHAR2),
  MEMBER PROCEDURE importFrom( SELF            IN OUT NOCOPY ORDSource,
                               ctx             IN OUT RAW,
                               dlob            IN OUT NOCOPY BLOB,
                               mimetype        OUT VARCHAR2,
                               format          OUT VARCHAR2,
                               source_type     IN VARCHAR2,
                               source_location IN VARCHAR2,
			       source_name     IN VARCHAR2),
  MEMBER PROCEDURE export(SELF            IN OUT NOCOPY ORDSource,
                          ctx             IN OUT RAW,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  --
  -- SOURCE CONTENT RELATED OPERATIONS
  MEMBER FUNCTION  getContentLength(ctx IN OUT RAW) RETURN INTEGER,
  --
  MEMBER FUNCTION  getSourceAddress(ctx IN OUT RAW,
                                    userData IN VARCHAR2) RETURN VARCHAR2,
  --
  MEMBER FUNCTION  getLocalContent RETURN BLOB,
  PRAGMA RESTRICT_REFERENCES(getLocalContent, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE getContentInTempLob(
                                       SELF IN OUT NOCOPY ORDSource,
                                       ctx      IN OUT RAW,
                                       tempLob  IN OUT NOCOPY BLOB,
                                       mimetype OUT VARCHAR2,
                                       format   OUT  VARCHAR2,
                                       duration IN PLS_INTEGER := 10,
                                       cache    IN BOOLEAN := TRUE),
  MEMBER PROCEDURE deleteLocalContent,
  --
  -- SOURCE ACCESS METHODS
  MEMBER FUNCTION open(
                       SELF IN OUT NOCOPY ORDSource,
                       userArg IN RAW,
                       ctx OUT RAW) RETURN INTEGER,
  MEMBER FUNCTION close(
                       SELF IN OUT NOCOPY ORDSource,
                       ctx IN OUT RAW) RETURN INTEGER,
  MEMBER FUNCTION trim(SELF    IN OUT NOCOPY ORDSource,
                       ctx     IN OUT RAW,
                       newlen  IN INTEGER) RETURN INTEGER,
  --
  -- CONTENT READ/WRITE OPERATIONS
  MEMBER PROCEDURE read(SELF     IN OUT NOCOPY ORDSource,
                        ctx      IN OUT RAW,
                        startPos IN     INTEGER,
                        numBytes IN OUT INTEGER,
                        buffer   OUT    RAW),
  MEMBER PROCEDURE write(SELF IN OUT NOCOPY ORDSource,
                         ctx      IN OUT RAW,
                         startPos IN INTEGER,
                         numBytes IN OUT INTEGER,
                         buffer   IN RAW),
  --
  -- SEND OFF ANY COMMAND TO THE EXTERNAL SOURCE PLUGIN
  MEMBER FUNCTION processCommand(
                      SELF    IN OUT NOCOPY ORDSource,
                      ctx     IN OUT RAW,
                      command IN VARCHAR2,
                      arglist IN VARCHAR2,
                      result  OUT RAW) RETURN RAW
  --
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDDATASOURCE"

AUTHID CURRENT_USER
AS OBJECT
(
  --------------
  -- Attributes
  --------------
  --
  -- storage for data within oracle. Every operation
  -- for the data stored in this field will be under
  -- the control of transaction within which the
  -- methods are called. This means that all the changes can
  -- either be commited or rolled back as desired by the
  -- user
  localData   BLOB,
  --
  --
  -- srcType, srcLocation and srcName are limited to 4K
  -- due to system limitation on the size of varchar2 field
  --
  -- srcType possible values: local or file. We don't support http for
  -- this release.
  -- if srcType=local, data access should be through localData attribute
  --
  srcType     VARCHAR2(4000),
  srcLocation VARCHAR2(4000),
  srcName     VARCHAR2(4000),
  --
  -- updateTime maintains the time when the users update/change the object
  --
  updateTime  DATE,
  ---------------
  -- Constructors
  ---------------
  --
  -- Constructor that creates the object from a specified source.
  -- By default an object of local source with empty lob is created.
  --
  CONSTRUCTOR FUNCTION ORDDataSource(SELF IN OUT NOCOPY ORDDataSource,
                                     source_type IN VARCHAR2 DEFAULT 'local',
                                     source_location IN VARCHAR2 DEFAULT null,
                                     source_name IN VARCHAR2 DEFAULT null)
  RETURN SELF AS Result DETERMINISTIC,
  --
  -- Constructor that creates the object from a blob.
  --
  CONSTRUCTOR FUNCTION ORDDataSource(SELF IN OUT NOCOPY ORDDataSource,
                                     data IN BLOB)
  RETURN SELF AS Result DETERMINISTIC,
  ----------
  -- Methods
  ----------
  --
  -- Return if the data is stored in the localData BLOB. This is determined by
  -- looking srcType attribute if it is "local"
  --
  MEMBER FUNCTION  isLocal RETURN INTEGER DETERMINISTIC PARALLEL_ENABLE,
  --
  -- DATE RELATED METHODS
  --
  MEMBER FUNCTION  getUpdateTime RETURN DATE DETERMINISTIC PARALLEL_ENABLE,
  --
  MEMBER PROCEDURE setUpdateTime(SELF IN OUT NOCOPY ORDDataSource,
                                 current_time IN DATE DEFAULT SYSDATE),
  --
  -- SOURCE INFORMATION
  --
  -- Redefine the source, this will set the new updateTime.
  --
  MEMBER PROCEDURE setSourceInformation(SELF IN OUT NOCOPY ORDDataSource,
                                        source_type   IN VARCHAR2,
                                        source_location IN VARCHAR2,
                                        source_name     IN VARCHAR2),
  --
  -- Return the source information in the format of:
  -- srcType://srcLocation/srcName
  --
  MEMBER FUNCTION  getSourceInformation
                   RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,
  --
  -- Return the srcType attribute
  --
  MEMBER FUNCTION  getSourceType RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,
  --
  -- Return the srcLocation attribute.
  --
  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,
  --
  -- Return the srcSourceName attribute.
  --
  MEMBER FUNCTION  getSourceName RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,
  --
  -- Return BFILE. Throw error if srcType is not 'FILE'
  --
  MEMBER FUNCTION  getBFile RETURN BFILE DETERMINISTIC,
  --
  -- Return localData attribute
  --
  MEMBER FUNCTION  getBLob RETURN BLOB DETERMINISTIC,
  --
  -- SOURCE CONTENT RELATED OPERATIONS
  --
  MEMBER FUNCTION  getContentLength RETURN INTEGER DETERMINISTIC PARALLEL_ENABLE,
  --
  -- SOURCE IMPORT/EXPORT OPERATIONS
  --
  -- Import data from an external source. If srcType is "local", throw error,
  -- To avoid this error, user can call setSourceInfomation first.
  -- After a successful import, srcType is set as "local" and updateTime
  -- is updated.
  --
  MEMBER PROCEDURE import( SELF     IN OUT NOCOPY ORDDataSource),
  --
  -- Export the data from database BLOB to an external source.
  -- If srcType is not "local", throw error.
  -- None of the object attributes will be affected by this method
  -- so the SELF parameter is only IN.
  --
  MEMBER PROCEDURE export(SELF            IN ORDDataSource,
                          dest_type     IN VARCHAR2,
                          dest_location IN VARCHAR2,
                          dest_name     IN VARCHAR2)
) NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_COLOR"

  AUTHID CURRENT_USER
  AS OBJECT
    (
      ---SI_Color Type attributes
     redValue   INTEGER,
     greenValue INTEGER,
     blueValue  INTEGER,
     --
     MEMBER PROCEDURE SI_RGBColor
     (SELF       IN OUT NOCOPY SI_Color,
      redValue   IN INTEGER,
      greenValue IN INTEGER,
      blueValue  IN INTEGER)
) INSTANTIABLE
NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."COLORFREQUENCIESLIST" as VARRAY(100) of DOUBLE PRECISION;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TEXTUREENCODING" as VARRAY(5) of DOUBLE PRECISION;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLAT_AVERAGECOLOR" as VARRAY(3) of integer;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLAT_COLORPOSITIONS" as VARRAY(27) of DOUBLE PRECISION;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_SEQUENCE81_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ITEM_NUMBER" NUMBER(38),"CODE_VALUE" VARCHAR2(4000 CHAR),"CODING_SCHEME" VARCHAR2(4000 CHAR),"CODING_SCHEME_VERSION" VARCHAR2(4000 CHAR),"CODING_MEANING" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORD_DICOM_HEADER85_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VERSION" VARCHAR2(16 CHAR),"DICOM_STANDARD_VERSION" VARCHAR2(16 CHAR),"DICOM_STANDARD_RELEASE" VARCHAR2(16 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MEDIA_STORAGE_SOP_CLASS87_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MEDIA_STORAGE_SOP_INSTA88_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TRANSFER_SYNTAX_UID89_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IMPLEMENTATION_CLASS_UI90_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IMPLEMENTATION_VERSION_91_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SOURCE_APPLICATION_ENTI93_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME95_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ID96_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."BIRTH_DATE97_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SEX98_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INSTANCE_UID100_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE102_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TIME103_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."REFERING_PHYSICIANS_NAM104_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ID105_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACCESSION_NUMBER106_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DESCRIPTION107_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ADMITTING_DIAGNOSES_DES110_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MODALITY114_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INSTANCE_UID115_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE117_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TIME118_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMING_PHYSICIANS_N119_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."BODY_PART_EXAMINED121_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PATIENT_POSITION122_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMED_PROCEDURE_STE123_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMED_PROCEDURE_STE125_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMED_PROCEDURE_STE127_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMED_PROCEDURE_STE129_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MANUFACTURER132_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INSTANCE_NUMBER134_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACQUISITION_NUMBER135_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACQUISITION_DATE136_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACQUISITION_TIME137_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACQUISITION_DATETIME138_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PATIENT_ORIENTATION139_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FRAME_LATERALITY141_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SAMPLES_PER_PIXEL143_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PHOTOMETRIC_INTERPRETAT144_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ROWS146_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."COLUMNS147_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."BIT_ALLOCATED148_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."BIT_STORED149_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."HIGH_BIT150_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PIXEL_REPRESENTATION151_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PLANAR_CONFIGURATION152_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PIXEL_ASPECT_RATIO153_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CLASS_UID156_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INSTANCE_UID157_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SPECIFIC_CHARACTER_SET158_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"rawValue" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."singleField_t160_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","Name" VARCHAR2(4000 CHAR),"Value" VARCHAR2(4000 CHAR),"Datatype" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."interoperabilityType164_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsDifferentialType165_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsDistanceRefType166_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsDirectionType167_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsSpeedRefType168_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsMeasureModeType169_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsStatusType170_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsBearingType171_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsLongitudeType172_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsLongitudeRefType173_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsLatitudeType174_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsAltitudeRefType175_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gpsLatitudeRefType176_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."uuidType177_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."subjectDistanceRangeTyp178_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."sharpnessType179_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."saturationType180_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."contrastType181_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."gainControlType182_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."sceneCaptureType183_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."whiteBalanceType184_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."exposureModeType185_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."customRenderedType186_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."subjectLocationType188_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"CenterX" NUMBER(38),"CenterY" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."yCbCrCoefficientsType189_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"Coefficient_1" NUMBER,"Coefficient_2" NUMBER,"Coefficient_3" NUMBER)NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."chromaticity190_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","X" NUMBER,"Y" NUMBER)NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."StripByteCount194_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","Index" NUMBER(38),"Bytes" NUMBER(38))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."StripOffset197_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","Index" NUMBER(38),"Offset" NUMBER(38))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."yCbCrPositioningType199_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."yCbCrSubSamplingType200_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."planarConfigurationType201_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."orientationType202_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."photometricInterpretati203_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."compressionType204_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."bitsPerSampleType205_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."fileSourceType206_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."sensingMethodType207_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."resolutionType208_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."flashType209_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"Fired" "XDB"."XDB$ENUM_T","Return" "XDB"."XDB$ENUM_T","Mode" "XDB"."XDB$ENUM_T","Function" "XDB"."XDB$ENUM_T","RedEyeReduction" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."lightSourceType210_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."meteringModeType211_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."exposureProgramType212_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."colorSpaceType213_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" "XDB"."XDB$ENUM_T","tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."timeType214_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."dateTimeType215_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."dateType216_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."realType217_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."nonNegativeRealType218_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."stringType219_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."nonNegativeIntegerType220_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."positiveIntegerType221_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MIXED_TEXT_T227_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_RANGE_T228_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","STARTING_TAG" VARCHAR2(4000 CHAR),"ENDING_TAG" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER230_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME231_COLL","UID232" VARCHAR2(128 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG235_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_MODIFIER" VARCHAR2(128 CHAR),"DOCUMENT_MODIFICATION_DATE" VARCHAR2(128 CHAR),"DOCUMENT_VERSION" VARCHAR2(128 CHAR),"MODIFICATION_COMMENT" VARCHAR2(1999 CHAR),"BASE_DOCUMENT" VARCHAR2(128 CHAR),"BASE_DOCUMENT_RELEASE_DATE" DATE,"BASE_DOCUMENT_DESCRIPTION" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXP_ATTR_T237_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT239_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VR" VARCHAR2(4000 CHAR),"VALUE" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UT_ATTR_T240_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."US_ATTR_T241_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN243_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UL_ATTR_T244_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(10),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UI_ATTR_T245_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(128 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TM_ATTR_T246_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ST_ATTR_T247_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1024 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SS_ATTR_T248_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AE_ATTR_T252_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS255_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VALUE" VARCHAR2(4000 CHAR),"AGE_IN_DAYS" NUMBER(10))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AT_ATTR_T257_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(4),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CS_ATTR_T259_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DA_ATTR_T262_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DT_ATTR_T264_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DS_ATTR_T266_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FL_ATTR_T268_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FD_ATTR_T270_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IS_ATTR_T272_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LO_ATTR_T274_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LT_ATTR_T276_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OB_ATTR_T278_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OF_ATTR_T280_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW283_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME287_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","type" "XDB"."XDB$ENUM_T","FAMILY" VARCHAR2(4000 CHAR),"GIVEN" VARCHAR2(4000 CHAR),"MIDDLE" VARCHAR2(4000 CHAR),"PREFIX" VARCHAR2(4000 CHAR),"SUFFIX" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SH_ATTR_T290_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SL_ATTR_T292_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MIXED_TEXT_T307_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_RANGE_T308_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","STARTING_TAG" VARCHAR2(4000 CHAR),"ENDING_TAG" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER310_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME311_COLL","UID312" VARCHAR2(128 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG315_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_MODIFIER" VARCHAR2(128 CHAR),"DOCUMENT_MODIFICATION_DATE" VARCHAR2(128 CHAR),"DOCUMENT_VERSION" VARCHAR2(128 CHAR),"MODIFICATION_COMMENT" VARCHAR2(1999 CHAR),"BASE_DOCUMENT" VARCHAR2(128 CHAR),"BASE_DOCUMENT_RELEASE_DATE" DATE,"BASE_DOCUMENT_DESCRIPTION" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXP_ATTR_T317_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT319_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VR" VARCHAR2(4000 CHAR),"VALUE" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UT_ATTR_T320_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."US_ATTR_T321_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN323_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UL_ATTR_T324_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(10),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UI_ATTR_T325_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(128 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TM_ATTR_T326_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ST_ATTR_T327_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1024 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SS_ATTR_T328_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AE_ATTR_T332_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS335_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VALUE" VARCHAR2(4000 CHAR),"AGE_IN_DAYS" NUMBER(10))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AT_ATTR_T337_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(4),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CS_ATTR_T339_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DA_ATTR_T342_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DT_ATTR_T344_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DS_ATTR_T346_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FL_ATTR_T348_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FD_ATTR_T350_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IS_ATTR_T352_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LO_ATTR_T354_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LT_ATTR_T356_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OB_ATTR_T358_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OF_ATTR_T360_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW363_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME367_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","type" "XDB"."XDB$ENUM_T","FAMILY" VARCHAR2(4000 CHAR),"GIVEN" VARCHAR2(4000 CHAR),"MIDDLE" VARCHAR2(4000 CHAR),"PREFIX" VARCHAR2(4000 CHAR),"SUFFIX" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SH_ATTR_T370_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SL_ATTR_T372_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MIXED_TEXT_T387_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_RANGE_T388_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","STARTING_TAG" VARCHAR2(4000 CHAR),"ENDING_TAG" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER390_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME391_COLL","UID392" VARCHAR2(128 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG395_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_MODIFIER" VARCHAR2(128 CHAR),"DOCUMENT_MODIFICATION_DATE" VARCHAR2(128 CHAR),"DOCUMENT_VERSION" VARCHAR2(128 CHAR),"MODIFICATION_COMMENT" VARCHAR2(1999 CHAR),"BASE_DOCUMENT" VARCHAR2(128 CHAR),"BASE_DOCUMENT_RELEASE_DATE" DATE,"BASE_DOCUMENT_DESCRIPTION" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXP_ATTR_T397_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT399_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VR" VARCHAR2(4000 CHAR),"VALUE" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UT_ATTR_T400_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."US_ATTR_T401_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(5),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN403_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UL_ATTR_T404_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(10),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UI_ATTR_T405_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(128 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TM_ATTR_T406_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ST_ATTR_T407_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1024 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SS_ATTR_T408_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AE_ATTR_T412_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS415_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","VALUE" VARCHAR2(4000 CHAR),"AGE_IN_DAYS" NUMBER(10))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AT_ATTR_T417_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(4),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CS_ATTR_T419_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DA_ATTR_T422_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" DATE,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DT_ATTR_T424_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" TIMESTAMP,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DS_ATTR_T426_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FL_ATTR_T428_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FD_ATTR_T430_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IS_ATTR_T432_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LO_ATTR_T434_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(64 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LT_ATTR_T436_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(4000 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OB_ATTR_T438_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OF_ATTR_T440_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER,"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW443_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" RAW(2000),"endian" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME447_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","type" "XDB"."XDB$ENUM_T","FAMILY" VARCHAR2(4000 CHAR),"GIVEN" VARCHAR2(4000 CHAR),"MIDDLE" VARCHAR2(4000 CHAR),"PREFIX" VARCHAR2(4000 CHAR),"SUFFIX" VARCHAR2(4000 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SH_ATTR_T450_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(16 CHAR),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SL_ATTR_T452_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" NUMBER(38),"tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ordImageAttributesType467_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","height" NUMBER(38),"width" NUMBER(38),"contentLength" NUMBER(38),"fileFormat" VARCHAR2(4000 CHAR),"contentFormat" VARCHAR2(4000 CHAR),"compressionFormat" VARCHAR2(4000 CHAR),"mimeType" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."locationType470_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","code" VARCHAR2(4000 CHAR),"name" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."bylineType472_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","author" VARCHAR2(4000 CHAR),"authorTitle" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."xmpMetadataType474_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBANY475$" CLOB)NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ANONYM_G_T476_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(128 CHAR),"action" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ANONYM_T477_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(128 CHAR),"action" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PARAMETER491_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME492_COLL","VALUE" "ATTRIBUTE_TAG482_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACTION_T494_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1999 CHAR),"when" RAW(1),"action" "XDB"."XDB$ENUM_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTERNAL_MACRO_INCLUDE502_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1999 CHAR),"name" VARCHAR2(64 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTERNAL_RULE_INCLUDE504_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SYS_XDBBODY$" VARCHAR2(1999 CHAR),"name" VARCHAR2(64 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MAPPED_PATH508_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","occurs" RAW(1),"notEmpty" RAW(1),"writeTag" RAW(1),"writeDefiner" RAW(1),"writeName" RAW(1),"writeRawValue" RAW(1),"ATTRIBUTE_TAG" VARCHAR2(1999 CHAR),"PATH" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREFERENCE_DEF511_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","PARAMETER" VARCHAR2(64 CHAR),"DESCRIPTION" VARCHAR2(1999 CHAR),"VALUE" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."STANDARD_ATTRIBUTE_DEFI517_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","TAG" VARCHAR2(4000 CHAR),"NAME" VARCHAR2(128 CHAR),"VR" VARCHAR2(4000 CHAR),"VM" VARCHAR2(128 CHAR),"RETIRED" RAW(1))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UID_ENTRY_T522_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","UID523" VARCHAR2(128 CHAR),"NAME" VARCHAR2(128 CHAR),"DESCRIPTION" VARCHAR2(1999 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDIMAGE"

  authid current_user
  AS OBJECT
(
  -------------------
  -- TYPE ATTRIBUTES
  -------------------
  -- source
  --   Image source (ORDSource)
  -- height
  --   Height of the image in pixels
  -- width
  --   Width of image in pixels
  -- contentLength
  --   Size of the on-disk image in bytes
  -- fileFormat
  --   File type of image (e.g., TIFF, JFIF)
  -- contentFormat
  --   Type of image (e.g., monochrome, 8-bit Grayscale)
  -- compressionFormat
  --   Compression used in image
  -- mimeType
  --   Mime type of the image

  source              ORDSource,
  height              INTEGER,
  width               INTEGER,
  contentLength       INTEGER,
  fileFormat          VARCHAR2(4000),
  contentFormat       VARCHAR2(4000),
  compressionFormat   VARCHAR2(4000),
  mimeType            VARCHAR2(4000),
--
---------------------
-- METHOD DECLARATION
---------------------
--
  -- USER-DEFINED CONSTRUCTORS
--
-- Description:  Construct an ORDImage object from a BLOB
-- Parameters:
--   data:      BLOB
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDImage(SELF IN OUT NOCOPY ORDSYS.ORDImage,
    data             IN BLOB,
    setProperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
--
--
-- Description: Construct an ORDImage object from a specified source.
-- By default, an empty local ORDImage object is created.
-- Parameters:
--   source_type: the type of the source.
--                Allowed value: LOCAL(default), FILE, HTTP
--   source_location: the location of the source.
--   source_name: the name of the source.
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDImage(SELF IN OUT NOCOPY ORDSYS.ORDImage,
    source_type       IN VARCHAR2 DEFAULT 'LOCAL',
    source_location   IN VARCHAR2 DEFAULT NULL,
    source_name       IN VARCHAR2 DEFAULT NULL,
    setProperties  IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
  --
  -- OLD CONSTRUCTORS
  STATIC FUNCTION init RETURN ORDImage,
  STATIC FUNCTION init( srcType IN VARCHAR2,
            srcLocation IN VARCHAR2,
            srcName IN VARCHAR2 ) RETURN ORDImage,
--
  -- IMAGE COPY METHOD
  MEMBER PROCEDURE copy(SELF IN OUT NOCOPY ORDImage,
                        dest IN OUT NOCOPY ORDImage),
--
  -- IMAGE PROCESSING RELATED METHODS
  MEMBER PROCEDURE process(SELF    IN OUT NOCOPY ORDImage,
                           command IN            VARCHAR2),
  MEMBER PROCEDURE processCopy(SELF    IN OUT NOCOPY ORDImage,
                               command IN            VARCHAR2,
                               dest    IN OUT NOCOPY ORDImage),
--
  -- ADD WATERMARK
  MEMBER PROCEDURE applyWatermark(SELF    IN OUT NOCOPY ORDSYS.ORDImage,
                               added_text IN    VARCHAR2,
                               dest    IN OUT NOCOPY ORDSYS.ORDImage,
                               logging OUT VARCHAR2,
                               watermark_properties IN ORDSYS.ORD_STR_LIST default null),

  MEMBER PROCEDURE applyWatermark(SELF     IN OUT NOCOPY ORDSYS.ORDImage,
                               added_image IN OUT NOCOPY ORDSYS.ORDImage,
                               dest    IN OUT NOCOPY ORDSYS.ORDImage,
                               logging OUT VARCHAR2,
                               watermark_properties IN ORDSYS.ORD_STR_LIST default null),

--
  -- IMAGE PROPERTY SET AND CHECK METHODS
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDImage),
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDImage,
                                 description IN VARCHAR2),
  MEMBER FUNCTION checkProperties RETURN BOOLEAN,
--
  -- IMAGE ATTRIBUTE ACCESSOR METHODS
  MEMBER FUNCTION getHeight RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getHeight, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION getWidth RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getWidth, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION getFileFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getFileFormat, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION getContentFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getContentFormat, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION getCompressionFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getCompressionFormat, WNDS, WNPS, RNDS, RNPS),
--
  -- METADATA RELATED METHODS
  MEMBER FUNCTION getMetadata(SELF          IN ORDImage,
                              metadataType  IN VARCHAR2 DEFAULT 'ALL')
  RETURN SYS.XMLSEQUENCETYPE,
--
  MEMBER PROCEDURE putMetadata(SELF         IN OUT NOCOPY ORDImage,
                               xmlData      IN SYS.XMLType,
                               metadataType IN VARCHAR2 DEFAULT 'XMP',
                               encoding     IN VARCHAR2 DEFAULT 'UTF-8'),
--
  -- LOCAL RELATED METHODS
  MEMBER PROCEDURE setLocal(SELF IN OUT NOCOPY ORDImage),
  MEMBER PROCEDURE clearLocal(SELF IN OUT NOCOPY ORDImage),
  MEMBER FUNCTION  isLocal RETURN BOOLEAN,
  PRAGMA RESTRICT_REFERENCES(isLocal, WNDS, WNPS, RNDS, RNPS),
  --
  -- DATE RELATED METHODS
  MEMBER FUNCTION  getUpdateTime RETURN DATE,
  PRAGMA RESTRICT_REFERENCES(getUpdateTime, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setUpdateTime(SELF         IN OUT NOCOPY ORDImage,
                                 current_time               DATE),
--
  -- MIMETYPE RELATED METHODS
  MEMBER FUNCTION  getMimeType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getMimeType, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setMimeType(SELF IN OUT NOCOPY ORDImage,
                               mime IN            VARCHAR2),
--
  -- SOURCE/CONTENT RELATED METHODS
  MEMBER FUNCTION  getContentLength RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getContentLength, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION  getContent RETURN BLOB,
  PRAGMA RESTRICT_REFERENCES(getContent, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION getBFILE RETURN BFILE,
  PRAGMA RESTRICT_REFERENCES(getBFILE, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER PROCEDURE deleteContent(SELF IN OUT NOCOPY ORDImage),
--
  MEMBER FUNCTION getDicomMetadata(SELF IN ORDImage,
                                    optionString  IN VARCHAR2) RETURN XMLType,
--
  MEMBER PROCEDURE setSource(SELF IN OUT NOCOPY ORDImage,
                             source_type     IN VARCHAR2,
                             source_location IN VARCHAR2,
                             source_name     IN VARCHAR2),
  MEMBER FUNCTION  getSource RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSource, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION  getSourceType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceType, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceLocation, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER FUNCTION  getSourceName RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceName, WNDS, WNPS, RNDS, RNPS),
--
  MEMBER PROCEDURE import(SELF IN OUT NOCOPY ORDImage,
                          ctx IN OUT RAW),
  MEMBER PROCEDURE importFrom(
                          SELF IN OUT NOCOPY     ORDImage,
                          ctx             IN OUT RAW,
                          source_type     IN     VARCHAR2,
                          source_location IN     VARCHAR2,
                          source_name     IN     VARCHAR2),
  MEMBER PROCEDURE export(
                          SELF IN OUT NOCOPY     ORDImage,
                          ctx             IN OUT RAW,
                          source_type     IN     VARCHAR2,
                          source_location IN     VARCHAR2,
                          source_name     IN     VARCHAR2),
  --
  MEMBER FUNCTION  processSourceCommand(
                            SELF      IN OUT NOCOPY ORDImage,
                            ctx       IN OUT RAW,
                            cmd       IN VARCHAR2,
                            arguments IN VARCHAR2,
                            result    OUT RAW)
                   RETURN RAW,
  -- FILE OPERATIONS on the source
  MEMBER FUNCTION openSource(SELF IN OUT NOCOPY ORDImage,
                             userArg IN RAW,
                             ctx  OUT RAW) RETURN INTEGER,
  --
  MEMBER FUNCTION closeSource(SELF IN OUT NOCOPY ORDImage, ctx IN OUT RAW)
  RETURN INTEGER,
  --
  MEMBER FUNCTION trimSource(SELF IN OUT NOCOPY ORDImage, ctx IN OUT RAW,
                             newlen IN INTEGER) RETURN INTEGER,
  --
  MEMBER PROCEDURE readFromSource(SELF IN OUT NOCOPY ORDImage,
                                  ctx IN OUT RAW,
                                  startPos IN INTEGER,
                                  numBytes IN OUT INTEGER,
                                  buffer OUT RAW),
  --
  MEMBER PROCEDURE writeToSource(SELF IN OUT NOCOPY ORDImage,
                                 ctx IN OUT RAW,
                                 startPos IN INTEGER,
                                 numBytes IN OUT INTEGER,
                                 buffer IN RAW),
  --
  -- Static Methods for the relational functional interface
  STATIC PROCEDURE export(ctx             IN OUT RAW,
                          local_data      IN BLOB,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2,
                              format          OUT VARCHAR2,
                              mime_type       OUT VARCHAR2),
  --
  STATIC PROCEDURE getProperties(imageBlob         IN BLOB,
                                 attributes        IN OUT NOCOPY CLOB,
                                 mimeType          OUT VARCHAR2,
                                 width             OUT INTEGER,
                                 height            OUT INTEGER,
                                 fileFormat        IN OUT VARCHAR2,
                                 contentFormat     OUT VARCHAR2,
                                 compressionFormat OUT VARCHAR2,
                                 contentLength     OUT INTEGER),
  --
  STATIC PROCEDURE getProperties(imageBlob         IN BLOB,
                                 attributes        IN OUT NOCOPY CLOB),
  --
  STATIC PROCEDURE getProperties(imageBfile       IN OUT NOCOPY BFILE,
                                 attributes        IN OUT NOCOPY CLOB,
                                 mimeType          OUT VARCHAR2,
                                 width             OUT INTEGER,
                                 height            OUT INTEGER,
                                 fileFormat        IN OUT VARCHAR2,
                                 contentFormat     OUT VARCHAR2,
                                 compressionFormat OUT VARCHAR2,
                                 contentLength     OUT INTEGER),
  --
  STATIC PROCEDURE getProperties(imageBfile       IN OUT NOCOPY BFILE,
                                 attributes        IN OUT NOCOPY CLOB),
  --
  STATIC FUNCTION getMetadata(imageBlob    IN BLOB,
                              metadataType IN VARCHAR2 DEFAULT 'ALL')
                  RETURN SYS.XMLSEQUENCETYPE,
  --
  STATIC FUNCTION getMetadata(imageBfile   IN BFILE,
                              metadataType IN VARCHAR2 DEFAULT 'ALL')
                  RETURN SYS.XMLSEQUENCETYPE,
  --
  STATIC PROCEDURE putMetadata(imageBlob    IN BLOB,
                               dest         IN OUT NOCOPY BLOB,
                               xmlData      IN SYS.XMLType,
                               metadataType IN VARCHAR2 DEFAULT 'XMP',
                               encoding     IN VARCHAR2 DEFAULT 'UTF-8'),
  --
  STATIC PROCEDURE putMetadata(imageBfile   IN BFILE,
                               dest         IN OUT NOCOPY BLOB,
                               xmlData      IN SYS.XMLType,
                               metadataType IN VARCHAR2 DEFAULT 'XMP',
                               encoding     IN VARCHAR2 DEFAULT 'UTF-8'),
  --
  STATIC PROCEDURE process(imageBlob IN OUT NOCOPY BLOB,
                           command IN VARCHAR2),
  --
  STATIC PROCEDURE processCopy(imageBlob IN BLOB,
                               command IN     VARCHAR2,
                               dest    IN OUT NOCOPY BLOB),
  --
  STATIC PROCEDURE processCopy(imageBfile IN OUT NOCOPY BFILE,
                               command IN     VARCHAR2,
                               dest    IN OUT NOCOPY BLOB),
  --
  STATIC PROCEDURE process(imageBlob     IN OUT NOCOPY BLOB,
                           command       IN VARCHAR2,
                           width         IN INTEGER,
                           height        IN INTEGER,
                           fileFormat    IN VARCHAR2,
                           contentFormat IN VARCHAR2,
                           compressionFormat IN VARCHAR2),
  --
  STATIC PROCEDURE processCopy(imageBlob IN BLOB,
                               command       IN VARCHAR2,
                               dest          IN OUT NOCOPY BLOB,
                               width         IN INTEGER,
                               height        IN INTEGER,
                               fileFormat    IN VARCHAR2,
                               contentFormat IN VARCHAR2,
                               compressionFormat IN VARCHAR2),
  --
  STATIC PROCEDURE processCopy(imageBfile    IN OUT NOCOPY BFILE,
                               command       IN VARCHAR2,
                               dest          IN OUT NOCOPY BLOB,
                               width         IN INTEGER,
                               height        IN INTEGER,
                               fileFormat    IN VARCHAR2,
                               contentFormat IN VARCHAR2,
                               compressionFormat IN VARCHAR2),
  --
  STATIC FUNCTION getDicomMetadata(imageBlob      IN BLOB,
                                   optionString IN VARCHAR2) RETURN XMLType,
  --
  STATIC FUNCTION getDicomMetadata(imageBfile     IN BFILE,
                                   optionString IN VARCHAR2) RETURN XMLType,
  --
  STATIC PROCEDURE applyWatermark(imageBlob     IN BLOB,
                               added_text       IN VARCHAR2,
                               dest          IN OUT NOCOPY BLOB,
                               logging OUT VARCHAR2,
                               watermark_properties IN ordsys.ord_str_list default null),

  STATIC PROCEDURE applyWatermark(imageBlob     IN BLOB,
                               added_image      IN BLOB,
                               dest          IN OUT NOCOPY BLOB,
                               logging OUT VARCHAR2,
                               watermark_properties IN ordsys.ord_str_list default null),

  STATIC PROCEDURE applyWatermark(imageBfile    IN OUT NOCOPY BFILE,
                               added_text       IN VARCHAR2,
                               dest          IN OUT NOCOPY BLOB,
                               logging OUT VARCHAR2,
                               watermark_properties IN ordsys.ord_str_list default null),

  STATIC PROCEDURE applyWatermark(imageBfile    IN OUT NOCOPY BFILE,
                               added_image      IN OUT NOCOPY BFILE,
                               dest          IN OUT NOCOPY BLOB,
                               logging OUT VARCHAR2,
                               watermark_properties IN ordsys.ord_str_list default null)

);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."COLORSLIST" AS VARRAY(100) of SI_Color;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."COLORPOSITIONS" as VARRAY(9) of SI_Color;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDAUDIO"

authid current_user
AS OBJECT
(
---------------------------
-- ATTRIBUTES
---------------------------
  description VARCHAR2(4000),
  source      ORDSource,
  format      VARCHAR2(31),
  mimeType    VARCHAR2(4000),
  comments    CLOB,
--
---------------------------
-- Audio Related Attributes
---------------------------
--
  encoding         VARCHAR2(256),
  numberOfChannels INTEGER,
  samplingRate     INTEGER,
  sampleSize       INTEGER,
  compressionType  VARCHAR2(4000),
  audioDuration    INTEGER,
---------------------------
-- METHODS
---------------------------
  -- USER-DEFINED CONSTRUCTORS
--
-- Description:  Construct an ORDAudio object from a BLOB
-- Parameters:
--   data:      BLOB
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDAudio(SELF IN OUT NOCOPY ORDSYS.ORDAudio,
    data             IN BLOB,
    setProperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
--
--
-- Description: Construct an ORDAudio object from a specified source.
-- By default, an empty local ORDAudio object is created.
-- Parameters:
--   source_type: the type of the source.
--                Allowed value: LOCAL(default), FILE, HTTP
--   source_location: the location of the source.
--   source_name: the name of the source.
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDAudio(SELF IN OUT NOCOPY ORDSYS.ORDAudio,
    source_type       IN VARCHAR2 DEFAULT 'LOCAL',
    source_location   IN VARCHAR2 DEFAULT NULL,
    source_name       IN VARCHAR2 DEFAULT NULL,
    setProperties  IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
  --
  -- CONSTRUCTORS
  STATIC FUNCTION init RETURN ORDAudio,
  STATIC FUNCTION init( srcType IN VARCHAR2,
            srcLocation IN VARCHAR2,
            srcName IN VARCHAR2 ) RETURN ORDAudio,
--
  -- DATE RELATED METHODS
  MEMBER FUNCTION  getUpdateTime RETURN DATE,
  PRAGMA RESTRICT_REFERENCES(getUpdateTime, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setUpdateTime(SELF IN OUT NOCOPY ORDAudio,
                                 current_time DATE),
  --
  -- DESCRIPTION RELATED METHODS
  MEMBER PROCEDURE setDescription(SELF IN OUT NOCOPY ORDAudio,
                                  user_description IN VARCHAR2),
  MEMBER FUNCTION  getDescription RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getDescription, WNDS, WNPS, RNDS, RNPS),
  --
  -- MIMETYPE RELATED METHODS
  MEMBER FUNCTION  getMimeType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getMimeType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setMimeType(SELF IN OUT NOCOPY ORDAudio,
                               mime IN VARCHAR2),
  --
  --
  -- SOURCE RELATED METHODS
  MEMBER FUNCTION  processSourceCommand(
                            SELF      IN OUT NOCOPY ORDAudio,
                            ctx       IN OUT RAW,
                            cmd       IN VARCHAR2,
                            arguments IN VARCHAR2,
                            result    OUT RAW)
                   RETURN RAW,
  --
  MEMBER FUNCTION  isLocal RETURN BOOLEAN,
  PRAGMA RESTRICT_REFERENCES(isLocal, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setLocal(SELF IN OUT NOCOPY ORDAudio),
  MEMBER PROCEDURE clearLocal(SELF IN OUT NOCOPY ORDAudio),
  MEMBER PROCEDURE setSource(SELF IN OUT NOCOPY ORDAudio,
                             source_type     IN VARCHAR2,
                             source_location IN VARCHAR2,
                             source_name     IN VARCHAR2),
  MEMBER FUNCTION  getSource RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSource, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceLocation, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceName RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceName, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE import(SELF IN OUT NOCOPY ORDAudio,
                          ctx IN OUT RAW),
  MEMBER PROCEDURE importFrom(SELF IN OUT NOCOPY ORDAudio,
                          ctx IN OUT RAW,
                          source_type IN VARCHAR2,
                          source_location IN VARCHAR2,
              source_name IN VARCHAR2),
  MEMBER PROCEDURE export(SELF IN OUT NOCOPY ORDAudio,
                          ctx      IN OUT RAW,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  MEMBER FUNCTION  getContentLength RETURN INTEGER,
  MEMBER FUNCTION  getContentLength(ctx IN OUT RAW) RETURN INTEGER,
  --
  -- This method will copy data in the LOB provided, if the data is not
  -- stored in internal LOB it will be imported and returned in the LOB
  -- provided
  MEMBER PROCEDURE getContentInLob(SELF IN OUT NOCOPY ORDAudio,
                                   ctx IN OUT RAW,
                                   dest_lob IN OUT NOCOPY BLOB,
                                   mimeType OUT VARCHAR2,
                                   format OUT VARCHAR2),
  --
  MEMBER FUNCTION  getContent RETURN BLOB,
  PRAGMA RESTRICT_REFERENCES(getContent, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE deleteContent(SELF IN OUT NOCOPY ORDAudio),
  --
  -- FILE OPERATIONS on the source
  MEMBER FUNCTION openSource(SELF IN OUT NOCOPY ORDAudio,
                             userArg IN RAW,
                             ctx  OUT RAW) RETURN INTEGER,
  --
  MEMBER FUNCTION closeSource(SELF IN OUT NOCOPY ORDAudio, ctx IN OUT RAW)
  RETURN INTEGER,
  --
  MEMBER FUNCTION trimSource(SELF IN OUT NOCOPY ORDAudio, ctx IN OUT RAW,
                             newlen IN INTEGER) RETURN INTEGER,
  --
  MEMBER PROCEDURE readFromSource(SELF IN OUT NOCOPY ORDAudio,
                                  ctx IN OUT RAW,
                                  startPos IN INTEGER,
                                  numBytes IN OUT INTEGER,
                                  buffer OUT RAW),
  --
  MEMBER PROCEDURE writeToSource(SELF IN OUT NOCOPY ORDAudio,
                                 ctx IN OUT RAW,
                                 startPos IN INTEGER,
                                 numBytes IN OUT INTEGER,
                                 buffer IN RAW),
  --
  -- AUDIO ATTRIBUTES RELATED METHOD
  MEMBER PROCEDURE setFormat(SELF IN OUT NOCOPY ORDAudio,
                             knownFormat IN VARCHAR2),
  MEMBER FUNCTION  getFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getFormat, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setEncoding(SELF IN OUT NOCOPY ORDAudio,
                               knownEncoding IN VARCHAR2),
  MEMBER FUNCTION  getEncoding RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getEncoding, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setNumberOfChannels(SELF IN OUT NOCOPY ORDAudio,
                                       knownNumberOfChannels IN INTEGER),
  MEMBER FUNCTION  getNumberOfChannels RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getNumberOfChannels, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setSamplingRate(SELF IN OUT NOCOPY ORDAudio,
                                   knownSamplingRate IN INTEGER),
  MEMBER FUNCTION  getSamplingRate RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getSamplingRate, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setSampleSize(SELF IN OUT NOCOPY ORDAudio,
                                 knownSampleSize IN INTEGER),
  MEMBER FUNCTION  getSampleSize RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getSampleSize, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setCompressionType(SELF IN OUT NOCOPY ORDAudio,
                                      knownCompressionType IN VARCHAR2),
  MEMBER FUNCTION  getCompressionType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getCompressionType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setAudioDuration(SELF IN OUT NOCOPY ORDAudio,
                                    knownAudioDuration IN INTEGER),
  MEMBER FUNCTION  getAudioDuration RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getAudioDuration, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION getBFILE RETURN BFILE,
  PRAGMA RESTRICT_REFERENCES(getBFILE, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setKnownAttributes( SELF IN OUT NOCOPY ORDAudio,
                                       knownFormat IN VARCHAR2,
                                       knownEncoding IN VARCHAR2,
                                       knownNumberOfChannels IN INTEGER,
                                       knownSamplingRate IN INTEGER,
                                       knownSampleSize IN INTEGER,
                                       knownCompressionType IN VARCHAR2,
                                       knownAudioDuration IN INTEGER),
  --
  -- Format processor must set all the properties
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDAudio,
                                 ctx IN OUT RAW,
                                 setComments IN BOOLEAN),
  --
  -- Format processor will get a copy of the SELF, they should
  -- check the validity of the properties and return TRUE if the
  -- properties are Ok, FALSE otherwise
  MEMBER FUNCTION checkProperties(SELF IN OUT NOCOPY ORDAudio, ctx IN OUT RAW)
  RETURN BOOLEAN,
  --
  MEMBER FUNCTION  getAttribute(ctx IN OUT RAW,
                                name IN VARCHAR2) RETURN VARCHAR2,
  --
  MEMBER PROCEDURE getAllAttributes(SELF IN OUT NOCOPY ORDAudio,
                                    ctx IN OUT RAW,
                                    attributes IN OUT NOCOPY CLOB),
  --
  --
  -- AUDIO PROCESSING METHODS
  MEMBER FUNCTION  processAudioCommand(
                                 SELF      IN OUT NOCOPY ORDAudio,
                                 ctx       IN OUT RAW,
                                 cmd       IN VARCHAR2,
                                 arguments IN VARCHAR2,
                                 result    OUT RAW)
                   RETURN RAW,
  --
  --
  -- Static Methods for the relational functional interface
  STATIC PROCEDURE export(ctx             IN OUT RAW,
                          local_data      IN BLOB,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2,
                              format          OUT VARCHAR2,
                              mime_type       OUT VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 audioBlob      IN BLOB,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format            IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx              IN OUT RAW,
                                 audioBlob        IN BLOB,
                                 attributes       IN OUT NOCOPY CLOB,
                                 mimeType         OUT VARCHAR2,
                                  format           IN OUT VARCHAR2,
                                 encoding         OUT VARCHAR2,
                                 numberOfChannels OUT INTEGER,
                                 samplingRate     OUT INTEGER,
                                 sampleSize       OUT INTEGER,
                                 compressionType  OUT VARCHAR2,
                                 audioDuration    OUT INTEGER),
 --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 audioBfile     IN OUT NOCOPY BFILE,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format            IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx                IN OUT RAW,
                                 audioBfile         IN OUT NOCOPY BFILE,
                                 attributes         IN OUT NOCOPY CLOB,
                                 mimeType         OUT VARCHAR2,
                                 format           IN OUT VARCHAR2,
                                 encoding         OUT VARCHAR2,
                                 numberOfChannels OUT INTEGER,
                                 samplingRate     OUT INTEGER,
                                 sampleSize       OUT INTEGER,
                                 compressionType  OUT VARCHAR2,
                                 audioDuration    OUT INTEGER),
  --
  -- BEGIN DEPRECATION
  --

  --
  -- These methods are deprecated in Oracle Database 9i Release 1 (9.0.1)
  --
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDAudio, ctx IN OUT RAW),
  --
  MEMBER PROCEDURE appendToComments(SELF IN OUT NOCOPY ORDAudio,
                                    amount IN BINARY_INTEGER,
                                    buffer IN VARCHAR2),
  --
  MEMBER PROCEDURE writeToComments(SELF IN OUT NOCOPY ORDAudio,
                                   offset IN INTEGER,
                                   amount IN BINARY_INTEGER,
                                   buffer IN VARCHAR2),
  --
  MEMBER FUNCTION readFromComments(offset IN INTEGER,
                                   amount IN BINARY_INTEGER := 32767)
         RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(readFromComments, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION locateInComments(pattern IN VARCHAR2,
                                   offset IN INTEGER := 1,
                                   occurrence IN INTEGER := 1)
         RETURN INTEGER,
  --
  MEMBER PROCEDURE trimComments(SELF IN OUT NOCOPY ORDAudio,
                                newlen IN INTEGER),
  --
  MEMBER PROCEDURE eraseFromComments(SELF IN OUT NOCOPY ORDAudio,
                                     amount IN OUT NOCOPY INTEGER,
                                     offset IN            INTEGER := 1),
  --
  MEMBER PROCEDURE deleteComments(SELF IN OUT NOCOPY ORDAudio),
  --
  MEMBER PROCEDURE loadCommentsFromFile(SELF IN OUT NOCOPY ORDAudio,
                                        fileobj IN BFILE,
                                        amount IN INTEGER,
                                        from_loc IN INTEGER := 1,
                                        to_loc IN INTEGER := 1),
  --
  MEMBER PROCEDURE copyCommentsOut( SELF IN OUT NOCOPY ORDAudio,
                                    dest IN OUT NOCOPY CLOB,
                                    amount IN INTEGER,
                                    from_loc IN INTEGER := 1,
                                    to_loc IN INTEGER := 1),
  --
  MEMBER FUNCTION compareComments(compare_with_lob IN CLOB,
                                  amount IN INTEGER:= 4294967295,
                                  starting_pos_in_comment IN INTEGER := 1,
                                  starting_pos_in_compare IN INTEGER := 1)
         RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(compareComments, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION getCommentLength RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getCommentLength, WNDS, WNPS, RNDS, RNPS)

  --
  -- END DEPRECATION
  --
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDVIDEO"

authid current_user
AS OBJECT
(
---------------------------
-- ATTRIBUTES
---------------------------
  description VARCHAR2(4000),
  source      ORDSource,
  format      VARCHAR2(31),
  mimeType    VARCHAR2(4000),
  comments    CLOB,
--
--
---------------------------
-- Video Related Attributes
---------------------------
  width             INTEGER,
  height            INTEGER,
  frameResolution   INTEGER,
  frameRate         INTEGER,
  videoDuration     INTEGER,
  numberOfFrames    INTEGER,
  compressionType   VARCHAR2(4000),
  numberOfColors    INTEGER,
  bitRate           INTEGER,
--
--
  ---------------------------
  -- METHODS
  ---------------------------
  -- USER-DEFINED CONSTRUCTORS
--
-- Description:  Construct an ORDVideo object from a BLOB
-- Parameters:
--   data:      BLOB
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDVideo(SELF IN OUT NOCOPY ORDSYS.ORDVideo,
    data             IN BLOB,
    setProperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
--
--
-- Description: Construct an ORDVideo object from a specified source.
-- By default, an empty local ORDVideo object is created.
-- Parameters:
--   source_type: the type of the source.
--                Allowed value: LOCAL(default), FILE, HTTP
--   source_location: the location of the source.
--   source_name: the name of the source.
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDVideo(SELF IN OUT NOCOPY ORDSYS.ORDVideo,
    source_type       IN VARCHAR2 DEFAULT 'LOCAL',
    source_location   IN VARCHAR2 DEFAULT NULL,
    source_name       IN VARCHAR2 DEFAULT NULL,
    setProperties  IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
  --
  -- CONSTRUCTORS
  STATIC FUNCTION init RETURN ORDVideo,
  STATIC FUNCTION init( srcType IN VARCHAR2,
            srcLocation IN VARCHAR2,
            srcName IN VARCHAR2 ) RETURN ORDVideo,
  --
  --
  -- DATE RELATED METHODS
  MEMBER FUNCTION  getUpdateTime RETURN DATE,
  PRAGMA RESTRICT_REFERENCES(getUpdateTime, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setUpdateTime(SELF IN OUT NOCOPY ORDVideo, current_time DATE),
  --
  -- TITLE RELATED METHODS
  MEMBER PROCEDURE setDescription(SELF IN OUT NOCOPY ORDVideo, user_description IN VARCHAR2),
  MEMBER FUNCTION  getDescription RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getDescription, WNDS, WNPS, RNDS, RNPS),
  --
  -- MIMETYPE RELATED METHODS
  MEMBER FUNCTION  getMimeType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getMimeType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setMimeType(SELF IN OUT NOCOPY ORDVideo, mime IN VARCHAR2),
  --
  --
  -- SOURCE RELATED METHODS
  MEMBER FUNCTION  processSourceCommand(
                            SELF      IN OUT NOCOPY ORDVideo,
                            ctx       IN OUT RAW,
                            cmd       IN VARCHAR2,
                            arguments IN VARCHAR2,
                            result    OUT RAW)
                   RETURN RAW,
  MEMBER FUNCTION  getSourceObject RETURN ORDSource,
  PRAGMA RESTRICT_REFERENCES(getSourceObject, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  isLocal RETURN BOOLEAN,
  PRAGMA RESTRICT_REFERENCES(isLocal, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setLocal(SELF IN OUT NOCOPY ORDVideo),
  MEMBER PROCEDURE clearLocal(SELF IN OUT NOCOPY ORDVideo),
  MEMBER PROCEDURE setSource(SELF IN OUT NOCOPY ORDVideo,
                             source_type     IN VARCHAR2,
                             source_location IN VARCHAR2,
                             source_name     IN VARCHAR2),
  MEMBER FUNCTION  getSource RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSource, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceLocation, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION  getSourceName RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceName, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE import(SELF IN OUT NOCOPY ORDVideo,
                          ctx IN OUT RAW),
  MEMBER PROCEDURE importFrom(SELF IN OUT NOCOPY ORDVideo,
                          ctx IN OUT RAW,
                          source_type IN VARCHAR2,
                          source_location IN VARCHAR2,
                      source_name IN VARCHAR2),
  MEMBER PROCEDURE export(SELF IN OUT NOCOPY ORDVideo,
                          ctx      IN OUT RAW,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  MEMBER FUNCTION  getContentLength RETURN INTEGER,
  MEMBER FUNCTION  getContentLength(ctx IN OUT RAW) RETURN INTEGER,
  --
  -- This method will copy data in the LOB provided, if the data is not
  -- stored in internal LOB it will be imported and returned in the LOB
  -- provided
  MEMBER PROCEDURE getContentInLob(SELF IN OUT NOCOPY ORDVideo,
                                   ctx IN OUT RAW,
                                   dest_lob IN OUT NOCOPY BLOB,
                                   mimeType OUT VARCHAR2,
                                   format OUT VARCHAR2),
  --
  MEMBER FUNCTION  getContent RETURN BLOB,
  PRAGMA RESTRICT_REFERENCES(getContent, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE deleteContent(SELF IN OUT NOCOPY ORDVideo),
  --
  --
  -- FILE OPERATIONS on the source
  MEMBER FUNCTION openSource(SELF IN OUT NOCOPY ORDVideo,
                             userArg IN RAW,
                             ctx OUT RAW)
  RETURN INTEGER,
  --
  MEMBER FUNCTION closeSource(SELF IN OUT NOCOPY ORDVideo, ctx IN OUT RAW)
  RETURN INTEGER,
  --
  MEMBER FUNCTION trimSource(SELF IN OUT NOCOPY ORDVideo, ctx IN OUT RAW,
                             newlen IN INTEGER) RETURN INTEGER,
  --
  MEMBER PROCEDURE readFromSource(SELF IN OUT NOCOPY ORDVideo,
                                  ctx IN OUT RAW,
                                  startPos IN INTEGER,
                                  numBytes IN OUT INTEGER,
                                  buffer OUT RAW),
  --
  MEMBER PROCEDURE writeToSource(SELF IN OUT NOCOPY ORDVideo,
                                 ctx IN OUT RAW,
                                 startPos IN INTEGER,
                                 numBytes IN OUT INTEGER,
                                 buffer IN RAW),
  --
  --
  --VIDEO ATTRIBUTES ACCESSORS
  MEMBER PROCEDURE setFormat(SELF IN OUT NOCOPY ORDVideo,
                             knownFormat IN VARCHAR2),
  MEMBER FUNCTION  getFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getFormat, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setFrameSize(SELF IN OUT NOCOPY ORDVideo,
                                knownWidth IN INTEGER, knownHeight IN INTEGER),
  MEMBER PROCEDURE getFrameSize(SELF IN OUT NOCOPY ORDVideo,
                                retWidth OUT INTEGER, retHeight OUT INTEGER),
  PRAGMA RESTRICT_REFERENCES(getFrameSize, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setFrameResolution(SELF IN OUT NOCOPY ORDVideo,
                                      knownFrameResolution IN INTEGER),
  MEMBER FUNCTION  getFrameResolution RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getFrameResolution, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setFrameRate(SELF IN OUT NOCOPY ORDVideo,
                                knownFrameRate IN INTEGER),
  MEMBER FUNCTION  getFrameRate RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getFrameRate, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setVideoDuration(SELF IN OUT NOCOPY ORDVideo,
                                    knownVideoDuration IN INTEGER),
  MEMBER FUNCTION  getVideoDuration RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getVideoDuration, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setNumberOfFrames(SELF IN OUT NOCOPY ORDVideo,
                                     knownNumberOfFrames IN INTEGER),
  MEMBER FUNCTION  getNumberOfFrames RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getNumberOfFrames, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setCompressionType(SELF IN OUT NOCOPY ORDVideo,
                                      knownCompressionType IN VARCHAR2),
  MEMBER FUNCTION  getCompressionType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getCompressionType, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setNumberOfColors(SELF IN OUT NOCOPY ORDVideo,
                                     knownNumberOfColors IN INTEGER),
  MEMBER FUNCTION  getNumberOfColors RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getNumberOfColors, WNDS, WNPS, RNDS, RNPS),
  --
  --
  MEMBER PROCEDURE setBitRate(SELF IN OUT NOCOPY ORDVideo,
                              knownBitRate IN INTEGER),
  MEMBER FUNCTION  getBitRate RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getBitRate, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION getBFILE RETURN BFILE,
  PRAGMA RESTRICT_REFERENCES(getBFILE, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER PROCEDURE setKnownAttributes( SELF IN OUT NOCOPY ORDVideo,
                                       knownFormat IN VARCHAR2,
                                       knownWidth IN INTEGER,
                                       knownHeight IN INTEGER,
                                       knownFrameResolution IN INTEGER,
                                       knownFrameRate IN INTEGER,
                                       knownVideoDuration IN INTEGER,
                                       knownNumberOfFrames IN INTEGER,
                                       knownCompressionType IN VARCHAR,
                                       knownNumberOfColors IN INTEGER,
                                       knownBitRate IN INTEGER),
  --
  --
  -- Format processor must set all the properties
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDVideo,
                                 ctx IN OUT RAW,
                                 setComments IN BOOLEAN),
  MEMBER FUNCTION checkProperties(SELF IN OUT NOCOPY ORDVideo, ctx IN OUT RAW)
  RETURN BOOLEAN,
  MEMBER FUNCTION  getAttribute(ctx IN OUT RAW,
                                name IN VARCHAR2) RETURN VARCHAR2,
  --
  MEMBER PROCEDURE getAllAttributes(SELF IN OUT NOCOPY ORDVideo,
                                    ctx IN OUT RAW,
                                    attributes IN OUT NOCOPY CLOB),
  --
  -- VIDEO PROCESSING METHODS
  MEMBER FUNCTION  processVideoCommand(
                                 SELF      IN OUT NOCOPY ORDVideo,
                                 ctx       IN OUT RAW,
                                 cmd       IN VARCHAR2,
                                 arguments IN VARCHAR2,
                                 result    OUT RAW)
                   RETURN RAW,
  --
  --
  -- Static Methods for the relational functional interface
  STATIC PROCEDURE export(ctx             IN OUT RAW,
                          local_data      IN BLOB,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2,
                              format          OUT VARCHAR2,
                              mime_type       OUT VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 videoBlob      IN BLOB,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format            IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx              IN OUT RAW,
                                 videoBlob        IN BLOB,
                                 attributes       IN OUT NOCOPY CLOB,
                                 mimeType         OUT VARCHAR2,
                                 format           IN OUT VARCHAR2,
                                 width            OUT INTEGER,
                                 height           OUT INTEGER,
                                 frameResolution  OUT INTEGER,
                                 frameRate        OUT INTEGER,
                                 videoDuration    OUT INTEGER,
                                 numberOfFrames   OUT INTEGER,
                                 compressionType  OUT VARCHAR2,
                                 numberOfColors   OUT INTEGER,
                                 bitRate          OUT INTEGER),
 --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 videoBfile     IN OUT NOCOPY BFILE,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format            IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx              IN OUT RAW,
                                 videoBfile       IN OUT NOCOPY BFILE,
                                 attributes       IN OUT NOCOPY CLOB,
                                 mimeType         OUT VARCHAR2,
                                 format           IN OUT VARCHAR2,
                                 width            OUT INTEGER,
                                 height           OUT INTEGER,
                                 frameResolution  OUT INTEGER,
                                 frameRate        OUT INTEGER,
                                 videoDuration    OUT INTEGER,
                                 numberOfFrames   OUT INTEGER,
                                 compressionType  OUT VARCHAR2,
                                 numberOfColors   OUT INTEGER,
                                 bitRate          OUT INTEGER),
  --
  -- BEGIN DEPRECATION
  --

  --
  -- These methods are deprecated in Oracle Database 9i Release 1 (9.0.1)
  --
  --
  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDVideo, ctx IN OUT RAW),
  --
  MEMBER PROCEDURE appendToComments(SELF IN OUT NOCOPY ORDVideo,
                                    amount IN BINARY_INTEGER,
                                    buffer IN VARCHAR2),
  --
  MEMBER PROCEDURE writeToComments(SELF IN OUT NOCOPY ORDVideo,
                                   offset IN INTEGER,
                                   amount IN BINARY_INTEGER,
                                   buffer IN VARCHAR2),
  --
  MEMBER FUNCTION readFromComments(offset IN INTEGER,
                                   amount IN BINARY_INTEGER := 32767)
         RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(readFromComments, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION locateInComments(pattern IN VARCHAR2,
                                   offset IN INTEGER := 1,
                                   occurence IN INTEGER := 1)
         RETURN INTEGER,
  --
  MEMBER PROCEDURE trimComments(SELF IN OUT NOCOPY ORDVideo, newlen IN INTEGER),
  --
  MEMBER PROCEDURE eraseFromComments(SELF IN OUT NOCOPY ORDVideo,
                                     amount IN OUT NOCOPY INTEGER,
                                     offset IN            INTEGER := 1),
  --
  MEMBER PROCEDURE deleteComments(SELF IN OUT NOCOPY ORDVideo),
  --
  MEMBER PROCEDURE loadCommentsFromFile(SELF IN OUT NOCOPY ORDVideo,
                                        fileobj IN BFILE,
                                        amount IN INTEGER,
                                        from_loc IN INTEGER := 1,
                                        to_loc IN INTEGER := 1),
  --
  MEMBER PROCEDURE copyCommentsOut( SELF IN OUT NOCOPY ORDVideo,
                                    dest IN OUT NOCOPY CLOB,
                                    amount IN INTEGER,
                                    from_loc IN INTEGER := 1,
                                    to_loc IN INTEGER := 1),
  --
  MEMBER FUNCTION compareComments(compare_with_lob IN CLOB,
                                  amount IN INTEGER:= 4294967295,
                                  starting_pos_in_comment IN INTEGER := 1,
                                  starting_pos_in_compare IN INTEGER := 1)
         RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(compareComments, WNDS, WNPS, RNDS, RNPS),
  --
  MEMBER FUNCTION getCommentLength RETURN INTEGER,
  PRAGMA RESTRICT_REFERENCES(getCommentLength, WNDS, WNPS, RNDS, RNPS)

  --
  -- END DEPRECATION
  --
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDDOC"

  authid current_user
  AS OBJECT
(

   source   ORDSYS.ORDSource,
   format   VARCHAR2(80),
   mimeType VARCHAR2(80),
   contentLength integer,
   -- a place holder for annotations stored in the above attributes +
   -- anything which is not covered by the above fields, in a XML format.
   comments CLOB,

  -- USER-DEFINED CONSTRUCTORS
--
-- Description:  Construct an ORDDoc object from a BLOB
-- Parameters:
--   data:      BLOB
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDDoc(SELF IN OUT NOCOPY ORDSYS.ORDDoc,
    data             IN BLOB,
    setProperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
--
--
-- Description: Construct an ORDDoc object from a specified source.
-- By default, an empty local ORDDoc object is created.
-- Parameters:
--   source_type: the type of the source.
--                Allowed value: LOCAL(default), FILE, HTTP
--   source_location: the location of the source.
--   source_name: the name of the source.
--   setProperties: integer of value 0 or 1, determines if setProperties
--                  method is called in the constructor.
--
  CONSTRUCTOR FUNCTION ORDDoc(SELF IN OUT NOCOPY ORDSYS.ORDDoc,
    source_type       IN VARCHAR2 DEFAULT 'LOCAL',
    source_location   IN VARCHAR2 DEFAULT NULL,
    source_name       IN VARCHAR2 DEFAULT NULL,
    setProperties  IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,
  --
  -- CONSTRUCTORS
  STATIC FUNCTION init RETURN ORDDoc,
  STATIC FUNCTION init( srcType IN VARCHAR2,
                        srcLocation IN VARCHAR2,
                        srcName IN VARCHAR2 ) RETURN ORDDoc,

  -- MIMETYPE RELATED METHODS
  MEMBER FUNCTION  getMimeType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getMimeType, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setMimeType(SELF IN OUT NOCOPY ORDDoc,mime IN VARCHAR2),



  -- DATE RELATED METHODS
  MEMBER FUNCTION  getUpdateTime RETURN DATE,
  PRAGMA RESTRICT_REFERENCES(getUpdateTime, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setUpdateTime(SELF IN OUT NOCOPY ORDDoc,
                                 current_time DATE),

  -- FORMAT RELATED METHODS
  MEMBER FUNCTION  getFormat RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getFormat, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setFormat(SELF IN OUT NOCOPY ORDDoc,
                             knownFormat IN VARCHAR2),



  -- SOURCE RELATED METHODS
  MEMBER FUNCTION  isLocal RETURN BOOLEAN,
  PRAGMA RESTRICT_REFERENCES(isLocal, WNDS, WNPS, RNDS, RNPS),
  MEMBER PROCEDURE setLocal(SELF IN OUT NOCOPY ORDDoc),
  MEMBER PROCEDURE clearLocal(SELF IN OUT NOCOPY ORDDoc),

  MEMBER PROCEDURE setSource(source_type     IN VARCHAR2,
                             source_location IN VARCHAR2,
                             source_name     IN VARCHAR2),
  MEMBER FUNCTION  getSource RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSource, WNDS, WNPS, RNDS, RNPS),

  MEMBER FUNCTION  getSourceType RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceType, WNDS, WNPS, RNDS, RNPS),

  MEMBER FUNCTION  getSourceLocation RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceLocation, WNDS, WNPS, RNDS, RNPS),

  MEMBER FUNCTION  getSourceName RETURN VARCHAR2,
  PRAGMA RESTRICT_REFERENCES(getSourceName, WNDS, WNPS, RNDS, RNPS),

  MEMBER PROCEDURE setProperties(SELF IN OUT NOCOPY ORDDoc, ctx IN OUT RAW,
				 setComments IN BOOLEAN),

  MEMBER FUNCTION getBFILE RETURN BFILE,
  PRAGMA RESTRICT_REFERENCES(getBFILE, WNDS, WNPS, RNDS, RNPS),

  MEMBER PROCEDURE import(SELF IN OUT NOCOPY ORDDoc,
			  ctx IN OUT RAW, set_prop IN BOOLEAN),
  MEMBER PROCEDURE importFrom(SELF IN OUT NOCOPY ORDDoc,
			      ctx IN OUT RAW,
			      source_type IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name IN VARCHAR2,
			      set_prop IN BOOLEAN),

  MEMBER PROCEDURE export( SELF IN OUT NOCOPY ORDDoc,
                          ctx      IN OUT RAW,
			  source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),

  MEMBER FUNCTION openSource(SELF IN OUT NOCOPY ORDDoc,
                             userArg IN RAW,
			     ctx OUT RAW) RETURN INTEGER,

  MEMBER FUNCTION closeSource(SELF IN OUT NOCOPY ORDDoc,
		      	      ctx IN OUT RAW)
  RETURN INTEGER,

  MEMBER FUNCTION trimSource(SELF IN OUT NOCOPY ORDDoc, ctx IN OUT RAW,
                             newlen IN INTEGER) RETURN INTEGER,

  MEMBER PROCEDURE readFromSource(SELF IN OUT NOCOPY ORDDoc,
				  ctx IN OUT RAW,
                                  startPos IN INTEGER,
                                  numBytes IN OUT INTEGER,
                                  buffer OUT RAW),

  MEMBER PROCEDURE writeToSource(SELF IN OUT NOCOPY ORDDoc,
				 ctx IN OUT RAW,
                                 startPos IN INTEGER,
                                 numBytes IN OUT INTEGER,
                                 buffer IN RAW),



  MEMBER FUNCTION  getContentLength RETURN INTEGER,

  -- This method will copy data in the LOB provided, if the data is not
  -- stored in internal LOB it will be imported and returned in the LOB
  -- provided
  MEMBER PROCEDURE getContentInLob(SELF IN OUT NOCOPY ORDDoc,
                                   ctx IN OUT RAW,
                                   dest_lob IN OUT NOCOPY BLOB,
                                   mimeType OUT VARCHAR2,
                                   format OUT VARCHAR2),

  MEMBER FUNCTION  getContent RETURN BLOB,
  PRAGMA RESTRICT_REFERENCES(getContent, WNDS, WNPS, RNDS, RNPS),

  MEMBER PROCEDURE deleteContent(SELF IN OUT NOCOPY ORDDoc),

 -- source related methods
  MEMBER FUNCTION  processSourceCommand(
                            SELF      IN OUT NOCOPY ORDDoc,
                            ctx       IN OUT RAW,
                            cmd       IN VARCHAR2,
                            arguments IN VARCHAR2,
                            result    OUT RAW)
                   RETURN RAW,
  --
  --
  -- Static Methods for the relational functional interface
  STATIC PROCEDURE export(ctx             IN OUT RAW,
                          local_data      IN BLOB,
                          source_type     IN VARCHAR2,
                          source_location IN VARCHAR2,
                          source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2),
  --
  STATIC PROCEDURE importFrom(ctx             IN OUT RAW,
                              local_data      IN OUT NOCOPY BLOB,
                              source_type     IN VARCHAR2,
                              source_location IN VARCHAR2,
                              source_name     IN VARCHAR2,
                              format          OUT VARCHAR2,
                              mime_type       OUT VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 docBlob        IN BLOB,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format         IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx              IN OUT RAW,
                                 docBlob          IN BLOB,
                                 attributes       IN OUT NOCOPY CLOB,
                                 mimeType         OUT VARCHAR2,
                                 format           IN OUT VARCHAR2,
                                 contentLength    OUT INTEGER),
 --
  STATIC PROCEDURE getProperties(ctx            IN OUT RAW,
                                 docBfile       IN OUT NOCOPY BFILE,
                                 attributes     IN OUT NOCOPY CLOB,
                                 format         IN VARCHAR2),
  --
  STATIC PROCEDURE getProperties(ctx                IN OUT RAW,
                                 docBfile           IN OUT NOCOPY BFILE,
                                 attributes         IN OUT NOCOPY CLOB,
                                 mimeType           OUT VARCHAR2,
                                 format             IN OUT VARCHAR2,
                                 contentLength      OUT INTEGER)
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_SEQUENCE83_COLL" AS VARRAY(2147483647) OF "CODE_SEQUENCE81_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FILE_META_HEADER86_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","MEDIA_STORAGE_SOP_CLASS_UID" "MEDIA_STORAGE_SOP_CLASS87_T","MEDIA_STORAGE_SOP_INSTANCE_UID" "MEDIA_STORAGE_SOP_INSTA88_T","TRANSFER_SYNTAX_UID" "TRANSFER_SYNTAX_UID89_T","IMPLEMENTATION_CLASS_UID" "IMPLEMENTATION_CLASS_UI90_T","IMPLEMENTATION_VERSION_NAME" "IMPLEMENTATION_VERSION_91_T","SOURCE_APPLICATION_ENTITY92" "SOURCE_APPLICATION_ENTI93_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PATIENT94_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME95_T","ID" "ID96_T","BIRTH_DATE" "BIRTH_DATE97_T","SEX" "SEX98_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GENERAL_STUDY99_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","INSTANCE_UID" "INSTANCE_UID100_T","DATE101" "DATE102_T","TIME" "TIME103_T","REFERING_PHYSICIANS_NAME" "REFERING_PHYSICIANS_NAM104_T","ID" "ID105_T","ACCESSION_NUMBER" "ACCESSION_NUMBER106_T","DESCRIPTION" "DESCRIPTION107_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ADMITTING_DIAGNOSES_111_COLL" AS VARRAY(2147483647) OF "ADMITTING_DIAGNOSES_DES110_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERFORMING_PHYSICIAN120_COLL" AS VARRAY(2147483647) OF "PERFORMING_PHYSICIANS_N119_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GENERAL_EQUIPMENT131_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","MANUFACTURER" "MANUFACTURER132_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PATIENT_ORIENTATION140_COLL" AS VARRAY(2) OF "PATIENT_ORIENTATION139_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PIXEL_ASPECT_RATIO154_COLL" AS VARRAY(2) OF "PIXEL_ASPECT_RATIO153_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SPECIFIC_CHARACTER_S159_COLL" AS VARRAY(2147483647) OF "SPECIFIC_CHARACTER_SET158_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."singleFieldType161_T" UNDER "singleField_t160_T"("tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."Field163_COLL" AS VARRAY(2147483647) OF "singleField_t160_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."subjectAreaType187_T" UNDER "subjectLocationType188_T"("Diameter" NUMBER(38),"Width" NUMBER(38),"Height" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."whitePointType191_T" UNDER "chromaticity190_T"("tag" NUMBER(38))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."primaryChromaticitiesTy192_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"Color_1" "chromaticity190_T","Color_2" "chromaticity190_T","Color_3" "chromaticity190_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."StripByteCount195_COLL" AS VARRAY(2147483647) OF "StripByteCount194_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."StripOffset198_COLL" AS VARRAY(2147483647) OF "StripOffset197_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."InteroperabilityIfd226_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"InteroperabilityIndex" "interoperabilityType164_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER233_COLL" AS VARRAY(2147483647) OF "ATTR_DEFINER230_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG236_COLL" AS VARRAY(2147483647) OF "DOCUMENT_CHANGE_LOG235_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT_ATTR_T238_T" UNDER "EXT239_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN_ATTR_T242_T" UNDER "UN243_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."APPLICATION_ENTITY253_COLL" AS VARRAY(2147483647) OF "AE_ATTR_T252_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS_ATTR_T254_T" UNDER "AS255_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTRIBUTE_TAG258_COLL" AS VARRAY(2147483647) OF "AT_ATTR_T257_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_STRING260_COLL" AS VARRAY(2147483647) OF "CS_ATTR_T259_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE261263_COLL" AS VARRAY(2147483647) OF "DA_ATTR_T262_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE_TIME265_COLL" AS VARRAY(2147483647) OF "DT_ATTR_T264_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DECIMAL_STRING267_COLL" AS VARRAY(2147483647) OF "DS_ATTR_T266_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_SINGLE269_COLL" AS VARRAY(2147483647) OF "FL_ATTR_T268_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_DOUBLE271_COLL" AS VARRAY(2147483647) OF "FD_ATTR_T270_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INTEGER_STRING273_COLL" AS VARRAY(2147483647) OF "IS_ATTR_T272_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_STRING275_COLL" AS VARRAY(2147483647) OF "LO_ATTR_T274_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_TEXT277_COLL" AS VARRAY(2147483647) OF "LT_ATTR_T276_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_BYTE279_COLL" AS VARRAY(2147483647) OF "OB_ATTR_T278_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_FLOAT281_COLL" AS VARRAY(2147483647) OF "OF_ATTR_T280_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW_ATTR_T282_T" UNDER "OW283_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME288_COLL" AS VARRAY(3) OF "NAME287_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_STRING291_COLL" AS VARRAY(2147483647) OF "SH_ATTR_T290_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_LONG293_COLL" AS VARRAY(2147483647) OF "SL_ATTR_T292_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_SHORT294_COLL" AS VARRAY(2147483647) OF "SS_ATTR_T248_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_TEXT295_COLL" AS VARRAY(2147483647) OF "ST_ATTR_T247_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TIME296_COLL" AS VARRAY(2147483647) OF "TM_ATTR_T246_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNIQUE_ID297_COLL" AS VARRAY(2147483647) OF "UI_ATTR_T245_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_LONG298_COLL" AS VARRAY(2147483647) OF "UL_ATTR_T244_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_SHORT300_COLL" AS VARRAY(2147483647) OF "US_ATTR_T241_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNLIMITED_TEXT301_COLL" AS VARRAY(2147483647) OF "UT_ATTR_T240_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXCEPTION_TYPE303_COLL" AS VARRAY(2147483647) OF "EXP_ATTR_T237_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER313_COLL" AS VARRAY(2147483647) OF "ATTR_DEFINER310_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG316_COLL" AS VARRAY(2147483647) OF "DOCUMENT_CHANGE_LOG315_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT_ATTR_T318_T" UNDER "EXT319_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN_ATTR_T322_T" UNDER "UN323_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."APPLICATION_ENTITY333_COLL" AS VARRAY(2147483647) OF "AE_ATTR_T332_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS_ATTR_T334_T" UNDER "AS335_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTRIBUTE_TAG338_COLL" AS VARRAY(2147483647) OF "AT_ATTR_T337_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_STRING340_COLL" AS VARRAY(2147483647) OF "CS_ATTR_T339_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE341343_COLL" AS VARRAY(2147483647) OF "DA_ATTR_T342_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE_TIME345_COLL" AS VARRAY(2147483647) OF "DT_ATTR_T344_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DECIMAL_STRING347_COLL" AS VARRAY(2147483647) OF "DS_ATTR_T346_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_SINGLE349_COLL" AS VARRAY(2147483647) OF "FL_ATTR_T348_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_DOUBLE351_COLL" AS VARRAY(2147483647) OF "FD_ATTR_T350_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INTEGER_STRING353_COLL" AS VARRAY(2147483647) OF "IS_ATTR_T352_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_STRING355_COLL" AS VARRAY(2147483647) OF "LO_ATTR_T354_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_TEXT357_COLL" AS VARRAY(2147483647) OF "LT_ATTR_T356_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_BYTE359_COLL" AS VARRAY(2147483647) OF "OB_ATTR_T358_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_FLOAT361_COLL" AS VARRAY(2147483647) OF "OF_ATTR_T360_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW_ATTR_T362_T" UNDER "OW363_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME368_COLL" AS VARRAY(3) OF "NAME367_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_STRING371_COLL" AS VARRAY(2147483647) OF "SH_ATTR_T370_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_LONG373_COLL" AS VARRAY(2147483647) OF "SL_ATTR_T372_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_SHORT374_COLL" AS VARRAY(2147483647) OF "SS_ATTR_T328_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_TEXT375_COLL" AS VARRAY(2147483647) OF "ST_ATTR_T327_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TIME376_COLL" AS VARRAY(2147483647) OF "TM_ATTR_T326_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNIQUE_ID377_COLL" AS VARRAY(2147483647) OF "UI_ATTR_T325_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_LONG378_COLL" AS VARRAY(2147483647) OF "UL_ATTR_T324_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_SHORT380_COLL" AS VARRAY(2147483647) OF "US_ATTR_T321_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNLIMITED_TEXT381_COLL" AS VARRAY(2147483647) OF "UT_ATTR_T320_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXCEPTION_TYPE383_COLL" AS VARRAY(2147483647) OF "EXP_ATTR_T317_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINER393_COLL" AS VARRAY(2147483647) OF "ATTR_DEFINER390_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_CHANGE_LOG396_COLL" AS VARRAY(2147483647) OF "DOCUMENT_CHANGE_LOG395_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXT_ATTR_T398_T" UNDER "EXT399_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UN_ATTR_T402_T" UNDER "UN403_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."APPLICATION_ENTITY413_COLL" AS VARRAY(2147483647) OF "AE_ATTR_T412_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AS_ATTR_T414_T" UNDER "AS415_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTRIBUTE_TAG418_COLL" AS VARRAY(2147483647) OF "AT_ATTR_T417_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_STRING420_COLL" AS VARRAY(2147483647) OF "CS_ATTR_T419_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE421423_COLL" AS VARRAY(2147483647) OF "DA_ATTR_T422_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATE_TIME425_COLL" AS VARRAY(2147483647) OF "DT_ATTR_T424_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DECIMAL_STRING427_COLL" AS VARRAY(2147483647) OF "DS_ATTR_T426_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_SINGLE429_COLL" AS VARRAY(2147483647) OF "FL_ATTR_T428_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FLOAT_DOUBLE431_COLL" AS VARRAY(2147483647) OF "FD_ATTR_T430_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INTEGER_STRING433_COLL" AS VARRAY(2147483647) OF "IS_ATTR_T432_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_STRING435_COLL" AS VARRAY(2147483647) OF "LO_ATTR_T434_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LONG_TEXT437_COLL" AS VARRAY(2147483647) OF "LT_ATTR_T436_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_BYTE439_COLL" AS VARRAY(2147483647) OF "OB_ATTR_T438_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_FLOAT441_COLL" AS VARRAY(2147483647) OF "OF_ATTR_T440_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OW_ATTR_T442_T" UNDER "OW443_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."NAME448_COLL" AS VARRAY(3) OF "NAME447_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_STRING451_COLL" AS VARRAY(2147483647) OF "SH_ATTR_T450_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_LONG453_COLL" AS VARRAY(2147483647) OF "SL_ATTR_T452_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SIGNED_SHORT454_COLL" AS VARRAY(2147483647) OF "SS_ATTR_T408_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SHORT_TEXT455_COLL" AS VARRAY(2147483647) OF "ST_ATTR_T407_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TIME456_COLL" AS VARRAY(2147483647) OF "TM_ATTR_T406_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNIQUE_ID457_COLL" AS VARRAY(2147483647) OF "UI_ATTR_T405_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_LONG458_COLL" AS VARRAY(2147483647) OF "UL_ATTR_T404_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNSIGNED_SHORT460_COLL" AS VARRAY(2147483647) OF "US_ATTR_T401_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNLIMITED_TEXT461_COLL" AS VARRAY(2147483647) OF "UT_ATTR_T400_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXCEPTION_TYPE463_COLL" AS VARRAY(2147483647) OF "EXP_ATTR_T397_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."contentLocation471_COLL" AS VARRAY(2147483647) OF "locationType470_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."byline473_COLL" AS VARRAY(2147483647) OF "bylineType472_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INDIVIDUAL_ATTRIBUTE479_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ATTRIBUTE_TAG" VARCHAR2(1999 CHAR),"DESCRIPTION" VARCHAR2(1999 CHAR),"ANONYMITY_ACTION" "ANONYM_T477_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."STRING_VALUE483_COLL" AS VARRAY(2147483647) OF "MIXED_TEXT_T307_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PARAMETER493_COLL" AS VARRAY(2147483647) OF "PARAMETER491_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ACTION495_COLL" AS VARRAY(2147483647) OF "ACTION_T494_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTERNAL_MACRO_INCLU503_COLL" AS VARRAY(2147483647) OF "EXTERNAL_MACRO_INCLUDE502_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTERNAL_RULE_INCLUD505_COLL" AS VARRAY(2147483647) OF "EXTERNAL_RULE_INCLUDE504_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MAPPED_PATH509_COLL" AS VARRAY(2147483647) OF "MAPPED_PATH508_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREFERENCE_DEF512_COLL" AS VARRAY(2147483647) OF "PREFERENCE_DEF511_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PRIVATE_ATTRIBUTE_DEFIN514_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","TAG" VARCHAR2(4000 CHAR),"TAG_RANGE" "ATTR_RANGE_T308_T","NAME" VARCHAR2(128 CHAR),"DEFINER" VARCHAR2(64 CHAR),"VR" VARCHAR2(4000 CHAR),"VM" VARCHAR2(128 CHAR),"RETIRED" RAW(1))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."STANDARD_ATTRIBUTE_D518_COLL" AS VARRAY(2147483647) OF "STANDARD_ATTRIBUTE_DEFI517_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UID_DEF524_T" UNDER "UID_ENTRY_T522_T"("classification" "XDB"."XDB$ENUM_T","isLE" RAW(1),"isEVR" RAW(1),"isCompressed" RAW(1),"retired" RAW(1),"contentType" "XDB"."XDB$ENUM_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDIMAGESIGNATURE"

authid current_user
AS OBJECT
(
  -- Signature of the image.  Contains color, texture
  -- and shape information of the image.  It is stored
  -- in a BLOB.

  signature BLOB,

-----------------------
-- METHOD DECLARATION

-- Makes the callout

STATIC FUNCTION init RETURN ORDImageSignature,

STATIC FUNCTION evaluateScore(sig1 IN ORDImageSignature,
                              sig2 IN ORDImageSignature,
			      weights IN VARCHAR2)
  RETURN FLOAT,

STATIC FUNCTION isSimilar(sig1 IN ORDImageSignature,
                          sig2 IN ORDImageSignature,
			  weights IN VARCHAR2,
			  threshold IN FLOAT)
  RETURN PLS_INTEGER,

MEMBER PROCEDURE generateSignature(SELF      IN OUT NOCOPY ORDImageSignature,
				   image     IN ORDImage)
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_STILLIMAGE"

  AUTHID CURRENT_USER
  AS OBJECT
    (
     -- THE FUNCTIONS, PACKAGES AND TYPES SUPPLIED BY THIS PACKAGE AND
     --ITS EXTERNAL
     -- INTERFACE ARE RESERVED BY ORACLE AND ARE SUBJECT TO CHANGE IN FUTURE
     -- RELEASES. THIS PACKAGE MUST NOT BE MODIFIED BY THE CUSTOMER.  DOING SO
     -- COULD CAUSE INTERNAL ERRORS AND SECURITY VIOLATIONS IN THE DBMS.

     --Type attributes
     content_si           ORDSYS.ORDSOURCE,
     contentLength_si     INTEGER,
     format_si            VARCHAR2(4000),
     height_si            INTEGER,
     width_si             INTEGER,

     --ora attribute extensions
     mimeType_ora          VARCHAR2(4000),
     contentFormat_ora     VARCHAR2(4000),
     compressionFormat_ora VARCHAR2(4000),

     --Flag to
     retainFeatures_SI  INTEGER,

     --ora extension attributes to cache image features
     --use internal of image features to avoid circular reference
     --issues
     averageColorSpec_ora   SI_Color,
     colorsList_ora         colorsList,
     frequenciesList_ora    colorFrequenciesList,
     colorPositions_ora     colorPositions,
     textureEncoding_ora    textureEncoding,

    --
    --Constructors methods
    CONSTRUCTOR FUNCTION
    SI_StillImage(content IN BLOB) return SELF as RESULT DETERMINISTIC,
    --
    CONSTRUCTOR FUNCTION
    SI_StillImage( content IN BLOB,
                   explicitFormat IN VARCHAR2
                   ) return SELF as RESULT DETERMINISTIC,
    --
    CONSTRUCTOR FUNCTION
    SI_StillImage(content IN BLOB,
                  explicitFormat IN VARCHAR2,
                  height IN INTEGER,
                  width IN INTEGER)  return SELF as RESULT DETERMINISTIC,


     --
     --Accessor methods for SI_ attributes
     MEMBER FUNCTION SI_height return INTEGER DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_height, WNDS, WNPS, RNDS, RNPS),

     MEMBER FUNCTION SI_width return INTEGER DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_width, WNDS, WNPS, RNDS, RNPS),

     MEMBER FUNCTION SI_format return VARCHAR2 DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_format, WNDS, WNPS, RNDS, RNPS),

     MEMBER FUNCTION SI_content return BLOB DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_content, WNDS, WNPS, RNDS, RNPS),

     MEMBER FUNCTION SI_contentLength return INTEGER DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_contentLength, WNDS, WNPS, RNDS, RNPS),

     --Accessor method of for retainFeatures_SI attribute
     MEMBER FUNCTION SI_retainFeatures return BOOLEAN DETERMINISTIC,
     PRAGMA RESTRICT_REFERENCES(SI_retainFeatures, WNDS, WNPS, RNDS, RNPS),

     --Image processing methods
     MEMBER PROCEDURE SI_setContent(SELF IN OUT NOCOPY SI_StillImage,
                                    content IN BLOB),
     MEMBER PROCEDURE SI_changeFormat(SELF IN OUT NOCOPY SI_StillImage,
                                      targetFormat IN VARCHAR2),
     MEMBER FUNCTION SI_Thumbnail(SELF IN SI_StillImage)
                     return SI_StillImage DETERMINISTIC ,

     MEMBER FUNCTION SI_Thumbnail(SELF IN SI_StillImage,
                                  height IN INTEGER,
                                  width IN INTEGER)
                     return SI_StillImage DETERMINISTIC,

     --Oracle extension for image feature caching
     --Extract image features and turn on image feature caching
     MEMBER PROCEDURE   SI_InitFeatures,

     --Resets image features attributes to null and stop
     --image feature caching
     MEMBER PROCEDURE   SI_ClearFeatures

) INSTANTIABLE
NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ORDDICOM"

AUTHID CURRENT_USER
AS OBJECT
(
--
-- Attributes
--
  SOP_INSTANCE_UID     VARCHAR2(128),
  SOP_CLASS_UID        VARCHAR2(64),
  STUDY_INSTANCE_UID   VARCHAR2(64),
  SERIES_INSTANCE_UID  VARCHAR2(64),
  Source               ORDDataSource,
  Metadata             SYS.XMLType,
  ContentLength        INTEGER,
  Flag                 INTEGER,
  Extension            BLOB,

--
-- Constructors
--

--
-- Description:  Construct an ORDDicom object from a BLOB
-- If setProperties is 0, setProperties() method won't be called.
-- Exception:
--
  CONSTRUCTOR FUNCTION ORDDicom(SELF IN OUT NOCOPY ORDDICOM,
    data             IN BLOB,
    setProperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,

--
-- Description: Construct an ORDDicom object from a specified source.
-- By default, an empty local ORDDicom object is created.
-- The Empty ORDDicom object can be used as the destination
-- object for processCopy, writeMetadata, makeAnonymous methods.
-- If setProperties is 0, setProperties() method won't be called.
--
  CONSTRUCTOR FUNCTION ORDDicom(SELF IN OUT NOCOPY ORDDICOM,
    source_type       IN VARCHAR2 DEFAULT 'LOCAL',
    source_location   IN VARCHAR2 DEFAULT NULL,
    source_name       IN VARCHAR2 DEFAULT NULL,
    setProperties  IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,

--
-- Description: Construct an ORDDicom object from an ORDImage object.
--
  CONSTRUCTOR FUNCTION ORDDicom(SELF IN OUT NOCOPY ORDDicom,
    data             IN ORDImage,
    setproperties IN INTEGER DEFAULT 0
  ) RETURN SELF AS RESULT,

--
-- Description:   Get the embedded DICOM binary data stored in the source
-- attribute of the ORDDicom object.
-- Return: BLOB handle or null if the DICOM data has not been imported.
-- Exception: None.
--
MEMBER FUNCTION getContent RETURN BLOB DETERMINISTIC,

--
-- Description:  Get the length of the embedded DICOM binary data.
-- Return: the length of the DICOM object.
-- Exception: None.
--
MEMBER FUNCTION getContentLength RETURN INTEGER DETERMINISTIC PARALLEL_ENABLE,

--
-- Description: Get the source information as a URL.
-- Return: The source information URL in the form of
-- "source_type://source_location/source_name"
-- Exception: None.
--
MEMBER FUNCTION getSourceInformation RETURN VARCHAR2 DETERMINISTIC  PARALLEL_ENABLE,

--
-- Description: Get the source type
-- Return: VARCHAR2. The source type.
-- Exception: None.
--
MEMBER FUNCTION getSourceType RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:  Get the source location.
-- Return: VARCHAR2. The source location.
-- Exception: None.
--
MEMBER FUNCTION getSourceLocation RETURN VARCHAR2 DETERMINISTIC  PARALLEL_ENABLE,

--
-- Description:  Get the source name
-- Return: VARCHAR2. The source name.
-- Exception: None.
--
MEMBER FUNCTION getSourceName RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:  Get the local status of the source. If the DICOM object is
-- stored in the source BLOB, we say the object is local.
-- Return: 0: not local
--           1: local in the source BLOB.
-- Exception: None.
--
MEMBER FUNCTION isLocal RETURN INTEGER DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:   Import DICOM object from current source. This procedure
-- assumes the source attributes have already been set in the ORDDicom object
-- using setSourceInformation  or a constructor.
-- Input:
--  setproperties: 1: Default. All the DICOM attributes will be extracted into
--                    the metadata  attribute of the ORDDicom object. The
--                    attributes of the ORDDicom object are populated.
--                 0: No DICOM attributes will be extracted from the
--                    embedded DICOM binary data.
-- Exception: None.
--
MEMBER PROCEDURE import(SELF             IN OUT NOCOPY ORDDicom,
                        setproperties IN    INTEGER DEFAULT 1),

--
-- Description: Export embedded DICOM binary data to the specified destination.
-- Note that data remains in the source BLOB and it is just copied out.
-- Input:
--    dest_type: The type of the destination. (FILE)
--    dest_location: The destination location. (File directory object)
--    dest_name: The name of the destination file.
-- Exception: None
--
MEMBER PROCEDURE export(  SELF            IN     ORDDicom,
                          dest_type       IN     VARCHAR2,
                          dest_location   IN     VARCHAR2,
                          dest_name       IN     VARCHAR2),


--
-- Description:   Set the attributes of the ORDDicom object. All the embedded
-- DICOM binary data attributes are extracted into the metadata attribute of
-- ORDDicom object. The XML metadata conforms to the default metadata schema
-- with namespace http://xmlns.oracle.com/ord/dicom/metadata_1_0.
-- Exception: None
--
MEMBER PROCEDURE setProperties (SELF IN OUT NOCOPY ORDDicom),

--
-- Description:  get DICOM metadata in XML for a given XML metadata schema.
-- If the namespace parameter is omitted the default namespace
-- http://xmlns.oracle.com/ord/dicom/metadata_1_0 is used. The metadata attribute
-- of the ORDDicom object will not be affected.
-- Input:
--   extractOption: 'ALL': Default. Extract all attributes from the
--     embedded DICOM binary data.
--     'MAPPED': Extract only mapped attributes.
--     'STANDARD': Extract only DICOM Standard attributes and mapped attributes.
--   docName: The name  of the mapping document. The default mapping document
--      ordcmmp.xml is loaded during installation and refers to the default
--      metadata namespace of http://xmlns.oracle.com/ord/dicom/metadata_1_0.
-- Return: Metadata encoded in XML (not schema-validated)
-- Exception: None.
--
MEMBER FUNCTION extractMetadata (
          extractOption IN VARCHAR2 DEFAULT 'ALL',
          docName IN VARCHAR2 DEFAULT 'ordcmmp.xml')
RETURN SYS.XMLTYPE,

--
-- Description: Get a DICOM attribute as String.
-- Input:
--   tag: specifies attribute/item tag in hexadecimal string.
--        For attributes of sequence type (SQ), one may access its child with
--        "." notation.   For example: "00082218.00080100" gives the code
--        value (tag "00080100") of anatomic region sequence (tag "00082218").
--        "00080005[2]" gives the second item value of the specific character
--        set attribute (tag "00080005").
--   definerName: The name of the tag definer.
-- Return: If the setProperties method has been called, return the attribute
--         value cast to VARCHAR2.
-- Exception:        None.
--
MEMBER FUNCTION getAttributeByTag (tag IN VARCHAR2,
                                   definerName IN VARCHAR2 DEFAULT 'DICOM')
RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description: Get a DICOM attribute as String.
-- Input: attributeName, specifies attribute/item name.
--   definerName: The name of the attribute definer.
-- Return: If the setProperties method has been called, return the attribute
--         value cast to VARCHAR2.
-- Exception:        None.
--
MEMBER FUNCTION getAttributeByName (attributeName IN VARCHAR2,
                                    definerName   IN VARCHAR2 DEFAULT 'DICOM')
RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:    Get the SOP_INSTANCE_UID attribute.
-- Return: VARCHAR2. The SOP Instance UID in VARCHAR2.
-- Exception: None.
--
MEMBER FUNCTION getSOPInstanceUID RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:  Get the STUDY_INSTANCE_UID attribute.
-- Return: VARCHAR2. The study instance UID in VARCHAR2.
-- Exception: None.
--
MEMBER FUNCTION getStudyInstanceUID RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:  Get the SERIES_INSTANCE_UID attribute.
-- Return: VARCHAR2. The series instance UID in VARCHAR2.
-- Exception: None.
--
MEMBER FUNCTION getSeriesInstanceUID RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description:  Get the SOP_CLASS_UID attribute.
-- Return: VARCHAR2. The SOP Class UID in VARCHAR2.
-- Exception: None.
--
MEMBER FUNCTION getSOPClassUID RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE,

--
-- Description: Modify the current ORDDICOM object with the provided metadata
-- by making a copy of the existing ORDDicom object and creating a new
-- ORDDicom object. The original ORDDicom object is not changed. The attributes
-- in the embedded DICOM binary data of the destination ORDDicom object will be
-- from the input metadata.
-- Input:
--   metadata: The input metadata in XMLTYPE. It should have all the standard
--     attributes and private attributes.  The  SOP instance UID in the
--     metadata must ensure the global uniqueness for the destination ORDDicom
--     object.
--   dest: An empty ORDDicom object in which to store the new embedded
--     DICOM binary data with the new metadata.
-- Exception: None.
--
MEMBER PROCEDURE writeMetadata (SELF   IN ORDDicom,
                                metadata IN SYS.XMLTYPE,
                                dest IN OUT NOCOPY ORDDicom),

--
-- Description:    Copy the input ORDDicom image object into the destination
-- ORDImage object and perform the specified processing operations on the
-- destination ORDImage object.  The input ORDDicom image is not changed.
-- Input:
--   command: The command can have following verbs: frameNumber, contentformat,
--     fileformat, compressionformat, cut, scale, rotate, etc.
--     Refer to "Oracle Multimedia Reference Guide" process command for
--     details on each verb.
--   dest: The image without DICOM metadata in ORDIMAGE type.
-- Exception: None.
--
MEMBER PROCEDURE processCopy (SELF   IN ORDDicom,
                              command IN VARCHAR2,
                              dest IN OUT NOCOPY ORDImage),

--
-- Description:  Copy the input ORDDicom image object into a destination
-- ORDDicom Image object and perform the specified processing operations on
-- the destination ORDDicom image object. The DICOM attributes of the
-- destination DICOM binary data are only updated with image information.
-- The input ORDDicom object is not changed.
-- Input:
--   command: The command can have following verbs: compressionformat,
--     frameNumber, contentformat, cut, scale, rotate, etc. Refer to
--     "Oracle Multimedia Reference Guide" process command for details on each
--     verb.
--   dest_SOP_INSTANCE_UID: The SOP instance UID of the destination ORDDicom
--     object. It must ensure the global uniqueness for the destination
--     ORDDicom object.
--   dest: An empty ORDDicom object to store the new DICOM Image with
--     the new metadata.
--   Metadata: The new metadata to be written into the new DICOM image.
-- Exception: None.
--
MEMBER PROCEDURE processCopy (SELF   IN ORDDicom,
                              command IN VARCHAR2,
                              dest_SOP_INSTANCE_UID IN VARCHAR2,
                              dest IN OUT NOCOPY ORDDicom,
                              metadata IN SYS.XMLTYPE DEFAULT NULL),

--
-- Description:    Copy the input ORDDicom object into the destination BLOB
-- and perform the specified processing operations on the destination  BLOB.
-- The input ORDDicom object is not changed.
-- Input:
--   command: The command can have following verbs: frameNumber, contentformat,
--     fileformat, compressionformat, cut, scale, rotate, etc. Refer to
--     "Oracle Multimedia Reference Guide" process command for details on each
--     verb.
--   dest: the destination BLOB contains the output of the process command
--     on the ORDDicom object.
-- Exception: None.
--
MEMBER PROCEDURE processCopy (SELF   IN ORDDicom,
                              command IN VARCHAR2,
                              dest IN OUT NOCOPY BLOB),

--
-- Description:    Make the DICOM binary data anonymous after copying it into
-- another ORDDicom object based on the given anonymity definition document
-- name. Note that both the embedded DICOM binary data and the metadata
-- attribute in the destination ORDDicom object are made anonymous.
-- Input:
--   dest_SOP_INSTANCE_UID: The SOP instance UID of the destination ORDDicom
--                          object. It must ensure the global uniqueness
--                          for the destination ORDDicom object.
--   dest: The anonymous ORDDicom image.
--   anonymityDocName: the name of the anonymity definition document.
-- Exception: None.
--
MEMBER PROCEDURE makeAnonymous (SELF   IN ORDDicom,
                            dest_SOP_INSTANCE_UID IN VARCHAR2,
                            dest IN OUT NOCOPY ORDDicom,
                            anonymityDocName IN VARCHAR2
                                    DEFAULT 'ordcman.xml'),

--
-- Description:    This method checks if the embedded DICOM binary data is
-- anonymous using the given anonymity definition document stored in the
-- repository.
-- Input:
--   anonymityDocName: the name of the anonymity definition document.
-- Return: 0: not anonymous,
--             1: anonymous.
-- Exception: None.
--
MEMBER FUNCTION isAnonymous(
  anonymityDocName IN VARCHAR2 DEFAULT 'ordcman.xml')
RETURN INTEGER,

--
-- Description:    Checks if the embedded DICOM binary data is valid against a
-- certain set of conformance constraints identified by the input
-- constraintName.  This method performs the conformance
-- validation check and returns a 1 or 0 for conformance valid or conformance
-- invalid respectively.  It does not return the any errors raised during
-- conformance checking in case of a conformance failure.
-- Input:   constraintName: The name of the constraint.
-- Return: 0: not valid,
--         1: valid.
-- Exception: None.
--
MEMBER FUNCTION isConformanceValid(
   constraintName IN VARCHAR2
) RETURN INTEGER

) NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CODE_SQ82_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","rawValue" VARCHAR2(4000 CHAR),"CODE_SEQUENCE" "CODE_SEQUENCE83_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."IMAGE_PIXEL142_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","SAMPLES_PER_PIXEL" "SAMPLES_PER_PIXEL143_T","PHOTOMETRIC_INTERPRETATION" "PHOTOMETRIC_INTERPRETAT144_T","ROWS145" "ROWS146_T","COLUMNS" "COLUMNS147_T","BIT_ALLOCATED" "BIT_ALLOCATED148_T","BIT_STORED" "BIT_STORED149_T","HIGH_BIT" "HIGH_BIT150_T","PIXEL_REPRESENTATION" "PIXEL_REPRESENTATION151_T","PLANAR_CONFIGURATION" "PLANAR_CONFIGURATION152_T","PIXEL_ASPECT_RATIO" "PIXEL_ASPECT_RATIO154_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SOP_COMMON155_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","CLASS_UID" "CLASS_UID156_T","INSTANCE_UID" "INSTANCE_UID157_T","SPECIFIC_CHARACTER_SET" "SPECIFIC_CHARACTER_S159_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."repeatedFieldType162_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"Field" "Field163_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."stripByteCountsType193_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"StripByteCount" "StripByteCount195_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."stripOffsetsType196_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"StripOffset" "StripOffset198_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINERS_T229_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ATTR_DEFINER" "ATTR_DEFINER233_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_HEADER_T234_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_CHANGE_LOG" "DOCUMENT_CHANGE_LOG236_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AGE_STRING256_COLL" AS VARRAY(2147483647) OF "AS_ATTR_T254_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_WORD284_COLL" AS VARRAY(2147483647) OF "OW_ATTR_T282_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN286_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME288_COLL","VALUE" VARCHAR2(192 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNKNOWN299_COLL" AS VARRAY(2147483647) OF "UN_ATTR_T242_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTENDED_TYPE302_COLL" AS VARRAY(2147483647) OF "EXT_ATTR_T238_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINERS_T309_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ATTR_DEFINER" "ATTR_DEFINER313_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_HEADER_T314_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_CHANGE_LOG" "DOCUMENT_CHANGE_LOG316_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AGE_STRING336_COLL" AS VARRAY(2147483647) OF "AS_ATTR_T334_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_WORD364_COLL" AS VARRAY(2147483647) OF "OW_ATTR_T362_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN366_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME368_COLL","VALUE" VARCHAR2(192 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNKNOWN379_COLL" AS VARRAY(2147483647) OF "UN_ATTR_T322_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTENDED_TYPE382_COLL" AS VARRAY(2147483647) OF "EXT_ATTR_T318_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_DEFINERS_T389_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ATTR_DEFINER" "ATTR_DEFINER393_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DOCUMENT_HEADER_T394_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_CHANGE_LOG" "DOCUMENT_CHANGE_LOG396_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."AGE_STRING416_COLL" AS VARRAY(2147483647) OF "AS_ATTR_T414_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."OTHER_WORD444_COLL" AS VARRAY(2147483647) OF "OW_ATTR_T442_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN446_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","NAME" "NAME448_COLL","VALUE" VARCHAR2(192 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UNKNOWN459_COLL" AS VARRAY(2147483647) OF "UN_ATTR_T402_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."EXTENDED_TYPE462_COLL" AS VARRAY(2147483647) OF "EXT_ATTR_T398_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."iptcMetadataType468_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","recordVersion" NUMBER(38),"objectName" VARCHAR2(4000 CHAR),"editStatus" VARCHAR2(4000 CHAR),"urgency" NUMBER(38),"category" VARCHAR2(4000 CHAR),"supplementalCategory" "supplementalCategory469_COLL","fixtureIdentifier" VARCHAR2(4000 CHAR),"keyword" "supplementalCategory469_COLL","contentLocation" "contentLocation471_COLL","instructions" VARCHAR2(4000 CHAR),"dateCreated" DATE,"timeCreated" VARCHAR2(4000 CHAR),"digitalCreationDate" DATE,"digitalCreationTime" VARCHAR2(4000 CHAR),"byline" "byline473_COLL","city" VARCHAR2(4000 CHAR),"subLocation" VARCHAR2(4000 CHAR),"provinceState" VARCHAR2(4000 CHAR),"country" VARCHAR2(4000 CHAR),"location" VARCHAR2(4000 CHAR),"transmissionReference" VARCHAR2(4000 CHAR),"headline" VARCHAR2(4000 CHAR),"credit" VARCHAR2(4000 CHAR),"source" VARCHAR2(4000 CHAR),"copyright" VARCHAR2(4000 CHAR),"contact" "supplementalCategory469_COLL","caption" VARCHAR2(4000 CHAR),"captionWriter" "supplementalCategory469_COLL","languageId" VARCHAR2(4000 CHAR))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."INDIVIDUAL_ATTRIBUTE480_COLL" AS VARRAY(2147483647) OF "INDIVIDUAL_ATTRIBUTE479_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."MACRO_USE_T490_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","MACRO_NAME" VARCHAR2(4000 CHAR),"PARAMETER" "PARAMETER493_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PRIVATE_ATTRIBUTE_DE515_COLL" AS VARRAY(2147483647) OF "PRIVATE_ATTRIBUTE_DEFIN514_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."UID_DEF526_COLL" AS VARRAY(2147483647) OF "UID_DEF524_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_AVERAGECOLOR"

  AUTHID CURRENT_USER
  AS OBJECT
    (
     --attributes
     SI_AverageColorSpec SI_Color,
     --
     --Methods
     CONSTRUCTOR FUNCTION SI_AverageColor
     (sourceImage IN SI_StillImage)
     return SELF AS RESULT DETERMINISTIC,

     --NOTE This constructor function OVERRIDE and HIDES the system DEFAULT
     --constructor.
     --The functions arguments names MUST match the attribute names
     CONSTRUCTOR FUNCTION SI_AverageColor
     (SI_AverageColorSpec IN SI_Color)
     return SELF AS RESULT DETERMINISTIC,
     --
     MEMBER FUNCTION SI_Score
     (SELF IN SI_AverageColor, image in SI_StillImage)
     RETURN DOUBLE PRECISION DETERMINISTIC
) INSTANTIABLE
  NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_COLORHISTOGRAM"

  AUTHID CURRENT_USER
  AS OBJECT
    (


   --IMPORTANT NOTE!!!!
   -- DO NOT change the order of the attributes
   -- DO NOT change the attribute names
   -- The third constructor function OVERRIDES and HIDES the SYSTEM DEFAULT
   -- constructor. This is done so that we can perform the necessary error
   -- checking to raise the appropriate error messages in the constructor
   --
   -- To do this the attribute names
   -- and order of the attributes must be exactly like it is defined here

     --attributes
     SI_ColorsList colorsList,
     --
     SI_frequenciesList colorFrequenciesList,
     --


     --Methods
     CONSTRUCTOR FUNCTION SI_ColorHistogram
     (sourceImage IN SI_StillImage)
     return SELF AS RESULT DETERMINISTIC ,
     --
      CONSTRUCTOR FUNCTION SI_ColorHistogram
       (firstColor IN SI_Color,
        frequency  IN DOUBLE PRECISION)
     return SELF AS RESULT DETERMINISTIC,


     --NOTE: This constructor OVERRIDES AND HIDES the system DEFAULT
     --constructor. The argument names MUST exactly match the attribute names
      CONSTRUCTOR FUNCTION SI_ColorHistogram
       (SI_ColorsList       IN  colorsList,
        SI_frequenciesList  IN  colorFrequenciesList)
      return SELF AS RESULT DETERMINISTIC,

      MEMBER PROCEDURE SI_Append
      (SELF      IN OUT NOCOPY SI_ColorHistogram,
       color     IN SI_Color,
       frequency IN DOUBLE PRECISION),
      --
      MEMBER FUNCTION SI_Score
      (SELF  IN SI_ColorHistogram ,
       image IN SI_StillImage)
      RETURN DOUBLE PRECISION DETERMINISTIC
) INSTANTIABLE
  NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_POSITIONALCOLOR"

  AUTHID CURRENT_USER
  AS OBJECT
  (
     --attributes
     SI_ColorPositions  colorPositions,
     --
     --Methods
     CONSTRUCTOR FUNCTION SI_PositionalColor
     (sourceImage IN SI_StillImage)
     return SELF AS RESULT DETERMINISTIC,
     --
     MEMBER FUNCTION SI_Score
     (SELF  IN SI_PositionalColor,
      image IN SI_StillImage)
     RETURN DOUBLE PRECISION DETERMINISTIC
) INSTANTIABLE
  NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_TEXTURE"

  AUTHID CURRENT_USER
  AS OBJECT
  (
     --attributes
     SI_TextureEncoding  textureEncoding,

     --Methods
     CONSTRUCTOR FUNCTION SI_Texture
     (sourceImage IN SI_StillImage)
     return SELF AS RESULT DETERMINISTIC,
     --
     MEMBER FUNCTION SI_Score
     (SELF  IN SI_Texture,
      image IN SI_StillImage)
     RETURN DOUBLE PRECISION DETERMINISTIC
) INSTANTIABLE
  NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PATIENT_STUDY108_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ADMITTING_DIAGNOSES_DESCR109" "ADMITTING_DIAGNOSES_111_COLL","ADMITTING_DIAGNOSES_CODE_112" "CODE_SQ82_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GENERAL_SERIES113_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","MODALITY" "MODALITY114_T","INSTANCE_UID" "INSTANCE_UID115_T","DATE116" "DATE117_T","TIME" "TIME118_T","PERFORMING_PHYSICIANS_NAME" "PERFORMING_PHYSICIAN120_COLL","BODY_PART_EXAMINED" "BODY_PART_EXAMINED121_T","PATIENT_POSITION" "PATIENT_POSITION122_T","PERFORMED_PROCEDURE_STEP_ID" "PERFORMED_PROCEDURE_STE123_T","PERFORMED_PROCEDURE_STEP_124" "PERFORMED_PROCEDURE_STE125_T","PERFORMED_PROCEDURE_STEP_126" "PERFORMED_PROCEDURE_STE127_T","PERFORMED_PROCEDURE_STEP_128" "PERFORMED_PROCEDURE_STE129_T","PERFORMED_PROTOCOL_CODE_S130" "CODE_SQ82_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GENERAL_IMAGE133_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","INSTANCE_NUMBER" "INSTANCE_NUMBER134_T","ACQUISITION_NUMBER" "ACQUISITION_NUMBER135_T","ACQUISITION_DATE" "ACQUISITION_DATE136_T","ACQUISITION_TIME" "ACQUISITION_TIME137_T","ACQUISITION_DATETIME" "ACQUISITION_DATETIME138_T","PATIENT_ORIENTATION" "PATIENT_ORIENTATION140_COLL","FRAME_LATERALITY" "FRAME_LATERALITY141_T","ANATOMIC_REGION" "CODE_SQ82_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."TiffIfd223_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ImageWidth" "positiveIntegerType221_T","ImageLength" "positiveIntegerType221_T","BitsPerSample" "bitsPerSampleType205_T","Compression" "compressionType204_T","PhotometricInterpretation" "photometricInterpretati203_T","Orientation" "orientationType202_T","SamplesPerPixel" "positiveIntegerType221_T","PlanarConfiguration" "planarConfigurationType201_T","YCbCrSubSampling" "yCbCrSubSamplingType200_T","YCbCrPositioning" "yCbCrPositioningType199_T","XResolution" "nonNegativeRealType218_T","YResolution" "nonNegativeRealType218_T","ResolutionUnit" "resolutionType208_T","StripOffsets" "stripOffsetsType196_T","RowsPerStrip" "positiveIntegerType221_T","StripByteCounts" "stripByteCountsType193_T","JPEGInterChangeFormat" "positiveIntegerType221_T","JPEGInterChangeFormatLength" "positiveIntegerType221_T","TransferFunction" VARCHAR2(4000 CHAR),"WhitePoint" "whitePointType191_T","PrimaryChromaticities" "primaryChromaticitiesTy192_T","YCbCrCoefficients" "yCbCrCoefficientsType189_T","ReferenceBlackWhite" "primaryChromaticitiesTy192_T","DateTime" "dateTimeType215_T","ImageDescription" "stringType219_T","Make" "stringType219_T","Model" "stringType219_T","Software" "stringType219_T","Artist" "stringType219_T","Copyright" "stringType219_T","TiffField1" "singleFieldType161_T","TiffField2" "singleFieldType161_T","TiffField3" "repeatedFieldType162_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ExifIfd224_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"ExifVersion" "stringType219_T","FlashpixVersion" "stringType219_T","ColorSpace" "colorSpaceType213_T","ComponentsConfiguration" "stringType219_T","CompressedBitsPerPixel" "nonNegativeRealType218_T","PixelXDimension" "nonNegativeIntegerType220_T","PixelYDimension" "nonNegativeIntegerType220_T","MakerNote" "repeatedFieldType162_T","UserComment" "stringType219_T","RelatedSoundFile" "stringType219_T","DateTimeOriginal" "dateTimeType215_T","DateTimeDigitized" "dateTimeType215_T","SubSecTime" "nonNegativeIntegerType220_T","SubSecTimeOriginal" "nonNegativeIntegerType220_T","SubSecTimeDigitized" "nonNegativeIntegerType220_T","ExposureTime" "nonNegativeRealType218_T","FNumber" "nonNegativeRealType218_T","ExposureProgram" "exposureProgramType212_T","SpectralSensitivity" "stringType219_T","ISOSpeedRatings" "nonNegativeIntegerType220_T","OECF" "repeatedFieldType162_T","ShutterSpeedValue" "realType217_T","ApertureValue" "nonNegativeRealType218_T","BrightnessValue" "realType217_T","ExposureBiasValue" "realType217_T","MaxApertureValue" "nonNegativeRealType218_T","SubjectDistance" "stringType219_T","MeteringMode" "meteringModeType211_T","LightSource" "lightSourceType210_T","Flash" "flashType209_T","FocalLength" "nonNegativeRealType218_T","SubjectArea" "subjectAreaType187_T","FlashEnergy" "nonNegativeRealType218_T","SpatialFrequencyResponse" "repeatedFieldType162_T","FocalPlaneXResolution" "nonNegativeRealType218_T","FocalPlaneYResolution" "nonNegativeRealType218_T","FocalPlaneResolutionUnit" "resolutionType208_T","SubjectLocation" "subjectLocationType188_T","ExposureIndex" "nonNegativeRealType218_T","SensingMethod" "sensingMethodType207_T","FileSource" "fileSourceType206_T","SceneType" "stringType219_T","CFAPattern" "repeatedFieldType162_T","CustomRendered" "customRenderedType186_T","ExposureMode" "exposureModeType185_T","WhiteBalance" "whiteBalanceType184_T","DigitalZoomRatio" "nonNegativeRealType218_T","FocalLengthIn35mmFilm" "positiveIntegerType221_T","SceneCaptureType" "sceneCaptureType183_T","GainControl" "gainControlType182_T","Contrast" "contrastType181_T","Saturation" "saturationType180_T","Sharpness" "sharpnessType179_T","DeviceSettingDescription" "repeatedFieldType162_T","SubjectDistanceRange" "subjectDistanceRangeTyp178_T","ImageUniqueID" "uuidType177_T","Gamma" "nonNegativeRealType218_T","ExifField1" "singleFieldType161_T","ExifField2" "singleFieldType161_T","ExifField3" "repeatedFieldType162_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GpsIfd225_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","tag" NUMBER(38),"GPSVersionID" "stringType219_T","GPSLatitudeRef" "gpsLatitudeRefType176_T","GPSLatitude" "gpsLatitudeType174_T","GPSLongitudeRef" "gpsLongitudeRefType173_T","GPSLongitude" "gpsLongitudeType172_T","GPSAltitudeRef" "gpsAltitudeRefType175_T","GPSAltitude" "nonNegativeRealType218_T","GPSTimeStamp" "timeType214_T","GPSSatellites" "stringType219_T","GPSStatus" "gpsStatusType170_T","GPSMeasureMode" "gpsMeasureModeType169_T","GPSDOP" "nonNegativeRealType218_T","GPSSpeedRef" "gpsSpeedRefType168_T","GPSSpeed" "nonNegativeRealType218_T","GPSTrackRef" "gpsDirectionType167_T","GPSTrack" "gpsBearingType171_T","GPSImgDirectionRef" "gpsDirectionType167_T","GPSImgDirection" "gpsBearingType171_T","GPSMapDatum" "stringType219_T","GPSDestLatitudeRef" "gpsLatitudeRefType176_T","GPSDestLatitude" "gpsLatitudeType174_T","GPSDestLongitudeRef" "gpsLongitudeRefType173_T","GPSDestLongitude" "gpsLongitudeType172_T","GPSDestBearingRef" "gpsDirectionType167_T","GPSDestBearing" "gpsBearingType171_T","GPSDestDistanceRef" "gpsDistanceRefType166_T","GPSDestDistance" "nonNegativeRealType218_T","GPSProcessingMethod" "stringType219_T","GPSAreaInformation" "stringType219_T","GPSDateStamp" "dateType216_T","GPSDifferential" "gpsDifferentialType165_T","GPSField1" "singleFieldType161_T","GPSField2" "singleFieldType161_T","GPSField3" "repeatedFieldType162_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN_ATTR_T285_T" UNDER "PN286_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN_ATTR_T365_T" UNDER "PN366_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PN_ATTR_T445_T" UNDER "PN446_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ANONYMITY_RULE_DOCUMENT478_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","PRIVATE_ATTRIBUTES" "ANONYM_G_T476_T","UNDEFINED_STANDARD_ATTRIBUTES" "ANONYM_G_T476_T","UNDEFINED_PRIVATE_ATTRIBUTES" "ANONYM_G_T476_T","INDIVIDUAL_ATTRIBUTE" "INDIVIDUAL_ATTRIBUTE480_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."XML_MAPPING_DOCUMENT507_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","NAMESPACE" VARCHAR2(1999 CHAR),"ROOT_ELEM_TAG" VARCHAR2(128 CHAR),"UNMAPPED_ELEM" VARCHAR2(128 CHAR),"MAPPED_ELEM" VARCHAR2(128 CHAR),"MAPPED_PATH" "MAPPED_PATH509_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DICOM_RUNTIME_PREFERENC510_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","PREFERENCE_DEF" "PREFERENCE_DEF512_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DICOM_PRIVATE_ATTRIBUTE513_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","ATTRIBUTE_DEFINERS" "ATTR_DEFINERS_T309_T","PRIVATE_ATTRIBUTE_DEFINITION" "PRIVATE_ATTRIBUTE_DE515_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DICOM_STANDARD_ATTRIBUT516_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","ATTRIBUTE_DEFINERS" "ATTR_DEFINERS_T309_T","STANDARD_ATTRIBUTE_DEFINITION" "STANDARD_ATTRIBUTE_D518_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DICOM_UID_DEFINITIONS525_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","UID_DEF" "UID_DEF526_COLL")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SI_FEATURELIST"

  AUTHID CURRENT_USER
  AS OBJECT
  (
   --attributes
   --The attribute names have a _SI suffix instead of SI_ prefix
   --because RDBMS does not allows attributes name and function
   --name to be the same.
   --IMPORTANT NOTE!!!!
   -- DO NOT change the order of the attributes
   -- DO NOT change the attribute names
   -- This constructor functions OVERRIDES and HIDES the SYSTEM DEFAULT
   -- constructor. This is done so that we can perform the necessary error
   -- checking to raise the appropriate error message in the constructor
   --
   --  To do this the attribute names
   -- and order of the attributes must be exactly like it is defined here
   AvgClrFtr_SI         SI_AverageColor,
   AvgClrFtrWght_SI     DOUBLE PRECISION,
   ClrHstgrFtr_SI       SI_ColorHistogram,
   ClrHstgrFtrWght_SI   DOUBLE PRECISION,
   PstnlClrFtr_SI       SI_PositionalColor,
   PstnlClrFtrWght_SI   DOUBLE PRECISION,
   TextureFtr_SI        SI_Texture,
   TextureFtrWght_SI    DOUBLE PRECISION,
   --
   --NOTE: The arguments of this constructor function name MUST
   -- match the attribute names defined above to be able to OVERRIDE the
   --SYSTEM DEFAULT constructor.
   CONSTRUCTOR FUNCTION SI_FeatureList
     (AvgClrFtr_SI             IN  SI_AverageColor,
      AvgClrFtrWght_SI         IN  DOUBLE PRECISION,
      ClrHstgrFtr_SI           IN  SI_ColorHistogram,
      ClrHstgrFtrWght_SI       IN  DOUBLE PRECISION,
      PstnlClrFtr_SI           IN  SI_PositionalColor,
      PstnlClrFtrWght_SI       IN  DOUBLE PRECISION,
      TextureFtr_SI            IN  SI_Texture,
      TextureFtrWght_SI        IN  DOUBLE PRECISION)
     return SELF AS RESULT DETERMINISTIC,

     --
     MEMBER PROCEDURE SI_setFeature
     (SELF IN OUT NOCOPY SI_FeatureList,
     averageColorFeature         IN  SI_AverageColor,
     averageColorFeatureWeight    IN  DOUBLE PRECISION),
     --
     MEMBER PROCEDURE SI_setFeature
     (SELF IN OUT NOCOPY SI_FeatureList ,
     colorHistogramFeature        IN  SI_ColorHistogram,
     colorHistogramFeatureWeight  IN  DOUBLE PRECISION),
     --
     MEMBER PROCEDURE SI_setFeature
     (SELF IN OUT NOCOPY SI_FeatureList ,
     positionalColorFeature       IN  SI_PositionalColor,
     positionalColorFeatureWeight IN  DOUBLE PRECISION),
     --
     MEMBER PROCEDURE SI_setFeature
     (SELF IN OUT NOCOPY SI_FeatureList,
     textureFeature               IN  SI_Texture,
     textureFeatureWeight         IN  DOUBLE PRECISION),
     --
     MEMBER FUNCTION SI_Score
     (SELF  IN SI_FeatureList,
      image IN SI_StillImage)
       RETURN DOUBLE PRECISION DETERMINISTIC,
     --
     MEMBER FUNCTION SI_AvgClrFtr(SELF IN SI_FeatureList)
     RETURN SI_AverageColor DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_AvgClrFtr, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_AvgClrFtrWght(SELF IN SI_FeatureList)
     RETURN DOUBLE PRECISION DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_AvgClrFtrWght, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_ClrHstgrFtr(SELF IN SI_FeatureList)
     RETURN SI_ColorHistogram DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_ClrHstgrFtr, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_ClrHstgrFtrWght(SELF IN SI_FeatureList)
     RETURN DOUBLE PRECISION DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_ClrHstgrFtrWght, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_PstnlClrFtr(SELF IN SI_FeatureList)
     RETURN SI_PositionalColor DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_PstnlClrFtr, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_PstnlClrFtrWght(SELF IN SI_FeatureList)
     RETURN DOUBLE PRECISION DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_PstnlClrFtrWght, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_TextureFtr(SELF IN SI_FeatureList)
     RETURN SI_Texture DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_TextureFtr, WNDS, WNPS, RNDS, RNPS),
     --
     MEMBER FUNCTION SI_TextureFtrWght(SELF IN SI_FeatureList)
     RETURN DOUBLE PRECISION DETERMINISTIC,
       PRAGMA RESTRICT_REFERENCES(SI_TextureFtrWght, WNDS, WNPS, RNDS, RNPS)
     --
) INSTANTIABLE
  NOT FINAL;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DICOM_IMAGE84_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ORD_DICOM_HEADER" "ORD_DICOM_HEADER85_T","FILE_META_HEADER" "FILE_META_HEADER86_T","PATIENT" "PATIENT94_T","GENERAL_STUDY" "GENERAL_STUDY99_T","PATIENT_STUDY" "PATIENT_STUDY108_T","GENERAL_SERIES" "GENERAL_SERIES113_T","GENERAL_EQUIPMENT" "GENERAL_EQUIPMENT131_T","GENERAL_IMAGE" "GENERAL_IMAGE133_T","IMAGE_PIXEL" "IMAGE_PIXEL142_T","SOP_COMMON" "SOP_COMMON155_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."exifMetadata222_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","TiffIfd" "TiffIfd223_T","ExifIfd" "ExifIfd224_T","GpsIfd" "GpsIfd225_T","InteroperabilityIfd" "InteroperabilityIfd226_T")FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERSON_NAME289_COLL" AS VARRAY(2147483647) OF "PN_ATTR_T285_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERSON_NAME369_COLL" AS VARRAY(2147483647) OF "PN_ATTR_T365_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PERSON_NAME449_COLL" AS VARRAY(2147483647) OF "PN_ATTR_T445_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATASET_T251_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","number" NUMBER(20),"APPLICATION_ENTITY" "APPLICATION_ENTITY253_COLL","AGE_STRING" "AGE_STRING256_COLL","ATTRIBUTE_TAG" "ATTRIBUTE_TAG258_COLL","CODE_STRING" "CODE_STRING260_COLL","DATE261" "DATE261263_COLL","DATE_TIME" "DATE_TIME265_COLL","DECIMAL_STRING" "DECIMAL_STRING267_COLL","FLOAT_SINGLE" "FLOAT_SINGLE269_COLL","FLOAT_DOUBLE" "FLOAT_DOUBLE271_COLL","INTEGER_STRING" "INTEGER_STRING273_COLL","LONG_STRING" "LONG_STRING275_COLL","LONG_TEXT" "LONG_TEXT277_COLL","OTHER_BYTE" "OTHER_BYTE279_COLL","OTHER_FLOAT" "OTHER_FLOAT281_COLL","OTHER_WORD" "OTHER_WORD284_COLL","PERSON_NAME" "PERSON_NAME289_COLL","SHORT_STRING" "SHORT_STRING291_COLL","SIGNED_LONG" "SIGNED_LONG293_COLL","SEQUENCE" CLOB,"SIGNED_SHORT" "SIGNED_SHORT294_COLL","SHORT_TEXT" "SHORT_TEXT295_COLL","TIME" "TIME296_COLL","UNIQUE_ID" "UNIQUE_ID297_COLL","UNSIGNED_LONG" "UNSIGNED_LONG298_COLL","UNKNOWN" "UNKNOWN299_COLL","UNSIGNED_SHORT" "UNSIGNED_SHORT300_COLL","UNLIMITED_TEXT" "UNLIMITED_TEXT301_COLL","EXTENDED_TYPE" "EXTENDED_TYPE302_COLL","EXCEPTION_TYPE" "EXCEPTION_TYPE303_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATASET_T331_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","number" NUMBER(20),"APPLICATION_ENTITY" "APPLICATION_ENTITY333_COLL","AGE_STRING" "AGE_STRING336_COLL","ATTRIBUTE_TAG" "ATTRIBUTE_TAG338_COLL","CODE_STRING" "CODE_STRING340_COLL","DATE341" "DATE341343_COLL","DATE_TIME" "DATE_TIME345_COLL","DECIMAL_STRING" "DECIMAL_STRING347_COLL","FLOAT_SINGLE" "FLOAT_SINGLE349_COLL","FLOAT_DOUBLE" "FLOAT_DOUBLE351_COLL","INTEGER_STRING" "INTEGER_STRING353_COLL","LONG_STRING" "LONG_STRING355_COLL","LONG_TEXT" "LONG_TEXT357_COLL","OTHER_BYTE" "OTHER_BYTE359_COLL","OTHER_FLOAT" "OTHER_FLOAT361_COLL","OTHER_WORD" "OTHER_WORD364_COLL","PERSON_NAME" "PERSON_NAME369_COLL","SHORT_STRING" "SHORT_STRING371_COLL","SIGNED_LONG" "SIGNED_LONG373_COLL","SEQUENCE" CLOB,"SIGNED_SHORT" "SIGNED_SHORT374_COLL","SHORT_TEXT" "SHORT_TEXT375_COLL","TIME" "TIME376_COLL","UNIQUE_ID" "UNIQUE_ID377_COLL","UNSIGNED_LONG" "UNSIGNED_LONG378_COLL","UNKNOWN" "UNKNOWN379_COLL","UNSIGNED_SHORT" "UNSIGNED_SHORT380_COLL","UNLIMITED_TEXT" "UNLIMITED_TEXT381_COLL","EXTENDED_TYPE" "EXTENDED_TYPE382_COLL","EXCEPTION_TYPE" "EXCEPTION_TYPE383_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."DATASET_T411_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","number" NUMBER(20),"APPLICATION_ENTITY" "APPLICATION_ENTITY413_COLL","AGE_STRING" "AGE_STRING416_COLL","ATTRIBUTE_TAG" "ATTRIBUTE_TAG418_COLL","CODE_STRING" "CODE_STRING420_COLL","DATE421" "DATE421423_COLL","DATE_TIME" "DATE_TIME425_COLL","DECIMAL_STRING" "DECIMAL_STRING427_COLL","FLOAT_SINGLE" "FLOAT_SINGLE429_COLL","FLOAT_DOUBLE" "FLOAT_DOUBLE431_COLL","INTEGER_STRING" "INTEGER_STRING433_COLL","LONG_STRING" "LONG_STRING435_COLL","LONG_TEXT" "LONG_TEXT437_COLL","OTHER_BYTE" "OTHER_BYTE439_COLL","OTHER_FLOAT" "OTHER_FLOAT441_COLL","OTHER_WORD" "OTHER_WORD444_COLL","PERSON_NAME" "PERSON_NAME449_COLL","SHORT_STRING" "SHORT_STRING451_COLL","SIGNED_LONG" "SIGNED_LONG453_COLL","SEQUENCE" CLOB,"SIGNED_SHORT" "SIGNED_SHORT454_COLL","SHORT_TEXT" "SHORT_TEXT455_COLL","TIME" "TIME456_COLL","UNIQUE_ID" "UNIQUE_ID457_COLL","UNSIGNED_LONG" "UNSIGNED_LONG458_COLL","UNKNOWN" "UNKNOWN459_COLL","UNSIGNED_SHORT" "UNSIGNED_SHORT460_COLL","UNLIMITED_TEXT" "UNLIMITED_TEXT461_COLL","EXTENDED_TYPE" "EXTENDED_TYPE462_COLL","EXCEPTION_TYPE" "EXCEPTION_TYPE463_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ITEM304_COLL" AS VARRAY(2147483647) OF "DATASET_T251_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ITEM384_COLL" AS VARRAY(2147483647) OF "DATASET_T331_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ITEM464_COLL" AS VARRAY(2147483647) OF "DATASET_T411_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ250_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ITEM" "ITEM304_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ330_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ITEM" "ITEM384_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ410_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","ITEM" "ITEM464_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ_ATTR_T249_T" UNDER "SQ250_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_VALUE_T305_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","APPLICATION_ENTITY" VARCHAR2(16 CHAR),"AGE_STRING" "AS255_T","ATTRIBUTE_TAG" RAW(4),"CODE_STRING" VARCHAR2(16 CHAR),"DATE306" DATE,"DATE_TIME" TIMESTAMP,"DECIMAL_STRING" NUMBER,"FLOAT_SINGLE" NUMBER,"FLOAT_DOUBLE" NUMBER,"INTEGER_STRING" NUMBER(38),"LONG_STRING" VARCHAR2(64 CHAR),"LONG_TEXT" VARCHAR2(4000 CHAR),"OTHER_BYTE" RAW(2000),"OTHER_FLOAT" NUMBER,"OTHER_WORD" "OW283_T","PERSON_NAME" "PN286_T","SHORT_STRING" VARCHAR2(16 CHAR),"SIGNED_LONG" NUMBER(38),"SEQUENCE" "SQ250_T","SIGNED_SHORT" NUMBER(38),"SHORT_TEXT" VARCHAR2(1024 CHAR),"TIME" TIMESTAMP,"UNIQUE_ID" VARCHAR2(128 CHAR),"UNSIGNED_LONG" NUMBER(10),"UNKNOWN" "UN243_T","UNSIGNED_SHORT" NUMBER(5),"UNLIMITED_TEXT" VARCHAR2(4000 CHAR),"EXTENDED_TYPE" "EXT239_T","EXCEPTION_TYPE" RAW(2000))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ_ATTR_T329_T" UNDER "SQ330_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_VALUE_T385_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","APPLICATION_ENTITY" VARCHAR2(16 CHAR),"AGE_STRING" "AS335_T","ATTRIBUTE_TAG" RAW(4),"CODE_STRING" VARCHAR2(16 CHAR),"DATE386" DATE,"DATE_TIME" TIMESTAMP,"DECIMAL_STRING" NUMBER,"FLOAT_SINGLE" NUMBER,"FLOAT_DOUBLE" NUMBER,"INTEGER_STRING" NUMBER(38),"LONG_STRING" VARCHAR2(64 CHAR),"LONG_TEXT" VARCHAR2(4000 CHAR),"OTHER_BYTE" RAW(2000),"OTHER_FLOAT" NUMBER,"OTHER_WORD" "OW363_T","PERSON_NAME" "PN366_T","SHORT_STRING" VARCHAR2(16 CHAR),"SIGNED_LONG" NUMBER(38),"SEQUENCE" "SQ330_T","SIGNED_SHORT" NUMBER(38),"SHORT_TEXT" VARCHAR2(1024 CHAR),"TIME" TIMESTAMP,"UNIQUE_ID" VARCHAR2(128 CHAR),"UNSIGNED_LONG" NUMBER(10),"UNKNOWN" "UN323_T","UNSIGNED_SHORT" NUMBER(5),"UNLIMITED_TEXT" VARCHAR2(4000 CHAR),"EXTENDED_TYPE" "EXT319_T","EXCEPTION_TYPE" RAW(2000))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."SQ_ATTR_T409_T" UNDER "SQ410_T"("tag" RAW(4),"definer" VARCHAR2(64 CHAR),"name" VARCHAR2(128 CHAR),"number" NUMBER(20),"offset" NUMBER(20),"length" NUMBER(20),"truncated" RAW(1),"rawValue" RAW(2000),"byteOrderLE" RAW(1))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ATTR_VALUE_T465_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","APPLICATION_ENTITY" VARCHAR2(16 CHAR),"AGE_STRING" "AS415_T","ATTRIBUTE_TAG" RAW(4),"CODE_STRING" VARCHAR2(16 CHAR),"DATE466" DATE,"DATE_TIME" TIMESTAMP,"DECIMAL_STRING" NUMBER,"FLOAT_SINGLE" NUMBER,"FLOAT_DOUBLE" NUMBER,"INTEGER_STRING" NUMBER(38),"LONG_STRING" VARCHAR2(64 CHAR),"LONG_TEXT" VARCHAR2(4000 CHAR),"OTHER_BYTE" RAW(2000),"OTHER_FLOAT" NUMBER,"OTHER_WORD" "OW443_T","PERSON_NAME" "PN446_T","SHORT_STRING" VARCHAR2(16 CHAR),"SIGNED_LONG" NUMBER(38),"SEQUENCE" "SQ410_T","SIGNED_SHORT" NUMBER(38),"SHORT_TEXT" VARCHAR2(1024 CHAR),"TIME" TIMESTAMP,"UNIQUE_ID" VARCHAR2(128 CHAR),"UNSIGNED_LONG" NUMBER(10),"UNKNOWN" "UN403_T","UNSIGNED_SHORT" NUMBER(5),"UNLIMITED_TEXT" VARCHAR2(4000 CHAR),"EXTENDED_TYPE" "EXT399_T","EXCEPTION_TYPE" RAW(2000))NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."XML_VALUE484_COLL" AS VARRAY(2147483647) OF "ATTR_VALUE_T385_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."ANY_ATTR_T519_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","APPLICATION_ENTITY" "AE_ATTR_T332_T","AGE_STRING" "AS_ATTR_T334_T","ATTRIBUTE_TAG" "AT_ATTR_T337_T","CODE_STRING" "CS_ATTR_T339_T","DATE520" "DA_ATTR_T342_T","DECIMAL_STRING" "DS_ATTR_T346_T","FLOAT_SINGLE" "FL_ATTR_T348_T","FLOAT_DOUBLE" "FD_ATTR_T350_T","INTEGER_STRING" "IS_ATTR_T352_T","LONG_STRING" "LO_ATTR_T354_T","LONG_TEXT" "LT_ATTR_T356_T","OTHER_BYTE" "OB_ATTR_T358_T","OTHER_FLOAT" "OF_ATTR_T360_T","OTHER_WORD" "OW_ATTR_T362_T","PERSON_NAME" "PN_ATTR_T365_T","SHORT_STRING" "SH_ATTR_T370_T","SIGNED_LONG" "SL_ATTR_T372_T","SEQUENCE" "SQ_ATTR_T329_T","SIGNED_SHORT" "SS_ATTR_T328_T","SHORT_TEXT" "ST_ATTR_T327_T","TIME" "TM_ATTR_T326_T","UNIQUE_ID" "UI_ATTR_T325_T","UNSIGNED_LONG" "UL_ATTR_T324_T","UNKNOWN" "UN_ATTR_T322_T","UNSIGNED_SHORT" "US_ATTR_T321_T","UNLIMITED_TEXT" "UT_ATTR_T320_T","EXTENDED_TYPE" "EXT_ATTR_T318_T","EXCEPTION_TYPE" "EXP_ATTR_T317_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CT_OPERAND_T521_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","STRING_VALUE" "MIXED_TEXT_T307_T","XML_VALUE" "ATTR_VALUE_T385_T","ATTRIBUTE_TAG" VARCHAR2(1999 CHAR))FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FUNCTION_T481_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","operator" VARCHAR2(64 CHAR),"ATTRIBUTE_TAG" "ATTRIBUTE_TAG482_COLL","STRING_VALUE" "STRING_VALUE483_COLL","XML_VALUE" "XML_VALUE484_COLL","FUNCTION" "XDB"."XDB$XMLTYPE_REF_LIST_T")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."FUNCTION486_COLL" AS VARRAY(2147483647) OF "FUNCTION_T481_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."BOOLEAN_FUNC_PREDICATE_485_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","operator" VARCHAR2(64 CHAR),"ATTRIBUTE_TAG" "ATTRIBUTE_TAG482_COLL","STRING_VALUE" "STRING_VALUE483_COLL","XML_VALUE" "XML_VALUE484_COLL","FUNCTION" "FUNCTION486_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."RELATIONAL_PREDICATE_T487_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","operator" "XDB"."XDB$ENUM_T","ATTRIBUTE_TAG" "ATTRIBUTE_TAG482_COLL","FUNCTION" "FUNCTION486_COLL","STRING_VALUE" "STRING_VALUE483_COLL","XML_VALUE" "XML_VALUE484_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREDICATE_T489_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DESCRIPTION" VARCHAR2(1999 CHAR),"LOGICAL" REF "SYS"."XMLTYPE","RELATIONAL" "RELATIONAL_PREDICATE_T487_T","BOOLEAN_FUNC" "BOOLEAN_FUNC_PREDICATE_485_T","INVOKE_MACRO" "MACRO_USE_T490_T","PREDICATE_REF" VARCHAR2(4000 CHAR),"GLOBAL_RULE_REF" VARCHAR2(4000 CHAR),"ACTION" "ACTION495_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREDICATE496_COLL" AS VARRAY(2147483647) OF "PREDICATE_T489_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."LOGICAL_PREDICATE_T488_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","operator" "XDB"."XDB$ENUM_T","PREDICATE" "PREDICATE496_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREDICATE_GROUP_T498_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","name" VARCHAR2(64 CHAR),"DESCRIPTION" VARCHAR2(1999 CHAR),"PREDICATES_DEFINITION" "XDB"."XDB$XMLTYPE_REF_LIST_T","PREDICATE" "PREDICATE496_COLL","ACTION" "ACTION495_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREDICATES_DEFINITIO499_COLL" AS VARRAY(2147483647) OF "PREDICATE_GROUP_T498_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."PREDICATE_MACRO_T497_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","name" VARCHAR2(64 CHAR),"DESCRIPTION" VARCHAR2(1999 CHAR),"PARAMETER_DECLARATION" "NAME492_COLL","PREDICATES_DEFINITION" "PREDICATES_DEFINITIO499_COLL","PREDICATE" "PREDICATE496_COLL","ACTION" "ACTION495_COLL")NOT FINAL INSTANTIABLE
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."GLOBAL_MACRO506_COLL" AS VARRAY(2147483647) OF "PREDICATE_MACRO_T497_T"
/

CREATE OR REPLACE NONEDITIONABLE TYPE "ORDSYS"."CONFORMANCE_CONSTRAINT_501_T" AS OBJECT ("SYS_XDBPD$" "XDB"."XDB$RAW_LIST_T","DOCUMENT_HEADER" "DOCUMENT_HEADER_T314_T","EXTERNAL_MACRO_INCLUDE" "EXTERNAL_MACRO_INCLU503_COLL","EXTERNAL_RULE_INCLUDE" "EXTERNAL_RULE_INCLUD505_COLL","GLOBAL_MACRO" "GLOBAL_MACRO506_COLL","GLOBAL_RULE" "PREDICATES_DEFINITIO499_COLL")FINAL INSTANTIABLE
/

