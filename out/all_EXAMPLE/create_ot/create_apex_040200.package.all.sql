CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_IMAGE_PREFIX"

--  Copyright (c) Oracle Corporation 1999 - 2007. All Rights Reserved.
--
--    DESCRIPTION
--      Image prefix function.  Will return the image prefix provided at installation time.
--      This function should never need to be updated.  It's sole purpose is to provide
--      the ability to easily update the image prefix used by the APEX globals in wwv_flow_global
--
is
    g_image_prefix       constant varchar2(255) := '/i/';

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GLOBAL"
--  Copyright (c) Oracle Corporation 1999 - 2003. All Rights Reserved.
--
--    DESCRIPTION
--      Flow global package variables.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--      Allows sharing of data within a session that does not belong to any given package.
--      Includes type declaration(s).
--
--      Any change to this file must also be replicated in the same file in cloud/apex_patches
--
--    RUNTIME DEPLOYMENT: YES
--
is
    g_v255_result        varchar2(255) := null;
    g_v1_result          varchar2(1)   := null;
    g_image_prefix       constant varchar2(255) := wwv_flow_image_prefix.g_image_prefix;
    g_xe                 boolean := case '0' when '1' then true else false end;

    g_cloud             constant boolean := false;

    $if sys.dbms_db_version.ver_le_10_2 $then
        g_12c           constant boolean := false;
    $elsif sys.dbms_db_version.ver_le_11_1 $then
        g_12c           constant boolean := false;
    $elsif sys.dbms_db_version.ver_le_11_2 $then
        g_12c           constant boolean := false;
    $else

        g_12c           constant boolean := true;

    $end
    --------
    -- types
    --
    type vc_map  is table of varchar2(32767) index by varchar2(255);
    type vc_arr2 is table of varchar2(32767) index by binary_integer;
    type n_arr   is table of number          index by binary_integer;
    type d_arr   is table of date            index by binary_integer;
    type b_arr   is table of boolean         index by binary_integer;

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."HTMLDB_ITEM" as

--  Copyright (c) Oracle Corporation 2001 - 2003. All Rights Reserved.
--
--    DESCRIPTION
--      API to generate flow f01... items for use with multi row forms and
--      other purposes.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--

type lov_item is record (display_value varchar2(4000), return_value varchar2(4000));
type lov_table is table of lov_item index by binary_integer;

function checkbox (
    --
    -- OBSOLETE - Please use checkbox2, as per bug #11728071 (Misspelt p_checked_values_delimitor parameter)
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_attributes in varchar2 default null,
    p_checked_values in varchar2 default null,
    p_checked_values_delimitor in varchar2 default ':',
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function checkbox2 (
    --
    -- Return an HTML form checkbox.  Allows you to select a checkbox form element from a query.
    --
    -- Arguments:
    --     p_idx                      = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                                  Typically the p_idx argument is constant for a given column.
    --     p_value                    = When checked return this value
    --     p_attributes               = Custom HTML arguments added to the HTML input type of checkbox.
    --     p_checked_values           = Colon (by default delimted list of values
    --     p_checked_values_delimiter = Defaults to a colon ":" and is used to pass multiple values in one string.
    --     p_item_id                  = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label               = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select htmldb_item.checkbox(1,empno) c from emp
    --     select htmldb_item.checkbox(1,empno,null,empno) c from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_attributes in varchar2 default null,
    p_checked_values in varchar2 default null,
    p_checked_values_delimiter in varchar2 default ':',
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function radiogroup (
    --
    -- Return an HTML form radiogroup.  Allows you to select a radiogroup form element from a query.
    --
    -- Arguments:
    --     p_idx                      = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                                  Typically the p_idx argument is constant for a given column.
    --     p_value                    = When selected return this value
    --     p_selected_value           = Default selected value
    --     p_display                  = Display text
    --     p_attributes               = Custom HTML arguments added to the HTML input type of radiogroup.
    --     p_item_id                  = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label               = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select htmldb_item.radiogroup(1,empno,'7839',ename) c from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_selected_value in varchar2 default null,
    p_display      in varchar2 default null,
    p_attributes   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_item_id      in varchar2 default null,
    p_item_label   in varchar2 default null
    )
    return varchar2
    ;


function hidden (
    --
    -- Return an HTML form hidden value.  Hidden values will not show up on your dynamically
    -- generated HTML page however they will be passed to the wwv_flow.accept procedure.
    -- example: select htmldb_item.hidden(2,empno) from emp
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Value of the hidden HTML form element.
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select htmldb_item.hidden(10,empno) c from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_attributes in varchar2 default null,
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function display_and_save (
    --
    -- Return an HTML form hidden value and display the text.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Value of the hidden HTML form element.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select wwv_flow_item.display_and_save(10,empno) c from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function text (
    -- Generates an HTML input type of text.  Basically a single hight form field.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Text displayed in HTML input type equals text.
    --     p_size       = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength  = Maximum width that your brower will let you type into the field
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select htmldb_item.text(1,ename) from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_size       in number default 20,
    p_maxLength  in number default 2000,
    p_attributes in varchar2 default null,
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function textarea (
    -- Generates an HTML input type of text.  Basically a single hight form field.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Text displayed in HTML textarea.
    --     p_rows       = Height of the textarea (HTML rows attribute)
    --     p_cols       = Width of text displayed on screen (HTML cols attribute)
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --     select htmldb_item.textarea(1,ename) from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_rows       in number default 4,
    p_cols       in number default 40,
    p_attributes in varchar2 default null,
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null)
    return varchar2
    ;

function date_popup (
    -- Generates an HTML input type of text with an image that pops up date picker.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_row        = depricated
    --     p_value      = Oracle date datatype.
    --     p_date_format= Oracle date format mask for alternate date displays, defaults to 'DD-MON-YYYY'.
    --     p_size       = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength  = Maximum width that your brower will let you type into the field
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508. --
    -- example(s):
    --     select htmldb_item.date_popup(4, null,HIREDATE) "Date hired" from emp
    --
    p_idx         in number,
    p_row         in number default null,
    p_value       in date default null,
    p_date_format in varchar2 default 'DD-MON-YYYY',
    p_size        in number default 20,
    p_maxLength   in number default 2000,
    p_attributes  in varchar2 default null,
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_display_as  in varchar2 default null)
    return varchar2
    ;

function date_popup2 (
    -- Generates an HTML input type of text with an image that pops up jquery based date picker.
    --
    -- Arguments:
    --     p_idx                 = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                             Typically the p_idx argument is constant for a given column.
    --     p_value               = Oracle date datatype.
    --     p_date_format         = Oracle date format mask for alternate date displays, defaults to Application Date Format.
    --     p_size                = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength           = Maximum width that your brower will let you type into the field
    --     p_attributes          = Extra HTML arguments you wish to add
    --     p_item_id             = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label          = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508. --
    --     p_default_value       = The default date which should be selected in DatePicker
    --     p_max_value           = The Maximum date that can be selected from the datepicker
    --     p_min_value           = The Minimum date that can be selected from the datepicker
    --     p_show_on             = Determines when the datepicker should be displayed, when onfocus,button click  or both
    --     p_number_of_months    = Determines number of months to be displayed
    --     p_navigation_list_for = Should the list of values be displayed for Changing Month,Year or Both.
    --     p_year_range          = The range of years to be displayed
    --     p_validation_date     = used to store the Date value for the which date validation failed
    -- example(s):
    --     select htmldb_item.date_popup2(4, null,HIREDATE) "Date hired" from emp

    p_idx                   in number,
    p_value                 in date     default null,
    p_date_format           in varchar2 default null,
    p_size                  in number   default 20,
    p_maxLength             in number   default 2000,
    p_attributes            in varchar2 default null,
    p_item_id               in varchar2 default null,
    p_item_label            in varchar2 default null,
    p_default_value         in varchar2 default null,
    p_max_value             in varchar2 default null,
    p_min_value             in varchar2 default null,
    p_show_on               in varchar2 default 'button',
    p_number_of_months      in varchar2 default null,
    p_navigation_list_for   in varchar2 default 'NONE',
    p_year_range            in varchar2 default null,
    p_validation_date       in varchar2 default null
    )
    return varchar2
    ;

function select_list (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_list_values= A list of static values seperated by commas.
    --                    Display values and return values are
    --                    seperated by semicolons.
    --                    to write back the selected date into the proper row.
    --                    format: display1;Return1,Display2;Return2...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --     p_show_extra = show current value even if not part of LOV
    -- example(s):
    --   select htmldb_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    p_idx         in number,
    p_value       in varchar2 default null,
    p_list_values in varchar2 default null,
    p_attributes  in varchar2 default null,
    p_show_null   in varchar2 default 'NO',
    p_null_value  in varchar2 default '%null%',
    p_null_text   in varchar2 default '%',
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_show_extra  in varchar2 default 'YES'
) return varchar2;

function select_list_from_query (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_query      = A SQL SELECT statement in the format:
    --                    select display_value, return_value from ...
    --                    or
    --                    select display_and_return_value from ...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508. --
    --     p_show_extra = show current value even if not part of LOV
    -- Example(s):
    --   select htmldb_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx         in number,
    p_value       in varchar2 default null,
    p_query       in varchar2,
    p_attributes  in varchar2 default null,
    p_show_null   in varchar2 default 'YES',
    p_null_value  in varchar2 default '%null%',
    p_null_text   in varchar2 default '%',
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_show_extra  in varchar2 default 'YES'
) return varchar2;

function select_list_from_query_xl (
    --
    -- Same as select_list_from_query but returns clob
    --
    p_idx         in number,
    p_value       in varchar2 default null,
    p_query       in varchar2,
    p_attributes  in varchar2 default null,
    p_show_null   in varchar2 default 'YES',
    p_null_value  in varchar2 default '%null%',
    p_null_text   in varchar2 default '%',
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_show_extra  in varchar2 default 'YES'
) return clob;

function popup_from_lov (
    --
    --  popup LOV from a named LOV
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_name argument.
    --     p_lov_name   = named DYNAMIC LOV used for this popup
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    -- example(s):
    --     select htmldb_item.popup_from_lov (1,deptno,'DEPT') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_name          in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null)
    return varchar2
    ;

function popup_from_query (
    --
    --  popup LOV from a query
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_query argument.
    --     p_lov_query  = LOV query used for this popup
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    -- example(s):
    --     select htmldb_item.popup_from_query (1,deptno,'select dname, deptno from dept') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_query         in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null
    )
    return varchar2
    ;

function popupkey_from_lov (
    --
    --  popupkey LOV from a named LOV
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --                    Due to the behavior of popupkey the next index value should be p_idx + 1.
    -- example:
    --     select htmldb_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt,
    --            htmldb_item.hidden(3,empno) eno
    --     from emp
    --
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_name argument.
    --     p_lov_name   = named LOV used for this popup
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    -- example(s):
    --     select htmldb_item.popupkey_from_lov (1,deptno,'DEPT') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_name          in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null
    )
    return varchar2
    ;

function popupkey_from_query (
    --
    --  popupkey LOV from a query
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --                    Due to the behavior of popupkey the next index value should be p_idx + 1.
    -- example:
    --     select htmldb_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt,
    --            htmldb_item.hidden(3,empno) eno
    --     from emp
    --
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_query argument.
    --     p_lov_query  = LOV query used for this popup
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    -- example(s):
    --     select htmldb_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_query         in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null
    )
    return varchar2
    ;

function select_list_from_lov (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_query      = A SQL SELECT statement in the format:
    --                    select display_value, return_value from ...
    --                    or
    --                    select display_and_return_value from ...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMe508.
    --
    -- example(s):
    --   select htmldb_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx         in number,
    p_value       in varchar2 default null,
    p_lov         in varchar2,
    p_attributes  in varchar2 default null,
    p_show_null   in varchar2 default 'YES',
    p_null_value  in varchar2 default '%null%',
    p_null_text   in varchar2 default '%',
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_show_extra  in varchar2 default 'YES')
    return varchar2
    ;

function select_list_from_lov_xl (
    --
    -- Same as select_list_from_lov but returns clob
    --
    p_idx         in number,
    p_value       in varchar2 default null,
    p_lov         in varchar2,
    p_attributes  in varchar2 default null,
    p_show_null   in varchar2 default 'YES',
    p_null_value  in varchar2 default '%null%',
    p_null_text   in varchar2 default '%',
    p_item_id     in varchar2 default null,
    p_item_label  in varchar2 default null,
    p_show_extra  in varchar2 default 'YES')
    return clob
    ;

function text_from_lov (
    --
    -- Display only based upon LOV
    --
    p_value       in varchar2 default null,
    p_lov         in varchar2,
    p_null_text   in varchar2 default '%')
    return varchar2;


function text_from_lov_query (
    --
    -- Display only based upon LOV
    --
    p_value       in varchar2 default null,
    p_query       in varchar2,
    p_null_text   in varchar2 default '%')
    return varchar2;


function md5_checksum (
    --
    --Used in conjuction with multi_row_update procedure.  Populates the global
    --HTMLDB_APPLICATION.G_FCS with a checksum of the values provided.
    --
    p_value01    in varchar2 default null,
    p_value02    in varchar2 default null,
    p_value03    in varchar2 default null,
    p_value04    in varchar2 default null,
    p_value05    in varchar2 default null,
    p_value06    in varchar2 default null,
    p_value07    in varchar2 default null,
    p_value08    in varchar2 default null,
    p_value09    in varchar2 default null,
    p_value10    in varchar2 default null,
    p_value11    in varchar2 default null,
    p_value12    in varchar2 default null,
    p_value13    in varchar2 default null,
    p_value14    in varchar2 default null,
    p_value15    in varchar2 default null,
    p_value16    in varchar2 default null,
    p_value17    in varchar2 default null,
    p_value18    in varchar2 default null,
    p_value19    in varchar2 default null,
    p_value20    in varchar2 default null,
    p_value21    in varchar2 default null,
    p_value22    in varchar2 default null,
    p_value23    in varchar2 default null,
    p_value24    in varchar2 default null,
    p_value25    in varchar2 default null,
    p_value26    in varchar2 default null,
    p_value27    in varchar2 default null,
    p_value28    in varchar2 default null,
    p_value29    in varchar2 default null,
    p_value30    in varchar2 default null,
    p_value31    in varchar2 default null,
    p_value32    in varchar2 default null,
    p_value33    in varchar2 default null,
    p_value34    in varchar2 default null,
    p_value35    in varchar2 default null,
    p_value36    in varchar2 default null,
    p_value37    in varchar2 default null,
    p_value38    in varchar2 default null,
    p_value39    in varchar2 default null,
    p_value40    in varchar2 default null,
    p_value41    in varchar2 default null,
    p_value42    in varchar2 default null,
    p_value43    in varchar2 default null,
    p_value44    in varchar2 default null,
    p_value45    in varchar2 default null,
    p_value46    in varchar2 default null,
    p_value47    in varchar2 default null,
    p_value48    in varchar2 default null,
    p_value49    in varchar2 default null,
    p_value50    in varchar2 default null,
    p_col_sep    in varchar2 default '|',
    p_item_id    in varchar2 default null)
    return varchar2;


function md5_hidden (
    --
    -- Return an HTML form hidden value.  Hidden values will not show up on your dynamically
    -- generated HTML page however they will be passed to the wwv_flow.accept procedure.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_valueXX    = Value of the hidden HTML form element which will be md5 checksum encoded.
    --     p_item_id    = ID of the HTML form item
    --
    -- example(s):
    --     select htmldb_item.md5_hidden(10,empno,ename) c from emp
    --     select htmldb_item.md5_hidden(10,empno,ename,job,sal) c from emp
    --
    --
    p_idx        in number,
    p_value01    in varchar2 default null,
    p_value02    in varchar2 default null,
    p_value03    in varchar2 default null,
    p_value04    in varchar2 default null,
    p_value05    in varchar2 default null,
    p_value06    in varchar2 default null,
    p_value07    in varchar2 default null,
    p_value08    in varchar2 default null,
    p_value09    in varchar2 default null,
    p_value10    in varchar2 default null,
    p_value11    in varchar2 default null,
    p_value12    in varchar2 default null,
    p_value13    in varchar2 default null,
    p_value14    in varchar2 default null,
    p_value15    in varchar2 default null,
    p_value16    in varchar2 default null,
    p_value17    in varchar2 default null,
    p_value18    in varchar2 default null,
    p_value19    in varchar2 default null,
    p_value20    in varchar2 default null,
    p_value21    in varchar2 default null,
    p_value22    in varchar2 default null,
    p_value23    in varchar2 default null,
    p_value24    in varchar2 default null,
    p_value25    in varchar2 default null,
    p_value26    in varchar2 default null,
    p_value27    in varchar2 default null,
    p_value28    in varchar2 default null,
    p_value29    in varchar2 default null,
    p_value30    in varchar2 default null,
    p_value31    in varchar2 default null,
    p_value32    in varchar2 default null,
    p_value33    in varchar2 default null,
    p_value34    in varchar2 default null,
    p_value35    in varchar2 default null,
    p_value36    in varchar2 default null,
    p_value37    in varchar2 default null,
    p_value38    in varchar2 default null,
    p_value39    in varchar2 default null,
    p_value40    in varchar2 default null,
    p_value41    in varchar2 default null,
    p_value42    in varchar2 default null,
    p_value43    in varchar2 default null,
    p_value44    in varchar2 default null,
    p_value45    in varchar2 default null,
    p_value46    in varchar2 default null,
    p_value47    in varchar2 default null,
    p_value48    in varchar2 default null,
    p_value49    in varchar2 default null,
    p_value50    in varchar2 default null,
    p_col_sep    in varchar2 default '|',
    p_item_id    in varchar2 default null)
    return varchar2
    ;


procedure multi_row_update (
    --
    -- This procedure performs a multi row update of a table or view.
    -- This procedure can be called using two methods:
    --
    -- Method 1: (Complete P_MRU_STRING no region ID)
    --   Supply only a complete mru string.
    --   OWNER:TABLE:PK_COLUMN1,PK_IDX:PK_COLUMN2,PK_IDX2|COL,IDX:COL,IDX...
    --
    -- Method 2: (Short P_MRU_STRING and region ID)
    --   Supply the ID of the region with the short MRU string
    --   OWNER:TABLE:PK_COLUMN1:PK_COLUMN2
    --
    p_mru_string        in varchar2 default null,
    p_region_id         in number   default null
    );


end htmldb_item;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      flow.sql
--
--    DESCRIPTION
--      Application Express rendering engine package specification.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--      This program shows and accepts application express pages.
--      The application express engine is also known as the flows engine.
--      Frequently called from the procedure f.
--
--    RUNTIME DEPLOYMENT: YES
--
--
--    MODIFIED   (MM/DD/YYYY)
--      mhichwa   08/04/1999 - Created
--      mhichwa   09/30/1999 - Removed g_show_reset global
--      mhichwa   10/09/1999 - Added g_last_query_text global for error reporting
--      mhichwa   10/09/1999 - Removed g_success_procedure, g_success_url
--      mhichwa   10/09/1999 - Removed g_step_sub_title_font_color
--      mhichwa   10/14/1999 - Added 10 extra inputs v26 ... v35
--      mhichwa   10/21/1999 - Added t01..t35 to allow 32k for textareas
--      mhichwa   10/21/1999 - Moved g_flow_schema_owner to spec from body
--      mhichwa   10/23/1999 - Added flow_language and flow_image_prefix
--      mhichwa   10/26/1999 - Added pagination globals flow_current_min_row, max_row, rows_fetched
--      mhichwa   11/08/1999 - Added g_current_tab, and g_non_current_tab, g_box, g_navigation_bar
--      mhichwa   11/23/1999 - Added g_tab_non_current_image, g_tab_image_attributes
--      mhichwa   11/30/1999 - Added g_template_success_message
--      mhichwa   11/30/1999 - Changed paint_buttons from a procedure to a function
--      mhichwa   12/01/1999 - Added g_body_title variable, g_current_image_tab, g_non_current_image_tab
--      mhichwa   12/06/1999 - Added g_message, attribute1,2,3,4
--      mhichwa   12/09/1999 - Added g_top level tab attributes and g_tab_target
--      mhichwa   12/13/1999 - Changed g_message to g_notification_message, added g_notification
--      mhichwa   12/13/1999 - Added g_default_button_position
--      mhichwa   12/15/1999 - Added display_condition to toplevel_tab: g_tab_parent_display_cond
--      mhichwa   12/19/1999 - Added g_before_header_branch_occured global
--      mhichwa   12/19/1999 - Added g_tab_also_current_for_pages global
--      mhichwa   01/08/2000 - Added g_translated_flow_id and g_translated_page_id
--      mhichwa   01/09/2000 - Depricated initial_occurs and max_occurances
--      mhichwa   01/12/2000 - Added page plug globals
--      mhichwa   01/20/2000 - Added g_error_template, g_user, g_authentication, g_login_url
--      mhichwa   01/21/2000 - Added g_session_cookie
--      mhichwa   01/21/2000 - Depricated g_session_last_changed_set
--      mhichwa   01/23/2000 - Added logout_url
--      mhichwa   01/24/2000 - Added g_public_url_prefix
--      mhichwa   01/24/2000 - Added an extra 5 input arguments making total of 40
--      mhichwa   01/25/2000 - Added 10 more input arguments
--      mhichwa   01/26/2000 - Externalized paint_formOpen, find_value_for functions and g_ok_to_cache_sql variable
--      mhichwa   01/26/2000 - Added g_item_plug_id, g_plug_id and g_button_plug_id
--      mhichwa   01/31/2000 - Added g_heading_bgcolor,g_font_size,g_font_face,g_table_bgcolor,tattr
--      mhichwa   01/31/2000 - Added g_plug_heading_bgcolor,table_bgcolor,font_size,header,footer
--      mhichwa   02/02/2000 - Change g_box from varchar2(4000) to varchar2(32767)
--      mhichwa   02/20/2000 - Added g_cookie_session_id global
--      mhichwa   02/21/2000 - Added g_popup_filter global
--      mhichwa   02/23/2000 - Added g_page_document_1 global
--      mhichwa   03/02/2000 - Added g_tab_plsql_condtion global
--      mhichwa   03/04/2000 - Renamed draw_box_open, close to draw_body_open, close
--      mhichwa   03/08/2000 - Added g_flow_version
--      mhichwa   03/09/2000 - Added g_user_known_as
--      mhichwa   03/16/2000 - Added button_redirect_url
--      mhichwa   03/22/2000 - Added p_perform_oracle_substitutions
--      mhichwa   04/26/2000 - Added g_page_text_generated
--      mhichwa   05/03/2000 - Added f01 - f10
--      mhichwa   05/07/2000 - Moved f01 before p_t41 (allows f01 to be 98 arg, not 108 arg)
--      mhichwa   05/08/2000 - Reversed above
--      mhichwa   05/08/2000 - Add g_subscriber_id
--      mhichwa   05/16/2000 - Added g_process_when_button_id
--      mhichwa   05/22/2000 - Added g_icon_onclick
--      mhichwa   05/23/2000 - Removed drop package
--      mhichwa   05/24/2000 - obsoleted g_icon_bar_ and g_page_document_1 added comments, reordered fields
--      mhichwa   05/26/2000 - Added wwv_flow.g_rownum per thoechst request
--      mhichwa   05/30/2000 - Added g_dbauth_url_prefix, g_proxy_server
--      mhichwa   05/30/2000 - Added update_cache_with_write
--      mhichwa   06/02/2000 - Added g_step_first_item
--      mhichwa   06/03/2000 - Added lov_null_text null_value
--      mhichwa   06/09/2000 - Added g_item_lov_translated
--      mhichwa   06/11/2000 - Added g_plug_display_when_cond_type g_public_user
--      mhichwa   06/12/2000 - Added g_current_user
--      mhichwa   06/13/2000 - Added g_item_display_when_type
--      mhichwa   06/15/2000 - Added g_tab_parent_display_cond_ty g_tab_plsql_condition_type
--      mhichwa   06/18/2000 - Added g_process_type
--      mhichwa   06/18/2000 - Added g_branch_when_button_id
--      mhichwa   07/03/2000 - Added g_plug_column_width
--      mhichwa   07/10/2000 - Added g_region_table_cattributes
--      mhichwa   08/16/2000 - Added g_item_source_post_computation
--      mhichwa   08/19/2000 - Extended help procedure
--      mhichwa   08/21/2000 - Added additional help procedure arguments.
--      mhichwa   09/03/2000 - Changed formatting of page help text.
--      mhichwa   09/19/2000 - Added g_flow_status
--      mhichwa   10/25/2000 - Added p 51 ... 60
--      mhichwa   10/30/2000 - Added page cache update alt api
--      mhichwa   10/30/2000 - Added fetch_item
--      mhichwa   11/09/2000 - Added p_trace
--      mhichwa   11/21/2000 - Added g_computation_id
--      mhichwa   12/07/2000 - Added g_vpd
--      mhichwa   12/15/2000 - Added g_tab_disp_cond_text and g_compute_when_text
--      mhichwa   12/18/2000 - Removed g_subscriber_id and g_session_created_*
--      mhichwa   12/20/2000 - Removed g_item_javascript and added g_item_security_scheme
--      mhichwa   12/20/2000 - Added p_component argument to public role check function
--      mhichwa   12/20/2000 - Added g_button_security_scheme, g_icon_security_scheme, g_tab_security_scheme
--      mhichwa   12/20/2000 - Added g_tab_security_scheme
--      mhichwa   12/22/2000 - Added g_security_scheme for flow level security schemes
--      mhichwa   12/22/2000 - Added reset security check cache
--      mhichwa   01/05/2001 - Added public security check
--      mhichwa   01/12/2001 - Added g item tag_attributes
--      mhichwa   01/16/2001 - Added g application_tab set
--      mhichwa   01/17/2001 - Added f11 - f20
--      mhichwa   01/27/2001 - Return company name function
--      mhichwa   02/11/2001 - Added two functions to get sequence and unique ids
--      mhichwa   02/14/2001 - Added sdillon code to insert into temp table values from strings
--      mhichwa   03/01/2001 - Added g button alignment
--      sdillon   03/02/2001 - Added g_job for jobs which are submitted to wwv_flow_job
--      mhichwa   03/03/2001 - Removed references to carot 3, added comments
--      mhichwa   03/03/2001 - Added public syn
--      mhichwa   03/04/2001 - Added get_custom_auth_login_url
--      mhichwa   03/15/2001 - Added no data found global
--      mhichwa   03/21/2001 - Added g user id
--      mhichwa   04/09/2001 - Added p company to show and accept procedures
--      mhichwa   04/10/2001 - Added button c attributes
--      mhichwa   04/17/2001 - Added total row global to enhance pagination
--      mhichwa   04/23/2001 - Added rejoin sessions variable
--      mhichwa   05/14/2001 - Removed g item accept processing global var
--      mhichwa   06/01/2001 - Added checksum function and md5 checksum show and accept arguments
--      mhichwa   06/04/2001 - Added assignment of md5 checksum to flow global.
--      mhichwa   06/04/2001 - Added get_sgid function to return sec grp id for use in views on obj dollar table
--      mhichwa   06/18/2001 - Added g item default type
--      mhichwa   06/18/2001 - Added api to clear user session state (clear user cache)
--      mhichwa   06/18/2001 - Improved documentation
--      mhichwa   07/20/2001 - Added g_flow_language_derived_from
--      mhichwa   08/13/2001 - Added x 01 through x 20 as input items that are to be ignored.  For use with local javascript.
--      mhichwa   08/23/2001 - Added global notification
--      mhichwa   08/24/2001 - Added a global for g_last_tab_pressed
--      mhichwa   08/27/2001 - Added last tab pressed argument to show procedure
--      mhichwa   08/27/2001 - Extended documentation of flows procedure
--      mhichwa   10/02/2001 - Edited comments for show procedure
--      mhichwa   10/15/2001 - Added flow checksum fcs accept argument
--      mhichwa   10/19/2001 - Added header and footer template globals
--      mhichwa   10/24/2001 - Added process when 2 and process when 2 type to extend declarative prog on page processes
--      mhichwa   11/08/2001 - Added g_error_message_override
--      mhichwa   11/12/2001 - Added g_head (wwv_flow_steps.html_page_header)
--      mhichwa   12/10/2001 - Added set_g_nls_date_format
--      mhichwa   12/12/2001 - Added g_process_security_scheme
--      mhichwa   12/17/2001 - Added g_flow_charset
--      mhichwa   12/18/2001 - Added g_branch_security_scheme
--      mhichwa   12/19/2001 - Added g_current_parent_tab_text
--      mhichwa   02/11/2002 - Added 2 stateful process procedures and one function (sspadafore design)
--      mhichwa   02/13/2002 - Added validation global (g_validation_ids_in_error)
--      mhichwa   02/14/2002 - Added another validation global (g_inline_validation_error_cnt)
--      mhichwa   02/14/2002 - Added tag_attributes2
--      mhichwa   02/19/2002 - Added post element text
--      mhichwa   03/05/2002 - Added process_sql_clob
--      sspadafo  03/18/2002 - Added fetch_flow_item function
--      mhichwa   03/18/2002 - Added g_page_submitted global variable
--      jkallman  03/28/2002 - Added definition of vc_long_arr
--      mhichwa   04/04/2002 - Removed obsolete icon bar attributes
--      mhichwa   04/17/2002 - Fixed inline notifications of type function returning err text by adding addtional global
--      mhichwa   05/01/2002 - Added lov_display_extra g_item_lov_display_extra support
--      mhichwa   05/07/2002 - Maded look static 1, and obsolete
--      mhichwa   05/08/2002 - Added 5 more arguments (now 65 are supported)
--      mhichwa   05/08/2002 - Added button condition 2
--      mhichwa   05/09/2002 - Added g_tab_parent_display_cond2
--      mhichwa   05/09/2002 - Added g_item_display_when2
--      mhichwa   05/09/2002 - Added g_company_images and g_flow_images
--      mhichwa   05/09/2002 - Added g_shortcut_name and g_shortcut_id
--      mhichwa   05/10/2002 - Remove obsolete globals
--      mhichwa   06/05/2002 - Added p_survey_map and g_survey_map
--      sspadafo  06/22/2002 - Added g_list_mgr_cnt global
--      cbcho     07/01/2002 - Added g_footer_len, g_footer_end, g_end_tag_printed global variables
--      mhichwa   07/08/2002 - Added g_f21..g_f40 and g_plug_form_tab_attr
--      sspadafo  07/10/2002 - Added clear_flow_cache, clear_page_cache, clear_page_caches procedures
--      mhichwa   08/08/2002 - Added g_flow_alias
--      mhichwa   08/09/2002 - Added plug_query_more_data
--      mhichwa   08/11/2002 - Added exact_substitutions_only
--      mhichwa   09/24/2002 - Added plug_customized
--      mhichwa   09/25/2002 - Added g_item_cattributes_element
--      msewtz    09/26/2002 - Added g_fsp_region_id for multiple region sorting
--      mhichwa   09/30/2002 - Added g_page_onload
--      mhichwa   10/07/2002 - Increased input args from 65 to 100.
--      mhichwa   10/25/2002 - Added g_item_read_only_when g_item_read_only_when_type g_item_read_only_disp_attr
--      mhichwa   10/25/2002 - Removed support for application tabs
--      mhichwa   10/29/2002 - Added g_unique_page_id
--      mhichwa   10/29/2002 - Changed some numbers into pls_integers
--      msewtz    10/31/2002 - Added g_plug_position to indicate top and bottom position for button conditions
--      tmuth     11/01/2002 - Removed reference to ^3, now using select user... technique
--      mhichwa   11/08/2002 - Changed comments
--      jkallman  11/21/2002 - Added g_nls_decimal_separator, set_g_nls_decimal_separator
--      mhichwa   11/21/2002 - Added map1 map2 and map3
--      mhichwa   11/25/2002 - Changed map1 to an array
--      mhichwa   11/25/2002 - Added map2 and map3 array
--      msewtz    12/04/2002 - Added constant g_browser_version and function get_browser_version
--      jkallman  12/27/2002 - Removed end_page_processing
--      sspadafo  12/27/2002 - Added g_db_session_branch_targets for before header branching (Bug 2729768)
--      sspadafo  12/28/2002 - Added g_branch_to_page_accept_count for recursion limiting (Bug 2729767)
--      sspadafo  01/06/2003 - Expose function replace_cgi_env (bug 2737645)
--      mhichwa   01/27/2003 - Added g_process_item_name (bug 2769756)
--      sspadafo  02/07/2003 - Added g_in_process boolean to prevent show from being called from page process (Bug 2776207)
--      sspadafo  02/23/2003 - Changes for template column name changes from varchar2 to number (Bug 2748399)
--      msewtz    02/26/2004 - Added g_pagination_buttons_painted to determine whether or not pagination buttons are painted (bug 2823270)
--      jstraub   03/10/2003 - Replaced select user with select sys_context( 'userenv', 'current_schema') for FLOW_OWNER
--      mhichwa   03/11/2003 - Added global g_edit_cookie_session_id which replace body local var (bug 2845535)
--      mhichwa   03/14/2003 - Added global g_form_painted boolean (bug 2851819)
--      mhichwa   03/18/2003 - Added comments to globals, no bug filed
--      mhichwa   03/18/2003 - Added pk array values for use in inline edits (bug 2845535)
--      mhichwa   03/30/2003 - Added g_print_success_message
--      jkallman  04/08/2003 - Added reset_g_nls_decimal_separator (Bug 2894573)
--      sspadafo  04/26/2003 - Removed refs to g_computation_item_type for page and flow computations (Bug 2770974)
--      mhichwa   05/02/2003 - Improved 508 compliance, added g_nls_edit, bug 2772858
--      mhichwa   05/22/2003 - Added returning globals to enhanced dml support, bug 2965281
--      mhichwa   05/22/2003 - Added process globals to identify items to return keys to, bug 2965281
--      tmuth     07/09/2003 - Fixed HTML per bug 3040191
--      sspadafo  07/12/2003 - Increase size of g_footer_end (Bug 3044360)
--      sspadafo  07/30/2003 - Add clear_app_cache as equivalent of clear_flow_cache (Bug 3077346)
--      sspadafo  07/30/2003 - Add fetch_app_item as equivalent of fetch_flow_item (Bug 3077346)
--      sspadafo  08/23/2003 - Add g_build_status (Bug 3101165)
--      msewtz    02/04/2003 - Added Tablar From Globals for handling popup items in tabular forms (bug 3268062)
--      mhichwa   05/26/2004 - Added g_template_navbar_entry global.
--      jkallman  05/25/2004 - Remove references to ^FLOW_OWNER
--      sspadafo  06/09/2004 - Add save_in_substitution_cache procedure, remove update_cache procedure (Bug 3674771)
--      sspadafo  06/09/2004 - Remove find_value_for function (Bug 3677443)
--      mhichwa   06/14/2004 - Added g_flow_theme_id global
--      mhichwa   06/17/2004 - Added function get_translated_app_id return number function
--      jkallman  06/18/2004 - Added get_nls_group_separator
--      jkallman  07/14/2004 - Added reset_g_nls_date_format
--      mhichwa   08/02/2004 - Added g_logo_image and g_logo_image_attributes
--      mhichwa   08/02/2004 - Added g_plug_list_template_id
--      jkallman  08/16/2004 - Added g_base_href, set_base_href, reset_base_href, get_base_href
--      mhichwa   09/15/2004 - Removed obsolete wwv_flow.g_step_box_image, bug 3892054
--      mhichwa   09/15/2004 - Remove obsolete substitutions g_attribute 1 - 6, bug 3892054
--      mhichwa   09/15/2004 - Remove obsolete substitution g_look, bug 3892054
--      mhichwa   09/15/2004 - Remove static link substitutions, bug 3892054
--      jkallman  01/05/2004 - Adjust g_flow_schema_owner
--      sspadafo  01/31/2005 - Increase g_logout_url to vc4000 (Bug 4155342)
--      sspadafo  02/08/2005 - Added globals for URL tampering feature
--      sspadafo  02/21/2005 - Added g_protected_item_internal_flag
--      sspadafo  03/08/2005 - Added g_substitution_item_filter and g_item_escape_on_http_input arrays
--      jkallman  09/14/2005 - Adjust g_flow_schema_owner to FLOWS_020100
--      jkallman  01/23/2006 - Adjust g_flow_schema_owner to FLOWS_020200
--      sspadafo  03/07/2006 - Added g_ex_context_authentication boolean (inspired by Bug 5028808)
--      mhichwa   03/17/2006 - Added g_arg_name and g_arg_value to optimize mod plsql performance
--      mhichwa   03/20/2006 - Improved commments
--      mhichwa   03/22/2006 - Improved xhtml
--      mhichwa   04/10/2006 - Removed obsolete function convert_display_id_to_flow_id
--      sspadafo  04/22/2006 - Added g_use_zero_sid for zero session ID feature
--      sspadafo  04/23/2006 - Added g_public_page_ids, g_public_auth_scheme for zero session ID feature
--      mhichwa   06/01/2006 - Added g_sqlerrm global to log errors encountered during execution of applications
--      mhichwa   06/02/2006 - Inititialize g_sqlerrm
--      mhichwa   06/05/2006 - Removed obsolete and commented out code
--      mhichwa   06/06/2006 - Added globals for error component name and type
--      mhichwa   06/09/2006 - Added g_cache page global to support page caching wwv_flow_steps.cache_page_yn
--      mhichwa   06/09/2006 - Added get_page_alias function for use in determining if you are a login page
--      mhichwa   06/09/2006 - Added is_custom_auth_page function
--      mhichwa   06/11/2006 - Added g_cache_mode global so cache mode can be logged to activity log
--      mhichwa   06/14/2006 - Improved code comments
--      sspadafo  06/22/2006 - Changed g_flow_schema_owner to constant to prevent alteration
--      jkallman  09/29/2006 - Adjust g_flow_schema_owner to FLOWS_030000
--      jstraub   12/13/2006 - Added g_wallet_path and g_wallet_pwd for SSL (HTTPS) support
--      mhichwa   12/21/2006 - Added g_plug_caching global to support page caching, referenced from meta.plb
--      mhichwa   12/21/2006 - Added g_cached_regions global
--      mhichwa   01/02/2006 - Added g_item_pre_element_text
--      mhichwa   01/02/2006 - Added g_cached_region_count global to track the number of regions rendered from cached representations
--      mhichwa   01/03/2006 - Added g_remote_addr
--      jstraub   01/03/2006 - Removed wallet globals, moved to platform preference
--      rvallam   01/08/2007 - Added a new global g_is_item_shuttle for checking if display_as is shuttle
--      rvallam   01/08/2007 - Global added for shuttle - g_is_item_shuttle removed, not needed.
--      jkallman  01/26/2007 - Added g_item_format_mask
--      mhichwa   01/30/2007 - Added support for region static id
--      sspadafo  07/31/2007 - Added f01..f20 parameters to show procedure
--      cbcho     08/02/2007 - Adjust g_flow_schema_owner to flows_030100
--      sspadafo  08/07/2007 - Added new globals g_widget_name, g_x01..g_x10, g_clob_01; added input params to show: p_widget_name, x01..x10, p_clob_01 for AJAX requests
--      cbackstr  09/25/2007 - Changed show to include p_widget_mod,p_widget_action,p_widget_action_mod and map to g_widget_mod,g_widget_action,g_widget_action_mod
--      cbackstr  10/09/2007 - Changed show to include g_widget_num_return
--      jkallman  10/15/2007 - Added globals g_media_type and g_step_media_type
--      jkallman  11/19/2007 - Added global g_date_format
--      mhichwa   11/26/2007 - Added g_include_apex_css_js_yn
--      mhichwa   11/29/2007 - Added g_proc_runtime_where_clause
--      sspadafo  12/03/2007 - Removed g_protected_item_ids, g_protected_item_internal_flag
--      mhichwa   12/10/2007 - Removed g_step_box_footer_text global also changed meta.plb, gen_api_pkg.plb and flow.plb
--      mhichwa   12/10/2007 - Removed g_box_width global
--      mhichwa   12/13/2007 - Added g_plug_att_sub
--      sspadafo  01/21/2008 - Changed type of g_unique_page_id from pls_integer to number to accommodate IDs larger than 2**31-1
--      sspadafo  01/23/2008 - Added overloaded version of trim_sql (Bug 6754391)
--      mhichwa   01/25/2008 - Added exec count global
--      jkallman  02/26/2008 - Removed fetch_item and fetch_value from specification
--      sspadafo  04/03/2008 - Added p_ignore_01..p_ignore_10 parameters to accept (Bug 6912467)
--      jkallman  07/08/2008 - Changed FLOWS_030100 references to FLOWS_040000
--      jkallman  07/31/2008 - Added procedures emit_javascript, add_javascript and g_javascript variable
--      jkallman  08/01/2008 - Added types codeEntry, codeType, global var g_code and procedures add_code and emit_code
--      cbackstr  08/05/2008 - made paint_trailing_javascript callable so it can be used in other packages.
--      mhichwa   09/11/2008 - Added g_http_head_attr global to facilitate apex listner
--      mhichwa   09/12/2008 - Added function get_application_id and get_page_id to optimize views that need to return current app and pg
--      mhichwa   09/12/2008 - Added function get_session_id and function get_security_group_id
--      jkallman  10/02/2008 - Changed FLOWS_040000 references to APEX_040000
--      mhichwa   10/10/2008 - Added g_item_quick_pick_yn
--      mhichwa   11/1/2008  - Added g_application_info
--      sspadafo  12/05/2008 - Added session timeout globals
--      jkallman  12/17/1008 - Change default valut of p_before_region_html in procedure help()
--      jkallman  12/18/2008 - Added vc_assoc_arr, g_deferred_session_val_ids and g_deferred_session_values in support of Bug xxxx
--      sspadafo  12/22/2008 - Changed name of timeout vars to reflect units in seconds
--      jstraub   12/23/2008 - Added g_autocomplete_on_off
--      mhichwa   12/23/2008 - Added g_substitution_item_encrypted to support session state encryption
--      sspadafo  12/31/2008 - Added g_item_encrypted to support session state encryption
--      sspadafo  12/31/2008 - Added g_substitution_item_value_enc, g_item_values_encrypted, g_fetch_encrypted to allow value encryption in URLs
--      sspadafo  01/06/2009 - Added g_disable_browser_caching
--      sspadafo  01/11/2009 - Added g_save_state_before_branch_yn array and g_save_state_before_branch scalar
--      sspadafo  02/04/2009 - Added g_column_values array to take the place of wwv_flow_dml.g_column_values
--      jkallman  02/11/2009 - Added g_dml_* variables from corresponding variables in wwv_flow_dml
--      pawolf    03/09/2009 - Moved wwv_flow.add_code/emit_code to wwv_flow_javascript
--      pawolf    03/13/2009 - Moved deprecated functions/procedures to the bottom of the file
--      pawolf    04/01/2009 - Added custom item types
--      pawolf    04/09/2009 - Added g_validation_displ_location
--      mhichwa   07/07/2009 - Added g_listener and p_listener to communicate with apex listner for actions such as xls parsing
--      sspadafo  07/08/2009 - Changed spelling of new accept parameter p_listner to p_listener
--      pawolf    07/09/2009 - Added add_validation_error
--      jkallman  07/28/2009 - Added globals g_timestamp_format, g_timestamp_tz_format, g_nls_timestamp_format, g_nls_timestamp_tz_format
--      jkallman  08/03/2009 - Added global g_localtimestamp
--      jkallman  08/04/2009 - Renamed global g_localtimestamp to g_systimestamp_gmt
--      pawolf    08/17/2009 - Added parent_plug_id for regions
--      arayner   08/21/2009 - Added globals g_button_show_wait and g_button_wait_message
--      jkallman  08/28/2009 - Add p_time_zone to show
--      jkallman  08/28/2009 - Added global g_auto_time_zone
--      jkallman  08/31/2009 - Added p_time_zone to accept
--      mhichwa   08/31/2009 - Added g_plug_image global to support region images
--      msewtz    09/16/2009 - Added fmap to accept to support mapping tabular form fxx arrays to report columns
--      pawolf    10/23/2009 - Added g_item_is_required
--      pawolf    10/28/2009 - Added g_default_error_display_loc
--      mhichwa   11/05/2009 - Added g_plug_image_attr
--      mhichwa   11/18/2009 - Added  g_icon_is_feedback
--      mhichwa   11/19/2009 - added p_lang to flow.show and accept
--      jstraub   12/10/2009 - Added convert_page_alias_to_id to spec
--      pawolf    12/14/2009 - Added new columns for javascript to wwv_flow_steps
--      msewtz    12/17/2009 - Updated tabular form validations to perform #COLUMN_HEADER# substituion on validation message and include row number
--      mhichwa   12/17/2009 - increased size of g_listener from 100 to 200
--      mhichwa   12/23/2009 - added g_current_region_id global, to allow general access to the current region ID
--      pawolf    12/29/2009 - Added g_item_standard_validations
--      msewtz    01/07/2010 - Added fhdr to accept to include tabular form column headers
--      msewtz    01/07/2010 - Update tabular form validation error messages to use fhdr arrays to substitute column headers
--      pawolf    01/20/2010 - Added escape_on_http_output to wwv_flow_step_items
--      arayner   01/20/2010 - Added g_widget_view_mode global and p_widget_view_mode parameter to show to handle new way of setting IRR view mode
--      pawolf    01/21/2010 - Added g_item_type_features
--      jkallman  01/29/2010 - Added function get_elapsed_time
--      pawolf    02/02/2010 - Added cascading lov columns to wwv_flow_step_items
--      pawolf    02/15/2010 - Added "Execute Validations" feature
--      pawolf    02/18/2010 - Removed LOV_COLUMNS
--      pawolf    02/20/2010 - Added support for process plugins
--      sspadafo  03/02/2010 - Moved g_in_accept boolean from package body (Bug 5765184)
--      jkallman  03/02/2010 - Added g_edition
--      pawolf    03/16/2010 - Removed g_list_managers
--      jkallman  03/18/2010 - Added g_plug_query_parse_override
--      pawolf    04/01/2010 - Changed p_listener to an array
--      cbcho     04/01/2010 - Added g_ws_app_id
--      msewtz    04/08/2010 - Added tabular form globals
--      pawolf    04/17/2010 - Renamed lov_items_to_submit and lov_optimize_refresh to ajax_item_to_submit and ajax_optimize_refresh
--      jkallman  04/22/2010 - Added p_territory to show and accept
--      arayner   04/23/2010 - Added g_item_plain_label global
--      arayner   04/23/2010 - Removed g_button_show_wait and g_button_wait_message globals
--      jkallman  05/18/2010 - Added g_workspace_delete_in_progress (Bug 9652683)
--      jkallman  11/22/2010 - Change APEX_040000 references to APEX_040100
--      pawolf    11/25/2010 - Removed not necessary global variables of branches (Bug 10197557)
--      pawolf    12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--      pawolf    01/04/2011 - Added support for component specific values (feature# 542)
--      arayner   03/03/2011 - Added g_button_static_id global (feature #385)
--      arayner   03/03/2011 - Added g_button_html_id global (feature #385)
--      pawolf    03/08/2011 - Added new error display location column to wwv_flow_step_processing and wwv_flow_processing (feature# 544)
--      msewtz    03/10/2011 - Added g_mobile_mode to page template globals (feature 586)
--      arayner   03/16/2011 - Added g_button_action global and removed g_button_html_id global as this is not required (feature #385)
--      pawolf    02/28/2011 - Added new error handling (feature# 544)
--      pawolf    03/28/2011 - Removed g_plug_display_error_message (feature# 544)
--      pawolf    03/29/2011 - Enhanced procedure description of stop_apex_engine (feature# 639)
--      msewtz    03/30/2011 - Added g_item_before_item_text and g_item_after_item_text to allow for custom HTML when form not rendered as table (feature 586)
--      msewtz    03/30/2011 - Added g_render_form_items_in_table, used while rendering form items to determine whether to put them in table grid  (feature 586)
--      pawolf    04/07/2011 - Added p_fsp_region_id, p_pg_min_row, p_pg_max_rows and p_pg_rows_fetched to show procedure to allow AJAX calls with a "POST" (feature #505)
--      msewtz    04/08/2011 - Removed g_render_form_items_in_table, moved to region templates and region rendering (feature 586)
--      arayner   04/11/2011 - Added g_item_button_action and g_item_button_redirect_url globals (feature 380)
--      cneumuel  04/18/2011 - Made get_home_link_url public
--      pawolf    05/10/2011 - Added "is hot button" (feature 702)
--      jkallman  06/01/2011 - Added g_date_time_format (feature 715)
--      cneumuel  06/17/2011 - Replaced g_disable_browser_caching with g_browser_cache (feature #726)
--      cneumuel  06/17/2011 - Added support for vpd teardown code (feature #616)
--      cneumuel  06/20/2011 - Renamed variables for db session init/cleanup in wwv_flow (feature #616)
--      cneumuel  07/07/2011 - Added g_browser_frame (feature #731)
--      pawolf    08/05/2011 - Added compatibility_mode (bug# 12835127)
--      pawolf    11/30/2011 - Added trim_nl_sp_tab to public interface (bug# 13076709)
--      pawolf    01/24/2011 - Added p_arg_checksums and p_page_checksum to accept (bug 12790216)
--      pawolf    02/21/2012 - Changed APEX_040100 references to APEX_040200
--      pawolf    02/23/2012 - Changed accept to support up to 110 page items
--      pawolf    02/28/2012 - Added placeholder attribute for page items (feature# 837)
--      pawolf    03/02/2012 - Added css_classes for page items and buttons (feature# 815)
--      pawolf    03/05/2012 - Added css_classes for regions (feature# 815)
--      pawolf    03/06/2012 - Added content delivery network (feature# 819)
--      cneumuel  03/07/2012 - Changed type of g_content_delivery_network to varchar2(20) because of dependency problems during install
--      jkallman  03/15/2012 - Changed accept to support up to 200 page items
--      pawolf    03/19/2012 - Changed code to only use new columns in wwv_flow_user_interfaces instead of the old columns in wwv_flow (feature# 827)
--      pawolf    03/22/2012 - Removed get_current_flow_sgid, Renamed convert_flow_alias_to_id to get_application_id and moved convert_page_alias_to_id to wwv_flow_page
--      pawolf    04/05/2012 - Added support for page and popup transitions (feature #826)
--      cneumuel  04/10/2012 - Moved g_deferred_session_val_ids,g_deferred_session_values into wwv_flow_session_state (feature #897)
--      pawolf    04/10/2012 - Added read only on page and region level (feature# 570)
--      vuvarov   04/11/2012 - Added global for branch names (feature #872)
--      pawolf    04/12/2012 - Removed g_is_read_only and g_plug_is_read_only
--      jkallman  05/03/2012 - Added c_max_size_vc2
--      pawolf    05/03/2012 - Added javascript file urls, css file urls and inline css (feature #816 and #817)
--      arayner   05/04/2012 - Added procedure set_ppr_query_session_state, required by new classic report Ajax handling in wwv_render_report3 (feature #599)
--      pawolf    05/07/2012 - Added g_error_page_template
--      pawolf    05/08/2012 - Moved render code of page into wwv_flow_page
--      pawolf    05/08/2012 - Added new g_page_tmpl_* globals (feature# 816 and 817)
--      pawolf    05/11/2012 - Added Item Display Point (feature #278)
--      pawolf    05/14/2012 - Added grid templates (feature #936)
--      arayner   05/15/2012 - Added g_include_legacy_javascript (feature #927)
--      cneumuel  05/16/2012 - Added g_clob_column_values (bug #14079243)
--      pawolf    05/19/2012 - Added g_step_grid_template_id (feature #936)
--      pawolf    05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--      cneumuel             - removed {set,get,clear}_component_values
--      pawolf    05/29/2012 - Changed c_current_compatibility_mode to 4.2
--      pawolf    06/01/2012 - Removed render_form_items_in_table
--      pawolf    06/05/2012 - Continued work on grid layout (feature #936)
--      cneumuel  06/14/2012 - Removed g_remote_addr
--      pawolf    06/15/2012 - Added has_edit_links to wwv_flow_templates
--      pawolf    06/18/2012 - Added APP_EMAIL substitution (feature# 695)
--      pawolf    06/20/2012 - Added global page support (feature #987)
--      vuvarov   07/19/2012 - Added g_nls_sort and g_nls_comp (feature #978)
--      hfarrell  08/16/2012 - Added parameters j and XMLCallDate to procedure show for Flash chart support (bug #14496908)
--      hfarrell  08/16/2012 - Changed paramater XMLCallDate in show from number to varchar2 to be consistent with htmldb_util.flash2
--
--------------------------------------------------------------------------------

----------------------------------------------------------------------------
-- F L O W   G L O B A L    V A R I A B L E S
--

    -------------------------
    -- flow public data types
    --
    type flow_vc_arr is table of varchar2(32767) index by binary_integer;
    empty_flow_vc_arr flow_vc_arr;
    --
    empty_vc_arr wwv_flow_global.vc_arr2;
    type vc_long_arr is table of varchar2(32767) index by binary_integer;

    empty_vc_long_arr vc_long_arr;

    type clob_arr      is table of clob index by binary_integer;
    type vc_assoc_arr  is table of varchar2(32767) index by varchar2(255);
    type num_assoc_arr is table of number index by varchar2(255);

    type t_component is record (
        type varchar2(30), /* APEX dictionary view name of the component where an error occurred. For example APEX_APPLICATION_PAGE_PROC */
        id   number,       /* Internal component id which triggered the error. The id is always the id of the primary application  */
        name varchar2(255) /* Name of the component which triggered the error like the process name */
        );

    -------------------------------------
    -- Globals for generic and public use
    --
    g_http_head_attr               varchar2(512); -- communicates extra header information for apex listner 4.0
    g_image_prefix                 varchar2(255) := wwv_flow_global.g_image_prefix;
    g_company_images               varchar2(255);
    g_flow_images                  varchar2(255);
    g_id                           number;
    g_notification                 varchar2(32767) := null;
    g_global_notification          varchar2(4000) := null;
    g_value                        varchar2(32767) := null;
    g_sysdate                      date;
    g_systimestamp_gmt             timestamp;
    g_boolean                      boolean := false;
    g_excel_format                 boolean := false;
    g_error_message_override       varchar2(4000) := null; -- if set programmatically overrides process error messages
    g_unique_page_id               number;
    g_form_painted                 boolean := false;
    g_print_success_message        varchar2(4000) := null;
    g_return_key_1                 varchar2(4000) := null;  -- used to return keys from dml operations
    g_return_key_2                 varchar2(4000) := null;  -- used to return keys from dml operations
    g_base_href                    varchar2(4000) := null;  -- BASE HREF for APEX references
    g_exec_count                   pls_integer := 0;
    g_edition                      varchar2(30)   := null;

    ---------------------
    -- translated strings
    g_nls_edit                     varchar2(255) := 'Edit';

    ----------------------------------------------------
    -- Optimization and performance feedback information
    --
    g_use_cached_substitution_val  boolean := false;
    g_form_count                   pls_integer := 0;
    g_package_instantiated         number;
    g_ok_to_cache_sql              boolean := false;
    g_page_text_generated          boolean := false;
    g_import_in_progress           boolean := false;
    g_workspace_delete_in_progress boolean := false;
    g_cached_region_count          pls_integer := 0;

    -----------------------------------
    -- Debug and error page information
    --
    g_debug                        boolean := false;        -- identifies if flow is running in debug mode
    g_unrecoverable_error          boolean := false;        -- NOTE: This global variable is deprecated,
                                                            -- use apex_application.stop_apex_engine instead!
    g_last_query_text              varchar2(32767) := null; -- if set is the last user sql query executed
    g_in_accept                    boolean := false;        -- set by accept procedure so other packages can take action based on show or accept processing

    -----------------------------------------------------
    -- code to run after authentication and at the end of show/accept processing
    --
    g_db_session_init_code               varchar2(4000);
    g_db_session_cleanup_code            varchar2(4000);

    ----------------------------------------
    -- Authentication and login, logout info
    --
    g_authentication               varchar2(255) := null;
    g_current_user                 varchar2(255) := null;
    g_user                         varchar2(255) := null; -- corresponds to username used to login
    g_user_id                      number        := null; -- alternate primary key that identifies a user by number
    g_user_known_as                varchar2(255) := null;
    g_flow_schema_owner            constant varchar2(30)  := 'APEX_040200'; -- the owner of Oracle Application Express
    g_login_url                    varchar2(255) := null;
    g_logout_url                   varchar2(4000) := null;
    g_logo_image                   varchar2(500) := null;
    g_logo_image_attributes        varchar2(4000) := null;
    g_cookie_session_id            number := null;
    g_security_scheme              varchar2(255) := null;
    g_ex_context_authentication    boolean := false;
    g_use_zero_sid                 boolean := false;
    g_public_page_ids              wwv_flow_global.vc_arr2;
    g_public_page_aliases          wwv_flow_global.vc_arr2;
    g_public_auth_scheme           boolean := false;

    -----------------------------
    -- Optimistic Locking Globals
    --
    g_md5_checksum                 varchar2(255) := '0';

    ------------------
    -- spatial globals
    --
    g_map1                         wwv_flow_global.vc_arr2;
    g_map2                         wwv_flow_global.vc_arr2;
    g_map3                         wwv_flow_global.vc_arr2;

    ---------------------
    -- Pagination Globals
    --
    g_rownum                       pls_integer := 0;
    g_flow_current_min_row         pls_integer := 1;
    g_flow_current_max_rows        pls_integer := 10;
    g_flow_current_rows_fetched    pls_integer := 0;
    g_flow_total_row_count         pls_integer := 0;
    g_pagination_buttons_painted   boolean := false;

    ---------------------
    -- Tabular Form Globals
    --
    g_item_idx_offset              number := 0;
    g_rownum_offset                number := 0;
    g_fmap                         num_assoc_arr;
    g_fhdr                         wwv_flow_global.vc_arr2;

    ---------------------
    -- Sorting Globals
    --
    g_fsp_region_id                number := 0;

    ----------------------------
    -- Translation (NLS) Globals
    --
    g_flow_language                varchar2(255) := null;  -- language flow written in (primary language)
    g_flow_language_derived_from   varchar2(30);           -- how the language preference of the user is determined
    g_browser_language             varchar2(255) := null;  -- users language preference (set using lang_derived_from method)
    g_browser_version              varchar2(255) := null;  -- browser version
    g_translated_flow_id           number  := null;        -- flow ID for translated flow
    g_translated_page_id           number  := null;        -- page ID for translated flow, e.g. page_id.trans_flow_id
    g_translated_global_page_id    number;                 -- global page id for translated flow. e.g. page_id.trans_flow_id
    g_nls_date_format              varchar2(255) := null;  -- current database date format from nls_session_parameters table.
    g_nls_timestamp_format         varchar2(255) := null;  -- current database timestamp with time zone format from nls_session_parameters table.
    g_nls_timestamp_tz_format      varchar2(255) := null;  -- current database timestamp with time zone format from nls_session_parameters table.
    g_nls_decimal_separator        varchar2(10)  := null;  -- current database session decimal separator (derived from NLS_NUMERIC_CHARACTERS)
    g_nls_group_separator          varchar2(10)  := null;  -- current database session numeric group separator (derived from NLS_NUMERIC_CHARACTERS)
    g_nls_sort                     varchar2(255) := null;  -- NLS_SORT value for the current application
    g_nls_comp                     varchar2(255) := null;  -- NLS_COMP value for the current application


    -----------------
    -- Fetch Counters
    --
    g_sessionCnt                   pls_integer := 0;      --
    g_roleCnt                      pls_integer := 0;      --
    g_flowCnt                      pls_integer := 0;      -- flow info found, 1 = yes, 0 = no
    g_stepCnt                      pls_integer := 0;      -- pages found
    g_itemCnt                      pls_integer := 0;      -- page items count
    g_processCnt                   pls_integer := 0;      -- page and flow processes count
    g_plugCnt                      pls_integer := 0;      -- region count
    g_buttonCnt                    pls_integer := 0;      -- page button count
    g_iconbarCnt                   pls_integer := 0;      -- nav bar icon count
    g_tabCnt                       pls_integer := 0;      -- standard tab count
    g_branchCnt                    pls_integer := 0;      -- branch count
    g_computationCnt               pls_integer := 0;      -- computations count
    g_validationCnt                pls_integer := 0;      -- validations count
    g_list_mgr_cnt                 pls_integer := 0;      --


    ------------
    -- Role Info
    --
    g_required_roles               wwv_flow_global.vc_arr2;

    ----------------------
    -- Session Information
    --
    g_new_instance                 boolean := false;
    g_session_cookie               varchar2(255) := null;

    -------------------
    -- Websheet Information
    --
    g_ws_app_id                   number;                   -- wwv_flow_ws_application pk

    -------------------
    -- Flow Information
    --
    g_flow_id                      number;                  -- flow pk
    g_flow_theme_id                number;                  -- current theme for flow
    g_flow_alias                   varchar2(255) := null;   -- flow alphanumeric alias
    g_flow_step_id                 number;                  -- page pk
    g_instance                     number;                  -- flow session
    g_edit_cookie_session_id       number := null;          -- flow builder session
    g_page_submitted               number := null;          -- set when page posted
    g_exact_substitutions_only     varchar2(1);             -- Y or N
    g_arg_names                    wwv_flow_global.vc_arr2; -- array of item names
    g_arg_values                   wwv_flow_global.vc_arr2; -- array of item values
    g_flow_name                    varchar2(255);           -- name of flow
    g_flow_charset                 varchar2(255);           -- used in html header
    g_date_format                  varchar2(255);           -- Application default date format
    g_date_time_format             varchar2(255);           -- Application date time format
    g_timestamp_format             varchar2(255);           -- Application default timestamp format
    g_timestamp_tz_format          varchar2(255);           -- Application default timestamp with time zone format
    g_flow_owner                   varchar2(30);            -- for secure use wwv_flow_security.g_parse_as_schema
    g_home_link                    varchar2(4000);          -- home page for this flow
    --g_box_width                    varchar2(30);            -- obsolete ?
    g_default_page_template        varchar2(255);           --
    g_printer_friendly_template    varchar2(255);           --
    g_error_template               varchar2(255);           --
    g_webdb_logging                varchar2(30);            -- YES (insert entries into a log table), NO (do not do inserts)

    g_application_info             varchar2(4000);          -- apex 4.0 log this text in the apex log

    g_public_url_prefix            varchar2(255);           --
    g_public_user                  varchar2(255);           -- identifies public user name
    g_dbauth_url_prefix            varchar2(255);           --
    g_proxy_server                 varchar2(255);           -- used for some regions of type url and web services
    g_media_type                   varchar2(255);           -- Media Type used in Content-Type HTTP header
    g_flow_version                 varchar2(255);           --
    g_flow_status                  varchar2(30);            -- controls availability of flow
    g_build_status                 varchar2(30);            --
    g_rejoin_existing_sessions     boolean := true;         --
    g_request                      varchar2(4000);          -- method of submitting page
    g_sqlerrm                      varchar2(4000) := null;  -- unexpected sql error message to be logged into log tables
    g_err_comp_type                varchar2(255) := null;   -- sqlerrm_component_type identifies what type of component caused the error
    g_err_comp_name                varchar2(255) := null;   -- sqlerrm_component_name identifies the name of the component that raised the error
    g_cache_mode                   varchar2(1) := 'D';      -- R = rendered from cache, C = Cache Created, D = Dynamic
    g_auto_time_zone               varchar2(1) := null;     -- automatic time zone (Y or N)
    g_default_error_display_loc    varchar2(40);            -- default error display location for validations
    g_current_region_id            number;                  -- currently active, or last active region id
    g_javascript_file_urls         varchar2(4000);          -- application javascript file URLs #APPLICATION_JAVASCRIPT_CODE#
    g_content_delivery_network     varchar2(20);            -- content delivery network which should be used
    g_include_legacy_javascript    boolean;                 -- should the legacy javascript functions be included?
    g_email_from                   varchar2(255);
    g_global_page_id               number;

    ------------
    -- shortcuts
    --
    g_shortcut_name                wwv_flow_global.vc_arr2;
    g_shortcut_id                  wwv_flow_global.vc_arr2;

    -------------------
    -- Page Information
    --
    g_popup_filter                 varchar2(4000) := null;  --
    g_printer_friendly             boolean := false;        -- if true use printer friendly page template
    g_first_field_displayable      boolean := false;        --
    g_spell_check_required         boolean := false;        --
    g_step_name                    varchar2(255);           -- page name
    g_step_user_interface_id       number;                  -- page user interface id
    g_step_tab_set                 varchar2(255);           -- page current tab set
    g_step_title                   varchar2(255);           -- page title typically becomes html page title
    g_step_sub_title               varchar2(255);           -- referencable via a template
    g_step_sub_title_type          varchar2(30);            -- describes above
    g_step_media_type              varchar2(255);           -- Media Type used in Content-Type HTTP header
    g_step_first_item              varchar2(255);           -- name of item to put cursor in
    g_step_welcome_text            varchar2(4000);          -- wwv_flow_steps.welcome_text displayed after page template header
    g_step_box_welcome_text        varchar2(4000);          -- wwv_flow_steps.box_welcome_text displayed before #BOX_BODY# in page template body
    --g_step_box_footer_text         varchar2(4000);          -- obsolete ?
    g_step_footer_text             varchar2(4000);          -- wwv_flow_steps.footer_text displayed before showing page template footer
    g_step_template                varchar2(255);           -- page template
    g_step_required_role           varchar2(255);           -- priv required to view page
    g_allow_duplicate_submissions  varchar2(3);             -- Y or N
    g_head                         varchar2(32767);         -- page header for CSS, etc. #HEAD#
    g_page_onload                  varchar2(32767);         -- allows control over #ONLOAD# in page template
    g_step_javascript_file_urls    varchar2(4000);          -- page specific javascript file URLs #PAGE_JAVASCRIPT#
    g_javascript_code              varchar2(32767);         -- page specific javascript #PAGE_JAVASCRIPT#
    g_javascript_code_onload       varchar2(32767);         -- javascript code execute onload
    g_step_css_file_urls           varchar2(4000);          -- page specific CSS file URLs #PAGE_CSS#
    g_step_inline_css              varchar2(32767);         -- page specific inline CSS #PAGE_CSS#
    g_autocomplete_on_off          varchar2(3);             -- should autocomplete="off" be included in form tag
    g_cache                        varchar2(1);             -- Y or N, Y = page can be cached
    g_include_apex_css_js_yn       varchar2(1);             -- Y is default, N does not include standard apex css and js files for mobile devices
    g_browser_cache                boolean;                 -- If false (the default) this sends the cache-control: no-store http response in wwv_flow.show
    g_browser_frame                varchar2(1);             -- If D, send X-Frame-Options:DENY header, if S, send X-Frame-Options:SAMEORIGIN header
    g_compatibility_mode           number;                  -- Compatibility Mode which contains a version number is used to determine how the runtime engine should behave when the application is executed
    g_page_transition              varchar2(20);            -- transition which is used for navigating to a new page or submitting the page
    g_popup_transition             varchar2(20);            -- transition which is used to open a popup
    g_read_only_when_type          varchar2(255);
    g_read_only_when               varchar2(4000);
    g_read_only_when2              varchar2(4000);

    -- Do only use this constant for the parameter p_compatibility_mode in wwv_flow_api.create_flow!
    -- It's a string and would result in NLS errors if you compare it against g_compatibility_mode
    c_current_compatibility_mode   constant varchar2(3) := '4.2';

    -------------------
    -- Page Button info
    --
    g_button_id                  wwv_flow_global.n_arr;     -- pk of page button
    g_button_name                wwv_flow_global.vc_arr2;   -- becomes request when button pressed
    g_button_plug_id             wwv_flow_global.vc_arr2;   -- region in which button is displayed
    g_button_image               wwv_flow_global.vc_arr2;   -- optional image name
    g_button_is_hot              wwv_flow_global.vc_arr2;   -- Y/N flag if it's a hot button
    g_button_image_alt           wwv_flow_global.vc_arr2;   -- button text
    g_button_position            wwv_flow_global.vc_arr2;   -- display position within region
    g_button_alignment           wwv_flow_global.vc_arr2;   -- used for some positions
    g_button_css_classes         wwv_flow_global.vc_arr2;   -- additional css classes definition
    g_button_redirect_url        wwv_flow_global.vc_arr2;   -- redirect to this url, do not submit
    g_button_action              wwv_flow_global.vc_arr2;   -- the action of the button ('SUBMIT', 'REDIRECT_PAGE', 'REDIRECT_URL' or 'DEFINED_BY_DA')
    g_button_condition           wwv_flow_global.vc_arr2;   -- conditional attributes
    g_button_condition2          wwv_flow_global.vc_arr2;   -- conditional attributes
    g_button_condition_type      wwv_flow_global.vc_arr2;   -- conditional attributes
    g_button_image_attributes    wwv_flow_global.vc_arr2;   -- optional html image attributes
    g_button_cattributes         wwv_flow_global.vc_arr2;   -- optional html button attributes
    g_button_security_scheme     wwv_flow_global.vc_arr2;   -- security
    g_default_button_position    varchar2(30) default null; --
    g_button_static_id           wwv_flow_global.vc_arr2;   -- calculated button HTML ID

    -----------------
    -- Navigation Bar
    --
    g_icon_id                    wwv_flow_global.n_arr;       -- pk of nav bar icon
    g_icon_image                 wwv_flow_global.vc_arr2;     -- name of image
    g_icon_subtext               wwv_flow_global.vc_arr2;     -- entry label
    g_icon_is_feedback           wwv_flow_global.n_arr;       -- 1 = is feedback, 0 = not feedback
    g_icon_target                wwv_flow_global.vc_arr2;     --
    g_icon_image_alt             wwv_flow_global.vc_arr2;     --
    g_icon_height                wwv_flow_global.vc_arr2;     --
    g_icon_width                 wwv_flow_global.vc_arr2;     --
    g_icon_free_text             wwv_flow_global.vc_arr2;     --
    g_icon_bar_disp_cond         wwv_flow_global.vc_arr2;     --
    g_icon_bar_disp_cond_type    wwv_flow_global.vc_arr2;     --
    g_icon_bar_flow_cond_instr   wwv_flow_global.vc_arr2;     --
    g_icon_begins_on_new_line    wwv_flow_global.vc_arr2;     --
    g_icon_colspan               wwv_flow_global.vc_arr2;     --
    g_icon_onclick               wwv_flow_global.vc_arr2;     --
    g_icon_security_scheme       wwv_flow_global.vc_arr2;     --

    --------------------------
    -- tab and parent tab info
    --
    g_tab_id                     wwv_flow_global.n_arr;       -- std tab: pk
    g_tab_set                    wwv_flow_global.vc_arr2;     -- std tab: name of tab "collection"
    g_tab_step                   wwv_flow_global.vc_arr2;     -- std tab: page
    g_tab_name                   wwv_flow_global.vc_arr2;     -- std tab: name of tab, not the display text
    g_tab_image                  wwv_flow_global.vc_arr2;     -- std tab: optional image name
    g_tab_non_current_image      wwv_flow_global.vc_arr2;     -- std tab: optional image name
    g_tab_image_attributes       wwv_flow_global.vc_arr2;     -- std tab: attributes for images
    g_tab_text                   wwv_flow_global.vc_arr2;     -- std tab: display text of tab
    g_tab_target                 wwv_flow_global.vc_arr2;     --
    g_tab_parent_id              wwv_flow_global.n_arr;       -- parent tab pk
    g_tab_parent_tabset          wwv_flow_global.vc_arr2;     -- parent tab tabset
    g_tab_parent_display_cond    wwv_flow_global.vc_arr2;     -- parent tab display condition
    g_tab_parent_display_cond2   wwv_flow_global.vc_arr2;     -- parent tab display condition2
    g_tab_parent_display_cond_ty wwv_flow_global.vc_arr2;     -- parent tab display condition type
    g_tab_parent_security_scheme wwv_flow_global.vc_arr2;     -- parent tab security scheme
    g_tab_current_on_tabset      wwv_flow_global.vc_arr2;     -- parent tab current for this standard tab set
    g_tab_also_current_for_pages wwv_flow_global.vc_arr2;     -- std tab: also current for comma delimited page list
    g_tab_plsql_condition        wwv_flow_global.vc_arr2;     --
    g_tab_plsql_condition_type   wwv_flow_global.vc_arr2;     --
    g_tab_disp_cond_text         wwv_flow_global.vc_arr2;     --
    g_tab_security_scheme        wwv_flow_global.vc_arr2;     -- sec scheme
    g_last_tab_pressed           varchar2(255);               -- when branching to a tab, this global is set
    g_current_parent_tab_text    varchar2(255) := null;       -- text of the current parent tab set

    ----------------------------
    -- page template information
    --
    g_current_tab                varchar2(4000)  default null;  --
    g_current_tab_font_attr      varchar2(255)   default null;  --
    g_non_current_tab            varchar2(4000)  default null;  --
    g_non_current_tab_font_attr  varchar2(255)   default null;  --
    g_current_image_tab          varchar2(4000)  default null;  --
    g_non_current_image_tab      varchar2(4000)  default null;  --
    g_top_current_tab            varchar2(4000)  default null;  --
    g_top_current_tab_font_attr  varchar2(255)   default null;  --
    g_top_non_curr_tab           varchar2(4000)  default null;  --
    g_top_non_curr_tab_font_attr varchar2(255)   default null;  --
    g_header_template            varchar2(32767) default null;  -- page template header
    g_box                        varchar2(32767) default null;  -- page template body
    g_footer_template            varchar2(32767) default null;  -- page template footer
    g_footer_len                 pls_integer     default null;  --
    g_footer_end                 varchar2(32767) default null;  --
    g_end_tag_printed            boolean         default true;  -- used to position edit links
    g_template_navigation_bar    varchar2(4000)  default null;  --
    g_template_navbar_entry      varchar2(4000)  default null;  -- defines a navigation bar occurance
    g_template_success_message   varchar2(4000)  default null;  -- success message page sub template
    g_body_title                 varchar2(4000)  default null;  --
    g_notification_message       varchar2(32767) default null;  -- notification message page sub template
    g_error_page_template        varchar2(32767) default null;  -- error page template
    g_mobile_mode                boolean         default false; -- render page in mobile mode when using mobile page template

    g_heading_bgcolor            varchar2(255)   default null;  -- obsolete ?
    g_table_bgcolor              varchar2(255)   default null;  -- obsolete ?
    g_table_cattributes          varchar2(255)   default null;  -- obsolete ?
    g_region_table_cattributes   varchar2(255)   default null;  -- obsolete ?
    g_font_size                  varchar2(255)   default null;  -- obsolete ?
    g_font_face                  varchar2(255)   default null;  -- obsolete ?
    g_page_tmpl_css_file_urls    varchar2(4000);
    g_page_tmpl_inline_css       varchar2(32767);
    g_page_tmpl_js_file_urls     varchar2(4000);
    g_page_tmpl_js_code          varchar2(32767);
    g_page_tmpl_js_code_onload   varchar2(32767);
    g_page_tmpl_has_edit_links   boolean         default true;

    ------------
    -- item info
    --
    g_item_id                   wwv_flow_global.vc_arr2;    -- page item pk
    g_item_name                 wwv_flow_global.vc_arr2;
    g_item_is_persistent        wwv_flow_global.vc_arr2;
    g_item_is_required          wwv_flow_global.vc_arr2;
    g_item_standard_validations wwv_flow_global.vc_arr2;
    g_item_sequence             wwv_flow_global.vc_arr2;
    g_item_plug_id              wwv_flow_global.vc_arr2;
    g_item_default              wwv_flow_global.vc_arr2;
    g_item_default_type         wwv_flow_global.vc_arr2;
    g_item_prompt               wwv_flow_global.vc_arr2;
    g_item_plain_label          wwv_flow_global.vc_arr2;
    g_item_placeholder          wwv_flow_global.vc_arr2;
    g_item_before_item_text     wwv_flow_global.vc_arr2;
    g_item_after_item_text      wwv_flow_global.vc_arr2;
    g_item_pre_element_text     wwv_flow_global.vc_arr2;
    g_item_post_element_text    wwv_flow_global.vc_arr2;
    g_item_format_mask          wwv_flow_global.vc_arr2;
    g_item_source               wwv_flow_global.vc_arr2;
    g_item_source_type          wwv_flow_global.vc_arr2;
    g_item_source_post_computation wwv_flow_global.vc_arr2;
    g_item_display_as           wwv_flow_global.vc_arr2;
    g_item_lov                  wwv_flow_global.vc_arr2;
    g_item_lov_display_extra    wwv_flow_global.vc_arr2;
    g_item_lov_display_null     wwv_flow_global.vc_arr2;
    g_item_lov_null_text        wwv_flow_global.vc_arr2;
    g_item_lov_null_value       wwv_flow_global.vc_arr2;
    g_item_lov_translated       wwv_flow_global.vc_arr2;
    g_item_lov_cascade_parent_item wwv_flow_global.vc_arr2;
    g_item_ajax_items_to_submit  wwv_flow_global.vc_arr2;
    g_item_ajax_optimize_refresh wwv_flow_global.vc_arr2;
    g_item_csize                wwv_flow_global.vc_arr2;
    g_item_cmaxlength           wwv_flow_global.vc_arr2;
    g_item_cHeight              wwv_flow_global.vc_arr2;
    g_item_cattributes          wwv_flow_global.vc_arr2;
    g_item_cattributes_element  wwv_flow_global.vc_arr2;
    g_item_tag_css_classes      wwv_flow_global.vc_arr2;
    g_item_tag_attributes       wwv_flow_global.vc_arr2;
    g_item_tag_attributes2      wwv_flow_global.vc_arr2;
    g_item_display_when         wwv_flow_global.vc_arr2;
    g_item_display_when2        wwv_flow_global.vc_arr2;
    g_item_display_when_type    wwv_flow_global.vc_arr2;
    g_item_use_cache_before_def wwv_flow_global.vc_arr2;
    g_item_new_grid             wwv_flow_global.vc_arr2;
    g_item_begin_on_new_line    wwv_flow_global.vc_arr2;
    g_item_begin_on_new_field   wwv_flow_global.vc_arr2;
    g_item_colspan              wwv_flow_global.vc_arr2;
    g_item_rowspan              wwv_flow_global.vc_arr2;
    g_item_grid_column          wwv_flow_global.vc_arr2;
    g_item_label_alignment      wwv_flow_global.vc_arr2;
    g_item_field_alignment      wwv_flow_global.vc_arr2;
    g_item_security_scheme      wwv_flow_global.vc_arr2;
    g_item_button_image         wwv_flow_global.vc_arr2;
    g_item_button_image_attr    wwv_flow_global.vc_arr2;
    g_item_read_only_when       wwv_flow_global.vc_arr2;
    g_item_read_only_when2      wwv_flow_global.vc_arr2;
    g_item_read_only_when_type  wwv_flow_global.vc_arr2;
    g_item_read_only_disp_attr  wwv_flow_global.vc_arr2;
    g_item_escape_on_http_input wwv_flow_global.vc_arr2;
    g_item_escape_on_http_output wwv_flow_global.vc_arr2;
    g_item_encrypted            wwv_flow_global.vc_arr2;
    g_item_quick_pick_yn        wwv_flow_global.vc_arr2; -- 4.0
    g_item_attribute_01         wwv_flow_global.vc_arr2;
    g_item_attribute_02         wwv_flow_global.vc_arr2;
    g_item_attribute_03         wwv_flow_global.vc_arr2;
    g_item_attribute_04         wwv_flow_global.vc_arr2;
    g_item_attribute_05         wwv_flow_global.vc_arr2;
    g_item_attribute_06         wwv_flow_global.vc_arr2;
    g_item_attribute_07         wwv_flow_global.vc_arr2;
    g_item_attribute_08         wwv_flow_global.vc_arr2;
    g_item_attribute_09         wwv_flow_global.vc_arr2;
    g_item_attribute_10         wwv_flow_global.vc_arr2;
    g_item_attribute_11         wwv_flow_global.vc_arr2;
    g_item_attribute_12         wwv_flow_global.vc_arr2;
    g_item_attribute_13         wwv_flow_global.vc_arr2;
    g_item_attribute_14         wwv_flow_global.vc_arr2;
    g_item_attribute_15         wwv_flow_global.vc_arr2;
    g_item_button_action        wwv_flow_global.vc_arr2;
    g_item_button_redirect_url  wwv_flow_global.vc_arr2;
    g_item_button_is_hot        wwv_flow_global.vc_arr2;
    g_item_is_ok_to_display     wwv_flow_global.b_arr;

    g_item_type_features        wwv_flow_global.vc_map; -- indexed by item type name

    --------------
    -- branch info
    --
    g_branch_has_occured           boolean := false;

    g_branch_id                    wwv_flow_global.vc_arr2;
    g_branch_point                 wwv_flow_global.vc_arr2;
    g_branch_name                  wwv_flow_global.vc_arr2;
    g_branch_action                wwv_flow_global.vc_arr2;
    g_branch_type                  wwv_flow_global.vc_arr2;
    g_branch_when_button_id        wwv_flow_global.vc_arr2;
    g_branch_condition             wwv_flow_global.vc_arr2;
    g_branch_condition_type        wwv_flow_global.vc_arr2;
    g_branch_condition_text        wwv_flow_global.vc_arr2;
    g_branch_security_scheme       wwv_flow_global.vc_arr2;
    g_in_process                   boolean := false;
    g_save_state_before_branch_yn  wwv_flow_global.vc_arr2;

    ---------------
    -- process info
    --
    g_process_id                   wwv_flow_global.vc_arr2;
    g_process_name                 wwv_flow_global.vc_arr2;
    g_process_sql                  wwv_flow_global.vc_arr2;
    g_process_sql_clob             clob_arr;
    g_process_point                wwv_flow_global.vc_arr2;
    g_process_type                 wwv_flow_global.vc_arr2;
    g_process_level                wwv_flow_global.vc_arr2;
    g_process_error_message        wwv_flow_global.vc_arr2;
    g_process_error_display_loc    wwv_flow_global.vc_arr2;
    g_process_success_message      wwv_flow_global.vc_arr2;
    g_process_when_button_id       wwv_flow_global.vc_arr2;
    g_process_when                 wwv_flow_global.vc_arr2;
    g_process_when2                wwv_flow_global.vc_arr2;
    g_process_when_type            wwv_flow_global.vc_arr2;
    g_process_security_scheme      wwv_flow_global.vc_arr2;
    g_job                          pls_integer;
    g_process_is_stateful_y_n      wwv_flow_global.vc_arr2;
    g_process_item_name            wwv_flow_global.vc_arr2;
    g_proc_return_key_into_item1   wwv_flow_global.vc_arr2;
    g_proc_return_key_into_item2   wwv_flow_global.vc_arr2;
    g_proc_runtime_where_clause    wwv_flow_global.vc_arr2;
    g_process_region_id            wwv_flow_global.vc_arr2;
    g_process_only_changed_rows    wwv_flow_global.vc_arr2;
    g_process_exec_cond_each_row   wwv_flow_global.vc_arr2;
    g_process_attribute_01         wwv_flow_global.vc_arr2;
    g_process_attribute_02         wwv_flow_global.vc_arr2;
    g_process_attribute_03         wwv_flow_global.vc_arr2;
    g_process_attribute_04         wwv_flow_global.vc_arr2;
    g_process_attribute_05         wwv_flow_global.vc_arr2;
    g_process_attribute_06         wwv_flow_global.vc_arr2;
    g_process_attribute_07         wwv_flow_global.vc_arr2;
    g_process_attribute_08         wwv_flow_global.vc_arr2;
    g_process_attribute_09         wwv_flow_global.vc_arr2;
    g_process_attribute_10         wwv_flow_global.vc_arr2;
    g_process_attribute_11         wwv_flow_global.vc_arr2;
    g_process_attribute_12         wwv_flow_global.vc_arr2;
    g_process_attribute_13         wwv_flow_global.vc_arr2;
    g_process_attribute_14         wwv_flow_global.vc_arr2;
    g_process_attribute_15         wwv_flow_global.vc_arr2;

    ---------------------
    -- region (plug) info
    --
    g_plug_id                      wwv_flow_global.vc_arr2;
    g_plug_name                    wwv_flow_global.vc_arr2;
    g_plug_parent_plug_id          wwv_flow_global.vc_arr2;
    g_plug_template                wwv_flow_global.vc_arr2;
    g_plug_new_grid                wwv_flow_global.vc_arr2;
    g_plug_new_grid_row            wwv_flow_global.vc_arr2;
    g_plug_new_grid_column         wwv_flow_global.vc_arr2;
    g_plug_display_column          wwv_flow_global.vc_arr2;
    g_plug_grid_column_span        wwv_flow_global.vc_arr2;
    g_plug_display_point           wwv_flow_global.vc_arr2;
    g_plug_item_display_point      wwv_flow_global.vc_arr2;
    g_plug_source                  wwv_flow_global.vc_arr2;
    g_plug_source_type             wwv_flow_global.vc_arr2;
    g_plug_list_template_id        wwv_flow_global.vc_arr2;
    g_plug_header                  wwv_flow_global.vc_arr2;
    g_plug_footer                  wwv_flow_global.vc_arr2;
    g_plug_required_role           wwv_flow_global.vc_arr2;
    g_plug_display_condition_type  wwv_flow_global.vc_arr2;
    g_plug_display_when_condition  wwv_flow_global.vc_arr2;
    g_plug_display_when_cond2      wwv_flow_global.vc_arr2;
    g_plug_column_width            wwv_flow_global.vc_arr2;
    g_plug_customized              wwv_flow_global.vc_arr2;
    g_plug_no_data_found           wwv_flow_global.vc_arr2;
    g_plug_query_more_data         wwv_flow_global.vc_arr2;
    g_plug_query_parse_override    wwv_flow_global.vc_arr2;
    g_plug_caching                 wwv_flow_global.vc_arr2;
    g_plug_position                varchar2(255)  := null;
    g_cached_regions               varchar2(4000) := null;
    g_plug_static_id               wwv_flow_global.vc_arr2;
    g_plug_css_classes             wwv_flow_global.vc_arr2;
    g_plug_att_sub                 wwv_flow_global.vc_arr2;
    g_plug_image                   wwv_flow_global.vc_arr2;
    g_plug_image_attr              wwv_flow_global.vc_arr2;
    g_plug_read_only_when_type     wwv_flow_global.vc_arr2;
    g_plug_read_only_when          wwv_flow_global.vc_arr2;
    g_plug_read_only_when2         wwv_flow_global.vc_arr2;
    g_plug_is_ok_to_display        wwv_flow_global.b_arr;

    -------------------
    -- computation info
    --
    g_computation_id              wwv_flow_global.vc_arr2;
    g_computation_type            wwv_flow_global.vc_arr2;
    g_computation_level           wwv_flow_global.vc_arr2;
    g_computation_item            wwv_flow_global.vc_arr2;
    g_computation_point           wwv_flow_global.vc_arr2;
    g_computation_processed       wwv_flow_global.vc_arr2;
    g_computation                 wwv_flow_global.vc_arr2;
    g_computation_result_vc       varchar2(32767);
    g_computation_result_vc_arr   wwv_flow_global.vc_arr2;
    g_computation_result_num      number;
    g_compute_when                wwv_flow_global.vc_arr2;
    g_compute_when_text           wwv_flow_global.vc_arr2;
    g_compute_when_type           wwv_flow_global.vc_arr2;
    g_compute_security_scheme     wwv_flow_global.vc_arr2;

    --------------
    -- Validations
    --
    g_column_ids_in_error         wwv_flow_global.vc_arr2;
    -- if g_execute_validations is programmatically set before the validations
    -- are evaluated then this flag will determin if built-in validations and the
    -- validations defined for the page are evaluated. If set to NULL, the
    -- "Execute Validations" flag for buttons and select lists/radio groups will
    -- be evaluated
    g_execute_validations         boolean default null;

    --------------------------------------------
    -- Global input values for updatable reports
    --
    g_f01             wwv_flow_global.vc_arr2;
    g_f02             wwv_flow_global.vc_arr2;
    g_f03             wwv_flow_global.vc_arr2;
    g_f04             wwv_flow_global.vc_arr2;
    g_f05             wwv_flow_global.vc_arr2;
    g_f06             wwv_flow_global.vc_arr2;
    g_f07             wwv_flow_global.vc_arr2;
    g_f08             wwv_flow_global.vc_arr2;
    g_f09             wwv_flow_global.vc_arr2;
    g_f10             wwv_flow_global.vc_arr2;
    g_f11             wwv_flow_global.vc_arr2;
    g_f12             wwv_flow_global.vc_arr2;
    g_f13             wwv_flow_global.vc_arr2;
    g_f14             wwv_flow_global.vc_arr2;
    g_f15             wwv_flow_global.vc_arr2;
    g_f16             wwv_flow_global.vc_arr2;
    g_f17             wwv_flow_global.vc_arr2;
    g_f18             wwv_flow_global.vc_arr2;
    g_f19             wwv_flow_global.vc_arr2;
    g_f20             wwv_flow_global.vc_arr2;
    g_f21             wwv_flow_global.vc_arr2;
    g_f22             wwv_flow_global.vc_arr2;
    g_f23             wwv_flow_global.vc_arr2;
    g_f24             wwv_flow_global.vc_arr2;
    g_f25             wwv_flow_global.vc_arr2;
    g_f26             wwv_flow_global.vc_arr2;
    g_f27             wwv_flow_global.vc_arr2;
    g_f28             wwv_flow_global.vc_arr2;
    g_f29             wwv_flow_global.vc_arr2;
    g_f30             wwv_flow_global.vc_arr2;
    g_f31             wwv_flow_global.vc_arr2;
    g_f32             wwv_flow_global.vc_arr2;
    g_f33             wwv_flow_global.vc_arr2;
    g_f34             wwv_flow_global.vc_arr2;
    g_f35             wwv_flow_global.vc_arr2;
    g_f36             wwv_flow_global.vc_arr2;
    g_f37             wwv_flow_global.vc_arr2;
    g_f38             wwv_flow_global.vc_arr2;
    g_f39             wwv_flow_global.vc_arr2;
    g_f40             wwv_flow_global.vc_arr2;
    g_f41             wwv_flow_global.vc_arr2;
    g_f42             wwv_flow_global.vc_arr2;
    g_f43             wwv_flow_global.vc_arr2;
    g_f44             wwv_flow_global.vc_arr2;
    g_f45             wwv_flow_global.vc_arr2;
    g_f46             wwv_flow_global.vc_arr2;
    g_f47             wwv_flow_global.vc_arr2;
    g_f48             wwv_flow_global.vc_arr2;
    g_f49             wwv_flow_global.vc_arr2;
    g_f50             wwv_flow_global.vc_arr2;
    g_fcs             wwv_flow_global.vc_arr2;
    g_fcud            wwv_flow_global.vc_arr2;
    g_frowid          wwv_flow_global.vc_arr2;
    g_survey_map      varchar2(32767);

    ---------------------------
    -- URL Tampering Prevention
    --

    g_arg_values_delimited          wwv_flow_global.vc_arr2;
    g_protected_page_ids            wwv_flow_global.n_arr;
    g_protected_page_aliases        wwv_flow_global.vc_arr2;

    --------------------------------------------
    -- Global input variables for AJAX utilities
    --
    g_widget_name		varchar2(255);
    g_widget_mod		varchar2(255);
    g_widget_action     varchar2(255);
    g_widget_action_mod	varchar2(255);
    g_widget_num_return	varchar2(255);
    g_widget_view_mode  varchar2(255);

    g_x01             varchar2(32767);
    g_x02             varchar2(32767);
    g_x03             varchar2(32767);
    g_x04             varchar2(32767);
    g_x05             varchar2(32767);
    g_x06             varchar2(32767);
    g_x07             varchar2(32767);
    g_x08             varchar2(32767);
    g_x09             varchar2(32767);
    g_x10             varchar2(32767);
    g_clob_01         clob;

    ------------------------------------
    -- Session Timeout
    --

    g_max_session_length_sec        number;
    g_max_session_idle_sec          number;

    ----------------------------------------------------------------------------
    -- Global array of form item values fetched by automated row fetch processes
    -- and other globals previously in wwv_flow_dml
    --
    g_column_values             wwv_flow.flow_vc_arr;
    g_clob_column_values        wwv_flow.clob_arr;
    g_dml_blob                  blob;
    g_dml_validation_count      pls_integer := 0;
    g_dml_mimetype              varchar2(255) := null;
    g_dml_filename              varchar2(400);
    g_dml_charset               varchar2(255);
    g_dml_last_updated_date     date;
    g_dml_clob_text             clob;
    g_dml_varchar32767_text     varchar2(32767) := null;
    g_dml_rowid                 varchar2(255);
    g_dml_blob_length           number := 0;

    ---------------------------
    -- To test URL encryption 4.0
    --
    g_item_values_encrypted boolean := false;
    g_fetch_encrypted       boolean := false;

    -----------------------------
    -- Stop APEX Engine
    -----------------------------
    c_stop_apex_engine_no constant pls_integer := -20876;
    e_stop_apex_engine    exception;
    pragma exception_init(e_stop_apex_engine, -20876);

    ---------------------------
    -- Maximum DB VARCHAR2 size
    --
$if sys.dbms_db_version.ver_le_10_2 $then
    c_max_size_vc2 constant number := 4000;
$elsif sys.dbms_db_version.ver_le_11_1 $then
    c_max_size_vc2 constant number := 4000;
$elsif sys.dbms_db_version.ver_le_11_2 $then
    c_max_size_vc2 constant number := 4000;
$else
    c_max_size_vc2 constant number := 32767;
$end

----------------------------------------------------------------------------
-- S H O W
--
-- This procedure is the entry point for the display of application express pages.
--
--
-- p_request              -- Request which can be the tab pressed, the button pressed, an
--                           arbitrary value etc.
-- p_instance             -- Flow Session ID, must be numeric.
-- p_flow_id              -- Flow ID, must be numeric.
-- p_flow_step_id         -- Page ID, must be numeric (for example: 1)
-- p_debug                -- If "YES" then flows will display debug messages.
-- p_arg_names            -- Comma seperated list of flow item names.  Item names should
--                           have corresponding (p_arg_values) values.  For example:
--                           p_arg_names => 'A,B,C'
--                           p_arg_values=> '1,2,3'
--                           This assumes that a flow or page item called A, B, and C
--                           exists.  When called a value of 1 will be assigned to A,
--                           2 to B, etc.
-- p_arg_values           -- Comma seperated list of values that corresponds to a
--                           comma seperated list of names (p_arg_names).  The session
--                           state for the flow items identified will be set to these
--                           values.
-- p_arg_name             -- use when passing one item name, itentifies a single item name
-- p_arg_value            -- use when passing one item value, identifies a single item value
-- p_clear_cache          -- Comma seperated list of pages (e.g. 2,3,4).
--                           Sets to null the values of any flow item declared for a
--                           list of pages.
-- p_box_border           -- obsolete
-- p_printer_friendly     -- If "YES" then show page using printer friendly template.
--                           Do not generate tabs or nav bar icons.
-- p_trace                -- If "YES", generate trace file for debugging and performance tuning
-- p_company              -- ID of company (security group id) must be numeric
-- p_md5_checksum         -- checksum to prevent lost updates
-- p_last_button_pressed  -- facilitates reference to :flow_last_button_pressed


procedure show (
    p_request             in varchar2   default null,
    p_instance            in varchar2   default null,
    p_flow_id             in varchar2   default null,
    p_flow_step_id        in varchar2   default null,
    p_debug               in varchar2   default 'NO',
    p_arg_names           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_arg_values          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_clear_cache         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_box_border          in varchar2   default '0',
    p_printer_friendly    in varchar2   default 'NO',
    p_trace               in varchar2   default 'NO',
    p_company             in number     default null,
    p_md5_checksum        in varchar2   default '0',
    p_last_button_pressed in varchar2   default null,
    p_arg_name            in varchar2   default null,
    p_arg_value           in varchar2   default null,
    f01                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f02                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f03                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f04                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f05                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f06                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f07                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f08                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f09                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f10                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f11                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f12                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f13                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f14                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f15                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f16                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f17                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f18                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f19                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f20                   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_widget_name         in varchar2   default null,
    p_widget_mod          in varchar2   default null,
    p_widget_action       in varchar2   default null,
    p_widget_action_mod   in varchar2   default null,
    p_widget_num_return   in varchar2   default null,
    p_widget_view_mode    in varchar2   default null,
    p_fsp_region_id       in number     default null,
    p_pg_min_row          in number     default null,
    p_pg_max_rows         in number     default null,
    p_pg_rows_fetched     in number     default null,
    p_time_zone           in varchar2   default null,
    x01                   in varchar2   default null,
    x02                   in varchar2   default null,
    x03                   in varchar2   default null,
    x04                   in varchar2   default null,
    x05                   in varchar2   default null,
    x06                   in varchar2   default null,
    x07                   in varchar2   default null,
    x08                   in varchar2   default null,
    x09                   in varchar2   default null,
    x10                   in varchar2   default null,
    p_clob_01             in clob       default null,
    p_lang                in varchar2   default null,
    p_territory           in varchar2   default null,
    j                     in varchar2   default null,
    XMLCallDate           in varchar2   default null)
    ;


----------------------------------------------------------------------------
-- A C C E P T
--
-- This procedure accepts virtually every flow page.
-- Reference show procedure for input argument descriptions.
--
--
--
--

procedure accept (
    p_request       in varchar2   default null,
    p_instance      in varchar2   default null,
    p_flow_id       in varchar2   default null,
    p_company       in number     default null,
    p_flow_step_id  in varchar2   default null,
    p_arg_names     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_arg_values    in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_arg_checksums in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_page_checksum in varchar2                default null,
    p_accept_processing in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v01           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v02           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v03           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v04           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v05           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v06           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v07           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v08           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v09           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v10           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v11           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v12           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v13           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v14           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v15           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v16           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v17           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v18           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v19           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v20           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v21           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v22           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v23           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v24           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v25           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v26           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v27           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v28           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v29           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v30           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v31           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v32           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v33           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v34           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v35           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v36           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v37           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v38           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v39           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v40           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v41           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v42           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v43           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v44           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v45           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v46           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v47           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v48           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v49           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v50           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v51           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v52           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v53           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v54           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v55           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v56           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v57           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v58           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v59           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v60           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v61           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v62           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v63           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v64           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v65           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v66           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v67           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v68           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v69           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v70           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v71           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v72           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v73           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v74           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v75           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v76           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v77           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v78           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v79           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v80           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v81           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v82           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v83           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v84           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v85           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v86           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v87           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v88           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v89           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v90           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v91           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v92           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v93           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v94           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v95           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v96           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v97           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v98           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v99           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v100          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v101          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v102          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v103          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v104          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v105          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v106          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v107          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v108          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v109          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v110          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v111          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v112          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v113          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v114          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v115          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v116          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v117          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v118          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v119          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v120          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v121          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v122          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v123          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v124          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v125          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v126          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v127          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v128          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v129          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v130          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v131          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v132          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v133          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v134          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v135          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v136          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v137          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v138          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v139          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v140          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v141          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v142          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v143          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v144          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v145          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v146          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v147          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v148          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v149          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v150          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v151          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v152          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v153          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v154          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v155          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v156          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v157          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v158          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v159          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v160          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v161          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v162          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v163          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v164          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v165          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v166          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v167          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v168          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v169          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v170          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v171          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v172          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v173          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v174          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v175          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v176          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v177          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v178          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v179          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v180          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v181          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v182          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v183          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v184          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v185          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v186          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v187          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v188          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v189          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v190          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v191          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v192          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v193          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v194          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v195          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v196          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v197          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v198          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v199          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_v200          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_t01           in varchar2   default null,
    p_t02           in varchar2   default null,
    p_t03           in varchar2   default null,
    p_t04           in varchar2   default null,
    p_t05           in varchar2   default null,
    p_t06           in varchar2   default null,
    p_t07           in varchar2   default null,
    p_t08           in varchar2   default null,
    p_t09           in varchar2   default null,
    p_t10           in varchar2   default null,
    p_t11           in varchar2   default null,
    p_t12           in varchar2   default null,
    p_t13           in varchar2   default null,
    p_t14           in varchar2   default null,
    p_t15           in varchar2   default null,
    p_t16           in varchar2   default null,
    p_t17           in varchar2   default null,
    p_t18           in varchar2   default null,
    p_t19           in varchar2   default null,
    p_t20           in varchar2   default null,
    p_t21           in varchar2   default null,
    p_t22           in varchar2   default null,
    p_t23           in varchar2   default null,
    p_t24           in varchar2   default null,
    p_t25           in varchar2   default null,
    p_t26           in varchar2   default null,
    p_t27           in varchar2   default null,
    p_t28           in varchar2   default null,
    p_t29           in varchar2   default null,
    p_t30           in varchar2   default null,
    p_t31           in varchar2   default null,
    p_t32           in varchar2   default null,
    p_t33           in varchar2   default null,
    p_t34           in varchar2   default null,
    p_t35           in varchar2   default null,
    p_t36           in varchar2   default null,
    p_t37           in varchar2   default null,
    p_t38           in varchar2   default null,
    p_t39           in varchar2   default null,
    p_t40           in varchar2   default null,
    p_t41           in varchar2   default null,
    p_t42           in varchar2   default null,
    p_t43           in varchar2   default null,
    p_t44           in varchar2   default null,
    p_t45           in varchar2   default null,
    p_t46           in varchar2   default null,
    p_t47           in varchar2   default null,
    p_t48           in varchar2   default null,
    p_t49           in varchar2   default null,
    p_t50           in varchar2   default null,
    p_t51           in varchar2   default null,
    p_t52           in varchar2   default null,
    p_t53           in varchar2   default null,
    p_t54           in varchar2   default null,
    p_t55           in varchar2   default null,
    p_t56           in varchar2   default null,
    p_t57           in varchar2   default null,
    p_t58           in varchar2   default null,
    p_t59           in varchar2   default null,
    p_t60           in varchar2   default null,
    p_t61           in varchar2   default null,
    p_t62           in varchar2   default null,
    p_t63           in varchar2   default null,
    p_t64           in varchar2   default null,
    p_t65           in varchar2   default null,
    p_t66           in varchar2   default null,
    p_t67           in varchar2   default null,
    p_t68           in varchar2   default null,
    p_t69           in varchar2   default null,
    p_t70           in varchar2   default null,
    p_t71           in varchar2   default null,
    p_t72           in varchar2   default null,
    p_t73           in varchar2   default null,
    p_t74           in varchar2   default null,
    p_t75           in varchar2   default null,
    p_t76           in varchar2   default null,
    p_t77           in varchar2   default null,
    p_t78           in varchar2   default null,
    p_t79           in varchar2   default null,
    p_t80           in varchar2   default null,
    p_t81           in varchar2   default null,
    p_t82           in varchar2   default null,
    p_t83           in varchar2   default null,
    p_t84           in varchar2   default null,
    p_t85           in varchar2   default null,
    p_t86           in varchar2   default null,
    p_t87           in varchar2   default null,
    p_t88           in varchar2   default null,
    p_t89           in varchar2   default null,
    p_t90           in varchar2   default null,
    p_t91           in varchar2   default null,
    p_t92           in varchar2   default null,
    p_t93           in varchar2   default null,
    p_t94           in varchar2   default null,
    p_t95           in varchar2   default null,
    p_t96           in varchar2   default null,
    p_t97           in varchar2   default null,
    p_t98           in varchar2   default null,
    p_t99           in varchar2   default null,
    p_t100          in varchar2   default null,
    p_t101          in varchar2   default null,
    p_t102          in varchar2   default null,
    p_t103          in varchar2   default null,
    p_t104          in varchar2   default null,
    p_t105          in varchar2   default null,
    p_t106          in varchar2   default null,
    p_t107          in varchar2   default null,
    p_t108          in varchar2   default null,
    p_t109          in varchar2   default null,
    p_t110          in varchar2   default null,
    p_t111          in varchar2   default null,
    p_t112          in varchar2   default null,
    p_t113          in varchar2   default null,
    p_t114          in varchar2   default null,
    p_t115          in varchar2   default null,
    p_t116          in varchar2   default null,
    p_t117          in varchar2   default null,
    p_t118          in varchar2   default null,
    p_t119          in varchar2   default null,
    p_t120          in varchar2   default null,
    p_t121          in varchar2   default null,
    p_t122          in varchar2   default null,
    p_t123          in varchar2   default null,
    p_t124          in varchar2   default null,
    p_t125          in varchar2   default null,
    p_t126          in varchar2   default null,
    p_t127          in varchar2   default null,
    p_t128          in varchar2   default null,
    p_t129          in varchar2   default null,
    p_t130          in varchar2   default null,
    p_t131          in varchar2   default null,
    p_t132          in varchar2   default null,
    p_t133          in varchar2   default null,
    p_t134          in varchar2   default null,
    p_t135          in varchar2   default null,
    p_t136          in varchar2   default null,
    p_t137          in varchar2   default null,
    p_t138          in varchar2   default null,
    p_t139          in varchar2   default null,
    p_t140          in varchar2   default null,
    p_t141          in varchar2   default null,
    p_t142          in varchar2   default null,
    p_t143          in varchar2   default null,
    p_t144          in varchar2   default null,
    p_t145          in varchar2   default null,
    p_t146          in varchar2   default null,
    p_t147          in varchar2   default null,
    p_t148          in varchar2   default null,
    p_t149          in varchar2   default null,
    p_t150          in varchar2   default null,
    p_t151          in varchar2   default null,
    p_t152          in varchar2   default null,
    p_t153          in varchar2   default null,
    p_t154          in varchar2   default null,
    p_t155          in varchar2   default null,
    p_t156          in varchar2   default null,
    p_t157          in varchar2   default null,
    p_t158          in varchar2   default null,
    p_t159          in varchar2   default null,
    p_t160          in varchar2   default null,
    p_t161          in varchar2   default null,
    p_t162          in varchar2   default null,
    p_t163          in varchar2   default null,
    p_t164          in varchar2   default null,
    p_t165          in varchar2   default null,
    p_t166          in varchar2   default null,
    p_t167          in varchar2   default null,
    p_t168          in varchar2   default null,
    p_t169          in varchar2   default null,
    p_t170          in varchar2   default null,
    p_t171          in varchar2   default null,
    p_t172          in varchar2   default null,
    p_t173          in varchar2   default null,
    p_t174          in varchar2   default null,
    p_t175          in varchar2   default null,
    p_t176          in varchar2   default null,
    p_t177          in varchar2   default null,
    p_t178          in varchar2   default null,
    p_t179          in varchar2   default null,
    p_t180          in varchar2   default null,
    p_t181          in varchar2   default null,
    p_t182          in varchar2   default null,
    p_t183          in varchar2   default null,
    p_t184          in varchar2   default null,
    p_t185          in varchar2   default null,
    p_t186          in varchar2   default null,
    p_t187          in varchar2   default null,
    p_t188          in varchar2   default null,
    p_t189          in varchar2   default null,
    p_t190          in varchar2   default null,
    p_t191          in varchar2   default null,
    p_t192          in varchar2   default null,
    p_t193          in varchar2   default null,
    p_t194          in varchar2   default null,
    p_t195          in varchar2   default null,
    p_t196          in varchar2   default null,
    p_t197          in varchar2   default null,
    p_t198          in varchar2   default null,
    p_t199          in varchar2   default null,
    p_t200          in varchar2   default null,
    f01             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f02             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f03             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f04             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f05             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f06             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f07             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f08             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f09             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f10             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f11             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f12             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f13             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f14             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f15             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f16             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f17             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f18             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f19             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f20             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f21             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f22             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f23             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f24             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f25             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f26             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f27             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f28             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f29             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f30             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f31             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f32             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f33             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f34             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f35             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f36             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f37             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f38             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f39             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f40             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f41             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f42             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f43             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f44             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f45             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f46             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f47             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f48             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f49             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    f50             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    fcs             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    fmap            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    fhdr            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    fcud            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    frowid          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    x01             in varchar2   default null,
    x02             in varchar2   default null,
    x03             in varchar2   default null,
    x04             in varchar2   default null,
    x05             in varchar2   default null,
    x06             in varchar2   default null,
    x07             in varchar2   default null,
    x08             in varchar2   default null,
    x09             in varchar2   default null,
    x10             in varchar2   default null,
    x11             in varchar2   default null,
    x12             in varchar2   default null,
    x13             in varchar2   default null,
    x14             in varchar2   default null,
    x15             in varchar2   default null,
    x16             in varchar2   default null,
    x17             in varchar2   default null,
    x18             in varchar2   default null,
    x19             in varchar2   default null,
    x20             in varchar2   default null,
    p_listener      in wwv_flow_global.vc_arr2 default empty_vc_arr, -- used to communicate with apex listner
    p_map1          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_map2          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_map3          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_survey_map    in varchar2   default null,
    p_flow_current_min_row      in varchar2 default '1',
    p_flow_current_max_rows     in varchar2 default '10',
    p_flow_current_rows_fetched in varchar2 default '0',
    p_debug                     in varchar2 default 'NO',
    p_trace                     in varchar2 default 'NO',
    p_md5_checksum              in varchar2 default '0',
    p_page_submission_id        in varchar2 default null,
    p_time_zone                 in varchar2 default null,
    p_ignore_01     in varchar2 default null,
    p_ignore_02     in varchar2 default null,
    p_ignore_03     in varchar2 default null,
    p_ignore_04     in varchar2 default null,
    p_ignore_05     in varchar2 default null,
    p_ignore_06     in varchar2 default null,
    p_ignore_07     in varchar2 default null,
    p_ignore_08     in varchar2 default null,
    p_ignore_09     in varchar2 default null,
    p_ignore_10     in varchar2 default null,
    p_lang          in varchar2 default null,
    p_territory     in varchar2 default null)
    ;





----------------------------------------------------------------------------
-- H E L P   S Y S T E M
--

procedure help (
    --
    -- Returns Page and Column level help from flow builder meta data
    -- repository.
    --
    -- Arguments:
    --    p_flow_id        = flow ID
    --    p_flow_step_id   = page ID
    --    p_show_item_help = YES (include item level help), NO do not show item level help
    --
    p_request        in varchar2 default null,
    p_flow_id        in varchar2 default null,
    p_flow_step_id   in varchar2 default null,
    p_show_item_help in varchar2 default 'YES',
    p_show_regions   in varchar2 default 'YES',
    --
    p_before_page_html     in varchar2 default '<p>',
    p_after_page_html      in varchar2 default null,
    p_before_region_html   in varchar2 default null,
    p_after_region_html    in varchar2 default '</td></tr></table></p>',
    p_before_prompt_html   in varchar2 default '<p><b>',
    p_after_prompt_html    in varchar2 default '</b></p>:&nbsp;',
    p_before_item_html     in varchar2 default null,
    p_after_item_html      in varchar2 default null)
    ;







----------------------------------------------------------------------------
-- U T I L I T I E S
--

function do_substitutions (
    --
    -- Perform substitutions of ampersand prefixed flow items with
    -- current flow session state for current user and current session.
    --
    p_string                       in varchar2 default null,
    p_sub_type                     in varchar2 default 'SQL',
    p_perform_oracle_substitutions in boolean default false )
    return varchar2
    ;

function trim_sql (
    --
    -- Given a SQL statement , trim trailing and leading
    -- white spaces.  Optionally perform session state substitutions
    -- as well as ensuring the statement ends in a semicolon.
    --
    p_sql               in varchar2 default null,
    p_ends_in_semicolon in boolean default false,
    p_do_substitutions  in boolean default true)
    return varchar2
    ;

function trim_sql (
    --
    -- This function gets a SQL statement ready for execution
    -- Function is overloaded; p_owner may be provided in order to cause package global
    -- to be temporarily replaced with the value of p_owner in package state during
    -- the execution of this function and until its return to the caller.
    --
    p_sql               in varchar2 default null,
    p_ends_in_semicolon in boolean default false,
    p_do_substitutions  in boolean default true,
    p_owner             in varchar2)
    return varchar2
    ;

function trim_nl_sp_tab (
    -- This function removes all whitespace, tab, and new line characters at the begin and end of the input string
    p_string varchar2 )
    return varchar2;

procedure set_g_nls_date_format
    ;

procedure reset_g_nls_date_format
    ;


procedure set_g_nls_decimal_separator
    ;

procedure reset_g_nls_decimal_separator
    ;

function get_nls_decimal_separator return varchar2
    ;

function get_nls_group_separator return varchar2
    ;

function get_translated_app_id return number
    ;

procedure set_g_base_href
    ;

procedure reset_g_base_href
    ;

function get_g_base_href return varchar2
    ;

function get_page_alias return varchar2
    ;

function is_custom_auth_page return boolean
    ;

function get_application_id return number
    ;

function get_page_id return number
    ;

function get_session_id return number
    ;

function get_security_group_id return number
    ;

function is_pressed_button (
    p_button_id in number )
    return boolean;

----------------------------------------------------------------------------
-- E R R O R   H A N D L I N G
--
--==============================================================================
-- Returns the number of inline validation errors.
-- Note: That's a compatibility wrapper,
--       use wwv_flow_error.get_validation_error_count instead.
--==============================================================================
function g_inline_validation_error_cnt return pls_integer;

--==============================================================================
-- Signals the APEX engine to stop further processing and immediately exit so
-- that no additional HTML code is added to the HTTP buffer.
--
-- Note: This procedure will internally raise the exception e_stop_apex_engine.
--       You have to reraise that exception if you use a WHEN OTHERS exception
--       handler!
--
-- Example:
--
-- owa_util.redirect_url('http://apex.oracle.com');
-- apex_application.stop_apex_engine;
--
-- Complex example with a when others exception handler:
--
-- begin
--     ... code which can raise an exception ...
--     owa_util.redirect_url('http://apex.oracle.com');
--     apex_application.stop_apex_engine;
-- exception
--     when apex_application.e_stop_apex_engine then
--         raise; -- reraise the stop APEX engine exception
--     when others then
--         ...; -- code to handle the exception
-- end;
--
--==============================================================================
procedure stop_apex_engine;

----------------------------------------
-- I N T E R N A L     U T I L I T I E S
--
-- Internal utilities used by the flow engine runtime
-- that are not intened and are not useful to the
-- flows programmer.
--

procedure set_component (
    p_type in varchar2,
    p_id   in number   default null,
    p_name in varchar2 default null );

function get_component return t_component;

procedure clear_component;

function paint_formOpen
    -- Return the HTML form open tag given current flow state.
    return varchar2
    ;


function get_form_close_tag return varchar2;

function paint_buttons (
    -- Given current flows context draw (omit the HTML) for
    -- buttons given a position and region ID.
    p_position in varchar2 default 'TOP',
    p_plug_id  in varchar2 default '0')
    return varchar2
    ;

procedure s (
    p in varchar2 default null)
    ;

----------------------------------------------------------------------------
-- D E B U G G I N G
--
procedure debug (
    -- Given a string this will result in the generation of a debug entry
    p_string         in varchar2 default null)
    ;


function get_elapsed_time
    -- Get the elapsed time from package instantiation
    return number;




----------------------------------------------------------------------------
-- S E S S I O N   S T A T E   M A N A G E M E N T
--
-- The following routines can be called to read and write session state.
--
--
--
--

function get_next_session_id
    -- Get integer ID values, session ID is a sequence, unique ID is a sequence
    -- with a random number which produces a virtual global unique ID.
    return number
    ;

function get_unique_id
    -- Return a number which is virually globally unique.
    return number
    ;

procedure clear_page_cache (
    -- Reset all cached items for a given page to null
    p_flow_page_id in number default null)
    ;

procedure clear_page_caches (
    -- Reset all cached items for pages in array to null
    p_flow_page_id in wwv_flow_global.vc_arr2 default empty_vc_arr)
    ;

procedure clear_flow_cache (
    -- For the current session remove session state for the given flow.
    -- Requires g_instance to be set to the current flows session.
    p_flow_id in varchar2 default null)
    ;

procedure clear_app_cache (
    -- For the current session remove session state for the given flow.
    -- Requires g_instance to be set to the current flows session.
    p_app_id in varchar2 default null)
    ;

procedure clear_user_cache
    -- For the current users session remove session state and flow system preferences.
    -- Run this procedure if you reuse session IDs and want to run flows without
    -- the benifit of existing session state.  Requires g_instance to be set to the
    -- current flows session.
    ;

function find_item_id (
    -- Given a flow page or flow level items name return its numeric identifier.
    p_name in varchar2 default null)
    return number
    ;

function find_item_name (
    -- Given a flow page or flow level items numeric identifier return the items name.
    p_id in number default null)
    return varchar2
    ;

procedure update_cache_with_write (
    -- For the current session update an items cached value.  This update is persistent
    -- for the life of the flow session, unless the session state is cleared or updated.
    p_name    in varchar2 default null,
    p_value   in varchar2 default null)
    ;

procedure reset_security_check
    -- Security checks are cached to increase performance, this procedure allows you to
    -- undo the caching and thus require all security checks to be revalidated for the
    -- current user.  Use this routine if you allow a user to change "responcibilities"
    -- within an application, thus changing their authentication scheme.
    ;

function public_role_check (
    p_role      in varchar2 default null,
    p_component in varchar2 default null)
    return boolean
    ;

function public_security_check (
    -- Given the name of a flow security scheme determine if the current user
    -- passes the security check.
    p_security_scheme in varchar2)
    return boolean
    ;

function fetch_flow_item(
    -- Given a flow-level item name, locate item in current or specified
    -- flow and current or specified session and return item value.
    p_item         in varchar2,
    p_flow         in number default null,
    p_instance     in number default null)
    return varchar2
    ;

function fetch_app_item(
    -- Given a flow-level item name, locate item in current or specified
    -- flow and current or specified session and return item value.
    p_item         in varchar2,
    p_app          in number default null,
    p_instance     in number default null)
    return varchar2
    ;

------------------------------------------------------------------
-- V I R T U A L   P R I V A T E   D A T A B A S E   S U P P O R T
--
-- flows are owned by companies which are identified by a security
-- group ID.  The flow meta data repository is "sliced up" by
-- the security group id (sgid).
--

function get_sgid return number
    -- Given the current users context return the security group ID.
    ;
function get_browser_version return varchar2;
     -- return browser versiob

function get_company_name return varchar2
    -- Given the current users context return the company name.
    ;

------------------------------------------------------------------
-- Stateful processes
--

function process_state(
    p_process_id in number)
    return varchar2
    ;

procedure reset_page_process(
    p_process_id in number)
    ;

procedure reset_page_processess(
    p_page_id in number)
    ;


------------------------------------------------------------------
-- A U T H E N T I C A T I O N
--

function get_custom_auth_login_url return varchar2
    -- for use with custom authentication
    ;

function replace_cgi_env(
    p_in varchar2)
    return varchar2
    ;

function get_home_link_url return varchar2
    -- internal use only
    ;

------------------------------------------------------------------
-- Deprecated, obsolete procedures and functions.
-- Don't use them anymore!
--

procedure null_page_cache (
    p_flow_page_id in number default null)
    ;

procedure null_step_cache (
    p_flow_step_id in number default null)
    ;

procedure null_page_caches (
    p_flow_page_id in wwv_flow_global.vc_arr2 default empty_vc_arr)
    ;

procedure null_step_caches (
    p_flow_step_id in wwv_flow_global.vc_arr2 default empty_vc_arr)
    ;

procedure show_error_message (
    p_message  in varchar2 default 'Error',
    p_footer   in varchar2 default null,
    p_query    in varchar2 default null)
    ;

function get_application_id (
    p_application_id_or_alias in varchar2,
    p_security_group_id       in number   default null )
    return number;

procedure set_ppr_query_session_state (p_region_id in number);

end wwv_flow;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SECURITY" as
--------------------------------------------------------------------------------
--
-- Copyright (c) Oracle Corporation 2001 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Security and authentication services
--
--    SECURITY
--      This package is only accessable to the owner of Oracle Application Express
--      This package contains globals that control parsing and company (aka workspace)
--      identification.
--      g_parse_as_schema   = schema to parse SQL as
--      g_security_group_id = identifies the workspace of the current user (provides VPD)
--
--    NOTES
--      Package Body should be wraped
--
--    MULTI-CUSTOMER
--      This package facilitates multi customer (virtual private database) support
--
--    MODIFIED   (MM/DD/YYYY)
--     mhichwa    01/20/2000 - Created
--     mhichwa    01/21/2000 - Added sdillon encode, checksum, decode, fetch_key routines, determine_cookie_auth_user
--     mhichwa    03/08/2000 - Added get_asfcookie
--     mhichwa    05/16/2000 - Removed procedure get_JServSessionIdroot_cookie
--     mhichwa    05/16/2000 - Added set_oracle_login_server_env
--     mhichwa    06/06/2000 - Added custom auth globals
--     mhichwa    01/12/2001 - Added cookie logout procedure
--     mhichwa    01/27/2001 - Added company, and function to translate short name to sec group id
--     mhichwa    01/28/2001 - Added company to show_cookie
--     mhichwa    02/24/2001 - Added find_security_group_id_dbauth;
--     mhichwa    02/28/2001 - Added user is internal function
--     mhichwa    03/03/2001 - Added g parse as schema global
--     mhichwa    03/03/2001 - Added user can develop any flow
--     mhichwa    03/03/2001 - Added g_curr_flow_security_group_id
--     mhichwa    03/05/2001 - Added get_security_group_id
--     mhichwa    03/13/2001 - Added flow owner call
--     mhichwa    03/19/2001 - Added run flow procedure
--     mhichwa    03/23/2001 - Added find company name given security group id
--     sdillon    04/16/2001 - Added get first schema function, given security group id
--     mhichwa    04/23/2001 - Changed documentation
--     mhichwa    04/23/2001 - Added fnd user api
--     jkallman   06/18/2001 - Added set_custom_auth_env
--     mhichwa    08/27/2001 - Added create session procedure for use in benchmarking
--     mhichwa    08/28/2001 - Removed security group ID argument to create session since its set from a global in a trigger
--     sspadafo   11/20/2001 - Added exec_custom2_auth
--     mhichwa    11/26/2001 - Changed comments
--     sspadafo   06/18/2002 - Added session_cookie_info procedure,cookie_user,cookie_session functions
--     sspadafo   09/24/2002 - Added custom auth globals, exec_custom_auth_options, get_custom_auth_options procedures
--     sspadafo   10/02/2002 - Removed custom auth setup globals related used only in login processing
--     sspadafo   10/03/2002 - Removed unneeded cookie globals for custom auth setups
--     sspadafo   11/27/2002 - Added g_sso_session_registration boolean for securing single signon session registration
--     mhichwa    12/19/2002 - Removed function find_security_group_id_dbauth
--     sspadafo   04/24/2003 - Added g_authenticated boolean for popup LOV page authentication (Bug 2792894)
--     sspadafo   04/24/2003 - Removed obsolete procedures set_custom_auth_env, set_authentication_env (no bug filed)
--     sspadafo   04/24/2003 - Added hash_session_id function (Bug 2792894)
--     sspadafo   05/01/2003 - Added get_hashed_session_id and g_element constant used by wwv_flow_element pkg (Bug 2792894)
--     sspadafo   06/15/2003 - Add internal page sentry function for internal flows (Bug 3008867)
--     sspadafo   06/24/2003 - Expose session_cookie_info_internal procedure (Bug 3017850)
--     sspadafo   03/12/2004 - Add checksum booleans for cross-site scripting problems (Bug 2998081)
--     sspadafo   03/18/2004 - Add functions verify_notify_msg_checksum and verify_print_msg_checksum (Bug 2998081)
--     sspadafo   05/29/2004 - Add g_user global (Bug 3660623)
--     sspadafo   06/12/2004 - Add function current_company_can_parse (Bug 3689457)
--     sspadafo   06/14/2004 - Add g_import_in_progress (Bug 3689457)
--     sspadafo   06/25/2004 - Add authenticated_session function (Bug 3449543)
--     sspadafo   06/26/2004 - Add user_authenticated_to_builder function (Bug 3449543)
--     sspadafo   06/26/2004 - Change user_authenticated_to_builder function to user_builder_session_company (Bug 3449543)
--     sspadafo   07/30/2004 - Revise g_element constant
--     sspadafo   08/11/2004 - Add ip_check function
--     sspadafo   10/03/2004 - Add disable_admin_login, disable_admin_login functions
--     sspadafo   02/08/2005 - Added globals for URL tampering feature
--     sspadafo   02/27/2005 - Added reset_app_checksum_salt procedure
--     sspadafo   03/23/2005 - Added g_instance_save (Bug 4255908)
--     sspadafo   03/28/2005 - Removed g_instance_save (Bug 4255908)
--     sspadafo   05/02/2005 - Added check_db_password function for database user account authentication
--     sspadafo   09/29/2005 - Add encode_key and decode_key functions
--     sspadafo   10/24/2005 - Add check_db_password function with p_username argument and return vc2 for extended database account authentication (Bug 4673279)
--     sspadafo   11/30/2005 - Add character to g_element (Bug 4690231)
--     sspadafo   11/30/2005 - Remove some comments visible in source
--     sspadafo   11/30/2005 - Add g_raw16, g_raw32, g_raw64, g_num, g_crypto_salt variables (Bug 4690231)
--     sspadafo   11/30/2005 - Add crypto_mac_md5, crypto_randomnumber, crypto_randombytes functions as wrappers for dbms_crypto functions (Bug 4690231)
--     sspadafo   12/10/2005 - Add g_raw7 (Bug 4690231)
--     sspadafo   02/20/2006 - Add g_page_request boolean (Bug 5049931)
--     sspadafo   03/08/2006 - Added p_session_id parameter to authenticated_session function (Bug 4922130)
--     sspadafo   04/28/2006 - Added overloaded crypto_randombytes function (Bug 4773656)
--     mhichwa    06/22/2006 - Added g_parse_as_schema_override global (bug 5251946)
--     sspadafo   11/30/2006 - Added g_flow_id (bug 5597257)
--     sspadafo   11/30/2006 - Added constants and variables to support fnd account security features
--     sspadafo   12/14/2006 - Added strong_password_check, strong_password_validation
--     sspadafo   12/16/2006 - Added get_expired_user_sgid, get_expired_user_name functions, purge_expired_user_header procedure
--     jstraub    01/03/2007 - Added encrypt_wallet_pwd and decrypt_wallet_pwd
--     sspadafo   01/07/2007 - Added AUTH_UNKNOWN_WORKSPACE constant
--     sspadafo   01/27/2007 - Added functions get_translated_flow_id, get_flow_id; added variable g_translated_flow_id (Bug 5597257)
--     jstraub    02/01/2007 - Added prep_url
--     mhichwa    11/02/2007 - Set define off, then on again at end of file
--     mhichwa    12/19/2007 - Removed comments that are no longer valid updated copyright.  Other comments also updated.
--     sspadafo   12/20/2007 - Added g_instance to use as secure copy of wwv_flow.g_instance
--     sspadafo   12/08/2008 - Added set_session_lifetime_minutes, set_session_max_idle_minutes
--     sspadafo   12/22/2008 - Changed name of session timeout procedures to reflect units in seconds
--     jstraub    12/23/2008 - Added encrypt_item_value and decrypt_item_value
--     mhichwa    12/23/2008 - Added encrypt_session_value and decrypt_session_value
--     sspadafo   12/29/2008 - Removed encrypt_item_value and decrypt_item_value
--     sspadafo   12/31/2008 - Added raw global g_raw32767;
--     sspadafo   01/24/2009 - Added p_not_reusable_err to strong_password_check
--     mhichwa    01/28/2009 - Added g_context global to allow for security checks to be context specific
--     cbcho      04/06/2009 - Added g_websheet_schema
--     pawolf     04/09/2009 - Renamed g_websheet_schema and removed default
--     cbcho      06/08/2009 - Renamed g_teamspace_schema to g_apex$_schema
--     sspadafo   11/01/2009 - Added exec_websheet_auth procedure
--     sspadafo   11/10/2009 - Added ws_internal_page_sentry function
--     jkallman   11/25/2009 - Rename encrypt_wallet_pwd & decrypt_wallet_pwd to encrypt_pwd & decrypt_pwd
--     sspadafo   12/07/2009 - Added global g_ws_instance
--     sspadafo   01/20/2010 - Added function devenv_login
--     jkallman   05/13/2010 - Added function authorized_url (Bug 9708920)
--     cneumuel   03/03/2011 - Removed g_raw7, g_raw16, g_raw32, g_raw64, g_raw32767, g_num (Feature 630)
--     cneumuel   03/03/2011 - Added api for reading/writing wallet, removed encrypt_pwd, decrypt_pwd (Feature 631)
--     cneumuel   03/04/2011 - Removed encrypt, decrypt, they were only used internally (Feature 630)
--     cneumuel   03/21/2011 - Refactorings
--     cneumuel   03/30/2011 - Added apex_builder_authentication, get_ws_cookie_props
--     jkallman   04/12/2011 - Added procedure set_internal_cookie_name
--     cneumuel   04/18/2011 - Added g_custom_auth_attempts and cookie_user_can_dev_curr_flow from wwv_flow
--     cneumuel   04/18/2011 - Added get_authentication_id and get_flow_cookie_props from custom_auth_std.plb
--     cneumuel   04/21/2011 - Moved crypto functions from wwv_flow_security to wwv_flow_crypto
--     cneumuel   04/29/2011 - Added global variable g_dyn_exec_smtp_conn for passing a utl_smtp.connection to/from dynamic pl/sql (Feature #604)
--     cneumuel   05/06/2011 - In get_wallet: removed encryption type parameter
--     cneumuel   05/17/2011 - Removed devenv_login and added get_builder_session_id
--     cneumuel   06/06/2011 - Removed get_flow_cookie_props, get_authentication_id
--     cneumuel   06/15/2011 - Added get_translated_id
--     cneumuel   06/21/2011 - removed obsolete functions get_hashed_session_id, internal_page_sentry, ws_internal_page_sentry, exec_custom2_auth
--     cneumuel   07/01/2011 - Added has_apex_administrator_role (bug #8560829)
--     pawolf     09/08/2011 - Added new procedure set_rm_consumer_group (Bug 12944223)
--     cneumuel   09/15/2011 - Removed obsolete g_custom_auth_setups
--     cneumuel   09/15/2011 - In authenticate: added p_ignore_password
--     hfarrell   09/16/2011 - Added procedure grant_restful_connect for RESTful Services
--     cneumuel   10/18/2011 - Added get_service_group_name_prefix (bug #13101596)
--     cneumuel   10/24/2011 - Renamed get_service_group_name_prefix to get_workspace_group_prefix
--     pawolf     10/25/2011 - Changed get_workspace_group_prefix to use g_security_group_id
--     cneumuel   10/28/2011 - Renamed set_rm_consumer_group to set_g_security_group_id and added host_prefix checking (bug #13101596)
--     cneumuel   11/02/2011 - Made set_rm_consumer_group public for file_mgr
--     pawolf     11/22/2011 - Added p_check_host_prefix to set_g_security_group_id (Bug 12944223)
--     cneumuel   11/29/2011 - Moved exec_websheet_auth to wwv_flow_ws_security (bug #13360987)
--                           - Added has_apex_administrator_role_yn (bug #13426740)
--     pawolf     12/14/2011 - Added does_host_prefix_match (bug 13475686)
--     pawolf     01/24/2012 - Added clear_page_checksum, get_page_item_value_checksum and get_page_checksum (bug 12790216)
--     pawolf     02/15/2012 - Added get_protected_page_items_count (bug# 13722696)
--     jkallman   02/15/2012 - Removed the obsolete version of check_db_password (Bug 13723466)
--     cneumuel   03/28/2012 - In authenticate: removed p_internal. Added get_workspace_sec_settings (bug #13713222)
--     cneumuel   04/02/2012 - Added user_is_dba (moved from wwv_flow_login)
--     cneumuel   04/05/2012 - In t_workspace_sec, get_workspace_sec_settings: added login_throttle_delay (feature #899)
--     cneumuel   04/05/2012 - Moved wwv_flow_security.set_session_{lifetime,max_idle}_seconds to wwv_flow_session_state (feature #897)
--     jkallman   05/02/2012 - Added p_check_account_status to set_g_security_group_id
--     cneumuel   05/09/2012 - Removed dead code: check_db_password, cookie_auth_logout, get_asfcookie, run_flow, check_instance_owner, determine_cookie_auth_user,
--                           - cookie_session, create_new_session, remove_session, exec_custom_auth, user_can_develop_current_flow, get_fnd_user_id, create_fnd_user,
--                           - remove_fnd_user, update_fnd_user, encode_key, decode_key
--                           - show_cookie
--     cneumuel   06/14/2012 - Added t_workspace_sec.login_throttle_methods (bug #13713222)
--     cneumuel   06/15/2012 - Added is_workspace_password_valid (bug #13994800)
--     cneumuel   06/15/2012 - Added get_client_ip_address (feature #899)
--                           - Removed hash_session_id
--     cneumuel   06/18/2012 - In get_client_ip_address: added p_remove_proxies
--     cneumuel   06/26/2012 - Removed obsolete variable g_custom_auth_login_page (feature #791)
--     cneumuel   08/08/2012 - In authenticate: added p_settings_from_workspace, to override the workspace from which auth settings like max login attempts are taken (bug #14469455)
--     cneumuel   01/17/2013 - Added configure_trace_and_debug, db_session_init, teardown, final_exception_handler from flow.plb, so they are callable from other toplevel procs (bug #16002675)
--     cneumuel   02/08/2013 - set_db_session_info: set v$session info for request and check QoS settings (bug #15893138)
--     cneumuel   05/24/2013 - Added who_called_me: patched version of owa_util.who_called_me that supports changes to call stack because of _plsql_max_stack_size (bug #16809536)
--     cneumuel   06/06/2013 - Added check_request_can_be_processed,setup_session_via_show (bug #16914036)
--     cneumuel   08/20/2013 - Added teardown_fsp_show_popuplov (bug #16914036)
--
--------------------------------------------------------------------------------

--==============================================================================
-- for passing a connection record to/from dynamic code in wwv_flow_mail
--==============================================================================
g_dyn_exec_smtp_conn sys.utl_smtp.connection;

--==============================================================================
-- wallet information for public key certificates of ssl encoded ldap, http and
-- mail
--==============================================================================
type t_wallet is record (
    wallet_path                 varchar2(4000),
    wallet_pwd                  varchar2(4000) );

--==============================================================================
-- workspace login control settings
--==============================================================================
type t_workspace_sec is record (
    login_throttle_delay   pls_integer,
    login_throttle_methods varchar2(4000),
    expire_accounts        boolean,
    failed_login_threshold pls_integer );

--
-- app/page for workspace selection in case of builder single sign-on login
c_sso_select_workspace_page     constant varchar2(30) := '4550:20';

g_custom_authentication_page    number         := null;
g_custom_invalid_session_url    varchar2(4000) := null;
g_sso_session_registration      boolean        := false;
g_authenticated                 boolean        := false;
g_notification_checksum         boolean        := true;
g_success_message_checksum      boolean        := true;
g_internal_app_checksum         boolean        := true;
g_user                          varchar2(255)  := null;
g_flow_id                       number         := null;
g_instance                      number         := null;
g_translated_flow_id            number         := null;
g_import_in_progress            boolean        := false;
g_page_request                  boolean        := false;
g_context                       varchar2(60)   := 'NULL';   -- mike security
g_ws_instance                   number         := null;

--
-- This constant may be any length >= 16.
--
g_element             CONSTANT varchar2(32)   := '~'||
                                                 '!'||
                                                 '+'||
                                                 '#'||
                                                 '$'||
                                                 '%'||
                                                 '^'||
                                                 '&'||
                                                 '*'||
                                                 '('||
                                                 ')'||
                                                 '_'||
                                                 '@'||
                                                 '='||
                                                 '-'||
                                                 '`'||
                                                 '{'||
                                                 '}'||
                                                 '|'||
                                                 '\'||
                                                 ']'||
                                                 '['||
                                                 '?'||
                                                 ':'||
                                                 ';'||
                                                 '<'||
                                                 '>'||
                                                 '"'||
                                                 '/'||
                                                 '.'||
                                                 '8'||
                                                 ',';
--
g_crypto_salt                  raw(32);
-------------------------------
-- the current users company ID
--
g_security_group_id            number := 0;


--------------------------------------------------------------------
-- the Oracle Schema whos rights and privs will be used to parse SQL
--
g_parse_as_schema              varchar2(255) := null;  -- owner of the application, use this owner to parse SQL


---------------------------------------------------
-- to avoid parsing as the flows schema supper user
g_parse_as_schema_override     varchar2(255) := null;  -- for app builder set this global to avoid parsing as flows schema

------------------------------------------------------------------------------
-- the schema where the APEX$ tables are located for the current workspace
g_apex$_schema                 varchar2(255) := null;

-----------------------------------------------------
-- the security group id (aka company id) of the flow
--
g_curr_flow_security_group_id  number := null;

--
-- URL Tampering Prevention
--
g_page_protection_enabled       boolean := false;
g_page_protection_level         varchar2(1) := null;
g_page_checksum_type            varchar2(1) := null;
g_page_checksum                 varchar2(255) := null;
g_application_checksum_salt     raw(255);
g_direct_branch                 boolean := false;

--
-- constants and variables to support fnd account access
--
AUTH_NORMAL                   constant pls_integer := 0;
AUTH_UNKNOWN_USER             constant pls_integer := 1;
AUTH_ACCOUNT_LOCKED           constant pls_integer := 2;
AUTH_ACCOUNT_EXPIRED          constant pls_integer := 3;
AUTH_PASSWORD_MISMATCH        constant pls_integer := 4;
AUTH_PASSWORD_FIRST_USE       constant pls_integer := 5;
AUTH_PWD_ATTEMPTS_EXCEEDED    constant pls_integer := 6;
AUTH_INTERNAL_ERROR           constant pls_integer := 7;
AUTH_UNKNOWN_WORKSPACE        constant pls_integer := 8;
AUTH_LOGIN_ATTEMPTS_THROTTLED constant pls_integer := 9;


g_authenticate_user_action     boolean;        -- set when wwv_flow_security.authenticate is executing
g_authentication_result        number;         -- coded result of wwv_flow_security.authenticate
g_custom_authentication_status varchar2(4000); -- may be set by author of custom authentication function using api

--==============================================================================
-- Translate company name to the security group id
--==============================================================================
function find_security_group_id (
     p_company  in varchar2 default null)
     return number;

--==============================================================================
--
--==============================================================================
function find_first_schema (
     p_security_group_id in number)
     return varchar2;

--==============================================================================
--
--==============================================================================
function find_company_name (
     p_security_group_id in number)
     return varchar2;

--==============================================================================
-- returns the apex builder authentication mode
--==============================================================================
function apex_builder_authentication return varchar2;

--
-- C O O K I E
--

--==============================================================================
--
--==============================================================================
function cookie_user
    return varchar2;

--==============================================================================
-- determine if application developer can edit the current flow
--
-- Identify the developer from the session cookie. The
-- wwv_flow_security.cookie_user function will return the user only if an
-- session cookie exists matching wwv_flow_security.g_security_group_id and the
-- session encoded in the cookie still exists in wwv_flow_sessions$ and also
-- has matching criteria.
--==============================================================================
function cookie_user_can_dev_curr_flow(
    p_user in varchar2 default null)
   return boolean;

--==============================================================================
-- return the default cookie name
--==============================================================================
function get_default_cookie_name (
    p_flow_id           in number,
    p_security_group_id in number default null )
    return varchar2;

--
-- P L A T F O R M   P R I V S
--
--==============================================================================
--
--==============================================================================
function flow_owner (
    p_flow_id             in number,
    p_security_group_id   in number)
    return varchar2;

--==============================================================================
-- used in 4000, 4050
--==============================================================================
function user_is_internal
   return boolean;

--==============================================================================
-- used in 4000
--==============================================================================
function user_can_develop_flow (
   p_flow_id in number)
   return boolean;

--==============================================================================
--
--==============================================================================
function current_company_can_build (
    p_in_schema in varchar2)
    return boolean;

--==============================================================================
--
--==============================================================================
function current_company_can_parse (
    p_in_schema in varchar2)
    return boolean;

--==============================================================================
--
--==============================================================================
function get_security_group_id (
    p_provisioned_schema in varchar2)
    return number;

--==============================================================================
-- used in 4000, 4350
--==============================================================================
function user_can_develop_any_flow
    return boolean;

--==============================================================================
-- return if p_username has been granted APEX_ADMINISTRATOR_ROLE or is in
-- (wwv_flow.g_flow_schema_owner, SYS, SYSTEM)
--==============================================================================
function has_apex_administrator_role (
    p_username in varchar2 )
    return boolean;
--
--==============================================================================
-- return Y if p_username has been granted APEX_ADMINISTRATOR_ROLE or is in
-- (wwv_flow.g_flow_schema_owner, SYS, SYSTEM)
--==============================================================================
function has_apex_administrator_role_yn (
    p_username in varchar2 )
    return varchar2;
--
--==============================================================================
-- return if p_username has role "DBA"
--==============================================================================
function user_is_dba(
    p_username in varchar2)
    return boolean;

--==============================================================================
-- is the user authenticated to the builder?
--==============================================================================
function user_builder_session_company
    return number;

--==============================================================================
-- return the session id of the development environment.
-- this is used to provide links to the builder with the proper session id
--==============================================================================
function get_builder_session_id
    return number;

--==============================================================================
--
--==============================================================================
procedure session_cookie_info_internal(
    p_user    out varchar2,
    p_session out number,
    p_sgid    out number);

--==============================================================================
-- Verify notification message checksum
--==============================================================================
function verify_notify_msg_checksum
    return boolean;

--==============================================================================
-- Verify print success message checksum
--==============================================================================
function verify_print_msg_checksum
    return boolean;

--==============================================================================
--
--==============================================================================
function authenticated_session(
    p_flow_id           in number,
    p_security_group_id in number,
    p_session_id        in number default null)
    return boolean;

--==============================================================================
-- Checks if page access is from a REMOTE_ADDR IP address
-- that is in the "allow list" represented by the
-- RESTRICT_IP_RANGE preference setting adjustable in the site
-- admin pages for environment preferences.
--
-- used in 4550
--==============================================================================
function ip_check
    return boolean;

--==============================================================================
-- Return the client IP address
--
-- If p_remove_proxies is true, the computation is based on g_remote_addr,
-- g_x_forwarded_for and INBOUND_PROXIES. If Apex detects that it is behind a
-- proxy (g_x_forwarded_for exists and is not equal to g_remote_addr), it
-- removes the proxies from g_x_forwarded_for and returns the rightmost
-- remaining address.
--
-- If p_remove_proxies is false, the function returns g_x_forwarded_concatenated
-- with g_remote_addr.
--==============================================================================
function get_client_ip_address (
    p_remove_proxies in boolean default true )
    return varchar2;

--==============================================================================
-- The DISABLE_ADMIN_LOGIN preference setting
-- can be created and set to YES using the site
-- admin page for environment preferences. If this
-- preference is YES, this function will return true.
--==============================================================================
function disable_admin_login
    return boolean;

--==============================================================================
-- The DISABLE_WORKSPACE_LOGIN preference setting
-- can be created and set to YES using the site
-- admin page for environment preferences. If this
-- preference is YES, this function will return true.
--==============================================================================
function disable_workspace_login
    return boolean;

--==============================================================================
-- used in 4000
--==============================================================================
procedure reset_app_checksum_salt(
    p_flow_id in varchar2);

--##############################################################################
--
-- P A S S W O R D   C H E C K I N G
--
--##############################################################################

--==============================================================================
procedure strong_password_check(
    p_username                    in  varchar2,
    p_password                    in  varchar2,
    p_old_password                in  varchar2,
    p_workspace_name              in  varchar2,
    p_use_strong_rules            in  boolean,
    p_min_length_err              out boolean,
    p_new_differs_by_err          out boolean,
    p_one_alpha_err               out boolean,
    p_one_numeric_err             out boolean,
    p_one_punctuation_err         out boolean,
    p_one_upper_err               out boolean,
    p_one_lower_err               out boolean,
    p_not_like_username_err       out boolean,
    p_not_like_workspace_name_err out boolean,
    p_not_like_words_err          out boolean,
    p_not_reusable_err            out boolean);

--==============================================================================
--
--==============================================================================
function strong_password_validation(
    p_username         in varchar2,
    p_password         in varchar2,
    p_old_password     in varchar2 default null,
    p_workspace_name   in varchar2,
    p_use_strong_rules in boolean default false)
    return varchar2;

--==============================================================================
-- Authenticate a workspace user
--
-- ARGUMENTS
-- * p_user_name               login user name (a workspace user)
-- * p_password                p_user_name's password
-- * p_company                 workspace where p_user_name authenticates to
-- * p_ignore_password         if true, do not check password. this is used for
--                             when the builder is in single-sign-on mode and
--                             p_user_name is just a shadow account.
-- * p_settings_from_workspace if not null, take workspace security settings (
--                             account expiration, max. login failures) from
--                             there instead of from p_company.
--==============================================================================
function authenticate (
    p_user_name               in varchar2 default null,
    p_password                in varchar2 default null,
    p_company                 in varchar2 default null,
    p_ignore_password         in boolean default false,
    p_settings_from_workspace in number default null )
    return boolean;

--==============================================================================
-- return if the given credentials are valid in the workspace
--==============================================================================
function is_workspace_password_valid (
    p_workspace_id     in number,
    p_username         in varchar2,
    p_password         in varchar2 )
    return boolean;

--==============================================================================
-- used in 4050, 4350
--==============================================================================
function get_expired_user_sgid
    return number;

--==============================================================================
-- used in 4050, 4155, 4350
--==============================================================================
function get_expired_user_name
    return varchar2;

--==============================================================================
-- used in 4050, 4155, 4350
--==============================================================================
procedure purge_expired_user_header(
    p_session in number default wwv_flow.g_instance);
--
--==============================================================================
-- Set the system preferences for the wallet.
-- Used for ssl connections with dbms_ldap and utl_mail.
--==============================================================================
procedure set_wallet (
    p_wallet in t_wallet );
--
--==============================================================================
-- Get the system preferences for the wallet.
-- Used for ssl connections with dbms_ldap and utl_mail.
--==============================================================================
function get_wallet
    return t_wallet;

--==============================================================================
-- Return the translated flow_id or fall back to g_flow_id
-- used in tab.sql
--==============================================================================
function get_translated_flow_id
    return number;


--==============================================================================
-- Return p_id with the translated flow id in the decimal places
--==============================================================================
function get_translated_id (
    p_id in number )
    return number;

--==============================================================================
-- used in tab.sql
--==============================================================================
function get_flow_id
    return number;

--==============================================================================
--
--==============================================================================
function prep_url(
    p_url       in varchar2
    ) return varchar2;

--==============================================================================
--
--==============================================================================
function encrypt_session_value (
    p_unencrypted_value    in varchar2 default null)
    return varchar2;

--==============================================================================
--
--==============================================================================
function decrypt_session_value (
    p_encrypted_value      in varchar2 default null)
    return varchar2;

--==============================================================================
--
--==============================================================================
function authorized_url(
    p_url in varchar2 ) return varchar2;

--==============================================================================
-- called from coreins.sql, devins.sql
--==============================================================================
procedure set_internal_cookie_name;

--==============================================================================
-- Set a Resource Manager consumer group for the current database session.
--==============================================================================
procedure set_rm_consumer_group (
    p_consumer_group in varchar2 );

--==============================================================================
-- Returns TRUE if the workspace's host_prefix (a comma-separated list) matches
-- against HTTP_HOST CGI variable or if p_security_group_id equals 10 or if
-- p_host_prefix is empty. If it doesn't match FALSE is returned.
--==============================================================================
function does_host_prefix_match (
    p_security_group_id in number,
    p_host_prefix       in varchar2 )
    return boolean;

--==============================================================================
-- Set g_security_group_id.
--
-- This
-- - activates the workspace's Resource Manager consumer group if one is
--   assigned
-- - checks the workspace's host_prefix (a comma-separated list) against the
--   HTTP_HOST CGI variable and raises an error if host_prefix is set but no
--   list element matches
--==============================================================================
procedure set_g_security_group_id (
    p_security_group_id    in number  default g_security_group_id,
    p_check_host_prefix    in boolean default true,
    p_check_account_status in boolean default true );

--==============================================================================
-- Grant Connect Through APEX_REST_PUBLIC_USER for access to RESTful Services
--==============================================================================
procedure grant_restful_connect;

--==============================================================================
-- Get group_name||'.' for the current workspace
--==============================================================================
function get_workspace_group_prefix (
    p_security_group_id in number default g_security_group_id )
    return varchar2;

--==============================================================================
-- Clear the internal page checksum variable.
--==============================================================================
procedure clear_page_checksum;

--==============================================================================
-- Returns the checksum for a page item value and adds the calculated checksum
-- to the internal page checksum as well to generate a cross check checksum.
--==============================================================================
function get_page_item_value_checksum (
    p_page_submission_id in number,
    p_value              in varchar2 )
    return varchar2;

--==============================================================================
-- Returns the number of page items which have been protected by a call to
-- get_page_item_value_checksum.
-- This function is used by page and region cache to determine if a page or
-- region is cacheable.
--==============================================================================
function get_protected_page_items_count
    return pls_integer;

--==============================================================================
-- Returns the page checksum based on the checksums set by the
-- get_page_item_checksum calls.
--==============================================================================
function get_page_checksum (
    p_page_submission_id in number )
    return varchar2;

--==============================================================================
-- return security settings of workspace.
--==============================================================================
function get_workspace_sec_settings (
    p_security_group_id in number default wwv_flow_security.g_security_group_id,
    p_internal          in boolean default false )
    return t_workspace_sec;

--##############################################################################
--#
--# BEGINNING AND ENDING A REQUEST
--#
--##############################################################################

--==============================================================================
-- at the beginning of a request, configure the sql/hprof and debug mode
--==============================================================================
procedure configure_trace_and_debug (
    p_trace                      in varchar2,
    p_debug                      in varchar2,
    p_alert_if_debug_not_allowed in boolean );

--==============================================================================
-- return whether debug is enabled (set via configure_trace_and_debug)
--==============================================================================
function is_debug_enabled
    return boolean;

--==============================================================================
-- return whether remote debug is enabled (set via configure_trace_and_debug)
--==============================================================================
function is_remote_debug_enabled
    return boolean;

--==============================================================================
-- return the sql or hprof trace mode (set via configure_trace_and_debug)
--==============================================================================
function get_trace_mode
    return varchar2;

--==============================================================================
-- db session init (aka vpd)
--==============================================================================
procedure db_session_init;

--==============================================================================
-- cleanup code at the end the top level request procedure
--==============================================================================
procedure teardown (
    p_trace in varchar2 default null );

--==============================================================================
-- exception handling code at the end of the top level request procedure
--==============================================================================
procedure final_exception_handler (
    p_trace           in varchar2 default null,
    p_show_error_page in boolean default true );

--==============================================================================
-- cleanup code in show, when the request is FSP_SHOW_POPUPLOV
--==============================================================================
procedure teardown_fsp_show_popuplov;

--==============================================================================
-- set info in v$session, via dbms_application_info and
-- dbms_session.set_identifier
--==============================================================================
procedure set_db_session_info;

--==============================================================================
-- Procedure to get owner and name of the PL/SQL procedure
--==============================================================================
procedure who_called_me (
    owner      out varchar2,
    name       out varchar2,
    lineno     out number,
    caller_t   out varchar2 );

--==============================================================================
-- perform initial security checks for show/accept, after the application
-- metadata has been initialized.
--
-- The checks are
-- * app owner is a valid workspace schema
-- * app owner is a valid database schema
-- * FSP_SHOW_POPUPLOV request can be processed
--==============================================================================
procedure check_request_can_be_processed;

--==============================================================================
-- Use wwv_flow.show to initialize the environment, but exits before actually
-- rendering the page. This procedure does not reset global variables, so
-- teardown/final_exception_handler have to be run by the caller.
--
-- ARGUMENTS
-- * p_flow_id               application id
-- * p_flow_step_id          page id
-- * p_instance              session id
-- * p_error_if_unauthorized if true and wwv_flow.show fails to authenticated
--                           the session, raise WWV_FLOW_HELP.UNAUTHORIZED
--==============================================================================
procedure setup_session_via_show (
    p_flow_id               in number,
    p_flow_step_id          in number,
    p_instance              in number,
    p_error_if_unauthorized in boolean default true );

end wwv_flow_security;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_UTILITIES" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2000 - 2012. All Rights Reserved.
--
--    NAME
--      flowu.sql
--
--    DESCRIPTION
--      Application Express utility package.
--
--      Includes:
--      1. JavaScript Generation Utilities
--      2. Array Manipulation Utilities
--      3. Date Utilities
--      4. List of Values (LOV) Utilities
--      5. String Manipulation Function Utilities
--      6. If Then Else (ite) Utility
--      7. URL Utilities
--      8. Check Sum Utility
--      9. Bind Variable Utilities
--     10. Substitution Value Utilities
--
--    NOTES
--      This package contains utility functions for the APEX service.
--
--    MODIFIED   (MM/DD/YYYY)
--     mhichwa    08/04/1999 - Created
--     mhichwa    01/25/2000 - Added inStr_toStr, inStr_fromStr, minimum_free_page
--     mhichwa    01/26/2000 - Added minimum_free_flow
--     mhichwa    02/20/2000 - Added p_ok_to_query to allow popup lov to not query by default
--     mhichwa    03/02/2000 - Added p_popup_lov_type argument
--     mhichwa    03/21/2000 - Added url_decode2 function
--     mhichwa    04/08/2000 - Added procedure show_as_display_only
--     mhichwa    06/09/2000 - Added p_translation to show_as_display_only
--     mhichwa    06/21/2000 - Added procedure show_as_popup_calendar
--     mhichwa    10/31/2000 - Added checksum from tkyte but modified to return numbers
--     mhichwa    11/04/2000 - Added tkyte get binds function
--     mhichwa    11/05/2000 - Added comments and get_using_clause function
--     jkallman   11/15/2000 - Added get_substitution_value function
--     jkallman   11/16/2000 - Added grant to PUBLIC
--     mhichwa    11/20/2000 - Added flow_authentication function
--     mhichwa    02/08/2001 - Added is date (clbeck code)
--     mhichwa    02/13/2001 - Added is number (clbeck code)
--     jkallman   02/13/2001 - Added p_upper_vals to list_mgr_display
--     mhichwa    02/20/2001 - Added function to remove duplicate white space
--     mhichwa    02/24/2001 - Added function to display region name given region id
--     mhichwa    02/28/2001 - Added striphtml function provided by sdillon
--     jkallman   03/02/2001 - Added return key support in gen_popup_list, show_as_popup
--     mhichwa    03/05/2001 - Added get_display_value_given_lov
--     sdillon    03/15/2001 - Added pause
--     sdillon    03/22/2001 - Added is valid identifier function
--     mhichwa    03/29/2001 - Added my_url function and get cookie username given id
--     mhichwa    03/09/2001 - Added p company to gen popup list
--     mhichwa    05/04/2001 - Added fast replace functions (provided by tkyte)
--     mhichwa    06/22/2001 - Added remove trailing whitespace function
--     mhichwa    06/22/2001 - Added get_column_headings function
--     mhichwa    06/26/2001 - Changed vc4000Array to vc 32767
--     mhichwa    06/30/2001 - Enhanced comments
--     mhichwa    07/02/2001 - Added remove white space function provided by tkyte
--     cbcho      08/17/2001 - Added function show_line_number
--     jkallman   08/23/2001 - Added show_as_textarea_with_controls
--     jkallman   10/25/2001 - Added is_valid_alias
--     mhichwa    11/27/2001 - Added is_numeric
--     mhichwa    12/05/2001 - Added radiogroup 2
--     sspadafo   12/06/2001 - Added parse_query_string procedure
--     jkallman   01/16/2002 - Added time components to show_as_popup_calendar
--     cbcho      02/12/2002 - Added g_data_type and get_data_type function for qbe
--     sspadafo   02/16/2002 - Changed parse_query_string param types
--     mhichwa    02/18/2002 - Per rmattama instruction: Added p_attributes to list_mgr_display
--     mhichwa    02/18/2002 - Per rmattama instruction: added p_attributes to show_as_display_only
--     rmattama   02/18/2002 - Added support for p_attributes2
--     cbcho      02/28/2002 - Added g_xml_clob for xml data upload
--     cbcho      04/18/2002 - Changed p_show_extra default to 'YES' in show_as_checkbox and show_as_combobox
--     cbcho      04/19/2002 - Changed p_show_extra default to 'YES' in show_as_radio_group, show_as_radio_group2, show_as_multiple_select
--     cbcho      04/22/2002 - Removed show extra value from show_as_checkbox
--     mhichwa    05/21/2002 - Added p_filter_first
--     mhichwa    06/27/2002 - Added parse function
--     tmuth      10/04/2002 - Added p_item1 and p_item2 to list_mgr_display to separate the id from the attributes
--                           - as there are several items displayed by this that need different ids for JavaScript
--     sspadafo   04/24/2003 - Added p_lov_checksum to gen_popup_list parameters (Bug 2792894)
--     tmuth      05/06/2003 - Added p_item_name to show_as_radio_group and show_as_radio_group2
--     tmuth      05/13/2003 - Added p_item_name to show_as_checkbox
--     msewtz     06/19/2003 - Added is_valid_lov_query (bug 3007663)
--     mhichwa    07/11/2003 - Added extracthtml function written by jstraub (bug 3048540)
--     jkallman   07/12/2003 - Added p_application_format to show_as_popup_calendar
--     klrice     08/13/2003 - Added quick_link FUNCTION
--     klrice     08/13/2003 - reformatted FUNCTION quick_link
--     jkallman   08/22/2003 - Added clob_to_varchar2
--     jkallman   08/25/2003 - Added escape_url (Bug 3101477)
--     sspadafo   09/01/2003 - Added blob_to_clob (3047575)
--     sspadafo   09/02/2003 - Added p_offset to clob_to_varchar2 (3047575)
--     klrice     09/05/2003 - Added lov_checksum
--     tmuth      10/17/2003 - Added p_item_name parameter to show_as_textarea_with_controls
--     jkallman   10/27/2003 - Added support for p_nls_language in show_as_popup_calendar (Bug 3219231)
--     sspadafo   10/27/2003 - Added prepare_url function (Bug 3187964)
--     jkallman   11/05/2003 - Change p_url_charset in escape_url to default to null
--     sspadafo   11/05/2003 - Change p_url_charset in prepare_url to default to null
--     jkallman   11/13/2003 - Add p_escape_reserved to escape_url
--     msewtz     02/18/2004 - Added lov_value_array (bugs 3174478, 3119694)
--     sspadafo   03/12/2003 - Add p_escape parameter to parse function (Bug 2998081)
--     sspadafo   03/28/2004 - Add get_cgi_query_string_decoded function (Bug 3535416)
--     jkallman   05/28/2004 - Added pick_date_format_mask
--     klrice     06/02/2004 - added process_calendar_date
--     klrice     06/10/2004 - Added public calls for changing the calendar date
--     mhichwa    07/28/2004 - Changed max lov elements from 10000 to 1000000
--     sspadafo   02/08/2005 - Added p_checksum_type to prepare_url for URL tampering feature
--     sspadafo   02/08/2005 - Added page_checksum function for URL tampering feature
--     jkallman   02/23/2005 - Added function clob_to_blob
--     sspadafo   02/26/2005 - Added globals g_val_num, g_val_vc2 and functions savekey_num, keyval_num, savekey_vc2, keyval_vc2 for use in correlated subqueries
--     jkallman   05/19/2005 - Changed parameter p_nls_language to p_lang in show_as_popup_calendar
--     jkallman   06/28/2005 - Added function get_clob_md5
--     jkallman   07/14/2005 - Added procedure gen_filter_escape
--     sspadafo   10/24/2005 - Added procedure check_sgid (Bug 4692046)
--     msewtz     02/02/2006 - added function is_build_option_enabled
--     sspadafo   02/27/2006 - Added p_quote parameter to is_valid_identifier (Bug 5051084)
--     sspadafo   04/25/2006 - Added db_version, db_compatibility functions
--     sspadafo   04/26/2006 - Added db_version_is_at_least and db_version_is_at_least_i functions
--     mhichwa    05/01/2006 - Added p_item_id to gen_popup_list bug 2997135
--     mhichwa    05/01/2006 - Added p_item_id to show_as_popup bug 2997135
--     mhichwa    05/08/2006 - Added p_element_attributes to show_as_popup for 508
--     mhichwa    05/15/2006 - Added p_item_id to list_mgr_display (bug 5225858)
--     mhichwa    05/16/2006 - Added cache functions and procedures to manipulate page caching
--     mhichwa    06/28/2006 - Added p_null_display_value and p_display_extra arguments to show_as_display_only procedure bug (5327747)
--     mhichwa    06/29/2006 - Added export application and page to clob functions from jkallman java class
--     jstraub    08/03/2006 - Added function db_edition_is_xe
--     cbcho      12/01/2006 - Added gen_popup_color, show_as_popup_color
--     sathikum   12/29/2006 - Added weekly_calendar, daily_calendar
--     jkallman   01/02/2007 - Add p_application_id to show_as_popup_calendar (Bug 5729666)
--     mhichwa    01/02/2007 - Added region caching funcitonality
--     mhichwa    01/05/2007 - Added function count_stale_regions
--     rvallam    01/08/2007 - Added new function show_as_shuttle
--     ashiverm   01/09/2007 - Added new procedure show_as_textarea_html_editor
--     ashiverm   01/11/2007 - Added new function html_editor_language
--     rvallam    01/12/2007 - Added sort controls to show_as_shuttle
--     sathikum   01/17/2007 - Added month_calendar procedure
--     jkallman   01/18/2007 - Added host_url
--     jkallman   01/18/2007 - Add p_security_group_id to show_as_popup_calendar
--     sathikum   01/19/2007 - Added parameter to weekly_calendar,month_calendar & Daily_calendar
--     jkallman   01/26/2007 - Added p_format_mask to pick_date_format_mask
--     cbackstr   01/29/2007 - added id attribute to checkbox layout table
--     cbackstr   01/29/2007 - enhanced color picker popup
--     mhichwa    02/02/2002 - added procedure bulk_save_session_state
--     jkallman   02/08/2007 - Added procedure lob_replace
--     rvallam    02/14/2007 - Modifed indentation/added IN mode to parameters in show_as_shuttle
--     cbcho      02/16/2007 - Added function array_element
--     cbackstr   02/23/2007 - Simplified Color Picker per user feedback (Bug 5860057)
--     jkallman   02/26/2007 - Add argument p_raise to clob_to_varchar2
--     jkallman   03/09/2007 - Add b64_encode and encode filename (Bug 5924990)
--     sspadafo   04/27/2007 - Added overloaded version of function cache_get_date_cached for regions (Bug 5996963)
--     mhichwa    12/04/2007 - Added get_theme_file
--     mhichwa    12/05/2007 - Added show_ir_help
--     mhichwa    12/06/2007 - Made ir help context sensitive
--     msewtz     01/07/2008 - Added get_print_document
--     mhichwa    01/10/2008 - removed code
--     msewtz     01/24/2008 - moved is_valid_lov_query to wwv_flow_f4000_util (bug 6707530)
--     sspadafo   01/26/2008 - Replaced g_query declaration with g_query_hold (bug 6707923)
--     mhichwa    01/30/2008 - Enhanced comments
--     jkallman   02/04/2008 - Added string_to_table3
--     msewtz     02/06/2008 - Added overloaded versions of download_print_document and get_print_document to support supplying XML data in CLOB format
--     madelfio   02/27/2008 - Added p_lang parameter in show_ir_help (bug 6851312)
--     cbackstr   04/16/2008 - updates to html css and javascript effecting different popup item types (Bug 6976538)
--     jkallman   05/30/2008 - Change lob_replace to use nocopy parameter modifier
--     mhichwa    12/31/2008 - Added p_save_session_state_yn argument to prepare_url to save state on redirect branches
--     jstraub    01/21/2009 - Added p_export_saved_reports to export_application_to_clob
--     pawolf     03/23/2009 - Added get_excel_mime_type and print_download_header
--     sathikum   05/11/2009 - Added procedure Custom_Calendar
--     pawolf     08/17/2009 - Added string_to_table4
--     cbcho      11/11/2009 - Added p_export_ir_public_reports,p_export_ir_notifications to export_application_to_clob
--     arayner    11/12/2009 - Added g_null_map global for storing page elements that have a developer defined null value
--     cbcho      11/12/2009 - Renamed p_export_saved_reports to p_export_ir_private_reports in export_application_to_clob
--     arayner    11/12/2009 - Added add_null_map procedure
--     arayner    11/12/2009 - Changed g_null_map to use associative array
--     arayner    11/17/2009 - Replaced g_null_map with a record structure t_null_value_entry, to support different types of null value entry (ITEM or COLUMN), also renamed add_null_map procedure to add_null_value_entry
--     pawolf     01/13/2010 - Added pick_date_classic_format_mask
--     jstraub    01/13/2010 - Added export_workspace_to_clob
--     sathikum   02/01/2010 - Adding jQueryUI Date Picker related functions
--     jstraub    02/12/2010 - Exposed get_javascript_date_format in package spec
--     pawolf     02/24/2010 - Added export for feedback
--     sathikum   02/25/2010 - Added get_time_format to determine time display and format for datepicker
--     arayner    03/24/2010 - Added show_image procedure to handle generating image HTML in a more accessible way
--     arayner    03/24/2010 - Added p_anchor_id parameter to the show_image procedure
--     arayner    04/07/2010 - Added p_attributes parameter to show_image procedure
--     sbkenned   04/22/2010 - Added p_help_type to show_ir_help
--     arayner    04/23/2010 - Removed show_image procedure and added simpler show_icon
--     jkallman   05/13/2010 - Removed redirect_url from package specification (Bug 9708953)
--     jstraub    10/12/2010 - Added wwv_flow_team_tag_sync (bug 10104409)
--     pawolf     10/29/2010 - Bug# 10247107: added table_to_string3
--     pawolf     11/26/2010 - Bug# 9789152: Removed gen_popup_color
--     jstraub    12/15/2010 - Added is_available_application_id
--     msewtz     01/25/2011 - Added p_http_hdr_attr1 to print_download_header to allow for additional http header lines
--     cbcho      01/31/2011 - Added export_ws_app_to_clob (bug 10055338)
--     cneumuel   03/30/2011 - Overloaded table_to_string with vc4000Array argument type
--     jkallman   04/05/2011 - Added lob_replace supporting CLOBs
--     msewtz     04/21/2011 - Updated gen_popup_list to support show nulls for tabular form columns (bug 10176505)
--     pawolf     04/27/2011 - Removed t_temp_lov_data and t_temp_lov_value from package spec and moved it to tab.sql
--     pawolf     04/28/2011 - Fixed bug of uninitialized collection in populate_temp_lov_table
--     pawolf     05/02/2011 - Moved object types into it's own file types.sql
--     pawolf     05/02/2011 - Added redirect_url (feature# 694)
--     pawolf     05/05/2011 - Restored new color picker
--     pawolf     05/27/2011 - Added is_public_user
--     arayner    06/01/2011 - Moved get_layout_table_attributes from wwv_flow_utilities to this package (bug 12431813)
--     cneumuel   06/03/2011 - Moved get_clob_textarea_value from wwv_flow_f4000_plugins to this package
--     jstraub    07/06/2011 - Added p_export_translations to export_application_to_clob to support exporting translations in APEXExport
--     cneumuel   07/11/2011 - Added unescape_url
--     pawolf     07/13/2011 - Removed parameter p_set_session_id_to_zero from rewrite_query_string (bug# 11855392)
--     jkallman   10/26/2011 - Added parameter p_check_reserved to is_available_application_id
--     jstraub    11/03/2011 - Added export_files_to_clob
--     jstraub    11/09/2011 - Added p_include_script_header to export_workspace (bug 13355663)
--     cbcho      11/29/2011 - Added load_apex_archive_file
--     jstraub    11/30/2011 - Reverted changes for bug 13355663, now handled in APEXExport with fix for bug 13375538
--     pawolf     02/01/2012 - Added get_temp_lov_query and removed populate_temp_lov (bug# 13640940)
--     pawolf     02/02/2011 - Added parameter p_use_template to get_temp_lov_query (bug 13640940)
--     pawolf     02/28/2012 - Added placeholder support to get_date_picker (feature# 837)
--     sathikum   03/06/2012 - Added agenda_calendar procedure (#812)
--     cneumuel   04/03/2012 - Prefixed sys packages with schema name to avoid public synonyms (bug #12338050)
--     jstraub    04/26/2012 - Added export_restful_to_clob (bug 14008382)
--     pawolf     05/09/2012 - Added emit_popup_lov_header (feature# 821)
--     cneumuel   05/31/2012 - Added format
--     arayner    06/15/2012 - Added p_item_label to show_as_popup_color (bug 14198566)
--     cneumuel   07/02/2012 - Added get_app_id_reserved_reason (bug #14241822)
--     cneumuel   08/07/2012 - Added get_temp_lov_index, for static lov performance improvement (bug #14191581)
--     hfarrell   11/27/2012 - Added is_valid_application_name (bug #15889878)
--     cneumuel   12/07/2012 - Changed sample domains in docs to example.com (bug #15963390)
--     cbcho      01/24/2013 - Extended export_page_to_clob to accept export of Interactive components (bug #16224861)
--     cbcho      01/30/2013 - Changed minimum_free_page to accept p_start_page (bug #16238360)
--     cbcho      02/25/2013 - Added t_dependent_object, t_dependent_object_list and get_dependency_objects (bug #16397724)
--     cbcho      02/26/2013 - Changed t_dependent_object to reference user_dependencies column type (bug #16397724)
--     vuvarov    03/01/2013 - Removed grant to public
--     cbcho      03/06/2013 - Removed p_schema from get_dependency_objects (bug #16397724)
--     jstraub    03/21/2013 - Added p_minimal to export_workspace and export_workspace_to_clob
--
--------------------------------------------------------------------------------


-------------------
-- Flow Utilities Public Data Types
--
    type vc_assoc_arr  is table of varchar2(32767) index by varchar2(255);


    type t_null_value_entry is record (
        entry_type   varchar2(255),
        entry_name   varchar2(255),
        entry_value  varchar2(255));

    type t_null_value_list is table of t_null_value_entry index by pls_integer;

    type t_dependent_object is record (
        owner              sys.user_dependencies.referenced_owner%type,
        object_type        sys.user_dependencies.referenced_type%type,
        object_name        sys.user_dependencies.referenced_name%type );

    type t_dependent_object_list is table of t_dependent_object index by binary_integer;

-------------------
-- Global Variables
--
    empty_vc_arr        wwv_flow_global.vc_arr2;
    g_value             wwv_flow_global.vc_arr2;
    g_display           wwv_flow_global.vc_arr2;
    g_query_hold        varchar2(32767) := null;
    g_data_type         varchar2(256) := null;
    g_xml_clob          clob;
    g_val_num           number;
    g_val_vc2           varchar2(4000);
    g_null_map          vc_assoc_arr;
    g_null_value_list   t_null_value_list;

procedure bulk_save_session_state (
    p_value   in varchar2,
    p_item_01 in varchar2 default null,
    p_item_02 in varchar2 default null,
    p_item_03 in varchar2 default null,
    p_item_04 in varchar2 default null,
    p_item_05 in varchar2 default null,
    p_item_06 in varchar2 default null,
    p_item_07 in varchar2 default null,
    p_item_08 in varchar2 default null,
    p_item_09 in varchar2 default null,
    p_item_10 in varchar2 default null,
    p_item_11 in varchar2 default null,
    p_item_12 in varchar2 default null,
    p_item_13 in varchar2 default null,
    p_item_14 in varchar2 default null,
    p_item_15 in varchar2 default null,
    p_item_16 in varchar2 default null,
    p_item_17 in varchar2 default null,
    p_item_18 in varchar2 default null,
    p_item_19 in varchar2 default null,
    p_item_20 in varchar2 default null,
    p_item_21 in varchar2 default null,
    p_item_22 in varchar2 default null,
    p_item_23 in varchar2 default null,
    p_item_24 in varchar2 default null,
    p_item_25 in varchar2 default null,
    p_item_26 in varchar2 default null,
    p_item_27 in varchar2 default null,
    p_item_28 in varchar2 default null,
    p_item_29 in varchar2 default null,
    p_item_30 in varchar2 default null,
    p_item_31 in varchar2 default null,
    p_item_32 in varchar2 default null,
    p_item_33 in varchar2 default null,
    p_item_34 in varchar2 default null,
    p_item_35 in varchar2 default null,
    p_item_36 in varchar2 default null,
    p_item_37 in varchar2 default null,
    p_item_38 in varchar2 default null,
    p_item_39 in varchar2 default null,
    p_item_40 in varchar2 default null,
    p_item_41 in varchar2 default null,
    p_item_42 in varchar2 default null,
    p_item_43 in varchar2 default null,
    p_item_44 in varchar2 default null,
    p_item_45 in varchar2 default null,
    p_item_46 in varchar2 default null,
    p_item_47 in varchar2 default null,
    p_item_48 in varchar2 default null,
    p_item_49 in varchar2 default null,
    p_item_50 in varchar2 default null,
    p_set_as_preference  in varchar2 default 'N')
    ;



-------------------------------------------------------------------------------
-- JavaScript Generation Utilities
--
--


procedure open_noscript
    -- Generates javascript that...
    --
    --
    ;

function  open_noscript
    -- Generates javascript that...
    --
    --
    return varchar2
    ;

procedure close_noscript
    -- Generates javascript that...
    --
    --
    ;

function close_noscript
    -- Generates javascript that...
    --
    --
    return varchar2
    ;

procedure open_javascript (
    -- Generates javascript that...
    --
    --
    version varchar2 default '1.1')
    ;

function open_javascript (
    -- Generates javascript that...
    --
    --
    version varchar2 default '1.1')
    return varchar2
    ;

procedure close_javascript
    -- Generates javascript that...
    --
    --
    ;

function close_javascript
    -- Generates javascript that...
    --
    --
    return varchar2
    ;

procedure add_null_value_entry (
    -- Generates javascript that...
    --
    --
    p_entry_type    varchar2,
    p_entry_name    varchar2,
    p_entry_value   varchar2 )
    ;

procedure append_to_list
    -- Generates javascript that...
    --
    --
    ;

procedure delete_from_list
    -- Generates javascript that...
    --
    --
    ;

procedure delete_list_element
    -- Generates javascript that...
    --
    --
    ;

function delete_list_element
    -- Generates javascript that...
    --
    --
    return varchar2
    ;


-------------------------------------------------------------------------------
-- Array Manipulation Utilities
--

function in_list (
    p_value      varchar2,
    p_array      wwv_flow_global.vc_arr2)
    return boolean
    ;


-------------------------------------------------------------------------------
-- Date Utilities
--

function time_since (
    --
    --
    --
    p_date     in date)
    return varchar2
    ;


-------------------------------------------------------------------------------
-- Text Area with Controls Utilities
--

procedure show_as_textarea_with_controls(
    p_value      in varchar2 default null,
    p_name       in varchar2 default null,
    p_height     in varchar2 default null,
    p_size       in varchar2 default null,
    p_attributes in varchar2 default null,
    p_item_name  in varchar2 default null )
    ;


-------------------------------------------------------------------------------
-- Text Area with HTML Editor
--

function html_editor_language
    -- Checks for html editor's specified/default language...
    --
    --
    return varchar2
    ;

procedure show_as_textarea_html_editor(
    p_value      in varchar2 default null,
    p_name       in varchar2 default null,
    p_height     in varchar2 default null,
    p_size       in varchar2 default null,
    p_attributes in varchar2 default null,
    p_toolbarset in varchar2 default null,
    p_item_name  in varchar2 default null )
    ;


-------------------------------------------------------------------------------
-- List of Values (LOV) Utilities
--

procedure list_mgr_display (
    p_lov          in varchar2 default null,
    p_popup_lov_type in varchar2 default 'POPUP',
    p_name         in varchar2 default null,
    p_text_name    in varchar2 default null,
    p_value        in wwv_flow_global.vc_arr2,
    p_edit_mode    in boolean,
    p_upper_vals   in boolean default true,
    p_form_index   in number default 0,
    p_attributes   in varchar2 default null,
    p_item1        in varchar2 default null,
    p_item2        in varchar2 default null,
    p_item_id      in varchar2 default null)
    ;


procedure show_as_display_only (
    p_lov                in varchar2 default null,
    p_value              in varchar2 default null,
    p_translation        in varchar2 default null,
    p_attributes         in varchar2 default null,
    p_null_display_value in varchar2 default null,
    p_display_extra      in varchar2 default null)
    ;

procedure show_as_combobox (
    p_lov          in varchar2,
    p_value        in varchar2 default null,
    p_name         in varchar2 default null,
    p_height       in varchar2 default null,
    p_show_null    in varchar2 default null,
    p_null_text    in varchar2 default '%',
    p_null_value   in varchar2 default '%null%',
    p_show_extra   in varchar2 default 'YES',
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in number   default 1000000,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO')
    ;

procedure show_as_multiple_select (
    p_lov          in varchar2,
    p_value        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_name         in varchar2 default null,
    p_show_null    in varchar2 default null,
    p_null_text    in varchar2 default '%',
    p_null_value   in varchar2 default '%null%',
    p_height       in varchar2 default null,
    p_show_extra   in varchar2 default 'YES',
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in number   default 1000000,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO')
    ;

procedure show_as_multiple_select2 (
    p_lov          in varchar2,
    p_value        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_name         in varchar2 default null,
    p_show_null    in varchar2 default null,
    p_null_text    in varchar2 default '%',
    p_null_value   in varchar2 default '%null%',
    p_height       in varchar2 default null,
    p_show_extra   in varchar2 default 'YES',
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in number   default 1000000,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO')
    ;

procedure show_as_radio_group (
    --
    -- Standard radio group
    --
    p_lov          in varchar2,
    p_value        in varchar2 default null,
    p_name         in varchar2 default null,
    p_show_null    in varchar2 default null,
    p_null_text    in varchar2 default '%',
    p_null_value   in varchar2 default '%null%',
    p_cols         in varchar2 default null,
    p_show_extra   in varchar2 default 'YES',
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in varchar2 default null,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO',
    p_attributes2  in varchar2 default null,
    p_item_name    in varchar2 default null)
    ;

procedure show_as_radio_group2 (
    --
    -- same as radiogroup except radio group is shown without an inline html table
    --
    p_lov          in varchar2,
    p_value        in varchar2 default null,
    p_name         in varchar2 default null,
    p_show_null    in varchar2 default null,
    p_null_text    in varchar2 default '%',
    p_null_value   in varchar2 default '%null%',
    p_cols         in varchar2 default null,
    p_show_extra   in varchar2 default 'YES',
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in varchar2 default null,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO',
    p_attributes2  in varchar2 default null,
    p_item_name    in varchar2 default null)
    ;

procedure show_as_checkbox (
    p_lov          in varchar2,
    p_value        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_name         in varchar2 default null,
    p_cols         in varchar2 default null,
    p_show_extra   in varchar2 default null,
    p_extra_text   in varchar2 default null,
    p_onBlur       in varchar2 default null,
    p_onChange     in varchar2 default null,
    p_onFocus      in varchar2 default null,
    p_max_elements in number   default 1000000,
    p_attributes   in varchar2 default null,
    p_translation  in varchar2 default 'NO',
    p_attributes2  in varchar2 default null,
    p_item_name    in varchar2 default null)
    ;

procedure gen_popup_list (
    p_name                    in varchar2,
    p_lov                     in varchar2,
    p_lov_checksum            in varchar2,
    p_element_index           in varchar2,
    p_form_index              in varchar2,
    p_filter                  in varchar2,
    p_escape_html             in varchar2 default null,
    p_max_elements            in varchar2 default null,
    p_before_field_field_text in varchar2 default null,
    p_after_field_field_text  in varchar2 default null,
    p_title                   in varchar2 default null,
    p_image                   in varchar2 default null,
    p_help                    in varchar2 default null,
    p_eval_value              in varchar2 default null,
    p_request                 in varchar2 default null,
    p_min_row                 in number   default 1,
    p_translation             in varchar2 default 'NO',
    p_return_key              in varchar2 default 'NO',
    p_hidden_elem_name        in varchar2 default null,
    p_elem_id                 in varchar2 default null,
    p_hidden_elem_id          in varchar2 default null,
    --
    p_ok_to_query             in varchar2 default 'YES',
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_session_id              in number   default null,
    p_company                 in number   default null,
    p_item_id                 in varchar2 default null,
    p_column_id               in number   default null)
    ;

procedure show_as_popup_calendar (
    p_request                 in varchar2 default null,
    p_title                   in varchar2 default null,
    p_yyyy                    in varchar2 default null,
    p_mm                      in varchar2 default null,
    p_dd                      in varchar2 default null,
    p_hh                      in varchar2 default null,
    p_mi                      in varchar2 default null,
    p_pm                      in varchar2 default null,
    p_element_index           in varchar2 default null,
    p_form_index              in varchar2 default null,
    p_date_format             in varchar2 default 'MM/DD/YYYY',
    p_bgcolor                 in varchar2 default '#336699',
    p_white_foreground        in varchar2 default 'Y',
    p_application_format      in varchar2 default 'N',
    p_lang                    in varchar2 default null,
    p_application_id          in varchar2 default null,
    p_security_group_id       in varchar2 default null)
    ;

procedure show_as_popup_color (
    p_item_name         in varchar2 default null,
    p_name              in varchar2 default null,
    p_value             in varchar2 default null,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_element_index     in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_item_id           in varchar2 default null,
    p_element_attributes in varchar2 default null,
    p_item_label        in varchar2 default null)
    ;

procedure show_as_popup (
    p_lov               in varchar2,
    p_name              in varchar2 default null,
    p_value             in varchar2 default null,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'NO',
    p_hidden_elem_name  in varchar2 default null,
    p_filter_first_fetch in varchar2 default 'NO',
    p_item_id           in varchar2 default null,
    p_element_attributes in varchar2 default null,
    p_item_name in varchar2 default null)
    ;

function show_as_popup (
    p_lov               in varchar2,
    p_name              in varchar2 default null,
    p_value             in varchar2 default null,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'NO',
    p_hidden_elem_name  in varchar2 default null,
    p_filter_first_fetch in varchar2 default 'NO',
    p_item_id           in varchar2 default null,
    p_element_attributes in varchar2 default null,
    p_item_name in varchar2 default null)
    return varchar2
    ;

function static_to_query (
    p_lov                   in varchar2 default null)
    return varchar2
    ;


-------------------------------------------------------------------------------
-- String Manipulation Function Utilities
--

function remws(
    --
    -- Given a string remove the lead, trailing, or leading and trialing whitespace.
    --
    -- Arguments:
    --   p_str   = any text string
    --   p_where = B for both leading and trailing
    --             L for leading
    --             T for trailing
    --
    p_str in varchar2,
    p_where in varchar2 default 'B' )
    return varchar2
    ;

function remove_trailing_whitespace (
    --
    -- Given a string remove trailing chr 10, chr 13s and spaces.
    -- Also removes leading whitespace.
    --
    p_str in varchar2 )
    return varchar2
    ;

function string_to_table (
    --
    --
    --
    str in varchar2,
    sep in varchar2 default ':')
    return wwv_flow_global.vc_arr2
    ;

function string_to_table2 (
    --
    --
    --
    str in varchar2,
    sep in varchar2 default ':')
    return wwv_flow_global.vc_arr2
    ;

function string_to_table3 (
    --
    --
    --
    str in varchar2,
    sep in varchar2 default ':')
    return sys.wwv_dbms_sql.vc_arr2
    ;

--==============================================================================
-- Returns p_str as a pl/sql table seperated by the specified list of seperators.
-- The found seperator will also be included in the result array if p_include_sep
-- is true.
-- Only the first occurrense of the seperator is searched if p_first_occurrense is
-- true.
--
-- Example:
--
-- l_result_list := wwv_flow_utilities.string_to_table4 (
--                      'this#SEP1#is#SEP2#a test',
--                      vc4000Array('#SEP1', '#SEP2#') );
--
-- Will result in an array of
--   this
--   #SEP1#
--   is
--   #SEP2#
--   a test
--==============================================================================
function string_to_table4 (
    p_str              in varchar2,
    p_sep_list         in vc4000Array,
    p_include_sep      in boolean := true,
    p_first_occurrense in boolean := true )
    return sys.wwv_dbms_sql.vc_arr2
    ;

--==============================================================================
-- Returns the values of the array t as a concatenated string separated by s.
-- As long as the result contains a value, the separator will always be appended.
--
-- Note: If an error occurs during concatenating the string, for example the
--       result gets to long, only the last valid value will be returned.
--==============================================================================
function table_to_string (
    --
    --
    --
    t in wwv_flow_global.vc_arr2,
    s in varchar2 default ':')
    return varchar2
    ;

--==============================================================================
-- Returns the values of the array t as a concatenated string separated by s.
-- As long as the result contains a value, the separator will always be appended.
--
-- Note: If an error occurs during concatenating the string, for example the
--       result gets to long, only the last valid value will be returned.
--==============================================================================
function table_to_string (
    --
    --
    --
    t in vc4000Array,
    s in varchar2 default ':')
    return varchar2
    ;

--==============================================================================
-- Returns the values of the array t as a concatenated string separated by s.
-- If the separator is not a colon, any colons in the values are escaped with &#58;
--
-- Note: If an error occurs during concatenating the string, for example the
--       result gets to long, only the last valid value will be returned.
--==============================================================================
function table_to_string2 (
    --
    --
    --
    t in wwv_flow_global.vc_arr2,
    s in varchar2 default ':')
    return varchar2
    ;

--==============================================================================
-- Returns the values of the array t as a concatenated string separated by s.
--==============================================================================
function table_to_string3 (
    t in wwv_flow_global.vc_arr2,
    s in varchar2 default ':' )
    return varchar2;

--==============================================================================
-- Formatted printing, inspired by C's sprintf and utl_lms.format_message
--
-- Returns p_message after replacing
-- * each <n>th occurrence of %s with p<n>
-- * each occurrence of %<n> with p<n>
-- If p_max_length is not null, substr(p<n>,1,p_arg_max_length) is used instead
-- of p<n>.
--
-- Examples:
--   '1+2=three' = wwv_flow_utilities.format('%s+%s=%s', 1, 2, 'three')
--   '1+2=three' = wwv_flow_utilities.format('%1+%2=%0', 'three', 1, 2)
--==============================================================================
function format (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p10          in varchar2    default null,
    p11          in varchar2    default null,
    p12          in varchar2    default null,
    p13          in varchar2    default null,
    p14          in varchar2    default null,
    p15          in varchar2    default null,
    p16          in varchar2    default null,
    p17          in varchar2    default null,
    p18          in varchar2    default null,
    p19          in varchar2    default null,
    p_max_length in pls_integer default 1000 )
    return varchar2;

--==============================================================================
function instr_tostr (
    --
    --
    --
    p_instr             in varchar2 default null,
    p_tostr             in varchar2 default null)
    return varchar2
    ;

--==============================================================================
function instr_fromstr (
    --
    --
    --
    p_instr             in varchar2 default null,
    p_fromstr           in varchar2 default null)
    return varchar2
    ;

--==============================================================================
function striphtml(
    --
    --
    --
    p_html        in varchar2)
    return varchar2
    ;

--==============================================================================
function is_numeric (
    --
    --
    --
    p_str in varchar2 default null)
    return boolean
    ;


-------------------------------------------------------------------------------
-- If Then Else (ite) Utility
--
function ite (
    --
    --
    --
    b boolean,
    t varchar2,
    f varchar2)
    return varchar2
    ;


-------------------------------------------------------------------------------
-- URL Utilities
--

function urlencode(
    --
    -- Encode every character of a URL.
    -- an encoded URL is a URL in Hex.
    -- Encoded URLs allow spaces, question marks and other special characters.
    --
    p_str in varchar2 )
    return varchar2
    ;

function url_encode2 (
    --
    -- Encode (into HEX) all special characters which includes spaces,
    -- question marks, ampersands, etc.
    --
    p_str in varchar2)
    return varchar2
    ;

function url_decode2 (
    --
    --
    --
    p_str in varchar2)
    return varchar2
    ;

function url_encode (
    --
    -- Encode every character of a URL.
    -- an encoded URL is a URL in Hex.
    -- Encoded URLs allow spaces, question marks and other special characters.
    --
    p_str in varchar2)
    return varchar2
    ;

function is_valid_application_name(
    --
    --  Verify application name does not contain invalid characters '<>"'
    --  during creation of application
    --
    p_name        in varchar2)
    return varchar2
    ;

--------------------------------------------------------------------------------
-- Calls owa_util.redirect_url to redirect the browser to a new URL.
-- The procedure automatically calls apex_application.stop_apex_engine to
-- abort further processing of the APEX application.
--
-- p_reset_htp_buffer should be set to FALSE if the application has set it's own
-- cookie in the response, otherwise the HTP buffer will be reseted to make sure
-- that the browser understands the redirect to the new URL and isn't confused
-- by data which has already been written to the HTP buffer.
--------------------------------------------------------------------------------
procedure redirect_url (
    p_url              in varchar2,
    p_reset_htp_buffer in boolean default true );

procedure redirect_url_array (
    p_owner      varchar2 default null,
    p_package    varchar2 default null,
    p_procedure  varchar2 default null,
    p_parameters wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_values     wwv_flow_global.vc_arr2 default empty_vc_arr)
    ;




-------------------------------------------------------------------------------
-- Check Sum Utility
--
function checksum (
    --
    -- Obsolete with 8.1.7 of Oracle and greater.  This PLSQL checksum
    -- algorythem is slower and less reliable then the
    -- dbms_obfuscation_toolkit.md5 function.  This function is provided
    -- for backward compatability and for support of 8.1.6.
    --
    -- Note recommended use is:
    --    x := utl_raw.cast_to_raw( dbms_obfuscation_toolkit.md5( input_string => p_string ) );
    --
    p_buff in varchar2 )
    return number
    ;




-------------------------------------------------------------------------------
-- Bind Variable Utilities
--

function get_binds(
    --
    -- Given a valid Oracle SQL statement, which
    -- can include quotes, c style, and plsql style
    -- comments, return a table of bind variable names.
    -- The bind variable names will be used for binding in
    -- flows session state.
    --
    p_stmt  in varchar2 )
    return  sys.dbms_sql.varchar2_table
    ;

procedure perform_binds(
    --
    --
    --
    p_cursor in number,
    p_stmt   in varchar2)
    ;

function get_using_clause (
    --
    --
    --
    p_stmt   in varchar2 )
    return varchar2
    ;

function get_column_headings (
    --
    -- Given a SQL select statement return colon delimited list of
    -- column headings.
    --
    p_sql_select_statement in varchar2)
    return varchar2
    ;


-------------------------------------------------------------------------------
-- Substitution Variable Utilities
--

function parse(
    p_string in varchar2,
    p_escape in boolean default false )
    return varchar2
    ;



function get_substitution_value(
    --
    --
    --
    p_substitution_string in varchar2,
    p_flow_id in varchar2 )
    return varchar2
    ;

-------------------------------------------------------------------------------
-- Flows Internal Utilities
--
-- These utilities are exposed however they are of little or no value to the
-- flows application programmer.

function minimum_free_page (
    --
    -- Given a flow find the minimum page number
    -- available.  Useful in building flow wizards
    -- since you can default the page to the next
    -- availble page ID number.
    --
    p_flow_id           in number default null,
    p_occurance         in number default 1,
    p_start_page        in number default 1)
    return number
    ;

function minimum_free_flow
    return number
    ;

procedure show_invalid_instance_screen (
    p_message in varchar2 default null,
    p_link_text in varchar2 default null,
    p_link_target in varchar2 default null)
    ;

function flow_authentication (
    p_flow_id           in number default null)
    return varchar2
    ;

function is_date (
  p_date varchar2,
  p_format varchar2 default null )
  return boolean
  ;

--==============================================================================
-- Given a security group id and an application id, return a message text
-- that explains why the id is reserved and can not be used. Return null if the
-- id can be used.
--
-- ARGUMENTS
-- * p_security_group_id: the workspace id
-- * p_application_id:    the application id
-- * p_check_reserved:    flag that determines wheter IDs that are reserved by
--                        the create app wizard should be treated as reserved
--==============================================================================
function get_app_id_reserved_reason (
    p_security_group_id     in number,
    p_application_id        in number,
    p_check_reserved        in boolean default TRUE )
    return varchar2;

--==============================================================================
-- Given a security group id and the application number, return true if the
-- application number is not reserved, false if it is reserved.
--
-- Same as get_app_id_reserved_reason(...) is null.
--==============================================================================
function is_available_application_id (
    p_security_group_id     in number,
    p_application_id        in number,
    p_check_reserved        in boolean default TRUE )
    return boolean;

function is_number(
  p_number varchar2,
  p_format varchar2 default null )
  return boolean
  ;

--
--
--
--
procedure get_lov_delimiters(
  p_s in varchar2,
  p_r out varchar2,
  p_c out varchar2)
  ;

function get_temp_lov_query (
    p_display_values in varchar2,
    p_return_values  in varchar2,
    p_delimiter      in varchar2 default ';',
    p_order_by       in varchar2 ) /* values: null, SEQ or DISPLAY */
    return varchar2;

function get_temp_lov_query (
    p_lov_id       in number,
    p_add_order_by in boolean default true,
    p_use_template in boolean default false )
    return varchar2;

function get_temp_lov_index (
    p_sql in varchar2 )
    return number;

function get_temp_lov_data (
    p_lov_index in binary_integer )
    return t_temp_lov_data;


function remove_spaces (
    --
    -- takes a string and removes duplicate spaces
    --
    p_str in varchar2 default null)
    return varchar2
    ;


function is_valid_alias(
    --
    -- Verify that the Flow alias is composed of valid characters,
    -- namely A-Z, 0-9, and _ or -.  Also, must be at least 1 char
    -- long but not longer than 32 chars.
    --
    p_alias in varchar2)
    return boolean
    ;


----------------------
-- SQL Query functions
--
function get_display_value_given_lov (
   p_sql_query   in varchar2,
   p_value       in varchar2,
   p_translation in varchar2 default 'NO',
   p_escape_sc   in varchar2 default 'YES')
   return varchar2
   ;


----------------------------------
-- Given an ID get the region name
--
function get_region_name (
    p_region_id   in varchar2 default null)
    return varchar2
    ;


------------------------------------------------------
-- Pause for number of seconds identified by p_seconds
--  (capped at 120 seconds)
--
procedure pause (
    p_seconds   in number)
    ;

-------------------------------------------------------
-- Checks to ensure p_name is a valid Oracle identifier
--
function is_valid_identifier (
    p_identifier   in varchar2,
    p_quote        in boolean := false)
    return boolean
    ;

function get_company_from_cookie return varchar2
    ;
function get_un_from_cookie return varchar2
    ;
function my_url return varchar2
    ;
function get_cookie_user_name (p_cookie_user_id in number) return varchar2
    ;

-----------------------------------------
-- Optimized String Replacement Functions
--


procedure fast_replace(
    srcstr in out NOCOPY varchar2,
    oldsub in varchar2,
    newsub in varchar2 )
    ;

procedure fast_replace_many (
   srcstr in out NOCOPY varchar2,
   oldsub in vc4000Array,
   newsub in vc4000Array )
   ;

function fast_replace_f(
   p_srcstr in varchar2,
   oldsub in varchar2,
   newsub in varchar2 )
   return varchar2
   ;

function fast_replace_manyf (
   p_srcstr in varchar2,
   oldsub in vc4000Array,
   newsub in vc4000Array )
   return varchar2
   ;

function show_line_number (
   --------------------------------------------------------
   -- Displays line numbers for the given query or string
   --
   q in varchar2)
   return varchar2
   ;

function lov_values (
    ----------------------------------------------------------------------------
    -- Return a LOV string (displayVal;returnVal,displayVal;returnVal...) given a list of values
    --
    p_lov          in varchar2)
    return varchar2
    ;

function lov_value_array (
    p_lov          in varchar2
) return htmldb_item.lov_table;


procedure parse_query_string(
    p_query     in  varchar2,
    p_flow_id   out varchar2,
    p_page_id   out varchar2,
    p_sess_id   out varchar2,
    p_remainder out varchar2)
    ;

--==============================================================================
-- Returns the query string of the current GET request where the session id is
-- replaced with the value of wwv_flow.g_instance.
--
-- For example, if the current request were
--   p=105:12:5312::NO:ARG1:VAL1&p_trace=YES
-- and the current g_instance is 1675, this function will return:
--   p=105:12:1675::NO:ARG1:VAL1&p_trace=YES
--
-- Context: runtime with HTTP GET request in process.
--==============================================================================
function rewrite_query_string return varchar2;

---------------------------
-- session state conditions
--

function page_changed (
    -----------------------------------------------------------------
    -- Any item on page changed for current flow and current session.
    -- Change implys item was populated, then update.
    p_page_number in number )
    return boolean
    ;

function item_changed (
    -------------------------------------------------
    -- Item in current flow and session has changed.
    -- Change implys item was populated, then update.
    p_item_name in varchar2)
    return boolean
    ;

function list_of_items_changed (
    p_item_names in varchar2)
    return boolean
    ;

function list_of_pages_changed (
    p_page_numbers in varchar2 )
    return boolean
    ;

function current_session_changed
    return boolean
    ;

function current_flow_changed
    return boolean
    ;

function get_data_type (
   p_table_name  in varchar2,
   p_column_name in varchar2)
   return varchar2
   ;

function extracthtml (
   p_html in varchar2)
   return varchar2
   ;

--
-- function to construct quick links
function quick_link(
   p_forminput in varchar2,
   p_form_value in varchar2,
   p_display in varchar2,
   p_system_message in boolean  := true,
   p_forminput2 in varchar2 := null ,
   p_form_value2 in varchar2 := null,
   p_disable in varchar2 := null,
   p_popup_message  in varchar2 := null)
   return varchar2
   ;

function clob_to_varchar2(
   p_clob   in clob,
   p_offset in number default 0,
   p_raise  in boolean default false)
   return varchar2
   ;

function blob_to_clob(
   p_blob    in out blob,
   p_charset in varchar2 default null)
   return clob
   ;

function clob_to_blob(
   p_clob    in out clob,
   p_charset in varchar2 default null)
   return blob
   ;


function escape_url(
    p_url             in varchar2,
    p_url_charset     in varchar2 default null,
    p_escape_reserved in varchar2 default 'N')
    return varchar2
    ;
function unescape_url(
    p_url             in varchar2,
    p_url_charset     in varchar2 default null )
    return varchar2
    ;

function host_url(
    --
    -- Return the host URL
    --
    -- Possible options are:
    --     NULL   - Return URL up to port number (e.g., https://myserver.com:7778 )
    --     SCRIPT - Return URL to include script name (e.g., https://myserver.com:7778/pls/apex/ )
    --     IMGPRE - Return URL to include image prefix (e.g., https://myserver.com:7778/i/ )
    --
    p_option          in varchar2 default null )
    return varchar2
    ;

--==============================================================================
-- Returns the protocol (http or https) used for the current HTTP request or post.
--==============================================================================
function get_protocol return varchar2;

function lov_checksum(
    p_string      in varchar2)
    return varchar2
    ;

function page_checksum(
    p_string        in varchar2,
    p_checksum_type in varchar2 default 'SESSION',
    p_checksum_salt in raw      default wwv_flow_security.g_application_checksum_salt)
    return varchar2
    ;

function prepare_url(
    --
    -- If URL is f?p format, do escape_url on the argument values only.
    -- This function assumes that all substitutions, e.g., &ITEM_NAME. substitutions have already been performed.
    --
    p_url                   in varchar2,
    p_url_charset           in varchar2 default null,
    p_checksum_type         in varchar2 default null,
    p_save_session_state_yn in varchar2 default 'N')
    return varchar2
    ;

function get_cgi_query_string_decoded
    --
    -- get cgi QUERY_STRING and decode content
    --
    return varchar2
    ;

function pick_date_format_mask(
    --
    -- Given a Date Picker type (e.g., PICK_DATE_DD_MON_YYYY), return
    -- the corresponding format mask.  The input p_format_mask is only
    -- applicable when p_pick_date_type = PICK_DATE_USING_FORMAT_MASK.
    --
    p_pick_date_type in varchar2,
    p_format_mask    in varchar2 default null )
    return varchar2
    ;

function pick_date_classic_format_mask (
    --
    -- Given a Classic Date Picker type (e.g., PICK_DATE_DD_MON_YYYY), return
    -- the corresponding format mask.  The input p_format_mask is only
    -- applicable when p_pick_date_type = PICK_DATE_USING_FORMAT_MASK.
    --
    p_pick_date_type in varchar2,
    p_format_mask    in varchar2 default null )
    return varchar2;

procedure increment_calendar;
    --
    -- procedure to handle the increment of a date in a calendar
    -- Date must be in YYYYMMDD format
    --
procedure decrement_calendar;
    --
    -- procedure to handle the decrement of a date in a calendar
    -- Date must be in YYYYMMDD format
    --
procedure today_calendar;
    --
    -- procedure to handle the chaning to today of a date in a calendar
    -- Date must be in YYYYMMDD format
    --
procedure month_calendar(p_date_type_field varchar2 default null);
    --
    -- procedure to handle the Month type of the calendar

procedure weekly_calendar(p_date_type_field varchar2 default null);
    --
    -- procedure to handle the date type of the calendar
procedure daily_calendar(p_date_type_field varchar2 default null);
    --
    -- procedure to handle agenda view of calendar
procedure agenda_calendar(p_date_type_field varchar2 default null);
    --
    -- procedure to handle the Custom calendar
procedure custom_calendar(p_date_type_field varchar2 default null);
    --
    -- procedure to handle the date type of the calendar

procedure process_calendar_date(
    --
    -- procedure to handle the changes of a date in a calendar
    -- Date must be in YYYYMMDD format
    --
    p_request varchar2);

function savekey_num(p_val in number)
    return number
    ;

function keyval_num return number
    ;

function savekey_vc2(p_val in varchar2)
    return varchar2
    ;

function keyval_vc2 return varchar2
    ;



function get_clob_md5(
    --
    -- Compute and return a message digest for the specified CLOB.
    -- Arguments:
    --     p_clob              =  Input CLOB value to perform message digest against
    --
    p_clob            in clob )
    return varchar2
    ;

--
-- Print with opening and closing JavaScript tags the JavaScript function filter_escape.
-- This JavaScript function is used in encoding multibyte values in a URL in JavaScript
--
procedure gen_filter_escape;

procedure check_sgid;

--------------------------------------------
-- is_build_option_enabled
-- returns YES / NO based on build option ID

function is_build_option_enabled (
    p_build_option_id number) return boolean;

-----------------------------------------------
-- is_build_option_enabled
-- returns YES / NO based on build option name

function is_build_option_enabled (
    p_build_option_name varchar2) return boolean;


 -----------------------------------------------
 -- esc_non_basic_tags
 -- escapes input string, except specified tags
 -- use this function to preserve basic HTML formatting, yet escaping all other tags

 -- example:
 --   wwv_flow_utilities.esc_non_basic_tags('<a href="hello"><b>hello</b></a>')
 --   results in: &lt;a href="hello"&gt;<b>hello</b>&lt;/a&gt;')

 function esc_non_basic_tags (
     p_string in varchar2) return varchar2;

---------------------------------------------
-- function to extract database version value
--
function db_version
    return varchar2;

--------------------------------------------------
-- function to extract database compatibility value
--
function db_compatibility
    return varchar2;

---------------------------------------------------------------------
-- boolean function to compare current db version with input parameter
--
function db_version_is_at_least(p_version in varchar2)
    return boolean;

--------------------------------------------------------------
-- vc2 function to compare current db version with input parameter
--
function db_version_is_at_least_i(p_version in varchar2)
    return varchar2;

---------------------------------------------------------------------
-- boolean function to check if database is xe
--
function db_edition_is_xe
    return boolean;

---------------
-- Page caching
--
procedure cache_purge_by_application (
    p_application    in number)
    ;

procedure cache_purge_by_page (
    p_application  in number,
    p_page         in number,
    p_user_name    in varchar2 default null)
    ;

procedure cache_purge_stale (
    p_application    in number);

function cache_get_date_cached (
    p_application  in number,
    p_page         in number)
    return date;

-----------------
-- Region Caching
--
procedure purge_regions_by_app (
     p_application in number);

procedure purge_regions_by_id (
     p_application in number,
     p_region_id   in number);

procedure purge_regions_by_name (
     p_application  in number,
     p_page_id      in number,
     p_region_name  in varchar2);

procedure purge_regions_by_page (
     p_application  in number,
     p_page_id      in number);

procedure purge_stale_regions (
     p_application in number);

function count_stale_regions (
    p_application    in number)
    return number;

function cache_get_date_cached (
    p_application  in number,
    p_page         in number,
    p_region_name  in varchar2)
    return date;

-----------------
-- Export
--

function export_ws_app_to_clob (
   p_ws_app_id                   in number,
   p_export_datagrid_data        in varchar2 default 'N',
   p_export_datagrid_annotations in varchar2 default 'N',
   p_export_page_annotations     in varchar2 default 'N',
   p_export_private_reports      in varchar2 default 'N')
   return clob;

procedure export_application_to_db (
   p_application_id   in number)
   ;

function export_application_to_clob (
   p_application_id   in number,
   p_export_ir_public_reports  in varchar2 default 'N',
   p_export_ir_private_reports in varchar2 default 'N',
   p_export_ir_notifications   in varchar2 default 'N',
   p_export_translations       in varchar2 default 'N')
   return clob
   ;

function export_page_to_clob (
   p_application_id            in number,
   p_page_id                   in number,
   p_export_ir_public_reports  in varchar2 default 'N',
   p_export_ir_private_reports in varchar2 default 'N',
   p_export_ir_notifications   in varchar2 default 'N')
   return CLOB
   ;

procedure export_workspace (
    p_workspace_id             in number,
    p_format                   in varchar2 default 'UNIX',
    p_include_team_development in boolean  default true,
    p_minimal                  in boolean default false );

function export_workspace_to_clob (
    p_workspace_id             in number,
    p_include_team_development in boolean default true,
    p_minimal                  in boolean default false )
    return clob;

function export_restful_to_clob (
    p_workspace_id             in number )
    return clob;

function export_files_to_clob (
    p_workspace_id             in number )
    return clob;

function export_feedback_to_development (
    p_workspace_id in number,
    p_since        in date   default null )
    return clob;

function export_feedback_to_deployment (
    p_workspace_id      in number,
    p_deployment_system in varchar2,
    p_since             in date   default null )
    return clob;

procedure show_as_shuttle (
    p_lov                   in varchar2,
    p_value                 in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_name                  in varchar2                default null,
    p_show_null             in varchar2                default null,
    p_null_text             in varchar2                default '%',
    p_null_value            in varchar2                default '%null%',
    p_height                in varchar2                default '10',
    p_width                 in varchar2                default '150',
    p_show_extra            in varchar2                default 'YES',
    p_extra_text            in varchar2                default null,
    p_onBlur                in varchar2                default null,
    p_onChange              in varchar2                default null,
    p_onFocus               in varchar2                default null,
    p_attributes            in varchar2                default null,
    p_max_elements          in number                  default 1000000,
    p_item_id               in varchar2                default null,
    p_item_tag_attrs        in varchar2                default null,
    p_translation           in varchar2                default 'NO',
    p_current_item_sequence in varchar2                default null,
    pRefreshImage           in varchar2                default 'shuttle_reload.png',
    pRightAllImage          in varchar2                default 'shuttle_last.png',
    pRightImage             in varchar2                default 'shuttle_right.png',
    pLeftImage              in varchar2                default 'shuttle_left.png',
    pLeftAllImage           in varchar2                default 'shuttle_first.png',
    pTopImage               in varchar2                default 'shuttle_top.png',
    pUpImage                in varchar2                default 'shuttle_up.png',
    pDownImage              in varchar2                default 'shuttle_down.png',
    pBottomImage            in varchar2                default 'shuttle_bottom.png'
    );


--
-- Perform a string replacement in a CLOB variable
--
procedure lob_replace (
    p_lob                in out nocopy clob,
    p_search_string      in varchar2,
    p_replacement_string in varchar2 );

procedure lob_replace (
    p_lob                in out nocopy clob,
    p_search_clob        in clob,
    p_replacement_clob   in clob );


function array_element(
    p_vcarr in wwv_flow_global.vc_arr2,
    p_index in number )
    return varchar2;

--
-- Convert input to utf-8 and base 64 encode, per RFC 2231
--
function b64_encode(
    p_input in varchar2 )
    return varchar2;

--
-- Encode a filename in either utf-8 encoding or utf-8 base64 encoding.
-- This is commonly used in the generation of the HTTP header for a file download,
-- as IE and FF behave differently
--
function encode_filename(
    p_filename in varchar2)
    return varchar2;


procedure get_theme_file(
    p_id            in number,
    p_app_id        in number,
    p_show_last_mod in varchar2 default 'Y');

procedure show_ir_help (
   p_app_id       in number,
   p_worksheet_id in number,
   p_lang         in varchar2 default null,
   p_help_type    in varchar2 default 'IR');


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_report_data:        XML based report data (utf-8 encoded)
--   p_report_layout:      Report layout in XSL-FO or RTF format
--   p_report_layout_type: Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:    Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:       URL of of the print server. If not specified, the print server will be derived from preferences
--                         example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_report_data         in clob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_report_data:        XML based report data (utf-8 encoded)
--   p_report_layout:      Report layout in XSL-FO or RTF format
--   p_report_layout_type: Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:    Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:       URL of of the print server. If not specified, the print server will be derived from preferences
--                         example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_report_data         in blob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using pre-defined report query and pre-defined report layout.
--
-- Arguments:
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout_name:  Name of the report query (stored under application's shared components)
--                          if report layout name is not specified, layout associated with report query will be used
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout_name  in varchar2 default null,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using a pre-defined report query and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout:       Defines the report layout in in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Defines the filename of the print document
--   p_content_disposition: Specifies whether to download the print document or display inline ("attachment", "inline")
--   p_report_data:         XML based report data
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_report_data         in clob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Defines the filename of the print document
--   p_content_disposition: Specifies whether to download the print document or display inline ("attachment", "inline")
--   p_report_data:         XML based report data
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_report_data         in blob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using pre-defined report query and pre-defined report layout.
--
-- Arguments:
--   p_file_name            Filename of print document
--   p_content_disposition: Download print document or display inline ("attachment", "inline")
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout_name:  Name of the report query (stored under application's shared components)
--                          if report layout name is not specified, layout associated with report query will be used
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout_name  in varchar2 default null,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using pre-defined report query and RTF and XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Filename of print document
--   p_content_disposition: Download print document or display inline ("attachment", "inline")
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);

-------------------------------------------------------------------------------------------------
-- Based on the browser this function returns the mime type for an excel file download.
-- IE:     application/vnd.ms-excel
-- Others: application/excel
-------------------------------------------------------------------------------------------------
function get_excel_mime_type return varchar2;

-------------------------------------------------------------------------------------------------
-- Adds the necessary commands to the HTTP header to indicate a file download of a specific
-- mime type. It also takes care that the file name is probably encoded.
-- Use p_is_attachment to indicate if the browser should show it inline or as an attachment.
--
-- Note: You have to call htp.init before and owa_util.http_header_close after this call!
-------------------------------------------------------------------------------------------------
procedure print_download_header (
    p_mime_type      in varchar2,
    p_mime_charset   in varchar2 default null,
    p_file_name      in varchar2 default null,
    p_is_attachment  in boolean  default true,
    p_content_length in number   default null,
    p_http_hdr_attr1 in varchar  default null );

--==============================================================================
-- function to convert Oracle Dateformat to a javascript date date format
-- pFormat - Oracle Date format to be converted
--==============================================================================
function get_javascript_date_format (
    p_format in varchar2 )
    return varchar2;

--==============================================================================
-- function to determine should time part be displayed and it's display format(24hr or 12hr date format
-- p_js_date_format - javascript based date format
--==============================================================================
function get_time_format (
    p_js_date_format in varchar2)
    return varchar2;
-------------------------------------------------------------------------------------------------
-- Function returns an Oracle date datatype for an absoute or relative date string value.
-- p_value:    is a date string containing an absolute date (eg. 12-OCT-2009) or a
--             relative date (eg. +1d)
-- p_format:   is an Oracle date format
-- p_attribute is the name of the attribute which is converted and is used to build
--             the error message in the format APEX.DATEPICKER_xxx_INVALID if the
--             conversion fails
-------------------------------------------------------------------------------------------------
function get_oracle_date (
    p_value     in varchar2,
    p_format    in varchar2,
    p_attribute in varchar2,
    p_item_name in varchar2
) return date;
-------------------------------------------------------------------------------------------------
-- Function to render and get the JqueryUI Datepicker related Source
--    p_id:                 The id for the item
--    p_name:               Name for the item
--    p_value:              The value for item
--    p_date_format:        The Date format to be used for rendering
--    p_size:               Input item size
--    p_max_length:         Maxlength for the item
--    p_placeholder:        Placeholder rendered into the date input field
--    p_attributes:         Additional HTML attributes for the item
--    p_item_label:         Label for the input item
--    p_default_value:      The default date to be highlighted in datepicker
--    p_max_value:          Maximum date for item
--    p_min_value:          Minimum date for item
--    p_show_on:            When the datepicker should be displayed
--    p_show_other_months:  should the datepicker show Month Selection list
--    p_number_of_months:   Number of months to be displayed
--    p_navigation_list_for:Navigation list for Year, Month or Both
--    p_year_range:         Year range to be displayed in the Year selection list
-------------------------------------------------------------------------------------------------
function get_date_picker (
    p_id                    in varchar2 default null,
    p_name                  in varchar2 default null,
    p_value                 in varchar2 default null,
    p_date_format           in varchar2 default null,
    p_size                  in number default 20,
    p_max_length            in number default 2000,
    p_placeholder           in varchar2 default null,
    p_attributes            in varchar2 default null,
    p_item_label            in varchar2 default null,

    p_default_value         in varchar2 default null,
    p_max_value             in varchar2 default null,
    p_min_value             in varchar2 default null,
    p_show_on               in varchar2 default 'button',
    p_show_other_months     in boolean  default false,
    p_number_of_months      in varchar2 default null,
    p_navigation_list_for   in varchar2 default 'NONE',
    p_year_range            in varchar2 default null
) return varchar2;


-------------------------------------------------------------------------------------------------
-- Procedure to generate out an icon (clickable image).
--
-- Arguments:
--      p_img_src           The source of the image,
--      p_img_alt           The alt text of the image
--      p_img_attributes    Any additional attributes for the image (Optional)
--
--      p_anchor_onclick    If the image needs to invoke some JavaScript call, supply the JS here (Optional)
--      p_anchor_href       If the image needs to link somewhere, supply the link here, defaults to '#'
--      p_anchor_attributes Any additional attributes for the anchor tag (Optional)
--
procedure show_icon (
    -- img attributes
    p_img_src           in varchar2,
    p_img_alt           in varchar2,
    p_img_attributes    in varchar2 default null,
    -- anchor attributes
    p_anchor_onclick    in varchar2 default null,
    p_anchor_href       in varchar2 default '#',
    p_anchor_attributes in varchar2 default null );

procedure wwv_flow_team_tag_sync (
    p_component_type    in varchar2 default 'FEATURE',
    p_component_id      in number   default null,
    p_new_tags          in varchar2 default null,
    p_security_group_id in number   default null)
    ;

--==============================================================================
-- Returns TRUE if p_user equals to ANONYMOUS, APEX_PUBLIC_USER,
-- HTMLDB_PUBLIC_USER, nobody or the value in wwv_flow.g_public_user.
-- If not it returns FALSE.
--==============================================================================
function is_public_user (
    p_user in varchar2 default wwv_flow_security.g_user )
    return boolean;

--==============================================================================
-- Returns HTML attributes to define a table as a 'layout' table, such that it
-- will be ignored by screen readers. A 'layout' table is one that does not
-- contain data and is used purely for presentation.
--==============================================================================
function get_layout_table_attributes
    return varchar2;

--==============================================================================
-- CLOB Textarea item plugin
--
-- get clob value that was written back by ajax_clob_textarea, to process it on
-- submit.
--
-- the function was moved here from wwv_flow_f4000_plugins because it needs to
-- exist in a runtime only environment, too.
--==============================================================================
function get_clob_textarea_value (
    p_item_name in varchar2 )
    return clob;

--==============================================================================
-- Function used to load application archive to files table.
-- Only application and page archive is allowed.
--==============================================================================
function load_apex_archive_file (
    p_blob           in blob,
    p_app_id         in number default null,
    p_file_type      in varchar2 default null,
    p_file_name      in varchar2 default null,
    p_title          in varchar2 default null,
    p_mime_type      in varchar2 default null,
    p_file_charset   in varchar2 default null,
    p_description    in varchar2 default null
    ) return number;

--==============================================================================
-- Emit the header of a popup LOV.
--==============================================================================
procedure emit_popup_lov_header (
    p_template in varchar2,
    p_title    in varchar2 );

--==============================================================================
-- Function used to get dependency object in a query.
--==============================================================================
function get_dependency_objects (
    p_sql         in varchar2) return t_dependent_object_list;

end wwv_flow_utilities;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DYNAMIC_EXEC"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_dynamic_exec.sql
--
--    DESCRIPTION
--      This package is responsible for handling processes.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    05/03/2011 - Created
--      pawolf    05/05/2011 - Added grant execute to sys
--      pawolf    05/05/2011 - Removed grant execute to sys
--      pawolf    05/06/2011 - Added/modified description of some procedures/functions
--      pawolf    05/20/2011 - Added bind variable support for get_plsql_* functions
--      pawolf    01/10/2012 - Added new parameters to do_rows_exists, get_first_row_result_varchar2 and get_first_row_result_number (bug# 13576517)
--      vuvarov   07/19/2012 - Added execute() and fetch_rows() (feature #978)
--      vuvarov   08/15/2012 - Added reset_nls_environment() (feature #978)
--      cbcho     02/25/2013 - Added get_dependency_objects (bug #16397724)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_bind_variable is record (
    name          varchar2(255),
    original_name varchar2(255) );

type t_bind_variables is table of t_bind_variable index by pls_integer;

type t_bind_value is record (
    name  varchar2(255),
    value varchar2(32767) );

type t_bind_values is table of t_bind_value index by pls_integer;

--==============================================================================
-- Global constants
--==============================================================================
c_empty_bind_values t_bind_values;
c_empty_names       sys.wwv_dbms_sql.vc_arr2;
c_empty_values      sys.wwv_dbms_sql.vc_arr2;

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- The procedure parses the SQL or PL/SQL statement to get all used
-- bind variables. It supports regular bind variables :item where 'item'
-- is made of ascii characters A-Z, 0-9 or _, $ and #. It also supports
-- bind variables in quotes :"item" where 'item' can be any unicode character
-- except of linefeed or a colon. Because PL/SQL doesn't support such quoted
-- bind variables yet, the quoted bind variables are replaced by
-- :p$_quoted_bind_x where 'x' is a sequence.
--
-- p_names_to_ignore is a list of bind variables which should not be returned
-- in the p_bind_variables array. That can for example be used if the original
-- SQL statement is rewritten to contain additional binds like p$_max_rows,
-- p$_first_row or p$_search_string. Because p_bind_variables is most of the
-- time used to read or write items from session state, it's not desireable that
-- above bind variables are contained in p_bind_variables.
--
-- After execution of the procedure, p_statement contains the modified statement
-- which can then be used to call wwv_dbms_sql.parse_as_user.
--
-- Note: This procedure should almost never be called, just use the functions
--       below which will take care of all the binding, ...
--==============================================================================
procedure prepare_statement (
    p_statement       in out nocopy varchar2,
    p_bind_variables  in out nocopy t_bind_variables,
    p_names_to_ignore in            sys.wwv_dbms_sql.vc_arr2 default c_empty_names );

--==============================================================================
-- Parses a SQL statement with the passed in cursor.
--
-- The procedure automatically performs the necessary binding of bind variables.
--
-- p_cursor:        Cursor which has been opened with sys.dbms_sql.open_cursor
-- p_sql_statement: SQL statement.
--==============================================================================
procedure parse_sql_statement (
    p_cursor          in integer,
    p_sql_statement   in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema );

--==============================================================================
-- Clears out cached NLS values used by execute() and fetch_rows() from
-- package state. The values will be populated next time they are accessed.
--==============================================================================
procedure reset_nls_environment;

--==============================================================================
-- A wrapper for sys.dbms_sql.execute() that sets NLS session environment
-- (e.g. NLS_SORT) for the duration of the call. NLS environment is retrieved
-- from the current application definition (e.g. wwv_flow.g_nls_sort).
--
-- p_cursor: Cursor which has been opened (sys.dbms_sql.open_cursor) and
--           parsed (sys.dbms_sql.parse).
--==============================================================================
function execute (
    p_cursor in integer )
    return integer;

--==============================================================================
-- A wrapper for sys.dbms_sql.fetch_rows() that sets NLS session environment
-- (e.g. NLS_SORT) for the duration of the call. NLS environment is retrieved
-- from the current application definition (e.g. wwv_flow.g_nls_sort).
--
-- p_cursor: Cursor which has been executed (sys.dbms_sql.execute).
--==============================================================================
function fetch_rows (
    p_cursor in integer )
    return integer;

--==============================================================================
-- Executes a PL/SQL expression and returns a VARCHAR2 result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_plsql_expression: PL/SQL expression which returns string.
--==============================================================================
function get_plsql_expr_result_varchar2 (
    p_plsql_expression in varchar2,
    p_auto_bind_items  in boolean                  default true,
    p_names            in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values           in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema  in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return varchar2;

--==============================================================================
-- Executes a PL/SQL expression and returns a BOOLEAN result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_plsql_expression: PL/SQL expression which returns boolean.
--==============================================================================
function get_plsql_expr_result_boolean (
    p_plsql_expression in varchar2,
    p_auto_bind_items  in boolean                  default true,
    p_names            in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values           in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema  in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return boolean;

--==============================================================================
-- Executes a PL/SQL function code block and returns a VARCHAR2 result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_plsql_function: PL/SQL function which returns string.
--                   For example:
--                   declare
--                       l_test varchar2(10);
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_func_result_varchar2 (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return varchar2;

--==============================================================================
-- Executes a PL/SQL function code block and returns a CLOB result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_plsql_function: PL/SQL function which returns a clob.
--                   For example:
--                   declare
--                       l_test clob;
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_func_result_clob (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return clob;

--==============================================================================
-- Executes a PL/SQL function code block and returns a BOOLEAN result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_plsql_function: PL/SQL function which returns boolean.
--                   For example:
--                   declare
--                       l_test boolean;
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_func_result_boolean (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return boolean;

--==============================================================================
-- Executes a PL/SQL code block.
--
-- The procedure automatically performs the necessary binding of bind variables.
--==============================================================================
procedure execute_plsql_code (
    p_plsql_code      in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema );

--==============================================================================
-- Executes a SQL expression and returns a BOOLEAN result.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_sql_expression: SQL expression which will be wrapped by
--                   select count(*) from dual where <p_sql_expression>.
--                   a row count of 0 returns FALSE otherwise TRUE.
--==============================================================================
function get_sql_expr_result_boolean (
    p_sql_expression  in varchar2,
    p_parse_as_schema in varchar2 default wwv_flow_security.g_parse_as_schema )
    return boolean;

--==============================================================================
-- Executes a SQL statement and returns TRUE if rows exist and FALSE if no row
-- is returned.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_sql_statement: SQL statement which will be wrapped by
--                  select count(*) from dual where exists (<p_sql_statement>).
--==============================================================================
function do_rows_exist (
    p_sql_statement   in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return boolean;

--==============================================================================
-- Executes a SQL statement which contains one VARCHAR2 column and returns the
-- value of the first row. If the SQL statement doesn't return any rows or the
-- SQL statement itself is NULL then NULL will be returned.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_sql_statement: SQL statement with one VARCHAR2 column.
--==============================================================================
function get_first_row_result_varchar2 (
    p_sql_statement   in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return varchar2;

--==============================================================================
-- Executes a SQL statement which contains one NUMBER column and returns the
-- value of the first row. If the SQL statement doesn't return any rows or the
-- SQL statement itself is NULL then NULL will be returned.
--
-- The function automatically performs the necessary binding of bind variables.
--
-- p_sql_statement: SQL statement with one NUMBER column.
--==============================================================================
function get_first_row_result_number (
    p_sql_statement   in varchar2,
    p_auto_bind_items in boolean                  default true,
    p_names           in sys.wwv_dbms_sql.vc_arr2 default c_empty_names,
    p_values          in sys.wwv_dbms_sql.vc_arr2 default c_empty_values,
    p_parse_as_schema in varchar2                 default wwv_flow_security.g_parse_as_schema )
    return number;

--==============================================================================
-- Executes a SQL statement to find dependency objects.
--
-- p_schema: The schema to run the query as.
-- p_sql: SQL statement.
-- p_parse_as_schema_override: Internal use only. Set it to true to avoid parsing as application schema.
--==============================================================================
function get_dependency_objects (
    p_schema                   in varchar2,
    p_sql                      in varchar2,
    p_parse_as_schema_override in boolean default false )
    return wwv_flow_utilities.t_dependent_object_list;

end wwv_flow_dynamic_exec;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LANG"
--  Copyright (c) Oracle Corporation 1999 - 2008. All Rights Reserved.
--
--    DESCRIPTION
--      Flow language translation services
--
--    SECURITY
--
--    NOTES
--      This program allows for translation of text strings from
--      on national language to another.
--
--    RUNTIME DEPLOYMENT: YES
is

g_set_nls boolean := false;
g_nls_language_set varchar2(255) := null;
g_seed_new_attributes      number := 0;
g_seed_purged_attributes   number := 0;
g_seed_changed_attributes  number := 0;


procedure report_lang_to_browser
    --
    -- Produce an HTML report listing the browser language to database
    -- language equivs.
    --
    ;


function map_language (
    --
    -- Convert a browser language into a database language.
    -- for example:
    -- us = AMERICAN
    -- fr = FRENCH
    -- ja = JAPANESE
    --
    --
    p_language  in varchar2)
    RETURN varchar2
    ;

procedure alter_session (
    --
    -- alter the dbms session set the language to this value.
    --
    p_language  in varchar2 default null)
    ;

function replace_param (
    p_message                   in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null)
    return varchar2
    ;


--
-- return named text message with substitutions
--
function message (
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in number   default null)
    return varchar2
    ;



--
-- htp.print a named text message with substitutions
--
procedure message_p (
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in number   default null )
    ;


--
-- Create a runtime message
--
procedure create_message(
    p_application_id in number,
    p_name           in varchar2,
    p_language       in varchar2,
    p_message_text   in varchar2 )
    ;

--
-- Update the text of a runtime message
--
procedure update_message(
    p_id in number,
    p_message_text in varchar2 )
    ;

--
-- Delete a runtime message
--
procedure delete_message(
    p_id in number );


--
-- Update the string in the translation repository
--
procedure update_translated_string(
    p_id in number,
    p_language in varchar2,
    p_string in varchar2);

--
-- return named text System message with substitutions
--
function system_message (
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in varchar2 default null,
    p_security_group_id         in varchar2 default null)
    return varchar2
    ;



--
-- Return named text System message with substitutions.
-- This function is used when the returned string is going to be included
-- in a literal, so all occurrences of a single quote in the message will
-- be returned as two consecutive single quotes.
--
function system_message_lit (
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in varchar2 default null,
    p_security_group_id         in varchar2 default null)
    return varchar2
    ;


--
-- htp.print a named text System message with substitutions
--
procedure system_message_p (
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in varchar2 default null,
    p_security_group_id         in varchar2 default null)
    ;


--==============================================================================
-- Returns an APEX runtime message, but first checks if it has been overwritten
-- in the current application.
--==============================================================================
function custom_runtime_message (
    p_name in varchar2,
    p0     in varchar2 default null,
    p1     in varchar2 default null,
    p2     in varchar2 default null,
    p3     in varchar2 default null,
    p4     in varchar2 default null,
    p5     in varchar2 default null,
    p6     in varchar2 default null,
    p7     in varchar2 default null,
    p8     in varchar2 default null,
    p9     in varchar2 default null,
    p_lang in varchar2 default null )
    return varchar2
    ;

--
--  WebDB20 style translations
--
function lang (
   p_primary_text_string       in varchar2 default null,
   p0                          in varchar2 default null,
   p1                          in varchar2 default null,
   p2                          in varchar2 default null,
   p3                          in varchar2 default null,
   p4                          in varchar2 default null,
   p5                          in varchar2 default null,
   p6                          in varchar2 default null,
   p7                          in varchar2 default null,
   p8                          in varchar2 default null,
   p9                          in varchar2 default null,
   p_primary_text_context      in varchar2 default null,
   p_primary_language          in varchar2 default null)
   return varchar2
   ;

FUNCTION find_language_preference
   RETURN varchar2
   ;

--==============================================================================
-- Returns based on the specified language (eg. de-at, zh-cn, ...)
-- the application id of the translated application.
--==============================================================================
function get_translated_application_id (
    p_application_id in number   default wwv_flow.g_flow_id,
    p_language       in varchar2 default wwv_flow.g_browser_language )
    return number;

procedure set_translated_flow_and_page
    ---------------------------------
    --- SET NATIONAL LANGUAGE SUPPORT
    --  The language is determined from the browser
    --  this procedure sets:
    --  1. wwv_flow.g_translated_flow_id
    --  2. wwv_flow.g_translated_page_id
    --
   ;

--
-- Given an Oracle datbase character set, return the corresponding
-- IANA character set.  For example, given DB character set
-- of 'JA16SJIS', return 'shift_jis'.
--
-- If not found, will return NULL.
--
function map_iana_charset(
    p_db_charset in varchar2 )
    return varchar2;


--
-- Given an IANA character set, return the corresponding
-- Oracle database character set.  For example, given IANA
-- character set 'windows-1257', return 'BLT8MSWIN1257'.
--
-- If not found, will return NULL.
--
function map_db_charset(
    p_iana_charset in varchar2 )
    return varchar2;

--
-- Reset the NLS settings for the current
-- database session to that of the database
--
procedure reset_nls;

--
-- Return the value of the NLS_LANGUAGE which
-- was set in the current session
--
function get_nls_language return varchar2;


--
-- Return the value of the NLS Windows Charset which
-- was set in the current session.  Typically used for
-- CSV encoding
--
function get_nls_windows_charset return varchar2;


--
-- Return the target character set for CSV data in the
-- current application.  A null value returned from this function
-- means that either application language derived from is set to
-- No NLS (application not translated) or that the csv_encoding
-- flag of wwv_flows is not turned on.  Otherwise, the non-null
-- value will be an Oracle character set to be used as the target
-- character set which CSV data is to be converted to
--
function get_csv_charset return varchar2;


--
-- Return the database characterset from nls_database_parameters
--
function get_db_charset return varchar2;


--
-- Check for the application-level date format setting
-- and adjust the database session NLS_DATE_FORMAT parameter
--
procedure set_application_dt_tz_formats;



--==============================================================================
-- Sets the time zone in the format +HH:MI or -HH:MI.
-- For example -02:00 for CEST or -05:30 for IST.
--==============================================================================
procedure set_session_time_zone( p_time_zone in varchar2 );

procedure set_g_session_time_zone( p_time_zone in varchar2 );

function get_g_session_time_zone return varchar2;

procedure reset_session_time_zone( p_force in boolean default FALSE );




--==============================================================================
-- Sets the session language
-- For example de or en-us
--==============================================================================
procedure set_session_lang( p_lang in varchar2 );

procedure set_g_session_lang( p_lang in varchar2 );

function get_g_session_lang return varchar2;

procedure reset_session_lang;

procedure set_session_lang_cookie( p_lang in varchar2 default null );

function get_session_lang_from_cookie return varchar2;


--
-- Territory specific
---
procedure set_session_territory( p_territory in varchar2 );

procedure set_g_session_territory( p_territory in varchar2 );

function get_g_session_territory return varchar2;

procedure reset_session_territory;

procedure set_ws_lang_terr_cookie(
    p_lang      in varchar2 default null,
    p_territory in varchar2 default null );

function get_ws_lang_from_cookie return varchar2;

function get_ws_territory_from_cookie return varchar2;

function get_nls_territory_from_lang( p_lang in varchar2 ) return varchar2;

function get_nls_time_format return varchar2;

--==============================================================================
-- Generates a HTML page with the necessary Javascript code to automatically
-- detect the time zone based on the operating system setting.
--==============================================================================
procedure auto_detect_time_zone;


procedure seed_translations (
    p_flow_id              in varchar2 default null,
    p_language             in varchar2 default null,
    p_insert_only          in varchar2 default 'NO' );


procedure create_language_mapping(
    --
    -- Create a language mapping for the specified application.  A mapping
    -- includes the target application ID and also the language code (e.g., de, en-us, etc.)
    --
    p_application_id             in number,
    p_language                   in varchar2,
    p_translation_application_id in number);


procedure update_language_mapping(
    --
    -- Update the mapping for specified application and language.  Only the mapping to the new translation
    -- ID can be updated.  The language cannot be updated.
    --
    p_application_id             in number,
    p_language                   in varchar2,
    p_new_trans_application_id   in number);


procedure delete_language_mapping(
    --
    -- Delete a language mapping for the specified application and language.
    --
    p_application_id in number,
    p_language       in varchar2);


end wwv_flow_lang;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DEBUG_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2010-2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_debug_api.sql
--
--    PUBLIC NAME
--      apex_debug
--
--    DESCRIPTION
--      Debug logging for code instrumentation
--      Public part of debug API
--
--    MODIFIED (MM/DD/YYYY)
--     mhichwa  01/26/2010 - Created
--     mhichwa  01/27/2010 - added log_page_session_state
--     mhichwa  02/12/2010 - added log_log_message
--     mhichwa  04/16/2010 - added debug purge procedures
--     arayner  08/26/2010 - Added overloaded version of remove_debug_by_age with correct parameter p_older_than_days spelling (bug 10062523)
--     arayner  09/06/2010 - Removed null defaults for both parameters of remove_debug_by_age (bug 10090373)
--     arayner  09/06/2010 - Removed null default for parameter p_application_id in remove_debug_by_app (bug 10090652)
--     arayner  09/06/2010 - Removed null defaults for both parameters of remove_debug_by_view (bug 10090699)
--     arayner  10/13/2010 - Removed g_debug_message_enabled global, debug flag now handled exclusively by by wwv_flow.g_debug (bug 10100985)
--     cneumuel 03/18/2011 - Added log_trace for internal engine tracing, reduced default log level to 4
--     cneumuel 04/04/2011 - Changed default log level back to 6
--     cneumuel 02/23/2012 - Added log_dbms_output: if debug is enabled, write dbms_output.get_lines into debug log
--     cneumuel 04/12/2012 - Added log,warn,enter,trace,tochar. Renamed from wwv_flow_debug_message to wwv_flow_debug.
--     cneumuel 04/13/2012 - Removed log (PLW-05004) and added message(),info() instead
--     cneumuel 04/18/2012 - Split into wwv_flow_debug and wwv_flow_debug_api
--     cneumuel 05/02/2012 - Added enable,disable as aliases for {enable,disable}_debug_messages
--     cneumuel 05/25/2012 - In warn: only log if wwv_flow.g_debug is set
--     cneumuel 05/30/2012 - Replaced p_argxx parameters with pxx.
--     cneumuel 05/31/2012 - added error. error and trace log if the user is logged into the builder
--     cneumuel 06/06/2012 - Cleaned up documentation
--
--------------------------------------------------------------------------------

--==============================================================================
-- Constants for the supported debug levels
--==============================================================================
subtype t_log_level is pls_integer;
c_log_level_error        constant t_log_level := 1; -- critical error
c_log_level_warn         constant t_log_level := 2; -- less critical error
c_log_level_info         constant t_log_level := 4; -- default level if debugging is enabled (e.g. used by apex_application.debug)
c_log_level_app_enter    constant t_log_level := 5; -- application: messages when procedures/functions are entered
c_log_level_app_trace    constant t_log_level := 6; -- application: other messages within procedures/functions
c_log_level_engine_enter constant t_log_level := 8; -- apex engine: messages when procedures/functions are entered
c_log_level_engine_trace constant t_log_level := 9; -- apex engine: other messages within procedures/functions

--##############################################################################
--#
--# C O N F I G U R I N G   D E B U G   M O D E
--#
--##############################################################################

--==============================================================================
-- Enable debug mode
--
-- Turns on debug messaging at an integer level between 1 and 9, see
-- level 1 is most important
-- level 9 is least important
-- setting p_level to 3 would log any message at level 1, 2, or 3.
--
-- ARGUMENTS
-- * p_level: The debug level, from c_log_level_error (=1) to
--            c_log_level_engine_trace (=9).
--
-- EXAMPLES
--   apex_debug.enable;
--   apex_debug.enable(apex_debug.c_log_level_app_trace);
--==============================================================================
procedure enable (
    p_level           in t_log_level default c_log_level_info );

--==============================================================================
-- Turn off debug messaging.
--
-- The disable() procedure is a shorter alias for disable_debug_messages()
--
-- EXAMPLE
--   apex_debug.disable;
--==============================================================================
procedure disable;

--==============================================================================
-- DEPRECATED
--   use enable() instead
--==============================================================================
procedure enable_debug_messages (
    p_level           in t_log_level default c_log_level_info );

--==============================================================================
-- DEPRECATED
--   use disable() instead
--==============================================================================
procedure disable_debug_messages;

--##############################################################################
--#
--# O U T P U T
--#
--##############################################################################

--==============================================================================
-- Log a formatted debug message, general version.
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p19:       Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
-- * p_level:       The log level for the message, default c_log_level_info.
-- * p_force:       If true, this generates a debug message even if the page is
--                  not rendered in debug mode or p_level is greater than the
--                  configured debug messaging (via the URL or via the enable
--                  procedure).
--
-- EXAMPLE
--   apex_debug.message('the value of %s + %s equals %s', 3, 5, 'eight');
--
-- SEE ALSO
--   error(), warn(), info(), trace(), enter()
--==============================================================================
procedure message (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p10          in varchar2    default null,
    p11          in varchar2    default null,
    p12          in varchar2    default null,
    p13          in varchar2    default null,
    p14          in varchar2    default null,
    p15          in varchar2    default null,
    p16          in varchar2    default null,
    p17          in varchar2    default null,
    p18          in varchar2    default null,
    p19          in varchar2    default null,
    p_max_length in pls_integer default 1000,
    p_level      in t_log_level default c_log_level_info,
    p_force      in boolean     default false );

--==============================================================================
-- Log message at level c_log_level_error.
--
-- This procedure always logs, even if debug mode is turned off.
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p9:        Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
--
-- EXAMPLE
--   apex_debug.error('Critical error %s', sqlerrm);
--
-- SEE ALSO
--   message(), warn(), info(), trace(), enter()
--==============================================================================
procedure error (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_warn.
--
-- This procedure always logs if a developer session exists, even if debug mode
-- is turned off.
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p9:        Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
--
-- EXAMPLE
--   apex_debug.warn('Soft constraint %s violated: %s', 4711, sqlerrm);
--
-- SEE ALSO
--   message(), error(), info(), trace(), enter()
--==============================================================================
procedure warn (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_info
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p9:        Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
--
-- EXAMPLE
--   apex_debug.info('Important: %s', 'fnord');
--
-- SEE ALSO
--   message(), error(), warn(), trace(), enter()
--==============================================================================
procedure info (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_app_trace.
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p9:        Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
--
-- EXAMPLE
--   apex_debug.trace('Low-level information: %s+%s=%s', 1, 2, 3);
--
-- SEE ALSO
--   message(), error(), warn(), info(), enter()
--==============================================================================
procedure trace (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_app_enter.
--
-- Use enter() to log the routine name and it's arguments at the beginning of a
-- procedure/function.
--
-- ARGUMENTS
-- * p_routine_name:     name of the procedure/function
-- * p_namexx/p_valuexx: procedure/function parameter name and value
-- * p_max_length:       The p_valuexx values will be truncated to this length
--
-- EXAMPLE
--   procedure foo (
--       p_widget_id       in number,
--       p_additional_data in varchar2,
--       p_emp_rec         in emp%rowtype )
--   is
--   begin
--       apex_debug.enter('foo',
--           'p_widget_id'      , p_widget_id,
--           'p_additional_data', p_additional_data,
--           'p_emp_rec.id'     , p_emp_rec.id );
--       ....do something....
--   end foo;
--
-- SEE ALSO
--   message(), error(), warn(), info(), trace()
--==============================================================================
procedure enter (
    p_routine_name     in varchar2,
    p_name01           in varchar2    default null,
    p_value01          in varchar2    default null,
    p_name02           in varchar2    default null,
    p_value02          in varchar2    default null,
    p_name03           in varchar2    default null,
    p_value03          in varchar2    default null,
    p_name04           in varchar2    default null,
    p_value04          in varchar2    default null,
    p_name05           in varchar2    default null,
    p_value05          in varchar2    default null,
    p_name06           in varchar2    default null,
    p_value06          in varchar2    default null,
    p_name07           in varchar2    default null,
    p_value07          in varchar2    default null,
    p_name08           in varchar2    default null,
    p_value08          in varchar2    default null,
    p_name09           in varchar2    default null,
    p_value09          in varchar2    default null,
    p_name10           in varchar2    default null,
    p_value10          in varchar2    default null,
    p_value_max_length in pls_integer default 1000 );

--==============================================================================
-- Log the session's item values.
--
-- ARGUMENTS
-- * p_page_id: identifies a page within the current applicaiton and workspace
--              context
-- * p_enabled: messages will be logged when logging is enabled, setting a
--              value of true will log
-- * p_level:   identifies the level of the log message, 1 is most important,
--              9 is least important, integer value
--==============================================================================
procedure log_page_session_state (
    p_page_id in number      default null,
    p_enabled in boolean     default false,
    p_level   in t_log_level default c_log_level_app_trace );

--==============================================================================
-- Write the contents of dbms_output.get_lines to the debug log.
--
-- This procedure copies messages of legacy applications which use dbms_output
-- into the debug log.
--
-- EXAMPLE
--   sys.dbms_output.put_line('some data');
--   sys.dbms_output.put_line('other data');
--   apex_debug.log_dbms_output;
--==============================================================================
procedure log_dbms_output;

--==============================================================================
-- Log a debug message
--
-- ARGUMENTS
-- * p_message: upto 4000 bytes of message
-- * p_enabled: messages will be logged when logging is enabled, setting a
--              value of true will log
-- * p_level:   identifies the level of the log message, 1 is most important, 9
--              is least important, integer value
--
-- DEPRECATED
--   use error(), warn(), message(), info(), enter() or trace() instead.
--==============================================================================
procedure log_message (
    p_message in varchar2    default null,
    p_enabled in boolean     default false,
    p_level   in t_log_level default c_log_level_app_trace );

--==============================================================================
-- DEPRECATED
--   use error(), warn(), message(), info(), enter() or trace() instead.
--==============================================================================
procedure log_long_message (
    p_message in varchar2    default null,
    p_enabled in boolean     default false,
    p_level   in t_log_level default c_log_level_app_trace );

--##############################################################################
--#
--# U T I L I T I E S
--#
--##############################################################################

--==============================================================================
-- Convert a boolean to a varchar2.
--==============================================================================
function tochar (
    p_value in boolean )
    return varchar2;

--##############################################################################
--#
--# M A N A G I N G   T H E   L O G
--#
--##############################################################################

--==============================================================================
-- remove_session_messages
--
-- Delete from the apex debug message log all data for a given session in your
-- workspace defaults to your current session.
--==============================================================================
procedure remove_session_messages(
    p_session         in number default null);

procedure remove_debug_by_app (
    p_application_id  in number);

procedure remove_debug_by_age (
    p_application_id  in number,
    p_older_than_days in number);

procedure remove_debug_by_view (
    p_application_id  in number,
    p_view_id         in number);

--==============================================================================
-- DEPRECATED
--   use remove_debug_by_age() version above instead
--==============================================================================
procedure remove_debug_by_age (
    p_application_id  in number,
    p_older_then_days in number);

end wwv_flow_debug_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DEBUG" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2010-2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_debug.sql
--
--    DESCRIPTION
--      Debug logging for code instrumentation
--      Private part of debug API
--
--    MODIFIED (MM/DD/YYYY)
--     mhichwa  01/26/2010 - Created
--     mhichwa  01/27/2010 - added log_page_session_state
--     mhichwa  02/12/2010 - added log_log_message
--     mhichwa  04/16/2010 - added debug purge procedures
--     arayner  08/26/2010 - Added overloaded version of remove_debug_by_age with correct parameter p_older_than_days spelling (bug 10062523)
--     arayner  09/06/2010 - Removed null defaults for both parameters of remove_debug_by_age (bug 10090373)
--     arayner  09/06/2010 - Removed null default for parameter p_application_id in remove_debug_by_app (bug 10090652)
--     arayner  09/06/2010 - Removed null defaults for both parameters of remove_debug_by_view (bug 10090699)
--     arayner  10/13/2010 - Removed g_debug_message_enabled global, debug flag now handled exclusively by by wwv_flow.g_debug (bug 10100985)
--     cneumuel 03/18/2011 - Added log_trace for internal engine tracing, reduced default log level to 4
--     cneumuel 04/04/2011 - Changed default log level back to 6
--     cneumuel 02/23/2012 - Added log_dbms_output: if debug is enabled, write dbms_output.get_lines into debug log
--     cneumuel 04/12/2012 - Added log,warn,enter,trace,tochar. Renamed from wwv_flow_debug_message to wwv_flow_debug.
--     cneumuel 04/13/2012 - Removed log (PLW-05004) and added message(),info() instead
--     cneumuel 04/18/2012 - Split into wwv_flow_debug and wwv_flow_debug_api
--     cneumuel 05/02/2012 - Renamed {en,dis}able_debug_messages to {en,dis}able
--     cneumuel 05/24/2012 - Added deprecated
--     cneumuel 05/25/2012 - In warn: only log if wwv_flow.g_debug is set
--                         - added enable_cache, flush_cache. bulk write of debug messages.
--     cneumuel 05/30/2012 - Removed log_trace.
--                         - Replaced p_argxx parameters with pxx.
--                         - In enter: added p_remove_top_stack for wwv_flow_debug_api.enter
--     cneumuel 05/31/2012 - added error. error and trace log if the user is logged into the builder
--     cneumuel 11/06/2012 - Added log_exception
--     cneumuel 01/16/2013 - Added get_page_view_id
--     cneumuel 03/27/2013 - Added is_system_debug_trace_enabled
--
--------------------------------------------------------------------------------

g_max_log_level          wwv_flow_debug_api.t_log_level := wwv_flow_debug_api.c_log_level_app_trace;

--==============================================================================
-- return whether SYSTEM_DEBUG_LEVEL is set to c_log_level_engine_trace.
--
-- this function can be used to conditionally emit security relevant
-- information in some special cases.
--==============================================================================
function is_system_debug_trace_enabled
    return boolean;

--==============================================================================
-- enable
--
-- turn on debug messaging at a integer level between 1 and 9
-- level 1 is most important
-- level 9 is least important
-- setting p_level to 3 would log any message at level 1, 2, or 3.
--
-- wwv_flow.debug uses level 4
--==============================================================================
procedure enable (
	p_level in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_info);

--==============================================================================
-- disable
--
-- turn off debug messaging
--==============================================================================
procedure disable;

--==============================================================================
-- Log a formatted debug message, general version.
-- See error(), warn(), info(), trace() below for shorter versions.
--
-- EXAMPLE
--   wwv_flow_debug.message('the value of %s + %s equals %s', 3, 5, 'eight');
--
-- ARGUMENTS
-- * p_message:     The debug message. Occurrences of '%s' will
--                  be replaced by p0 to p19, like in
--                  utl_lms.format_message and C's sprintf.
--                  '%%' represents the special character '%'.
--                  Occurrences of '%<n>' will be replaced by p<n>.
-- * p0..p19:       Substitution strings for '%s' placeholders.
-- * p_max_length:  The p<n> values will be truncated to this length
-- * p_level:       The log level for the message, default c_log_level_info
-- * p_force:       If true, this generates a debug message even if the page is
--                  not rendered in debug mode or p_level is greater than the
--                  configured debug messaging (via the URL or via the enable
--                  procedure).
--==============================================================================
procedure message (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p10          in varchar2    default null,
    p11          in varchar2    default null,
    p12          in varchar2    default null,
    p13          in varchar2    default null,
    p14          in varchar2    default null,
    p15          in varchar2    default null,
    p16          in varchar2    default null,
    p17          in varchar2    default null,
    p18          in varchar2    default null,
    p19          in varchar2    default null,
    p_max_length in pls_integer default 1000,
    p_level      in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_info,
    p_force      in boolean     default false );

--==============================================================================
-- Log message at level c_log_level_error.
--
-- Similar to message() with
-- * p_enabled => true (i.e. always log error)
-- * p_level   => c_log_level_error
--==============================================================================
procedure error (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_warn.
--
-- Similar to message() with
-- * p_enabled => (debug mode or builder session exists),
-- * p_level   => c_log_level_warn
--==============================================================================
procedure warn (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_info
--
-- Similar to message() with p_enabled => false, p_level => c_log_level_info
--==============================================================================
procedure info (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_engine_trace.
--
-- Similar to message() with p_enabled => false, p_level => c_log_level_engine_trace
--
-- This procedure is reserverd for the engine and should not be called from end
-- user applications.
--==============================================================================
procedure trace (
    p_message    in varchar2,
    p0           in varchar2    default null,
    p1           in varchar2    default null,
    p2           in varchar2    default null,
    p3           in varchar2    default null,
    p4           in varchar2    default null,
    p5           in varchar2    default null,
    p6           in varchar2    default null,
    p7           in varchar2    default null,
    p8           in varchar2    default null,
    p9           in varchar2    default null,
    p_max_length in pls_integer default 1000 );

--==============================================================================
-- Log message at level c_log_level_engine_enter.
--
-- Use enter() to log the routine name and it's arguments at the beginning of a
-- procedure/function.
--
-- This procedure is reserverd for the engine and should not be called from end
-- user applications.
--
-- Example:
--
--   procedure foo (
--       p_widget_id       in number,
--       p_additional_data in varchar2,
--       p_emp_rec         in emp%rowtype )
--   is
--   begin
--       wwv_flow_debug.enter('foo',
--           'p_widget_id'      , p_widget_id,
--           'p_additional_data', p_additional_data,
--           'p_emp_rec'        , '<an emp>' );
--       ....
--   end foo;
--
-- Arguments:
-- * p_routine_name:     name of the procedure/function
-- * p_namexx/p_valuexx: procuedure/function parameter name and value
-- * p_max_length:   The p_argXX values will be truncated to this length
-- * p_level:           The log level for the message, default c_log_level_engine_enter
--==============================================================================
procedure enter (
    p_routine_name     in varchar2,
    p_name01           in varchar2    default null,
    p_value01          in varchar2    default null,
    p_name02           in varchar2    default null,
    p_value02          in varchar2    default null,
    p_name03           in varchar2    default null,
    p_value03          in varchar2    default null,
    p_name04           in varchar2    default null,
    p_value04          in varchar2    default null,
    p_name05           in varchar2    default null,
    p_value05          in varchar2    default null,
    p_name06           in varchar2    default null,
    p_value06          in varchar2    default null,
    p_name07           in varchar2    default null,
    p_value07          in varchar2    default null,
    p_name08           in varchar2    default null,
    p_value08          in varchar2    default null,
    p_name09           in varchar2    default null,
    p_value09          in varchar2    default null,
    p_name10           in varchar2    default null,
    p_value10          in varchar2    default null,
    p_value_max_length in pls_integer default 1000,
    p_level            in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_engine_enter,
    p_remove_top_stack in boolean     default false );

--==============================================================================
-- warn that p_name is deprecated
--==============================================================================
procedure deprecated (
    p_name in varchar2 );

--==============================================================================
-- warn that an exception occurred
--
-- this logs sqlerrm and the backtrace at level c_log_level_warn.
--
-- ARGUMENTS
-- * p_context: an optional context to the message, like a procedure name
--
-- EXAMPLE
--     wwv_flow_debug.log_exception('my_procedure');
--
--   creates a log entry
--
--     Logging exception in my_procedure:
--     Sqlerrm: ORA-XXXXX: ...
--     Backtrace: ...
--==============================================================================
procedure log_exception (
    p_context in varchar2 default null );

--==============================================================================
-- log_page_session_state
--
-- ARGUMENTS
--    p_page_id: identifies a page within the current applicaiton and workspace
--               context
--    p_enabled: messages will be logged when logging is enabled, setting a
--               value of true will log
--    p_level:   identifies the level of the log message, 1 is most important,
--               9 is least important, integer value
--==============================================================================
procedure log_page_session_state (
    p_page_id in number      default null,
    p_enabled in boolean     default false,
    p_level   in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_app_trace );

--==============================================================================
-- if debug is enabled, write dbms_output.get_lines into debug
--==============================================================================
procedure log_dbms_output;

--==============================================================================
-- utility function to convert a value to a varchar2
--==============================================================================
function tochar (
    p_value in boolean )
    return varchar2;

--==============================================================================
-- remove_session_messages
--
-- delete from the apex debug message log all data for a given session in your
-- workspace defaults to your current session
--==============================================================================
procedure remove_session_messages(
   p_session in number default null);

procedure remove_debug_by_app (
    p_application_id in number);

procedure remove_debug_by_age (
    p_application_id  in number,
    p_older_than_days in number);

procedure remove_debug_by_view (
    p_application_id  in number,
    p_view_id        in number);

--==============================================================================
-- internal function to return the current call stack
-- p_remove_top removes the top entry from the call stack (for wwv_flow.debug)
--==============================================================================
function get_call_stack (
    p_remove_top in boolean default false )
    return varchar2;

--==============================================================================
-- internal procedure to write into the debug tables, using an autonomous
-- transaction
--
-- exposed for wwv_flow.debug() and wwv_flow_debug_api, do not call from
-- elsewhere.
--==============================================================================
procedure log_message_internal (
    p_message    in varchar2,
    p_level      in wwv_flow_debug_api.t_log_level,
    p_call_stack in varchar2 );

--==============================================================================
-- configure the package to cache debug messages and write them in bulk. this
-- requires that flush_cache has to be called at the end of request processing.
--
-- this should be run at the beginning of Apex request handling.
--==============================================================================
procedure enable_cache;

--==============================================================================
-- save cached debug messages in the database.
--
-- this has to be run at the end of Apex request handling.
--==============================================================================
procedure flush_cache;

--==============================================================================
-- return the current debug page view id
--==============================================================================
function get_page_view_id
    return number;

--==============================================================================
-- DEPRECATED
--==============================================================================
procedure log_message (
    p_message in varchar2    default null,
    p_enabled in boolean     default false,
    p_level   in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_app_trace );

procedure log_long_message (
    p_message in varchar2    default null,
    p_enabled in boolean     default false,
    p_level   in wwv_flow_debug_api.t_log_level default wwv_flow_debug_api.c_log_level_app_trace );

end wwv_flow_debug;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ESCAPE" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_escape.sql
--
--    PUBLIC NAME
--      apex_escape
--
--    DESCRIPTION
--      This package provides functions for escaping special characters in
--      strings, to ensure that the data is suitable for further processing.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    04/13/2012 - Created
--    jkallman    05/04/2012 - Added selective_escape
--    cneumuel    05/09/2012 - in ldap_dn, ldap_search_filter: added p_reserved_chars, p_escape_non_ascii (bug #14047270)
--    pawolf      06/15/2012 - Renamed selective_escape to html_whitelist
--    cneumuel    07/05/2012 - Added js_literal
--    cneumuel    07/09/2012 - Added html, html_attribute (bug #14047702)
--    cneumuel    07/12/2012 - Added init. In html: optimization when no character set conversion is needed (bug #14047270)
--    cneumuel    07/13/2012 - Added html_prn
--    cneumuel    07/13/2012 - Added html_truncated
--    pawolf      07/16/2012 - Renamed html_truncated to html_trunc
--    cneumuel    07/30/2012 - removed html_prn
--    cneumuel    08/16/2012 - added set_html_escaping_mode (bug #14047702)
--    cneumuel    08/24/2012 - added noop, to silince injection detection tools
--    cneumuel    09/04/2012 - added api documentation
--    cneumuel    04/11/2013 - In c_html_whitelist_tags: added additional notations for <br/> tag (bug #16612634)
--
--------------------------------------------------------------------------------

SPACE#                       constant binary_integer := 32;
HASH#                        constant binary_integer := 35;
COMMA#                       constant binary_integer := 44;
HYPHEN#                      constant binary_integer := 45;
DOT#                         constant binary_integer := 46;
ZERO#                        constant binary_integer := 48;
NINE#                        constant binary_integer := 57;
UP_A#                        constant binary_integer := 65;
UP_Z#                        constant binary_integer := 90;
BACKSLASH#                   constant binary_integer := 92;
UNDERSCORE#                  constant binary_integer := 95;
LOW_A#                       constant binary_integer := 97;
LOW_Z#                       constant binary_integer := 122;

c_ldap_dn_reserved_chars     constant varchar2(8)   := '"+,;<=>\';
c_ldap_search_reserved_chars constant varchar2(5)   := '*()\/';
c_html_whitelist_tags        constant varchar2(255) := '<h1>,</h1>,<h2>,</h2>,<h3>,</h3>,<h4>,</h4>,<p>,</p>,<b>,</b>,<strong>,</strong>,<i>,</i>,<ul>,</ul>,<ol>,</ol>,<li>,</li>,<br />,<br/>,<br>,<BR>,<hr/>';

--##############################################################################
--#
--# LDAP ESCAPING
--#
--##############################################################################

--==============================================================================
-- Escape reserved characters in an LDAP distinguished name, according to RFC
-- 4514.
--
-- The RFC describes "+,;<=>\ as reserved characters (see p_reserved_chars).
-- These will be escaped by a backslash (e.g. " becomes \").
-- Non-printable characters (ascii 0 - 31) and ones with a code > 127
-- (see p_escape_non_ascii) will be escaped as \xx, xx being the
-- hexadecimal character code.
-- The space character at the beginning or end of the string and # at
-- the beginning will also be escaped with a backslash.
--
-- ARGUMENTS
-- * p_string            string that should be escaped.
-- * p_reserved_chars    every character of p_string in this list will be escaped
--                       with a backslash.
-- * p_escape_non_ascii  if true, escape characters above ascii 127. this is
--                       supported by RFCs 4514 and 2253, but may cause errors
--                       with older LDAP servers and Microsoft AD.
--
-- EXAMPLE
--   declare
--       l_name    varchar2(4000) := 'Joe+User';
--       l_escaped varchar2(4000);
--   begin
--       l_escaped := apex_escape.ldap_dn(l_name);
--       htp.p(l_name||' becomes '||l_escaped);
--   end;
--
-- SEE ALSO
--   ldap_search_filter
--==============================================================================
function ldap_dn (
    p_string           in varchar2,
    p_reserved_chars   in varchar2 default c_ldap_dn_reserved_chars,
    p_escape_non_ascii in boolean  default true )
    return varchar2;

--==============================================================================
-- Escape reserved characters in an LDAP search filter, according to RFC 4515.
--
-- The RFC describes *()\/ as reserved characters (see p_reserved_chars).
-- These, non-printable characters (ascii 0 - 31) and ones with a code > 127
-- (see p_escape_non_ascii) will be escaped as \xx, xx being the hexadecimal
-- character code.
--
-- ARGUMENTS
-- * p_string            search filter that should be escaped.
-- * p_reserved_chars    every character of p_string in this list will be escaped
--                       with \xx (xx being the character's ascii hex code).
-- * p_escape_non_ascii  if true, escape characters above ascii 127 as \xx.
--                       this is supported by RFC 4515, but may cause errors
--                       with older LDAP servers and Microsoft AD.
--
-- EXAMPLE
--   declare
--       l_name    varchar2(4000) := 'Joe*User';
--       l_escaped varchar2(4000);
--   begin
--       l_escaped := apex_escape.ldap_search_filter(l_name);
--       htp.p(l_name||' becomes '||l_escaped);
--   end;
--
-- SEE ALSO
--   ldap_dn
--==============================================================================
function ldap_search_filter (
    p_string           in varchar2,
    p_reserved_chars   in varchar2 default c_ldap_search_reserved_chars,
    p_escape_non_ascii in boolean default true )
    return varchar2;

--##############################################################################
--#
--# HTML ESCAPING
--#
--##############################################################################

--==============================================================================
-- Escape html
--
-- This function escapes characters which can change the context in an html
-- environment. It is an extended version of the well-known sys.htf.escape_sc.
--
-- The function's result depends on the escaping mode that is defined via
-- apex_escape.set_html_escaping_mode. By default, the escaping mode is
-- "Extended", but it can be overridden by manually calling
-- set_html_escaping_mode or by setting the application security attribute
-- "HTML Escaping Mode" to "Basic". If the mode is "Basic", the function
-- behaves like sys.htf.escape_sc. Otherwise, the rules below apply.
--
-- The following table depicts ascii characters that the function will
-- transform and their escaped values:
--
--   Raw Escaped
--   --- -------
--   &   &amp;
--   "   &quot;
--   <   &lt;
--   >   &gt;
--   '   &#x27;
--   /   &#x2F;
--
-- In addition, the function may escape unicode characters if the database NLS
-- character set is not UTF-8 or if the REQUEST_IANA_CHARSET http header
-- variable is set to something different than UTF-8 (which is the default). If
-- unicode escaping applies, these characters are escaped via &#xHHHH; where
-- HHHH is the unicode hex code.
--
-- ARGUMENTS
-- * p_string            text that should be escaped
--
-- EXAMPLE
--   declare
--     procedure eq(p_str1 in varchar2,p_str2 in varchar2)
--     is
--     begin
--       if p_str1||'.' <> p_str2||'.' then
--         raise_application_error(-20001,p_str1||' <> '||p_str2);
--       end if;
--     end eq;
--   begin
--     apex_escape.set_html_escaping_mode('B');
--     eq(apex_escape.html('hello &"<>''/'), 'hello &amp;&quot;&lt;&gt;''/');
--     apex_escape.set_html_escaping_mode('E');
--     eq(apex_escape.html('hello &"<>''/'), 'hello &amp;&quot;&lt;&gt;&#x27;&#x2F;');
--   end;
--
-- SEE ALSO
--   html_trunc, html_whitelist, html_attribute, set_html_escaping_mode
--==============================================================================
function html (
    p_string in varchar2 )
    return varchar2;

--==============================================================================
-- Escape html but limit the returned string to p_length characters
--
-- This function returns the first p_length characters of an input clob and
-- escapes them. You can use this function if the input clob might be too large
-- to fit in a varchar2 variable and it is sufficient to only display the first
-- part of it.
--
-- ARGUMENTS
-- * p_string            text that should be escaped
-- * p_length            the number of characters which should be taken from
--                       p_string
--
-- EXAMPLE
--   begin
--     htp.p('<ul>');
--     for l_data in ( select title, cls, body
--                       from my_topics )
--     loop
--       sys.htp.p('<li><span class="'||apex_escape.html_attribute(l_data.cls)||'">'||
--                 apex_escape.html(l_data.title)||
--                 '</span>');
--       sys.htp.p(apex_escape.html_trunc(l_data.body));
--       sys.htp.p('</li>');
--     end loop;
--     htp.p('</ul>');
--   end;
--
-- SEE ALSO
--   html, html_whitelist, html_attribute, set_html_escaping_mode
--==============================================================================
function html_trunc (
    p_string            in clob,
    p_length            in number default 4000 )
    return varchar2;

--==============================================================================
-- HTML escape all characters in the input text with the exception of the
-- specified whitelist tags.
--
-- This function can be useful if the input text may contain simple html markup
-- but a developer wants to ensure that an attacker can not use malicious tags
-- for cross-site scripting.
--
-- ARGUMENTS
-- * p_html              input text that should be filtered
-- * p_whitelist_tags    comma separated list of tags that should stay in p_html
--
-- EXAMPLE
--   begin
--     sys.htp.p(apex_escape.html_whitelist(
--                 '<h1>Hello<script>alert("XSS");</script></h1>'));
--   end;
--
-- SEE ALSO
--   html, html_trunc, html_attribute, set_html_escaping_mode
--==============================================================================
function html_whitelist (
   p_html           in varchar2,
   p_whitelist_tags in varchar2 default c_html_whitelist_tags )
   return varchar2;

--==============================================================================
-- Escape html attribute
--
-- This function can be used to escape the values of html entity attributes. It
-- hex - escapes everything that is not alphanumeric or in ',' '.' '-' '_'
--
-- Use this function to ensure that
--
-- ARGUMENTS
-- * p_string            input text that should be escaped
--
-- EXAMPLE
--   see html_trunc
--
-- SEE ALSO
--   html, html_trunc, html_whitelist, set_html_escaping_mode
--==============================================================================
function html_attribute (
    p_string in varchar2 )
    return varchar2;

--##############################################################################
--#
--# JAVASCRIPT ESCAPING
--#
--##############################################################################

--==============================================================================
-- Escape and optionally enquote a javascript string.
--
-- This function replaces non-immune characters with \xHH or \uHHHH equivalents.
-- The result can be injected into javascript code, within <script> tags or
-- inline ("javascript:xxx").
--
-- Immune characters are a-z A-Z 0-9 , . _
--
-- ARGUMENTS
-- * p_string            string to be escaped
-- * p_quote             if not null, place this string left and right of the
--                       result. the quote character should either be a single
--                       or a double quote.
--
-- EXAMPLE
--   declare
--     l_string varchar2(4000) := 'O''Brien';
--   begin
--     sys.htp.p('<script>'||
--               'alert('||apex_escape.js_literal(l_string)||');'||
--               '</script>');
--   end;
--==============================================================================
function js_literal (
    p_string in varchar2,
    p_quote  in varchar2 default '''' )
    return varchar2;

--##############################################################################
--#
--# PUBLIC UTILITY FUNCTIONS
--#
--##############################################################################

--==============================================================================
-- Return p_string unchanged. This function can be used to silence automatic
-- injection detection tests, similar to dbms_assert.noop for SQL injection.
--
-- ARGUMENTS
-- * p_string            input string
--
-- EXAMPLE
--   begin
--     sys.htp.p(apex_escape.noop('Cats & Dogs'));
--   end;
--==============================================================================
function noop (
    p_string in varchar2 )
    return varchar2 deterministic;

--==============================================================================
-- Configure HTML escaping mode for wwv_flow_escape.html
--
-- ARGUMENTS
-- * p_mode             if B: do basic escaping, like sys.htf.escape_sc
--                      if E: do extended escaping
--
-- SEE ALSO
--   html, html_trunc, html_whitelist, html_attribute
--==============================================================================
procedure set_html_escaping_mode (
    p_mode in varchar2 );

--==============================================================================
-- This procedure can be used to re-initialize internal package state, after
-- HTTP header variables or the current application have been changed. It is for
-- internal use only.
--==============================================================================
procedure init;

end wwv_flow_escape;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_HTF" is
/**
 *
 */
nbsp constant varchar2(6) := '&nbsp;';

/**
 * Encode special characters
 */
function url_encode
(
    ctext      in varchar2 DEFAULT NULL
)
return varchar2;
pragma restrict_references (url_encode, wnds, rnds, wnps, rnps ) ;

/**
 * Encode all characters of the string
 */
function url_encode2
(
    ctext      in varchar2 DEFAULT NULL
)
return varchar2;
pragma restrict_references (url_encode2, wnds, rnds, wnps, rnps ) ;

/**
 * Encode characters to a specific character set.
 */

function url_encode3(p_url_text varchar2,
                     p_escape_reserved varchar2,
                     p_charset varchar2)
return varchar2;

/**
 * Same function as sys.htf.escape_sc but it limits the output to 3996 chars
 * so that it also works in a SQL statement without raising a numeric value error.
 */

function escape_sc_sql (
    p_text in varchar2 )
    return varchar2;

/**
 * Same function as sys.htf.escape_sc but for CLOBs.
 */

function escape_sc (
    p_text in clob )
    return clob;

/**
 * Return an opening HMTL table cell "TD" tag.
 */
function tableDataOpen
(
    calign      in varchar2 DEFAULT NULL,
    cdp         in varchar2 DEFAULT NULL,
    cnowrap     in varchar2 DEFAULT NULL,
    crowspan    in varchar2 DEFAULT NULL,
    ccolspan    in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
)
return varchar2;


/**
 * Return a closing HMTL table cell "TD" tag.
 */
tableDataClose constant varchar2(5) := '</TD>';


/**
 * Return an opening HTML paragraph "P" tag.
 */
function paragraphOpen
(
    calign       in varchar2 DEFAULT NULL,
    cnowrap      in varchar2 DEFAULT NULL,
    cclear       in varchar2 DEFAULT NULL,
    cattributes  in varchar2 DEFAULT NULL
)
return varchar2;


/**
 * Return a closing HTML paragraph "P" tag.
 */
paragraphClose constant varchar2(4) := '</P>';


/**
 * Return an opening HTML division "DIV" tag.
 */
function divOpen
(
    calign      in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL,
    cclass      in varchar2 DEFAULT NULL
)
return varchar2;

/**
 * Return an opening HTML fieldset tag which can
 * contain the optional attributes id, class and
 * additional parameter for other attributes
 */
function fieldsetOpen
(
    cid         in varchar2 default null,
    cclass      in varchar2 default null,
    cattributes in varchar2 default null
)
return varchar2;

/**
 * Return a closing HTML fieldset tag.
 */
function fieldsetClose
return varchar2;

/**
 * Return a closing HTML division "DIV" tag.
 */
divClose constant varchar2(6) := '</DIV>';


/**
 * Return a form button "INPUT" HTML tag.
 */
function formButton
(
    cname in varchar2 DEFAULT NULL,
    cvalue in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
)
return varchar2;


/**
 * Return an opening HMTL script "SCRIPT" tag.
 */
function scriptOpen
(
    clanguage in varchar2 DEFAULT 'JavaScript'
)
return varchar2;


/**
 * Return a closing HMTL script "SCRIPT" tag.
 */
function scriptClose return varchar2;


/**
 * Return an opening HMTL script "CENTER" tag.
 */
centerOpen constant varchar2(8) := '<center>';


/**
 * Return a closing HMTL script "CENTER" tag.
 */
centerClose constant varchar2(9) := '</center>';


/**
 * Return an opening HMTL script "LI" tag.
 */
function listitemopen
(
    cclear      in varchar2 default null,
    cdingbat    in varchar2 default null,
    csrc        in varchar2 default null,
    cattributes in varchar2 default null
)
return varchar2;


function formhidden(
    cname       in varchar2,
    cvalue      in varchar2 default null,
    cattributes in varchar2 default null
) return varchar2;

function formtextareaclose return varchar2;

function formtextareaopen2(
     cname       in varchar2,
     nrows       in integer,
     ncolumns    in integer,
     nmaxlength  in integer  default null,
     calign      in varchar2 default null,
     cwrap       in varchar2 default null,
     cattributes in varchar2 default null)
  return varchar2;


/*htp overides for xhtml and 508*/

function tabledata (
	CVALUE      in varchar2 default null,
	CALIGN      in varchar2 default null,
	CDP         in varchar2 default null,
	CNOWRAP     in varchar2 default null,
	CROWSPAN    in varchar2 default null,
	CCOLSPAN    in varchar2 default null,
	CATTRIBUTES in varchar2 default null
 ) return varchar2;

function tablerowopen (
 CALIGN      in varchar2 default null,
 CVALIGN     in varchar2 default null,
 CDP         in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CATTRIBUTES in varchar2 default null
) return varchar2;


function tablerowclose return varchar2;



function tableheader (
 CVALUE      in varchar2 default null,
 CALIGN      in varchar2 default null,
 CDP         in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CROWSPAN    in varchar2 default null,
 CCOLSPAN    in varchar2 default null,
 CATTRIBUTES in varchar2 default null
 ) return varchar2;



function tableopen (
 CBORDER     in varchar2 default null,
 CALIGN      in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CCLEAR      in varchar2 default null,
 CATTRIBUTES in varchar2 default null

) return varchar2;

function tableclose return varchar2;

function img (
 CURL        in varchar2 default null,
 CALIGN      in varchar2 default null,
 CALT        in varchar2 default null,
 CISMAP      in varchar2 default null,
 CATTRIBUTES in varchar2 default null
) return varchar2;


function bodyopen (
 CBACKGROUND in varchar2 default null,
 CATTRIBUTES in varchar2 default null
) return varchar2;

function bodyClose return varchar2;

function htmlopen return varchar2;

function htmlClose return varchar2;

function formText (
cname in varchar2 DEFAULT NULL,
csize in varchar2 DEFAULT NULL,
cmaxlength in varchar2 DEFAULT NULL,
cvalue in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
) return varchar2;

function formPassword (
	cname in varchar2 DEFAULT NULL,
	csize in varchar2 DEFAULT NULL,
	cmaxlength in varchar2 DEFAULT NULL,
	cvalue in varchar2 DEFAULT NULL,
	cattributes in varchar2 DEFAULT NULL
) return varchar2;

function anchor(
curl in varchar2 DEFAULT NULL,
ctext in varchar2 DEFAULT NULL,
cname in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
)return varchar2;

function anchor2(
curl in varchar2 DEFAULT NULL,
ctext in varchar2 DEFAULT NULL,
cname in varchar2 DEFAULT NULL,
ctarget in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
)return varchar2;

function formOpen (
    curl        in varchar2 default null,
    cmethod     in varchar2 default null,
    ctarget     in varchar2 default null,
    cenctype    in varchar2 default null,
    cattributes in varchar2 default null,
    novalidate  in boolean  default true )
    return varchar2;

function formSelectOpen(
	cname in varchar2 DEFAULT NULL,
	cprompt in varchar2 DEFAULT NULL,
	nsize in integer DEFAULT NULL,
	cattributes in varchar2 DEFAULT NULL
)return varchar2;


function formSelectOption(
	cvalue in varchar2 DEFAULT NULL,
	cselected in varchar2 DEFAULT NULL,
	cattributes in varchar2 DEFAULT NULL
)return varchar2;

function formSelectClose return varchar2;

function formSubmit(
   cname          in       varchar2   DEFAULT NULL,
   cvalue         in       varchar2   DEFAULT 'Submit',
   cattributes    in       varchar2   DEFAULT NULL
)return varchar2;

end wwv_htf;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_HTP" is

procedure url_encode
(
    ctext      in varchar2 DEFAULT NULL
);

procedure url_encode2
(
    ctext      in varchar2 DEFAULT NULL
);

/**
 * Print an opening HMTL table cell "TD" tag.
 */
procedure tableDataOpen
(
    calign      in varchar2 DEFAULT NULL,
    cdp         in varchar2 DEFAULT NULL,
    cnowrap     in varchar2 DEFAULT NULL,
    crowspan    in varchar2 DEFAULT NULL,
    ccolspan    in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
);


/**
 * Print a closing HMTL table cell "TD" tag.
 */
procedure tableDataClose;


/**
 * Print an opening HTML paragraph "P" tag.
 */
procedure paragraphOpen
(
    calign       in varchar2 DEFAULT NULL,
    cnowrap      in varchar2 DEFAULT NULL,
    cclear       in varchar2 DEFAULT NULL,
    cattributes  in varchar2 DEFAULT NULL
);


/**
 * Print a closing HTML paragraph "P" tag.
 */
procedure paragraphClose;


/**
 * Print an opening HTML division "DIV" tag.
 */
procedure divOpen
(
    calign      in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
);


/**
 * Print a closing HTML division "DIV" tag.
 */
procedure divClose;


/**
 * Print a form button "INPUT" HTML tag.
 */
procedure formButton
(
    cname       in varchar2 DEFAULT NULL,
    cvalue      in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
);


/**
 * Print an opening HMTL script "SCRIPT" tag.
 */
procedure scriptOpen
(
    clanguage in varchar2 DEFAULT 'JavaScript'
);


/**
 * Print a closing HMTL script "SCRIPT" tag.
 */
procedure scriptClose;


/**
 * Print an opening HMTL script "CENTER" tag.
 */
procedure centerOpen;


/**
 * Print a closing HMTL script "CENTER" tag.
 */
procedure centerClose;


/**
 * Print an opening HMTL script "LI" tag.
 */
procedure listItemOpen
(
    cclear      in varchar2 DEFAULT NULL,
    cdingbat    in varchar2 DEFAULT NULL,
    csrc        in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
);

procedure formHidden(
    cname       in varchar2,
    cvalue      in varchar2 DEFAULT NULL,
    cattributes in varchar2 DEFAULT NULL
);

/*htp overides for xhtml and 508*/

procedure tabledata (
	CVALUE      in varchar2 default null,
	CALIGN      in varchar2 default null,
	CDP         in varchar2 default null,
	CNOWRAP     in varchar2 default null,
	CROWSPAN    in varchar2 default null,
	CCOLSPAN    in varchar2 default null,
	CATTRIBUTES in varchar2 default null
 );

procedure tablerowopen (
 CALIGN      in varchar2 default null,
 CVALIGN     in varchar2 default null,
 CDP         in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CATTRIBUTES in varchar2 default null
);


procedure tablerowclose;



procedure tableheader (
 CVALUE      in varchar2 default null,
 CALIGN      in varchar2 default null,
 CDP         in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CROWSPAN    in varchar2 default null,
 CCOLSPAN    in varchar2 default null,
 CATTRIBUTES in varchar2 default null
 );



procedure tableopen (
 CBORDER     in varchar2 default null,
 CALIGN      in varchar2 default null,
 CNOWRAP     in varchar2 default null,
 CCLEAR      in varchar2 default null,
 CATTRIBUTES in varchar2 default null

);

procedure tableclose;

procedure img (
 CURL        in varchar2 default null,
 CALIGN      in varchar2 default null,
 CALT        in varchar2 default null,
 CISMAP      in varchar2 default null,
 CATTRIBUTES in varchar2 default null
);


procedure bodyopen (
 CBACKGROUND in varchar2 default null,
 CATTRIBUTES in varchar2 default null
);

procedure bodyClose;

procedure htmlopen;

procedure htmlClose;


procedure formText (
cname in varchar2 DEFAULT NULL,
csize in varchar2 DEFAULT NULL,
cmaxlength in varchar2 DEFAULT NULL,
cvalue in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
);

procedure formPassword (
cname in varchar2 DEFAULT NULL,
csize in varchar2 DEFAULT NULL,
cmaxlength in varchar2 DEFAULT NULL,
cvalue in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
);

procedure anchor(
curl in varchar2 DEFAULT NULL,
ctext in varchar2 DEFAULT NULL,
cname in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
);

procedure anchor2(
curl in varchar2 DEFAULT NULL,
ctext in varchar2 DEFAULT NULL,
cname in varchar2 DEFAULT NULL,
ctarget in varchar2 DEFAULT NULL,
cattributes in varchar2 DEFAULT NULL
);

procedure formOpen(
    curl        in varchar2 default null,
    cmethod     in varchar2 default null,
    ctarget     in varchar2 default null,
    cenctype    in varchar2 default null,
    cattributes in varchar2 default null,
    novalidate  in boolean  default true );

procedure formSelectOpen(
	cname in varchar2 DEFAULT NULL,
	cprompt in varchar2 DEFAULT NULL,
	nsize in integer DEFAULT NULL,
	cattributes in varchar2 DEFAULT NULL
);


procedure formSelectOption(
	cvalue in varchar2 DEFAULT NULL,
	cselected in varchar2 DEFAULT NULL,
	cattributes in varchar2 DEFAULT NULL
);

procedure formSelectClose;

procedure formSubmit(
   cname          in       varchar2   DEFAULT NULL,
   cvalue         in       varchar2   DEFAULT 'Submit',
   cattributes    in       varchar2   DEFAULT NULL
);

procedure print_clob (
    p_content    in clob,
    p_chunk_size in number default 8000
);


end wwv_htp;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_OWA_COOKIE" is

   -- Calls to the procedure SEND generate an HTTP header line
   -- of the form:
   -- Set-Cookie: <name>=<value> expires=<expires> path=<path>
   --             domain=<domain> [secure] [HttpOnly]
   -- Only the name and value are required (as per the HTTP_COOKIE spec),
   -- and the default is non-secure.
   -- Calls to SEND must fall in the context of an OWA procedure's
   -- HTTP header output.  For example:

   -- begin
   --    owa_util.mime_header('text/html', FALSE);
   --                -- FALSE indicates not to close the header
   --    owa_cookie.send('ITEM1','SOCKS');
   --    owa_cookie.send('ITEM2','SHOES');
   --    owa_util.http_header_close;
   --
   --    -- Now output the page the user will see.
   --    htp.htmlOpen;
   --    <etc>
   procedure send(name     in varchar2,
                  value    in varchar2,
                  expires  in date     DEFAULT NULL,
                  path     in varchar2 DEFAULT NULL,
                  domain   in varchar2 DEFAULT NULL,
                  secure   in varchar2 DEFAULT NULL,
                  httponly in varchar2 DEFAULT NULL);

end wwv_owa_cookie;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_META_DATA" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Fetch meta data for flow rendering
--
--    NOTES
--      Information required to render and process page information is queried from
--      tables using this package.  Template information is queried using the
--      wwv_flow_templates_util package.

--    SECURITY
--      only executable by flows engine
--
--    SECURITY
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED  (MM/DD/YYYY)
--      mhichwa  11/13/1999 - Created
--      mhichwa  12/09/1999 - Added fetch_toplevel_tab_info
--      mhichwa  01/09/2000 - Removed alt_flow_step_id argument
--      mhichwa  01/12/2000 - Added fetch_page_plugs function
--      mhichwa  02/19/2000 - Moved fetch_template_preference from fetch_flow_info
--      mhichwa  05/02/2000 - Added g_first_displayable_field global
--      mhichwa  11/08/2000 - Added static subs
--      mhichwa  12/12/2000 - fetch_required_roles is obsolete
--      mhichwa  12/22/2000 - Added security checks passed global
--      mhichwa  12/26/2000 - Added security checks failed
--      mhichwa  01/20/2001 - Added g_on_new_instance_fired_for
--      mhichwa  08/01/2001 - Set sec failed and fast to 4000 from 5000 bytes
--      tmuth    10/03/2002 - Changed g_first_displayable_field to 50 char instead of 8
--      mhichwa  10/20/2002 - Added fetch_show and accept processing
--      sspadafo 12/27/2002 - Added fetch_show_branch_info and fetch_accept_branch_info (Bug 2729764)
--      sspadafo 02/09/2003 - Added globals for new build option evaluation method (Bug 2748385)
--      sspadafo 02/10/2003 - Added functions fetch_g_build_options_.. to return build option globals (Bug 2748385)
--      sspadafo 02/08/2005 - Added fetch_protected_item_ids, fetch_protected_page_info procedures for URL tampering feature
--      sspadafo 02/27/2006 - Remove obsolete fetch_process_info
--      sspadafo 04/23/2006 - Added fetch_public_page_info for zero session ID feature
--      sspadafo 12/03/2007 - Removed fetch_protected_item_ids procedure
--      mhichwa  09/11/2008 - Added p_mode argument
--      sspadafo 01/11/2009 - Removed obsolete procedure fetch_branch_info
--      pawolf   04/10/2009 - Moved format_lov_query to wwv_flow_meta_data
--      pawolf   06/09/2009 - Added is_ok_to_display and is_valid_build_option
--      pawolf   06/10/2009 - Moved functions from wwv_flow_meta_data to wwv_flow_meta_util
--      cneumuel 06/30/2011 - Added do_static_substitutions and find_static_substitution, moved g_static_substitution% from spec to body (bug #12636771)
--      cneumuel 05/21/2012 - Removed fetch_template_preference, fetch_items_on_new_instance
--      cneumuel 05/24/2012 - Added find_item_by_name, find_item_by_id
--      cneumuel 05/29/2012 - in t_item_properties: removed dependency to wwv_flow_step_items because of dependency problem in coreins.sql (mail vlad)
--      cneumuel 05/31/2012 - In t_item_properties and cursors: add scope (feature #897)
--      cneumuel 06/01/2012 - Added t_item_scope.c_report_scope for saving report metadata in session state
--                          - In find_item_by_name: added p_application_id
--
--------------------------------------------------------------------------------

--==============================================================================
-- item properties
--==============================================================================
subtype t_item_scope is varchar2(6);
c_page_item_scope   constant t_item_scope := 'PAGE';   -- page item
c_app_item_scope    constant t_item_scope := 'APP';    -- app-local app item
c_global_item_scope constant t_item_scope := 'GLOBAL'; -- global app item
c_report_scope      constant t_item_scope := 'REPORT'; -- report metadata pseudo-item
type t_item_properties is record (
    id                    number,
    security_group_id     number,
    scope                 t_item_scope,
    name                  varchar2(255),
    prompt                varchar2(4000),
    data_type             varchar2(30),
    restricted_characters varchar2(20),
    is_persistent         varchar2(1),
    is_encrypted          boolean,
    is_password_dnss      boolean,
    escape_on_http_input  boolean,
    protection_level_nr   pls_integer );

--==============================================================================
-- package globals
--==============================================================================
g_first_displayable_field      varchar2(50);
g_on_new_instance_fired_for    varchar2(4000);
g_build_options_included       varchar2(32767);
g_build_options_excluded       varchar2(32767);

--==============================================================================
-- flow level fetch
--==============================================================================
function  fetch_flow_info
    return number;
function  fetch_icon_bar_info
    return number;

--==============================================================================
-- page level fetch
--==============================================================================
function  fetch_step_info (p_mode in varchar2 default null)
    return number;
function  fetch_tab_info
    return number;
function  fetch_toplevel_tab_info (p_tabset in varchar2)
    return number;
function  fetch_button_info
    return number;
function  fetch_show_branch_info
    return number;
function  fetch_accept_branch_info
    return number;
function  fetch_item_type_settings
    return number;
function  fetch_item_info
    return number;

function  fetch_show_process_info
    return number;
function  fetch_accept_process_info
    return number;

function fetch_g_build_options_included
    return varchar2;
function fetch_g_build_options_excluded
    return varchar2;
function  fetch_computations
    return number;
function  fetch_page_plugs
    return number;
procedure fetch_protected_page_info;
procedure fetch_public_page_info;

--==============================================================================
-- return item properties
--
-- t_item_properties.id is the ID of the ITEM (p_name) or 0 for items that begin
-- with IR and are not an existing item name or -1 if the item is contained in
-- the component value array
--==============================================================================
function find_item_by_name (
    p_name                  in  varchar2,
    p_application_id        in  number default wwv_flow_security.g_flow_id )
    return t_item_properties;

--==============================================================================
-- return item properties
--
-- t_item_properties.id is the ID of the ITEM (p_name) or 0 for items that begin
-- with IR and are not an existing item name or -1 if the item is contained in
-- the component value array
--
--==============================================================================
function find_item_by_id (
    p_id in number )
    return t_item_properties;

--==============================================================================
-- replace application-level substitution variables in p_str
--==============================================================================
procedure do_static_substitutions (
    p_str in out nocopy varchar2 );
--
--==============================================================================
-- look up application-level substitution variable p_name. if found, return true
-- and the variable's value in p_value
--==============================================================================
function find_static_substitution (
    p_name  in varchar2,
    p_value in out nocopy varchar2 )
    return boolean;

end wwv_flow_meta_data;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEMPLATES_UTIL"
as
--  Copyright (c) Oracle Corporation 1999 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Flow template rendering engine
--
--    SECURITY
--      Publicly executable
--
--    RUNTIME DEPLOYMENT: YES
--
--    NOTES
--      This program shows an html page header and footer.
--      Templates can have the following pound sign "#" based substitutions:
--      1. #TITLE#           -- HTML body title
--      2. #NAVIGATION_BAR#  -- Location of navigation Bar
--      3. #FORM_OPEN#       -- Opens HTML form used by flows
--      4. #FORM_CLOSE#      -- Closes HTML form opened
--      5. #SUCCESS_MESSAGE# -- If set by flow engine display here
--      Templates can also reference any flow variable using &VARIABLE syntax
--      Tab templates use #TAB_TEXT#
--


-------------------
-- Global Variables
--
g_template  number := null;


------------------------------------
-- Template Procedures and Functions
--

function get_template_id (
    p_template_name    in varchar2)
    return number
    ;

function get_page_template_name (
    p_template_id      in varchar2 default null)
    return varchar2
    ;

procedure fetch_tab_info (
    p_template_id      in number)
    ;

procedure copy_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true );

procedure copy_plug (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_row_template (
    p_copy_from_flow_id  in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_list_template (
    p_copy_from_flow_id  in number,
    p_to_flow_id         in number,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_field_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_menu_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_button_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_calendar_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure copy_popup_template (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_template_id   in number,
    p_to_theme_id        in number default null,
    p_to_template_name   in varchar2 default null,
    p_to_template_id     in number default null,
    p_show_errors        in boolean default true)
    ;

procedure set_user_template_preference (
    p_flow_id               in number,
    p_user_id               in varchar2,
    p_template_name         in varchar2 default null,
    p_printer_template_name in varchar2 default null)
    ;

function get_user_template_preference (
    p_flow_id               in number,
    p_user_id               in varchar2,
    p_template_type         in varchar2 default 'STANDARD')
    return varchar2
    ;

--------------------------------------------------------------------
-- utility functions for backward compatability and upgrade services
--

procedure set_page_template_names_2_ids (
    p_flow_id               in number,
    p_page_id               in number)
    ;

procedure set_page_region_names_2_ids (
    p_flow_id               in number,
    p_page_id               in number)
    ;

procedure replace_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_region_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_report_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_list_template (
    p_from_flow_id       in number,
    p_to_flow_id         in number,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_field_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_menu_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_popup_lov_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_button_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure replace_calendar_template (
    p_from_flow_id       in number,
    p_to_flow_id         in varchar2,
    p_from_template_id   in number,
    p_to_template_id     in number)
    ;

procedure page_template_popup_preview (
    p_flow               in number,
    p_template           in varchar2 default null,
    p_template_id        in number default null,
    p_passback           in varchar2 default null)
    ;

procedure list_template_sub_str (
    p_list_template_id in number default null)
    ;

procedure breadcrumb_template_sub_str (
    p_template_id   in number default null)
    ;

procedure label_template_sub_str (
    p_template_id in number default null)
    ;

procedure button_template_sub_str (
    p_template_id in number default null)
    ;

procedure page_template_utilization (
    p_flow_id      in number default null,
    p_template_id  in number default null)
    ;
end wwv_flow_templates_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_RENDER_CHART2" as
--  Copyright (c) Oracle Corporation 1999 - 2003. All Rights Reserved.
--
--    DESCRIPTION
--      Creates html bar charts from sql queries or cursors
--
--    SECURITY
--
--
--    NOTES:
--      Package to display the results of a query in a bar chart.
--
--      This package will take in either a query or a cursor of a query
--      of the form:
--
--        select the_link, the_text, the_value
--          from my_table
--         where my_constraints
--
--      The_link is the the link that will be associated to the_text or lable of the
--      the chart.  The_value is the numeric value of the bar.  Example:
--
--        select 'http://theserver/chart/owa/update_emp?emp_no='||empno the_link,
--               ename || '  ' || hiredate the_text,
--               nvl( sal, 0 ) + nvl( comm, 0 ) the_value
--          from scott.emp
--         where job = ':job_type'
--           and hiredate > ':h_date'
--
--      Parameters:
--        p_query            The query. It can be a query string or a cursor.
--        p_parm_names       An array of parameters to the query.
--                             eg.  my_parm_name(1) := 'job_type';
--                                  my_parm_name(2) := 'h_date';
--        p_parm_values      An array of parameter values.  They correspond to the parm_name.
--                             eg.  may_parm_value(1) := 'MANAGER';
--                                  may_parm_value(2) := '01-JAN-90';
--        p_cursor           A cursor of a parsed query.
--        p_chart_type       Determines whether the cart will be a horizontal bar chart ( HBAR ) or
--                           a vertical bar_chart ( VBAR )
--        p_bar_image        What image will fill the bars of the chart.  eg.  my_pic.gif
--                           If the value 'MULTI' is supplied then the chart will be colored coded by value.
--                           Any value in the top 12 1/2% of the values will be red.  The next 12 1/2% will
--                           be orange, then yellow, green, blue, purple, brown, and finally black.
--        p_chart_title      An optional title of the chart.
--        p_axis             The axis of the chart.  Valid values are:
--                             ZERO  -  chart is relative to zero
--                             FIRST -  chart is relative to the first value
--                             LAST  -  chart is relative to the last value
--                             MAX   -  chart is relative to the max value
--                             MIN   -  chart is relative to the min value
--                             AVG   -  chart is relative to the avg value
--         p_scale           A preportion of how big to make the bars.  Any positive interger is valid.
--         p_bar_width       How many pixels wide the bar will be.  Vaild for vertical charts only.
--         p_bar_height      How many pixels tall the bar will be.  Vaild for horizontal charts only.
--         p_num_mask        The number mask for the displaying of the value of the bar.
--         p_font_size       The size of the font for the text and title of the chart.  eg. '-2', '+1', ..
--         p_font_color      The color of the font for the text and title of the chart. eg. 'RED', 'GREEN', '#CCFF22'
--         p_font_face       The face of the font for the text and title of the chart.  eg. 'COMIC SANS MS', 'ARIAL'
--         p_max_rows        The maximum number of bars to display.
--         p_min_row         The minimum number of bars to start displaying, used for pagenation.
--         p_show_summary    Deterimies whether or not to show chart summary and what summary info to show.
--                           The parameter is a string of letters that correspond the different summary info
--                           and the order of the letters correspond to the order of displaying of the information.
--                           Possible values are:
--                             C  - Display the count of records/bars returned
--                             A  - Axis
--                             M  - Minimum value
--                             X  - Maximum value
--                             V  - Average value
--                             S  - Sum of all values
--                             F  - First value
--                             L  - Last value
--                           If the value 'CAS' is supplied, the summary information will contain
--                           The count, the average value and then the sum of all values.
--         p_image_locat     The virtural directory where the images are located.
--
  g_status  varchar2(32767) := null;
  g_row_cnt number := 0;
  empty_vc_arr wwv_flow_global.vc_arr2;
  g_use_flow_pagination varchar2(30) := null;
  g_region_id number := null;  -- current region id


    g_colors    wwv_flow_global.vc_arr2;

    g_chart_title   varchar2(2000);
    g_axis          varchar2(10);
    g_scale         number;
    g_bar_width     number;
    g_bar_height    number;
    g_bar_image     varchar2(250);
    g_num_mask      varchar2(250);
    g_font_size     varchar2(250);
    g_font_color    varchar2(250);
    g_font_face     varchar2(250);
    g_max_rows      number;
    g_min_row       number;
    g_image_locat   varchar2(250);

    g_link          wwv_flow_global.vc_arr2;
    g_text          wwv_flow_global.vc_arr2;
    g_value         wwv_flow_global.vc_arr2;

    g_upper_span    wwv_flow_global.vc_arr2;
    g_lower_span    wwv_flow_global.vc_arr2;
    g_range         number;

    g_total_value   number := 0;
    g_max_value     number := -999999999999999999999999999999999999;
    g_min_value     number := 999999999999999999999999999999999999;
    g_max_element   number := 0;
    g_min_element   number := 0;

    g_pagination_row  varchar2(32767) := null;

--
  procedure show_colors;

--

  procedure show(
    p_query             in varchar2,
    p_parm_names        in wwv_flow_global.vc_arr2   default empty_vc_arr,
    p_parm_values       in wwv_flow_global.vc_arr2   default empty_vc_arr,
    p_chart_type        in varchar2     default 'HBAR',
    p_bar_image         in varchar2     default 'MULTI',
    p_chart_title       in varchar2     default null,
    p_axis                      in varchar2     default 'ZERO',
    p_scale             in number               default 300,
    p_bar_width         in number               default 40,
    p_bar_height        in number               default 20,
    p_num_mask          in varchar2     default '999,999,999,999,999,999,999,999,999,999,999,999,999',
    p_font_size         in varchar2     default '-2',
    p_font_color        in varchar2     default null,
    p_font_face         in varchar2     default null,
    p_max_rows          in number               default 2000,
    p_min_row           in number               default 1,
    p_show_summary      in varchar2     default null, -- 'CAMXVSFLR'
    p_image_prefix      in varchar2     default nvl(wwv_flow.g_image_prefix,'/'||'i/'),
    p_use_flow_pagination in varchar2   default 'YES' );
--
  procedure show(
    p_cursor            in integer              default null,
    p_chart_type        in varchar2     default 'HBAR',
    p_bar_image         in varchar2     default 'MULTI',
    p_chart_title       in varchar2     default null,
    p_axis                      in varchar2     default 'ZERO',
    p_scale             in number               default 300,
    p_bar_width         in number               default 40,
    p_bar_height        in number               default 20,
    p_num_mask          in varchar2     default '999,999,999,999,999,999,999,999,999,999,999,999,999',
    p_font_size         in varchar2     default '-2',
    p_font_color        in varchar2     default null,
    p_font_face         in varchar2     default null,
    p_max_rows          in number               default 2000,
        p_min_row               in number               default 1,
    p_show_summary      in varchar2     default null, -- 'CAMXVSFLR'
    p_image_prefix      in varchar2     default nvl(wwv_flow.g_image_prefix,'/'||'i/'),
    p_use_flow_pagination in varchar2   default 'YES' );
--
end wwv_render_chart2;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CHECK"
as

--  Copyright (c) Oracle Corporation 1999. All Rights Reserved.
--
--    DESCRIPTION
--      Flow utility to check conditions
--
--    SECURITY
--
--    NOTES
--      To improve performance checks are cached to avoid evaluating duplicate checks.
--

function check_cond_plsql_expresion (
    p_condition in varchar2 default null)
    return boolean
    ;

function check_condition_sql_expresion (
    p_condition in varchar2 default null)
    return boolean
    ;
end wwv_flow_check;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_RENDER_REPORT3" as

  type totals_table is table of wwv_flow_global.n_arr index by binary_integer;
  type preview_table is table of varchar2(255) index by binary_integer;
  type col_names_index_type is table of number index by varchar2(4000);

  type row_template_type is record (
    template                    varchar2(32767),
    type                        varchar2(32767),
    before_rows                 varchar2(32767),
    after_rows                  varchar2(32767),
    before_first                varchar2(32767),
    after_last                  varchar2(32767),
    tab_attr                    varchar2(32767),
    row_style_mouse_over        varchar2(255),
    row_style_mouse_out         varchar2(255),
    row_style_checked           varchar2(255),
    row_style_unchecked         varchar2(255),
    pagination                  varchar2(32767),
    pagination_template         varchar2(32767),
    next_page_template          varchar2(32767),
    previous_page_template      varchar2(32767),
    next_set_template           varchar2(32767),
    previous_set_template       varchar2(32767),
    report_total_text_format    varchar2(32767),
    break_column_text_format    varchar2(32767),
    break_before_row            varchar2(32767),
    break_generic_column        varchar2(32767),
    break_after_row             varchar2(32767),
    break_type_flag             varchar2(255),
    break_repeat_heading_format varchar2(32767)
  );

  -- ----------------------------------------------------------------------------------------
  -- globals
  g_status                      varchar(5000)   := null;    -- execution status
  empty_vc_arr                  wwv_flow_global.vc_arr2;
  empty_num_arr                 wwv_flow_global.n_arr;
  g_empty_cell                  varchar2(8) := '&nbsp;';
  g_ok_to_continue              boolean := true;
  g_is_xml_export               boolean := false;
  g_has_derived_columns         boolean := false;
  g_has_row_selector            boolean := false;
  g_has_lov                     boolean := false;
  g_has_row_highlighting        boolean := false;
  g_show_nulls                  varchar2(255);
  g_ref_cursor                  integer;

  g_report_column_id              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_report_col_idx                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_query_column_id               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_form_element_id               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_derived_column                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_alias                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_alias_by_query_pos     wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_heading                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_use_as_row_header             wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_format                 wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_html_expression        wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_css_class              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_css_style              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_hit_highlight          wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_link                   wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_linktext               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_link_attr              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_link_checksum_type     wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_alignment              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_heading_alignment             wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_default_sort_column_sequence  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_default_sort_dir              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_disable_sort_column           wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_sum_column                    wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_hidden_column                 wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_asc_image                     wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_asc_image_attr                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_desc_image                    wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_desc_image_attr               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_display_when_cond_type        wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_display_when_condition        wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_display_when_condition2       wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_required_role          wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_query_options                 wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_max_generic_cols              wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_display_as                    wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_include_in_page               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_named_lov                     wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_inline_lov                    wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_lov_show_nulls                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_lov_null_text                 wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_lov_null_value                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_lov_display_extra             wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_width                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_height                 wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_css_classes                   wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_cattributes                   wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_cattributes_element           wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_column_field_template         wwv_flow_global.n_arr   := empty_num_arr;
  g_item_label_template           wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_before_item                   wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_after_item                    wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_column_default                wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_column_default_type           wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_01                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_02                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_03                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_04                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_05                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_06                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_07                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_08                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_09                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_10                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_11                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_12                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_13                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_14                  wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_attribute_15                  wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_empty_idx                     col_names_index_type;
  g_report_alias_idx              col_names_index_type := g_empty_idx;
  g_column_alias_idx              col_names_index_type := g_empty_idx;
  g_use_generic_columns           boolean := false;
  g_use_legacy_reports            boolean := false;
  g_sort_enabled                  boolean := false;
  g_is_tabular_form               boolean := false;
  g_break_cols                    wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_include_in_export             wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_print_col_width               wwv_flow_global.vc_arr2 := empty_vc_arr;
  g_print_col_align               wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_report_column_width           wwv_flow_global.vc_arr2 := empty_vc_arr;

  g_show_total_row_count_max      number := 1000;  -- max number when count the query's rows
  g_max_columns                   number := 60;

  -- ----------------------------------------------------------------------------------------
  -- pagination globals
  g_rows_per_page               number := null;          -- number of rows shown on each page
  g_total_rows                  number := null;          -- number of rows returned
  g_num_rows                    number := null;          -- number of rows returned
  g_internet_pagination         varchar2(32767) := null;
  g_row_ranges                  varchar2(32767) := null;
  g_row_ranges_in_select_list   varchar2(32767) := null;
  g_next_link                   varchar2(1000)  := null;
  g_previous_link               varchar2(1000)  := null;


  g_prn_number_of_cols          number := 0;
  g_prn_page_width              number := 792;
  g_prn_page_height             number := 612;

  g_prn_template_table_cells    varchar2(32767) := null;
  g_prn_template_header_row     varchar2(32767) := null;
  g_prn_template_body_row       varchar2(32767) := null;

  g_prn_template_clob           clob;
  g_prn_template_type           varchar2(255);

--------------------------------------------------------------------------------------------------------------
-- generic XSL-FO definition

  g_prn_template_table_cell_fop  varchar2(32767) := '                     <fo:table-column column-width="#COLUMN_WIDTH#pt"/>
';

  g_prn_template_header_col_fop  varchar2(32767) := '                           <fo:table-cell xsl:use-attribute-sets="cell header-color border">
                               <fo:block xsl:use-attribute-sets="text #TEXT_ALIGN#">
                                   <fo:inline xsl:use-attribute-sets="header-font">#COLUMN_HEADING#</fo:inline>
                               </fo:block>
                           </fo:table-cell>
';


  g_prn_template_body_col_fop    varchar2(32767) :='                              <fo:table-cell xsl:use-attribute-sets="cell border">
                                  <fo:block xsl:use-attribute-sets="text #TEXT_ALIGN#">
                                      <fo:inline xsl:use-attribute-sets="body-font">
                                          <xsl:value-of select=".//#COLUMN_HEADER_NAME#"/>
                                      </fo:inline>
                                  </fo:block>
                              </fo:table-cell>
';


  g_prn_template_fop             varchar2(32767) := '<?xml version = ''1.0'' encoding = ''utf-8''?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:xlink="http://www.w3.org/1999/xlink">
   <xsl:variable name="_XDOFOPOS" select="''''"/>
   <xsl:variable name="_XDOFOPOS2" select="number(1)"/>
   <xsl:variable name="_XDOFOTOTAL" select="number(1)"/>
   <xsl:variable name="_XDOFOOSTOTAL" select="number(0)"/>
   <xsl:attribute-set name="padding">
      <xsl:attribute name="padding-bottom">0.25pt</xsl:attribute>
      <xsl:attribute name="padding-top">0.25pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="text">
      <xsl:attribute name="text-align">start</xsl:attribute>
      <xsl:attribute name="orphans">2</xsl:attribute>
      <xsl:attribute name="start-indent">0.0pt</xsl:attribute>
      <xsl:attribute name="linefeed-treatment">preserve</xsl:attribute>
      <xsl:attribute name="padding-top">0.0pt</xsl:attribute>
      <xsl:attribute name="end-indent">0.0pt</xsl:attribute>
      <xsl:attribute name="padding-bottom">0.0pt</xsl:attribute>
      <xsl:attribute name="height">0.0pt</xsl:attribute>
      <xsl:attribute name="widows">2</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="align-left">
      <xsl:attribute name="text-align">left</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="align-center">
      <xsl:attribute name="text-align">center</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="align-right">
      <xsl:attribute name="text-align">right</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="footer">
      <xsl:attribute name="text-align">right</xsl:attribute>
      <xsl:attribute name="start-indent">5.4pt</xsl:attribute>
      <xsl:attribute name="end-indent">5.4pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="text_2">
      <xsl:attribute name="start-indent">5.4pt</xsl:attribute>
      <xsl:attribute name="end-indent">23.4pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="text_20">
      <xsl:attribute name="height">13.872pt</xsl:attribute>
      <xsl:attribute name="end-indent">5.4pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="text_0">
      <xsl:attribute name="end-indent">5.4pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="page-header">
      <xsl:attribute name="color">#PAGE_HEADER_FONT_COLOR#</xsl:attribute>
      <xsl:attribute name="font-family">#PAGE_HEADER_FONT_FAMILY#</xsl:attribute>
      <xsl:attribute name="white-space-collapse">false</xsl:attribute>
      <xsl:attribute name="font-size">#PAGE_HEADER_FONT_SIZE#pt</xsl:attribute>
      <xsl:attribute name="font-weight">#PAGE_HEADER_FONT_WEIGHT#</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="page-footer">
      <xsl:attribute name="color">#PAGE_FOOTER_FONT_COLOR#</xsl:attribute>
      <xsl:attribute name="font-family">#PAGE_FOOTER_FONT_FAMILY#</xsl:attribute>
      <xsl:attribute name="white-space-collapse">false</xsl:attribute>
      <xsl:attribute name="font-size">#PAGE_FOOTER_FONT_SIZE#pt</xsl:attribute>
      <xsl:attribute name="font-weight">#PAGE_FOOTER_FONT_WEIGHT#</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="body-font">
      <xsl:attribute name="height">12.0pt</xsl:attribute>
      <xsl:attribute name="font-family">#BODY_FONT_FAMILY#</xsl:attribute>
      <xsl:attribute name="white-space-collapse">false</xsl:attribute>
      <xsl:attribute name="font-size">#BODY_FONT_SIZE#pt</xsl:attribute>
      <xsl:attribute name="font-weight">#BODY_FONT_WEIGHT#</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="page-number">
      <xsl:attribute name="height">13.872pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="header-font">
      <xsl:attribute name="height">#HEADER_FONT_SIZE#pt</xsl:attribute>
      <xsl:attribute name="font-family">#HEADER_FONT_FAMILY#</xsl:attribute>
      <xsl:attribute name="white-space-collapse">false</xsl:attribute>
      <xsl:attribute name="font-size">#HEADER_FONT_SIZE#pt</xsl:attribute>
      <xsl:attribute name="font-weight">#HEADER_FONT_WEIGHT#</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="border">
      <xsl:attribute name="border-top">#BORDER_WIDTH#pt solid #BORDER_COLOR#</xsl:attribute>
      <xsl:attribute name="border-bottom">#BORDER_WIDTH#pt solid #BORDER_COLOR#</xsl:attribute>
      <xsl:attribute name="border-start-width">#BORDER_WIDTH#pt</xsl:attribute>
      <xsl:attribute name="border-start-color">#BORDER_COLOR#</xsl:attribute>
      <xsl:attribute name="border-start-style">solid</xsl:attribute>
      <xsl:attribute name="border-end-width">#BORDER_WIDTH#pt</xsl:attribute>
      <xsl:attribute name="border-end-color">#BORDER_COLOR#</xsl:attribute>
      <xsl:attribute name="border-end-style">solid</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="cell">
      <xsl:attribute name="background-color">#BODY_BG_COLOR#</xsl:attribute>
      <xsl:attribute name="color">#BODY_FONT_COLOR#</xsl:attribute>
      <xsl:attribute name="padding-start">5.15pt</xsl:attribute>
      <xsl:attribute name="vertical-align">top</xsl:attribute>
      <xsl:attribute name="padding-top">0.0pt</xsl:attribute>
      <xsl:attribute name="padding-end">5.15pt</xsl:attribute>
      <xsl:attribute name="number-columns-spanned">1</xsl:attribute>
      <xsl:attribute name="height">0.0pt</xsl:attribute>
      <xsl:attribute name="padding-bottom">0.0pt</xsl:attribute>
   </xsl:attribute-set>
   <xsl:attribute-set name="header-color">
      <xsl:attribute name="background-color">#HEADER_BG_COLOR#</xsl:attribute>
      <xsl:attribute name="color">#HEADER_FONT_COLOR#</xsl:attribute>
   </xsl:attribute-set>
   <xsl:template match="/">
      <fo:root>
         <fo:layout-master-set>
            <fo:simple-page-master master-name="master0" margin-left="66.6pt" margin-right="66.6pt" page-height="#PAGE_HEIGHT#pt" page-width="#PAGE_WIDTH#pt" margin-top="36.0pt" margin-bottom="36.0pt">
               <fo:region-body region-name="region-body" margin-top="54.0pt" margin-bottom="54.0pt"/>
               <fo:region-before region-name="region-header" extent="54.0pt"/>
               <fo:region-after region-name="region-footer" extent="54.0pt" display-align="after"/>
            </fo:simple-page-master>
         </fo:layout-master-set>
         <fo:page-sequence master-reference="master0">
            <xsl:variable name="_PW" select="number(#PAGE_HEIGHT#)"/>
            <xsl:variable name="_PH" select="number(#PAGE_WIDTH#)"/>
            <xsl:variable name="_ML" select="number(72.0)"/>
            <xsl:variable name="_MR" select="number(72.0)"/>
            <xsl:variable name="_MT" select="number(90.0)"/>
            <xsl:variable name="_MB" select="number(90.0)"/>
            <xsl:variable name="_HY" select="number(36.0)"/>
            <xsl:variable name="_FY" select="number(36.0)"/>
            <xsl:variable name="_SECTION_NAME" select="string(''master0'')"/>
            <fo:static-content flow-name="region-header">
               <fo:block xsl:use-attribute-sets="text text_2 text_0 #PAGE_HEADER_ALIGNMENT#">
                  <fo:inline xsl:use-attribute-sets="page-header">#PAGE_HEADER#</fo:inline>
               </fo:block>
            </fo:static-content>
            <fo:static-content flow-name="region-footer">
               <fo:block xsl:use-attribute-sets="text footer">
                  <fo:inline xsl:use-attribute-sets="body-font page-number">
                     <fo:page-number/>
                  </fo:inline>
               </fo:block>
               <fo:block xsl:use-attribute-sets="text text_2 #PAGE_FOOTER_ALIGNMENT#">
                  <fo:inline xsl:use-attribute-sets="page-footer">#PAGE_FOOTER#</fo:inline>
               </fo:block>
            </fo:static-content>
            <fo:flow flow-name="region-body">
               <fo:block xsl:use-attribute-sets="padding">
                  <fo:table start-indent="0.0pt">
                     <xsl:variable name="_XDOFOPOS2" select="number(1)"/>
                     <xsl:variable name="_XDOFOTOTAL" select="number(1)"/>
'||'#PRN_TABLE_CELLS#                     <fo:table-header>
                        <fo:table-row>
'||'#PRN_TEMPLATE_HEADER_ROW#                        </fo:table-row>
                     </fo:table-header>
                     <fo:table-body>
                        <xsl:for-each select=".//ROW">
                           <fo:table-row>
'||'#PRN_TEMPLATE_BODY_ROW#                           </fo:table-row>
                        </xsl:for-each>
                     </fo:table-body>
                  </fo:table>
               </fo:block>
               <fo:block xsl:use-attribute-sets="text text_2 text_20">
                  <fo:inline id="{concat(''page-total-'', $_SECTION_NAME, $_XDOFOPOS)}"/>
                  <fo:inline id="{concat(''page-total'', $_XDOFOPOS)}"/>
               </fo:block>
            </fo:flow>
         </fo:page-sequence>
      </fo:root>
   </xsl:template>
</xsl:stylesheet>
';


  g_prn_template_table_cell     varchar2(32767) := g_prn_template_table_cell_fop;
  g_prn_template_header_col     varchar2(32767) := g_prn_template_header_col_fop;
  g_prn_template_body_col       varchar2(32767) := g_prn_template_body_col_fop;
  g_prn_template                varchar2(32767) := g_prn_template_fop;

  -- ----------------------------------------------------------------------------------------
  -- is valid query
  --
  function is_valid_query (
    p_region_id number default null,
    p_plug_source varchar2,
    p_plug_source_type varchar2,
    p_owner varchar2 default null,
    p_required_col_num number default null
  ) return varchar2;

  -- ----------------------------------------------------------------------------------------
  -- upgrade report

  procedure upgrade_report (
    p_region_id number,
    p_user      varchar2
  );

  -- ----------------------------------------------------------------------------------------
  -- get_query_headings

  function get_query_headings (
    p_region_id number,
    p_include_derived varchar2 default 'Y'
  ) return wwv_flow_global.vc_arr2;


  -- ----------------------------------------------------------------------------------------
  -- get since

  function get_since(
      p_date    in date,
      p_sysdate in date default null
  ) return varchar2;


  -- ----------------------------------------------------------------------------------------
  -- get since
  function get_since_tswtz(
      p_timestamp timestamp with time zone
  ) return varchar2;


  -- ----------------------------------------------------------------------------------------
  -- get since
  function get_since_tswltz(
      p_ltimestamp timestamp with local time zone
  ) return varchar2;



  -- ----------------------------------------------------------------------------------------
  -- highlight value

  function highlight_value (
      p_value            in varchar2,
      p_highlight_string in varchar2,
      p_style            in varchar2 default 'font-weight: bold; color: red;',
      p_tag_open         in boolean default false
    ) return varchar2;

  -- ----------------------------------------------------------------------------------------
  -- set template
  -- sets template definition based on row template id or default setting for non-template
  -- based reports

  procedure set_template(
    p_row_template_id           in     number,
    p_report_attributes_subs    in     varchar2,
    p_column_heading_template   in out varchar2,
    p_row_template              in out row_template_type,
    p_row_templates             in out wwv_flow_global.vc_arr2,
    p_row_template_conditions   in out wwv_flow_global.vc_arr2,
    p_row_template_display_cond in out wwv_flow_global.vc_arr2,
    p_multiple_templates_exist  in out boolean,
    p_show_null_cols            in out boolean,
    p_before_column_heading     in out varchar2,
    p_after_column_heading      in out varchar2
  );

  -- ----------------------------------------------------------------------------------------
  -- build_pagination_row

  function build_pagination_row (
    p_row_template            in row_template_type,
    p_row_count               in number,
    p_row_count_max           in number,
    p_min_row                 in number,
    p_max_rows                in number,
    p_total_row_count         in number,
    p_region_id               in number,
    p_col_cnt                 in number,
    p_row_count_fmt           in varchar2,
    p_row_count_fmt2          in varchar2,
    p_pagination_align        in varchar2,
    p_show_top_pagination     in boolean default false,
    p_more_data_found         in boolean default false,
    p_ajax_enabled            in varchar2 default 'N',
    p_ajax_items_to_submit    in varchar2 default null
  ) return varchar2;

  -- ----------------------------------------------------------------------------------------
  -- Set legacy col attribyts
  --
  procedure set_legacy_col_attributes (
    p_region_id number,
    p_is_api_call                 boolean default false,
    p_plug_query_headings         varchar2 default null,
    p_plug_query_headings_type    varchar2 default null,
    p_plug_query_col_allignments  varchar2 default null,
    p_plug_query_sum_cols         varchar2 default null,
    p_plug_query_number_formats   varchar2 default null,
    p_plug_query_hit_highlighting varchar2 default null
  );

  -- ----------------------------------------------------------------------------------------
  -- update_report_columns
  --
  procedure update_report_columns (
    p_region_id number
  );


  -- ----------------------------------------------------------------------------------------
  -- show
  --
  --

  procedure show(
    p_query                       in varchar2,
    p_min_row                     in number                    default 1,
    p_max_rows                    in number                    default 200,
    p_row_count_max               in number                    default g_show_total_row_count_max,
    p_plug_query_num_rows_type    in varchar2                  default null,
    p_pagination_display_position in varchar2                  default null,
    p_plug_source_type            in varchar2                  default null,
    p_csv_output                  in varchar2                  default 'N',
    p_print_server                in varchar2                  default null,
    p_csv_output_link_text        in varchar2                  default null,
    p_prn_output                  in varchar2                  default 'N',
    p_prn_output_show_link        in varchar2                  default 'N',
    p_prn_output_link_text        in varchar2                  default null,
    p_prn_document_header         in varchar2                  default null,
    p_prn_format                  in varchar2                  default null,
    p_prn_format_item             in varchar2                  default null,
    p_print_url                   in varchar2                  default null,
    p_print_url_label             in varchar2                  default null,
    p_plug_query_parse_override   in varchar2                  default null,
    p_plug_query_exp_filename     in varchar2                  default null,
    p_plug_query_exp_separator    in varchar2                  default ',',
    p_plug_query_exp_enclosed_by  in varchar2                  default '''',
    p_plug_query_hit_highlighting in varchar2                  default null,
    p_plug_query_headings_type    in varchar2                  default 'QUERY_COLUMNS',
    p_plug_query_headings         in varchar2                  default '(null)',     -- rename
    p_show_nulls_as               in varchar2                  default '(null)',
    p_break_cols                  in wwv_flow_global.vc_arr2   default empty_vc_arr,
    p_sum_cols                    in wwv_flow_global.vc_arr2   default empty_vc_arr,
    p_show_nulls                  in varchar2                  default 'F',
    p_plug_query_options          in varchar2                  default null,
    p_plug_query_strip_html       in varchar2                  default 'Y',
    p_row_template_id             in number                    default null,
    p_repeat_headings             in number                    default null,
    p_more_rows_message           in varchar2                  default null,
    p_no_data_found_message       in varchar2                  default 'No data found...',
    p_region_id                   in number                    default null,
    p_region_name                 in varchar2                  default null,
    p_region_static_id            in varchar2                  default null,
    p_ajax_enabled                in varchar2                  default 'N',
    p_ajax_items_to_submit        in varchar2                  default null,
    p_report_attributes_subs      in varchar2                  default null,
    p_render_full_page            in varchar2                  default 'Y'
    );

  -- ----------------------------------------------------------------------------------------
  -- ajax procedure used for handling Ajax requests (Dynamic Action refresh, sorting, pagination)
  --
  procedure ajax;

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PAGE_CACHE_API"
as

procedure cache_page;

function display_page
    return boolean;

--------------------
-- Manage Page Cache
--
function count_stale_pages (
    p_application    in number)
    return number;

procedure purge_by_application (
   p_application   in number);

procedure purge_stale (
    p_application    in number);

procedure purge_by_page (
   p_application   in number,
   p_page          in number,
   p_user_name     in varchar2 default null);

procedure purge_all;

function get_date_cached (
    p_application  in number,
    p_page         in number)
    return date;

---------------------------------------
-- manage region cache
--

procedure purge_stale_regions (
    p_application    in number);

function count_stale_regions (
    p_application    in number)
    return number;

procedure purge_regions_by_app (
     p_application in number);

procedure purge_regions_by_id (
     p_application in number,
     p_region_id   in number);

procedure purge_expired_regions (
     p_application in number);

procedure purge_regions_by_name (
     p_application  in number,
     p_page_id      in number,
     p_region_name  in varchar2);

procedure purge_regions_by_page (
     p_application  in number,
     p_page_id      in number);

function display_region (
   p_application_id in number,
   p_region_id      in number)
   return boolean;

function get_date_cached (
    p_application  in number,
    p_page         in number,
    p_region_name  in varchar2)
    return date;
--
--
--

procedure lob_replace(
    p_lob in out clob,
    p_what in varchar2,
    p_with in varchar2 default null);

function verify_cache_condition (
   p_application_id in number,
   p_region_id      in number)
   return boolean;


--
-- Chart Caching
--
procedure cache_chart_region (
   -- save xml to cache table
   p_application_id    in number,
   p_region_id         in number)
   ;

function display_chart_region (
   -- fetch xml from cache table
   p_application_id in number,
   p_region_id      in number)
   return boolean;

function chart_region_exists (
   -- does a unexpired cache of this chart exist
   p_application_id in number,
   p_region_id      in number)
   return boolean;

procedure purge_chart_cache_by_app (
    p_application_id in number);

procedure purge_chart_cache_by_region (
    p_application_id in number,
    p_region_id      in number);

end wwv_flow_page_cache_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_RENDER_QUERY" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2005 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_render_query.sql
--
--    DESCRIPTION
--
--    MODIFIED   (MM/DD/YYYY)
--    msewtz      01/26/2005 - Created
--    skutz       02/16/2005 - change signature for get report added empty_vcc_arr variable
--    skutz       02/21/2005 - added global g_dbms_output to facilitate output from recursive sql calls
--    msewtz      02/23/2005 - Added p_max_rows and p_dbms_output_lines to limit number of rows and dbms output buffer
--    msewtz      03/03/2005 - changed p_max_rows to p_max_size to support limiting report size by number of bytes
--    skutz       03/18/2005 - added p_max_rows and p_limit_type to get report so it now supports either max size or rows
--    mhichwa     07/20/2005 - Added support for g_max_size_reached global to indicate when a report exceeds its maximum size
--    msewtz      01/04/2008 - Added print_interactive_report
--    madelfio    01/07/2008 - Updated get_report, print_interactive_report to accept column attributes
--    madelfio    02/21/2008 - Added p_content_disposition to print_interactive_report (Bug 6837907)
--    cneumuel    04/18/2012 - Prefix sys objects with schema (bug #12338050)
--    msewtz      12/03/2013 - increased limit of rows in PDF export to 10M (bug 17832836)
--    msewtz      02/27/2014 - Updated escaping of special characters for PDF export when using the APEX Listener (bug 18282188)
--
--------------------------------------------------------------------------------

    g_status varchar2(32767) := null;
    empty_vc_arr                wwv_flow_global.vc_arr2;
    g_dbms_output               sys.dbms_output.chararr;
    g_max_size_reached          boolean := false;
    g_is_api_call               boolean := false;

    -----------------------------------------------------------------------------------------------
    -- get varchar2 array of report results
    -- p_owner:  owner / schema name
    -- p_query:  SQL statement
    -- p_format: CSV, HTML or XML
    -- p_values: bind values
    -- p_max_rows: number of report rows processed
    -- p_dbms_output_lines: number of dbms output lines

    function get_report (
        p_owner             varchar2,
        p_query             varchar2,
        p_format            varchar2 default 'HTML',
        p_values            in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_max_size          number   default 10000000,
        p_max_rows          number   default 10,
        p_limit_type        varchar2 default 'S', -- 'S' for size 'R' for rows
        p_dbms_output_lines number   default 10000000,
        p_headers           in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_header_align      in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_column_align      in wwv_flow_global.vc_arr2 default empty_vc_arr
    ) return wwv_flow_global.vc_arr2;

    -----------------------------------------------------------------------------------------------
    -- print report results via sys.htp.p or sys.dbms_output
    -- p_owner:  owner / schema name
    -- p_query:  SQL statement
    -- p_format: CSV, HTML or XML
    -- p_output: sys.HTP or sys.DBMS_OUTPUT
    -- p_max_rows: number of report rows processed
    -- p_dbms_output_lines: number of dbms output lines

    procedure print (
        p_owner             varchar2,
        p_query             varchar2,
        p_format            varchar2 default 'HTML',
        p_output            varchar2 default 'DBMS_OUTPUT',
        p_max_size          number   default 10000000,
        p_dbms_output_lines number   default 10000000

    );

    -----------------------------------------------------------------------------------------------
    -- print report results via sys.htp.p or sys.dbms_output
    -- p_owner:  owner / schema name
    -- p_query:  SQL statement
    -- p_format: CSV, HTML or XML
    -- p_output: sys.HTP or sys.DBMS_OUTPUT
    -- p_values: bind values array
    -- p_max_rows: number of report rows processed
    -- p_dbms_output_lines: number of dbms output lines

    procedure print_with_binds (
        p_owner             varchar2,
        p_query             varchar2,
        p_format            varchar2 default 'HTML',
        p_output            varchar2 default 'DBMS_OUTPUT',
        p_values            wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_max_size          number   default 10000000,
        p_dbms_output_lines number   default 10000000

    );

    ----------------------------------------------------------------------------------------------
    -- print_interactive_report

    procedure print_interactive_report (
        p_flow_id       in number,
        p_region_id     in number,
        p_format        in varchar2 default null,
        p_content_disposition in varchar2 default null,
        p_query_text    in varchar2 default null,
        p_query_name    in varchar2 default null,
        p_query_owner   in varchar2 default null,
        p_values        wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_headers       wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_header_align  wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_column_align  wwv_flow_global.vc_arr2 default empty_vc_arr
    );

    ----------------------------------------------------------------------------------------------
    -- get report query

    function get_report_query (
        p_flow_id       in varchar2 default null,
        p_is_api_call   in boolean default false,
        p_shared_query  in varchar2 default null,
        p_query_name    in varchar2 default null,
        p_query_owner   in varchar2 default null,
        p_sql_stmnts    in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_xml_structure in varchar2 default null,
        p_layout_id     in number   default null,
        p_layout_type   in varchar2 default null,
        p_layout        in clob     default null,
        p_format        in varchar2 default null,
        p_items         in varchar2 default null,
        p_binds         in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_values        in wwv_flow_global.vc_arr2 default empty_vc_arr
    ) return blob;

    ----------------------------------------------------------------------------------------------
    -- print_report_query

    procedure print_report_query (
        p_flow_id       in varchar2 default null,
        p_shared_query  in varchar2 default null,
        p_query_name    in varchar2 default null,
        p_query_owner   in varchar2 default null,
        p_sql_stmnts    in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_xml_structure in varchar2 default null,
        p_layout_id     in number   default null,
        p_layout_type   in varchar2 default null,
        p_layout        in clob     default null,
        p_format        in varchar2 default null,
        p_items         in varchar2 default null,
        p_binds         in wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_values        in wwv_flow_global.vc_arr2 default empty_vc_arr
    );

end wwv_flow_render_query;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ELEMENT"
as
    g_element          varchar2(255) := null;

    function add
        return number
    ;

end wwv_flow_element;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CRYPTO" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_crypto.sql
--
--    DESCRIPTION
--      This package is resonsible for encryption, decryption and randomizing
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED (MM/DD/YYYY)
--     tkyte    05/01/2001 - Created
--     sdillon  05/15/2001 - Added "oneway_hash" for a least common denominator where we are
--                           using 8.1.6 & 8.1.7, and we want to do diff things on diff versions.
--     cneumuel 03/03/2011 - Removed obsolete functions encryptString,
--                           decryptString, encryptRaw, decryptRaw, encryptLob, decryptLob
--     cneumuel 04/21/2011 - renamed from wwv_crypt to wwv_flow_crypto, added
--                           crypto funcs from package wwv_flow_security
--
--------------------------------------------------------------------------------

--==============================================================================
--
-- These subtypes make it easier to declare a return variable
-- that can accept checksums.  They are not needed, you can
-- assign the checksums to varchar2s or raws as you see fit
--
subtype checksum_str is varchar2(16);
subtype checksum_raw is raw(16);

--==============================================================================
-- return p_str encrypted with key p_key and converted from raw to hex
--==============================================================================
function mac_md5_hex (
    p_src in raw,
    p_key in raw )
    return varchar2;

--==============================================================================
-- encrypt p_src with key p_key and algorithm sys.DBMS_CRYPTO.AES_CBC_PKCS5
-- and return the converted value as hexadecimal
--==============================================================================
function aes_encrypt_hex (
    p_src in varchar2,
    p_key in raw )
    return varchar2;

--==============================================================================
-- decrypt the hexadecimal p_src with key p_key and algorithm
-- sys.DBMS_CRYPTO.AES_CBC_PKCS5 and return the converted value
--==============================================================================
function aes_decrypt_hex (
    p_src in varchar2,
    p_key in raw )
    return varchar2;

--==============================================================================
-- return a random number
--==============================================================================
function randomnumber return number;

--==============================================================================
-- return a random byte sequence
--==============================================================================
function randombytes (
    p_numbytes in pls_integer )
    return raw;

--==============================================================================
-- A set of functions to take a string or upto 32k in size
-- or a LOB of any size and compute the md5 checksum of it.
-- Notice we avoid overloading RAW and
-- VARCHAR2 functions again for the same reason as encrypt
-- and decrypt
--==============================================================================
function md5str( p_data in varchar2 ) return checksum_str;
function md5raw( p_data in raw ) return checksum_raw;

--==============================================================================
-- Used to encapsulate the actual function being used. This is
-- helpful when using multiple db versions.
--==============================================================================
function one_way_hash_str( p_data in varchar2 ) return checksum_str;
function one_way_hash_raw( p_data in raw ) return checksum_str;

--==============================================================================
-- The MD5LOB functions take the first 32k of the BLOB or CLOB
-- and compute a checksum for them.
--==============================================================================
function md5lob( p_data in clob ) return checksum_str;
function md5lob( p_data in blob ) return checksum_raw;

end wwv_flow_crypto;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      api.sql
--
--    DESCRIPTION
--     Interface to creating APEX attributes.
--
--    NOTES
--      API to insert application metadata into the apex data dictionary
--
--    MODIFIED (MM/DD/YYYY)
--     mhichwa  10/09/1999 - Created
--     mhichwa  10/20/1999 - Added 3 new args to create_template
--     mhichwa  10/21/1999 - Added create_report_page procedure
--     mhichwa  10/23/1999 - Added flow_image_prefix
--     mhichwa  10/25/1999 - Removed help_text from wwv_flows
--     mhichwa  11/15/1999 - Added create_list_of_values and named_lov
--     mhichwa  11/23/1999 - Added non_current_image and image_attributes for tabs
--     mhichwa  12/01/1999 - Added p_body_title
--     mhichwa  12/02/1999 - Added p_icon_image2,3 p_icon_height2,3 p_icon_width2,3
--     mhichwa  12/07/1999 - Added p_required_patch, p_tab_comment, p_tab_parent_page
--     mhichwa  12/07/1999 - Added create_patch procedure
--     mhichwa  12/09/1999 - Added create_toplevel_tab includes change to template
--     mhichwa  12/09/1999 - Change parent tab from number to varchar2, change name to parent_tabset
--     mhichwa  12/13/1999 - Added default_template_position
--     mhichwa  12/15/1999 - Added attribute5,6
--     mhichwa  12/16/1999 - Added p_display_condition to top level tabs
--     mhichwa  12/30/1999 - Added update_page procedure
--     mhichwa  01/09/2000 - Depricated initial_occurs and max_occurances
--     mhichwa  01/10/2000 - Added create_translation and remove_translation
--     mhichwa  01/13/2000 - Added plug pages and templates
--     mhichwa  01/20/2000 - Added p_error_template, p_authenticate, p_login_url
--     mhichwa  01/23/2000 - Added support for g_logout_url
--     mhichwa  01/24/2000 - Added support for g_public_url_prefix
--     mhichwa  01/24/2000 - Added p_where_clause, p_pagination_size, p_table_bgcolor, p_heading_bgcolor, p_table_bgcolors
--     mhichwa  01/26/2000 - Added p_item_plug_id and p_button_plug_id
--     mhichwa  01/28/2000 - Added create_default_flow
--     mhichwa  01/31/2000 - Added table_bgcolor, heading_bgcolor, font_size/face, plug_colspan, table_cattributes
--     mhichwa  01/31/2000 - Added p_plug_template to create_report_page
--     mhichwa  02/03/2000 - Added row_template support
--     mhichwa  02/12/2000 - Added p_TRANSLATE_TO_ID
--     mhichwa  02/15/2000 - Added flow_version
--     mhichwa  02/17/2000 - Added bugs
--     mhichwa  02/29/2000 - Added list text
--     mhichwa  03/04/2000 - Added create_dynamic_translation
--     mhichwa  03/06/2000 - Added update tab display_conditions
--     mhichwa  03/15/2000 - Changed create_patch to create_build_option
--     mhichwa  03/15/2000 - Added set_build_option, set_flow_
--     mhichwa  03/16/2000 - Added plug tempalte2 and template3
--     mhichwa  03/17/2000 - Added set_flow_process_sql procedure
--     mhichwa  04/20/2000 - Added set_icon_bar_item procedure to allow updates to existing flows
--     mhichwa  05/02/2000 - Added p_list_item_current_for_pages
--     mhichwa  05/03/2000 - Added row_template_before_rows, after_rows and table_attributes
--     mhichwa  05/16/2000 - Added p_process_when_button_id
--     mhichwa  05/17/2000 - Added set flow application owner
--     mhichwa  05/20/2000 - Added create_message
--     mhichwa  05/24/2000 - Added validation condition and validation condition type
--     mhichwa  05/30/2000 - Added list_template
--     mhichwa  05/31/2000 - Added plug query options
--     mhichwa  06/02/2000 - Added comments and set_ procedures
--     mhichwa  06/05/2000 - Added custom_authentication_process custom_authentication_page
--     mhichwa  06/07/2000 - Added list item desplay conditions
--     mhichwa  06/08/2000 - Added p_lov_translated
--     mhichwa  06/11/2000 - Added p_public_user
--     mhichwa  06/13/2000 - Added display when type
--     mhichwa  06/14/2000 - Added static lov
--     mhichwa  06/15/2000 - Added display_condition_type for tabs.
--     mhichwa  06/18/2000 - Added process_type
--     mhichwa  06/18/2000 - Added branch_when_button_id
--     mhichwa  07/03/2000 - Added plug_column_width
--     mhichwa  07/10/2000 - Added region table cattributes
--     mhichwa  08/16/2000 - Added source post computation
--     mhichwa  08/19/2000 - Added p_help_text
--     mhichwa  08/23/2000 - Added create image
--     mhichwa  09/04/2000 - Added create shortcut
--     mhichwa  09/19/2000 - Added flow_status and flow_unavailable_text
--     mhichwa  09/24/2000 - Added url begin with and end text
--     mhichwa  09/28/2000 - Added java_entry_point
--     mhichwa  10/13/2000 - Added plug_query_table_border
--     mhichwa  10/19/2000 - Added plug_query_headings_type
--     mhichwa  10/31/2000 - Added plug_caching
--     mhichwa  11/07/2000 - Added extra list item display condition
--     mhichwa  11/09/2000 - Added flow static names and values
--     mhichwa  11/16/2000 - Added set login url
--     mhichwa  11/21/2000 - Added p_computation_error_message
--     mhichwa  11/23/2000 - Added bug work log
--     mhichwa  11/30/2000 - Added flow status
--     mhichwa  12/01/2000 - Added support for list item current type
--     mhichwa  12/07/2000 - Added vpd
--     mhichwa  12/08/2000 - Added security group ID
--     mhichwa  12/08/2000 - Added computation_error_message
--     mhichwa  12/09/2000 - Added security schemes
--     mhichwa  12/15/2000 - Added compute when text (2) places
--     mhichwa  12/15/2000 - Added tab disp cond text
--     mhichwa  12/18/2000 - Added branch_condition_text
--     mhichwa  12/19/2000 - Added scheme_text
--     mhichwa  12/20/2000 - Added security scheme to create page item, tabs, navbar, list items, and buttons
--     mhichwa  12/22/2000 - Added flow id to set static sub strings
--     mhichwa  12/22/2000 - Added comments and caching to security scheme table
--     mhichwa  12/22/2000 - Added security scheme to create flow
--     mhichwa  12/22/2000 - Obsolete caching for security schemes
--     mhichwa  01/12/2001 - Added tag_attributes
--     mhichwa  01/16/2001 - Added 4 app tab attributes and flow level application tab set attribute
--     mhichwa  01/16/2001 - Added create applicationt tab set and application tabs api
--     mhichwa  01/17/2001 - Added process sql clob
--     mhichwa  01/18/2001 - Added remove icon bar item
--     mhichwa  01/24/2001 - Added configuration support
--     mhichwa  02/15/2001 - Added list item expand to list template
--     mhichwa  03/01/2001 - Added button_alignment
--     mhichwa  03/03/2001 - Added custom auth login url
--     mhichwa  03/08/2001 - Added global id flow attribute
--     mhichwa  03/15/2001 - Added create tree
--     mhichwa  04/10/2001 - Added button cattributes
--     mhichwa  04/18/2001 - Added plug ignore pagination
--     mhichwa  04/20/2001 - Added display_id to create flow
--     cbcho    05/17/2001 - Obsolete create_page_on_table
--     cbcho    05/24/2001 - Obsolete Create_Chart_page
--     cbcho    05/31/2001 - Obsolete create_report_page
--     cbcho    06/01/2001 - Obsolete page_exists
--     cbcho    06/01/2001 - Obsolete buttons_exist
--     mhichwa  06/06/2001 - added get application owner function
--     mhichwa  06/18/2001 - Added item default type
--     mhichwa  06/28/2001 - Added create flow argument names and made obsolete old style names
--     mhichwa  06/28/2001 - Improved documentation
--     mhichwa  06/28/2001 - Added allow_duplicate_submissions
--     mhichwa  07/06/2001 - Added plug_query_num_rows_item and plug_query_num_rows_type
--     mhichwa  07/18/2001 - Added scecurity scheme caching argument
--     mhichwa  07/20/2001 - p_flow_language_derived_from
--     mhichwa  07/31/2001 - Added error page template attribute
--     mhichwa  08/08/2001 - Added report template additional attributes
--     mhichwa  08/08/2001 - Improved comments
--     mhichwa  08/17/2001 - Added set credentials procedure
--     mhichwa  08/21/2001 - Added auto_tab attributes to create page procedure to facilitate new create page wizard in flows
--     mhichwa  08/22/2001 - Added support for global notifications to create flow
--     mhichwa  08/23/2001 - Added set global notification
--     mhichwa  08/27/2001 - Added set version procedure and g_is_compatable boolean global
--     mhichwa  08/27/2001 - Added set version procedure
--     mhichwa  10/02/2001 - Added debug flag to set version procedure
--     mhichwa  10/05/2001 - Added support for field templates
--     mhichwa  10/17/2001 - Added update report column attributes (create_region_rpt_cols)
--     mhichwa  10/18/2001 - Added create_page_help
--     mhichwa  10/19/2001 - Added auto create parent tabs
--     mhichwa  10/22/2001 - Extended comments on the create flow procedure.
--     mhichwa  10/24/2001 - Added flow and table alias attributes
--     mhichwa  10/24/2001 - Added page process condition 2 and proc cond type 2 to enahance declarative programming
--     mhichwa  10/25/2001 - Added validation 2 changed compatability date
--     mhichwa  10/29/2001 - Added p_target and p_id_offset arguments to create procedures
--     mhichwa  10/30/2001 - Added when button pressed validation condition
--     mhichwa  11/12/2001 - Added html page header argument to create page
--     mhichwa  11/13/2001 - Added p_button_comment
--     jstraub  11/16/2001 - Added support for list_countclicks_y_n and list_countclicks_cat in create_list_item
--     mhichwa  11/26/2001 - Added default region template attribute
--     mhichwa  11/27/2001 - Changed compatable version date
--     mhichwa  11/30/2001 - Added p_tab_name attributes to create default flow
--     mhichwa  12/03/2001 - Added page is public flag
--     jstraub  12/14/2001 - Added support for simple_chart to create_page_plug
--     mhichwa  12/14/2001 - Added security_scheme argument for proc comp branch and val.
--     mhichwa  12/17/2001 - Added charset argument to create flow
--     mhichwa  12/21/2001 - Added p_theme to create default flow procedure
--     mhichwa  01/23/2002 - Added reference_id to 5 template api procedures
--     mhichwa  02/11/2002 - Added p_process_is_stateful_y_n
--     mhichwa  02/13/2002 - Added validation attributes
--     cbcho    02/14/2002 - Added check_version, check_sgid in the spec
--     cbcho    02/14/2002 - Moved create_default_flow to wwv_flow_create_flow_api pkg.
--     mhichwa  02/18/2002 - Added tag attributes2
--     mhichwa  02/19/2002 - Added process when 2 columns to flow processing.
--     mhichwa  02/19/2002 - Added post element text.
--     cbcho    03/19/2002 - Added p_process_type to create_flow_process procedure
--     cbcho    04/04/2002 - Added reference_id to shortcuts, security_schemes and icon_bar_item procedures
--     mhichwa  04/04/2002 - CHanged compatibility date to 2002 04 01
--     cbcho    04/10/2002 - Added p_reference_id to create_list_of_values
--     mhichwa  05/01/2002 - added new apis for 3 menu tables
--     mhichwa  05/01/2002 - added popup lov template
--     mhichwa  05/01/2002 - Added new page plug argument
--     mhichwa  05/01/2002 - Added p_lov_display_extra argument
--     mhichwa  05/01/2002 - Added p offset and other arguments to new procedures
--     mhichwa  05/07/2002 - Changed compatable from version to 2002.05.01
--     mhichwa  05/08/2002 - Added button_condition2
--     mhichwa  05/08/2002 - Added plug_display_when_cond2
--     mhichwa  05/09/2002 - Added condition 2 to parent tabs
--     mhichwa  05/09/2002 - Added lov_disp_cond2
--     mhichwa  05/09/2002 - Added validation condition 2
--     mhichwa  05/09/2002 - Added display_when2 attribute to page items
--     mhichwa  05/29/2002 - Added before first and after last for row templates
--     mhichwa  07/17/2002 - Added create_button_template
--     mhichwa  08/08/2002 - Created web services api spec
--     mhichwa  08/09/2002 - Added plug_query_more_data
--     mhichwa  08/11/2002 - Added exact_substitutions_only
--     mhichwa  08/11/2002 - Set compatability version to 2002.08.01
--     mhichwa  08/15/2002 - Added 3 new arguments to lov templates
--     mhichwa  08/15/2002 - Extended create build option
--     mhichwa  08/16/2002 - Completed create_web_service
--     sspadafo 09/24/2002 - Added create_auth_setup
--     mhichwa  09/25/2002 - Added cAttributes_element to create page item
--     sspadafo 09/27/2002 - Added create entry_points,create entry_point_args,create page_branch_args
--     mhichwa  09/30/2002 - Added additional default template controls to create flow api call
--     mhichwa  09/30/2002 - Added support for HTML_PAGE_ONLOAD
--     mhichwa  10/01/2002 - Added support for plug_override_reg_pos
--     mhichwa  10/02/2002 - Added plug_customized
--     mhichwa  10/02/2002 - Added page_is_protected_y_n
--     mhichwa  10/11/2002 - Added 10 new attributes to support pagination and customized regions
--     mhichwa  10/13/2002 - Added support for new generic attributes table
--     mhichwa  10/25/2002 - Added read only condition attributes
--     mhichwa  11/07/2002 - Added procedure set_plug_query_heading
--     mhichwa  11/08/2002 - Added additional flow attributes 9 - 20
--     jkallman 11/22/2002 - Changed datatype of p_bug_projected_close_date and p_bug_close_date to date in create_bug
--     sspadafo 12/06/2002 - Added set_security_group_id for callers outside the flows context
--     sspadafo 12/28/2002 - Added g_id_offset global for use in export files (Bug 2729770)
--     sspadafo 12/28/2002 - Added procedures for DML issued during import of export files (Bug 2729770)
--     sspadafo 12/29/2002 - Added function get_security_group_id (Bug 2729770)
--     sspadafo 12/30/2002 - Changed procedure set_security_group_id to honor p_security_group_id for internal users (Bug 2729770)
--     sspadafo 01/06/2003 - Added procedure set_build_status_run_only (Bug 2739851)
--     mhichwa  01/27/2003 - Added p_process_item_name (bug 2769756)
--     sspadafo 02/04/2003 - Added rename_tabset procedure (Bug 2785676)
--     cbcho    02/12/2003 - Added p_tab_name in create_page to fix creating a page with a tab that reuses an existing tab bug(Bug 2785188)
--     sspadafo 02/23/2003 - Changes for template column name changes from varchar2 to number (Bug 2748399)
--     msewtz   03/25/2003 - Added plug_query_hit_highlighting to page_plugs
--     jstraub  04/08/2003 - Added p_translate_this_template parameters to template procedures
--     cbcho    04/18/2003 - Added create_chart_series_attr
--     cbcho    05/05/2003 - Added reference_id to create_page_item
--     jstraub  05/15/2003 - Added create_report_region and create_report_column procedures
--     jstraub  05/22/2003 - Changed default_sort_dir default to null from 0 in create_report_column
--     jstraub  05/29/2003 - added create_query_definition, create_query_object, create_query_column, create_query_condition (Bug 2861658)
--     jstraub  05/30/2003 - Added p_format_mask to create_page_item and p_return_key_into_item1 & 2 in create_page_process (Bug 2983469)
--     mhichwa  06/30/2003 - Changed g_compatable_from_version to 2003 05 30
--     msewtz   06/23/2003 - Added sorting image parameters to create_page_plugs (bug 3020226)
--     jstraub  07/17/2003 - Added p_lov_data_comment to create_static_lov_data in support of bug 3046017
--     jstraub  07/24/2003 - Changed g_compatable_from_version to 20030717
--     sspadafo 07/29/2003 - Add g_nls_numeric_chars variable (Bug 3070294)
--     sspadafo 11/07/2003 - Add create_language_map_noop (Bug 3231672)
--     sspadafo 11/08/2003 - Remove create_language_map_noop (Bug 3231672)
--     mhichwa  04/22/2004 - Added lov_template (bug 3588925)
--     mhichwa  05/18/2004 - Added support for default region templates by component type (bug 3633463)
--     mhichwa  05/19/2004 - Added 6 attributes to the wwv_flow_region_report_column table api
--     mhichwa  05/19/2004 - Added 4 attributes to the wwv_flow_row_templates table api
--     mhichwa  05/19/2004 - Added breadcrumb and side bar default region positions to page template API
--     klrice   05/21/2004 - Added call for calendar regions
--     mhichwa  05/26/2004 - Added p_default_listr_template
--     jstraub  05/28/2004 - Changed g_compatable_from_version to 20040704
--     skutz    06/02/2004 - Changed theme_id and theme_class_id to all template create apis except create_popup_lov_template
--     skutz    06/02/2004 - Added create_calendar_template api
--     klrice   06/04/2004 - Changed create_calendar api
--     klrice   06/04/2004 - Added display_type to cals
--     jstraub  06/08/2004 - Added create_ws_operations, create_ws_parameters, create_ws_process_parms_map
--     skutz    06/10/2004 - Added theme_id and theme_class_id to create_popup_lov_template
--     skutz    06/10/2004 - Added create_theme api
--     msewtz   06/11/2004 - added new report attributes to create_page_plugs and create_report_column
--     skutz    06/11/2004 - added wrapper api delete_theme to call wwv_flow_theme_manager.delete_theme for security in import
--     skutz    06/18/2004 - added p_database_action to create_page_button
--     klrice   06/21/2004 - added start_of_week and print_url
--     klrice   06/24/2004 - added display_item to calendar
--     mhichwa  07/08/2004 - added page group attributes
--     mhichwa  07/09/2004 - added support for p_column_link_attr
--     mhichwa  07/21/2004 - Added g_new_theme_id global
--     mhichwa  07/29/2004 - added p_navbar_entry
--     mhichwa  08/02/2004 - Added list_template_id to create region
--     mhichwa  08/02/2004 - Added logo_image logo_immage_attributes
--     msewtz   08/12/2004 - changed report sort indicators from blue to gray
--     mhichwa  08/31/2004 - added importing last updated by and on to fix home page sort issues bug 3865939
--     sspadafo 01/14/2005 - added sub list fields to wwv_flow_list_items, wwv_flow_list_item_templates
--     sspadafo 02/05/2005 - Added p_print_url_label to create_page_plug and create_report_region
--     sspadafo 02/08/2005 - Added page_protection_enabled_y_n to create_flow for URL tampering feature
--     sspadafo 02/19/2005 - Add p_template_translatable parameter to create_page_plug, create_calendar, create_report_region
--     sspadafo 02/19/2005 - Add p_day_link, p_item_link parameters to create_calendar
--     jkallman 02/22/2005 - Change p_template_translatable to p_translate_title in create_page_plug, create_calendar, create_report_region
--     sspadafo 02/25/2005 - Added p_protection_level to create_page, create_flow_item, and create_page_item
--     sspadafo 02/25/2005 - Added p_escape_on_http_input to create_page_item
--     sspadafo 02/25/2005 - Added p_column_link_checksum_type to create_report_columns
--     sspadafo 02/25/2005 - Added p_checksum_salt, p_checksum_salt_last_reset to create_flow
--     sspadafo 03/01/2005 - Changed create_flow p_checksum_salt_last_reset to varchar2
--     sspadafo 03/11/2005 - Changed g_compatable_from_version 2004.07.04 to 2005.05.01
--     sspadafo 05/12/2005 - Added plug_query_max_columns to create_page_plug and create_report_region
--     jkallman 05/12/2005 - Added csv_encoding to create_flow
--     cbcho    05/18/2005 - Added import_script
--     cbcho    05/18/2005 - Added g_varchar2_table,g_list_contents_only,g_import_script_files,g_import_script_status for import_script use
--     cbcho    05/26/2005 - Added empty_varchar2_table for script and image import (Bug 4391689)
--     sspadafo 06/07/2005 - Add g_fnd_user_password_action package variable
--     msewtz   06/29/2005 - Added default = 500 for wwv_flow_page_plug.query_row_count_max (bug 4444553)
--     madelfio 01/23/2006 - Added procedures for Install Wizard (create_install, create_install_script, create_install_check, create_install_build_option)
--     madelfio 01/26/2006 - Changed wwv_flow_install, wwv_flow_install_checks api, added stub for append_to_install_script
--     madelfio 02/03/2006 - Added create_or_replace_image
--     madelfio 02/06/2006 - Modified create_or_replace_image, renamed to create_or_remove_file
--     madelfio 02/09/2006 - Added required_free_kb, required_sys_privs, and required_names_available to wwv_flow_install
--     mhichwa  02/10/2006 - Added g_mode to facilitate patching
--     mhichwa  02/10/2006 - Removed comments no longer needed
--     madelfio 02/20/2006 - Added p_deinstall to append_to_install_script to support long deinstall scripts
--     madelfio 02/24/2006 - Changed g_compatable_from_version 2005.05.01 to 2006.02.24
--     madelfio 04/05/2005 - Added p_location to create_or_remove_file (Bug 5113546)
--     mhichwa  04/14/2006 - Added create app comment procedure
--     mhichwa  05/01/2006 - Added p_plug_column_width argument to create_calendar and create_report_region procedures (bug 5071333)
--     mhichwa  05/01/2006 - Added procedure set_region_column_width (bug 5071333)
--     mhichwa  05/23/2006 - Added procedures set_enable_app_debugging and set_home_link
--     mhichwa  06/05/2006 - Added CALENDAR_ICON CALENDAR_ICON_ATTR support for table wwv_flow_themes (bug 5279199)
--     mhichwa  06/05/2006 - Added set_theme_calendar_icon (bug 5279199)
--     mhichwa  06/12/2006 - Added page caching parameters
--     mhichwa  06/12/2006 - Added p_id attribute to set_theme_calendar_icon to preserve pk ID
--     mhichwa  06/12/2006 - Added p_created_by and p_created_on_yyyymmddhh24miss arguments to create_page procedure
--     msewtz   06/20/2006 - removed create_application_tab and create_application_tab_set (bug 5231754)
--     mhichwa  06/23/2006 - Added p_use_custom_item_layout and p_custom_item_layout to create_page_plugs
--     madelfio 06/23/2006 - Removed parameter p_theme_id in set_theme_calendar_icon (bug 5355141)
--     cbcho    11/02/2006 - Added create_flash_chart, create_flash_chart_series
--     mhichwa  11/08/2006 - Added p_region_name to create region in support of #REGION_STATIC_ID# substitution
--     cbcho    12/04/2006 - Added p_popup_icon2, p_popup_icon_attr2 to create_popup_lov_template
--     cbcho    12/05/2006 - Changed create_flash_chart, create_flash_chart_series to add new parameters
--     sspadafo 12/06/2006 - Removed obsolete procedure set_credentials
--     msewtz   12/13/2006 - Added create_report_layout
--     jstraub  12/13/2006 - Added p_wallet_path and p_wallet_pwd to create_flow
--     cbcho    12/20/2006 - Changed create_flash_chart to accept more parameters
--     mhichwa  12/29/2006 - Added procedure update_page_item
--     mhichwa  01/02/2007 - Added p_pre_element_text
--     cbcho    01/03/2007 - Changed create_flash_chart to accept more parameters
--     jstraub  01/03/2007 - Removed wallet parameters, moved to platform preference
--     cbcho    01/04/2007 - Added gradient_rotation,names_rotation,values_rotation to create_flash_chart
--     jstraub  01/05/2007 - Added new calendar template columns to create_calendar_template
--     madelfio 02/24/2006 - Changed g_compatable_from_version 2006.02.24 to 2007.01.08
--     cbcho    01/09/2007 - Added attribute01 - 05 in create_flash_chart
--     cbcho    01/10/2007 - Added prefix,postfix,decimal_sep,group_sep,decimal_place for x and y axis in create_flash_chart
--     jstraub  01/16/2007 - Added parameters to create_calendar for new wwv_flow_cals columns
--     cbcho    01/16/2007 - Added series_query_parse_opt in create_flash_chart_series
--     cbcho    01/16/2007 - Removed series_color,series_chart_type,display_attr from create_flash_chart_series
--     cbcho    01/18/2007 - Added flow_id to create_flash_chart_series
--     jstraub  01/22/2007 - Added p_date_type_column to create_calendar
--     jstraub  01/22/2007 - Added parameters to create_page_plug and create_region_rpt_cols to support new columns
--     jstraub  01/22/2007 - Moved pdf printing parameters from create_page_plug to create_report_region
--     jstraub  01/22/2007 - Added pdf printing parameters to create_page_plug (needed for wwv_flow_copy_page)
--     cbcho    01/23/2007 - Removed p_x_axis_decimal_sep,p_y_axis_decimal_sep from create_flash_chart
--     madelfio 01/25/2007 - Added upgrade messages and p_get_version_sql_script to create_install
--     madelfio 01/25/2007 - Added p_script_type to create_install_scripts
--     jstraub  01/26/2007 - Added p_reference_id, p_report_layout_comment to create_report_layout and added create_shared_query
--     jstraub  01/26/2007 - Added p_varchar2_table to create_report_layout to support export/import
--     jstraub  01/27/2007 - Changed p_report_template in create_report_layout back to varchar2
--     cbcho    02/02/2007 - Changed create_flash_chart to accept additional columns
--     mhichwa  02/05/2007 - Added prn allignment columns and sort null to create page plug
--     mhichwa  02/05/2007 - Added support for prn_border_color in support of msewtz functionality
--     jstraub  02/05/2007 - Added p_daily_month_title_format to create_calendar_template
--     cbackstr 02/14/2007 - added support to update item type for populated items on drag and drop page in update_page_item  (bug 5881771)
--     sspadafo 05/01/2007 - Added parameters to create_report_region, create_page_plug, create_calendar for region caching (Bug 6025383)
--     sspadafo 05/01/2007 - Added g_compatible_from_version_30 to hold version 3.0 date(Bug 6025383)
--     sspadafo 05/01/2007 - Added g_compatible_from_version_301 to hold version 3.0.1 date(Bug 6025383)
--     sspadafo 05/01/2007 - Changed g_compatable_from_version to '2007.05.25' for 3.0.1 patch to reflect API changes for region caching (Bug 6025383)
--     jstraub  08/29/2007 - Added p_restrict_to_user_list to create_flow (Bug 6360643)
--     jstraub  09/04/2007 - Added g_compatible_from_version_31 to hold version 3.1 date
--     madelfio 10/04/2007 - Added create_worksheet, create_worksheet_column and create_worksheet_col_group
--     jkallman 10/15/2007 - Added p_media_type to create_flow, p_media_type to create_page
--     cbcho    10/29/2007 - Removed show_detail_link,detail_link,display_detail_location from create_worksheet
--     cbcho    10/29/2007 - Added display_condition_type,display_condition,display_condition2,security_scheme to create_worksheet_column
--     madelfio 10/30/2007 - Removed unneccessary columns from worksheet tables
--     sathikum 10/31/2007 - added parameter to create_calendar for AJAX calendar support
--     cbcho    10/31/2007 - Added download_formats to create_worksheet
--     madelfio 11/01/2007 - Updated worksheet APIs
--     mhichwa  11/02/2007 - Add support for application groups
--     madelfio 11/02/2007 - Added no_data_found_message, sql_hint to worksheet api
--     cbcho    11/05/2007 - Removed distinct_value_filter, Added rpt_distinct_lov,rpt_lov,rpt_named_lov
--     mhichwa  11/06/2007 - Added p_application_group_name and p_application_group_comment
--     jkallman 11/19/2007 - Added p_date_format to create_flow
--     mhichwa  11/26/2007 - Added p_include_apex_css_js_yn
--     jstraub  11/28/2007 - Added p_heading_alignment, p_column_alignment, p_display_text_as, p_rpt_show_filter_lov, p_rpt_filter_date_ranges,
--                           p_is_sortable to create_worksheet_columns
--     mhichwa  11/28/2007 - Added p_runtime_where_clause,  p_theme_description
--     mhichwa  11/30/2007 - Added ajax enabled to create_page_plug and create_report_region
--     mhichwa  12/04/2007 - Added create_theme_image
--     jstraub  12/06/2007 - Added create_shared_query_stmnt
--     jstraub  12/10/2007 - Added p_prn_print_server_overwrite to create_page_plug and create_report_region
--     mhichwa  12/11/2007 - Added p_REGION_ATTRIBUTES aka REGION_ATTRIBUTES_SUBSTITUTION for create_report_region, create_page_plug, create_calendar
--     jstraub  12/12/2007 - Added p_prn_content_disposition, p_prn_document_header, p_prn_width_units to create_page_plug and create_report_region
--     jstraub  12/12/2007 - Added p_content_disposition and p_document_header to create_shared_query
--     cbcho    12/12/2007 - Added p_show_detail_link to created_worksheet
--     madelfio 12/12/2007 - Added several columns to create_worksheet_column
--     madelfio 12/12/2007 - Added several columns to create_worksheet
--     madelfio 12/14/2007 - Added p_show_control_break to create_worksheet
--     mhichwa  12/17/2007 - Added p_REPORT_ATTRIBUTES
--     madelfio 12/17/2007 - Added new columns to create_worksheet
--     madelfio 12/18/2007 - Added to wwv_flow_worksheets: show_nulls_as, download_format
--     madelfio 12/18/2007 - Added to wwv_flow_worksheet_columns: column_comment
--     madelfio 12/20/2007 - Added create procedures for worksheet_rpts, worksheet_conditions, worksheet_computation
--     madelfio 01/08/2008 - Added to wwv_flow_worksheet_rpts: count_columns_on_break
--     madelfio 01/08/2008 - Added to wwv_flow_worksheet_rpts: chart_sorting
--     jkallman 01/25/2008 - Reduced size of g_nls_numeric_chars (Bug 6710093)
--     madelfio 02/12/2008 - Added to wwv_flow_worksheet_computation: column_type
--     cbcho    04/02/2008 - Added create_app_from_query
--     cbcho    04/09/2008 - Added p_theme_type to create_app_from_query
--     cbcho    08/04/2008 - Added p_websheet_id to create_worksheet_column,create_worksheet_col_group,create_worksheet_computation,create_worksheet_condition,create_worksheet_rpt
--     mhichwa  08/22/2008 - Added support for icon_view and detail_view attributes in interactive reports aka worksheets
--     mhichwa  09/08/2008 - Added create_page_dynamic_action procedure
--     cbcho    09/19/2008 - Added p_view_mode to create_worksheet_rpt
--     mhichwa  10/10/2008 - Added support for quick picks
--     cbcho    10/23/2008 - Added create_worksheet_group_by
--     cbcho    11/17/2008 - Added p_show_help to create_worksheet(bug 7370368)
--     sspadafo 12/09/2008 - Added session timeout parameters to create_flow
--     mhichwa  12/18/2008 - Added publish_yn flag
--     sspadafo 12/22/2008 - Changed name of session timeout vars to reflect units in seconds in create_flow
--     jstraub  12/23/2008 - Added p_autocomplete_on_off to create_page
--     mhichwa  12/23/2008 - Added p_encrypt_session_state_yn
--     sspadafo 01/03/2009 - Added support for declarative secure cookie property in create_auth_setup
--     sspadafo 01/09/2009 - Changed value of default session timeout parameter to reflect units in seconds in create_flow
--     sspadafo 01/11/2009 - Added p_save_state_before_branch_yn to create_page_branch
--     sspadafo 01/11/2009 - Changed default value for p_save_state_before_branch_yn in create_page_branch to 'Y'
--     sspadafo 01/12/2009 - Changed g_compatable_from_version to '2009.01.13' as temporary value for 4.0
--     pawolf   04/22/2009 - Added attribute_xx for create_page_item, add custom item type
--     hfarrell 04/29/2009 - Added create_flash_chart5 and create_flash_chart5_series for AnyChart 5 integration
--     pawolf   04/29/2009 - Renamed custom item type tables to wwv_flow_plugins
--     pawolf   05/04/2009 - Added p_attribute_xx to update_page_item
--     pawolf   05/06/2009 - Added create_plugin_file
--     hfarrell 05/08/2009 - Updated create_flash_chart5 to remove unrequired columns for prefix,postfix, and attributes
--     sathikum 05/11/2009 - Added additional parameter P_END_DATE_ITEM for creating custom calendar
--     pawolf   05/14/2009 - Added subscription to plugins
--     pawolf   05/15/2009 - Added dynamic attributes to regions
--     hfarrell 05/19/2009 - Added p_chart_name to create_flash_chart5
--     pawolf   06/03/2009 - Renamed wwv_flow_plugin_attributes.attribute_level to attribute_scope
--     arayner  06/05/2009 - Added create_page_da_event and create_page_da_action procedures
--     arayner  06/05/2009 - Added p_flow_id parameter to create_page_da_action
--     pawolf   06/09/2009 - Added action_sequence for wwv_flow_page_da_actions
--     arayner  06/10/2009 - Added execute_on_page_init for wwv_flow_page_da_actions
--     hfarrell 06/15/2009 - Updated create_flash_chart5 to include new attributes for prefix, postfix, label & title fonts
--     hfarrell 06/23/2009 - Updated create_flash_chart5 to include gauge_labels_font attribute
--     jstraub  07/14/2009 - Added p_path to create_ws_parameters
--     pawolf   07/15/2009 - Added p_help_text to create_plugin
--     cbcho    07/20/2009 - Added p_allow_highlighting to create_worksheet_column
--     cbcho    07/20/2009 - Added p_show_notify to create_worksheet
--     pawolf   07/24/2009 - Added new columns to wwv_flow_plugins and wwv_flow_plugin_attributes
--     pawolf   07/27/2009 - Added new table wwv_flow_plugin_events
--     cbcho    07/27/2009 - Added create_worksheet_notify
--     cbcho    07/27/2009 - Removed p_session_id from create_worksheet_notify
--     jkallman 07/28/2009 - Added p_timestamp_format and p_timestamp_tz_format to create_flow
--     cbcho    07/30/2009 - Changed create_worksheet to default p_icon_view_enabled_yn,p_detail_view_enabled_yn to N
--     mhichwa  07/31/2009 - Added set_page_process_source
--     hfarrell 08/02/2009 - Added p_gantt_attr to create_flash_chart5 procedure
--     mhichwa  08/03/2009 - added include_in_reg_disp_sel_yn
--     arayner  08/14/2009 - Added new wait-icon columns to create_page_button and create_page_item
--     pawolf   08/18/2009 - Added columns for hierarchical regions
--     jkallman 08/28/2009 - Added auto_time_zone to create_flow
--     mhichwa  08/31/2009 - added ALLOW_FEEDBACK_YN to create_flow and region_image, region_image_attr to create_page_plug
--     hfarrell 08/31/2009 - Added p_series_type to create_flash_chart5_series and p_map_attr, p_map_source to create_flash_chart5
--     mhichwa  09/01/2009 - added sub_image_open, sub_image_close, then removed same
--     msewtz   09/15/2009 - Added associated_column to create_page_validation
--     msewtz   09/16/2009 - Added tabular_form_region_id to create_page_validation
--     arayner  09/18/2009 - Added create_page_da procedure
--     arayner  09/18/2009 - Moved create_page_da procedure to wwv_flow_wizard_api package
--     pawolf   09/24/2009 - Added create_plugin_attr_value procedure
--     pawolf   09/28/2009 - Added plug-in support for classic reports
--     pawolf   10/16/2009 - Added conditions to plugin attributes
--     sathikum 10/21/2009 - Added additional arguments to create_calendar_template for Custom Calendar support
--     pawolf   10/23/2009 - Added is_required to wwv_flow_step_items and wwv_flow_region_report_column
--     pawolf   10/27/2009 - Added default_error_display_location to wwv_flows
--     pawolf   10/28/2009 - Removed error_display_location from wwv_flow_plugins
--     jkallman 11/03/2009 - Add p_expr3 to create_worksheet_condition
--     jkallman 11/05/2009 - Added p_tz_dependent to create_worksheet_column
--     jkallman 11/17/2009 - Rename p_expr3 to p_time_zone in create_worksheet_condition
--     cbcho    11/18/2009 - Added p_report_alias,p_count_distnt_col_on_break to create_worksheet_rpt
--     mhichwa  11/20/2009 - added argument to procedure create_list_template
--     arayner  11/20/2009 - Added default_irr_template to create_flow and create_theme procedures
--     cbcho    11/20/2009 - Added allow_save_rpt_public, save_rpt_public_auth_scheme to create_worksheet
--     cbcho    11/25/2009 - Added allow_group_by, allow_hide to create_worksheet_column
--     hfarrell 12/07/2009 - Updated create_flash_chart5 and create_flash_chart5_region to include map undefined region and grid region color information
--     pawolf   12/14/2009 - Added new columns for javascript to wwv_flow_steps
--     arayner  12/17/2009 - Added default value to p_affected_elements_type parameter of create_da_page_action
--     cbcho    12/21/2009 - Removed p_user_id from create_worksheet_notify
--     pawolf   12/29/2009 - Added "standard_validations" to wwv_flow_step_items and wwv_flow_region_report_column
--     mhichwa  01/04/2010 - added p_report_column_width
--     pawolf   01/08/2010 - Added new columns to wwv_flow_plugins
--     jstraub  01/12/2010 - Added p_rest_enabled to create_report_region, create_calendar, create_page_plug
--     jstraub  01/12/2010 - Added p_soap_version to create_web_service
--     cbcho    01/14/2010 - Added p_email_subject to create_worksheet_notify
--     hfarrell 01/20/2010 - Added create_jstree for jsTree region
--     pawolf   01/20/2010 - Added escape_on_http_output to wwv_flow_step_items
--     sspadafo 01/20/2010 - Added create_ws_auth_setup
--     sspadafo 01/20/2010 - Added function create_ws_auth_setup
--     hfarrell 01/21/2010 - Updated create_jstree and create_jstree_region to include tree_template
--     cbcho    01/22/2010 - Added p_owner to create_worksheet_notify, p_show_rows_per_page to create_worksheet
--     hfarrell 01/22/2010 - Added hints to create_jstree
--     pawolf   01/27/2010 - Added Display Sequence to plug-in attributes
--     jkallman 01/29/2010 - Update g_compatable_from_version to 2010.01.29, remove unnecessary compatibility globals
--     pawolf   02/02/2010 - Added cascading lov columns to wwv_flow_step_items
--     pawolf   02/05/2010 - Renamed wwv_flow_plugins callout procedure columns
--     pawolf   02/11/2010 - Added columns button_execute_validations and always_execute
--     pawolf   02/19/2010 - Removed wwv_flow_plugin_attributes.is_stored_in_clob
--     pawolf   02/20/2010 - Added support for process plugins
--     pawolf   02/23/2010 - Added export/import for feedback
--     hfarrell 02/26/2010 - Updated create_jstree:removed unrequired column, added new columns for modifications to Tree Attributes page
--     hfarrell 02/26/2010 - Updated create_jstree: added show_hints, tree_has_focus, tree_hint_text and tree_click_action
--     jkallman 03/01/2010 - Change default display type of report columns to be ESCAPE_SC (Bug 5362969)
--     jstraub  03/02/2010 - Added p_form_qualified to create_ws_parameters
--     hfarrell 03/05/2010 - Fix for bug 5905923: updated create_flash_chart5 to add X & Y axis major_interval and minor_intervals
--     hfarrell 03/05/2010 - Updated create_flash_chart5_series to include missing parameters for action link
--     pawolf   03/05/2010 - Added migration for file item type
--     jkallman 03/18/2010 - Added support for plug_query_parse_override in create_page_plugs
--     arayner  03/18/2010 - Added null default to p_triggering_element_type parameter in create_page_da_event
--     arayner  03/22/2010 - Added null default to p_triggering_condition_type parameter in create_page_da_event
--     jkallman 03/22/2010 - Added p_plug_query_parse_override to create_report_region
--     sathikum 03/30/2010 - Added p_include_custom_cal to create_calendar
--     jstraub  03/30/2010 - Added p_ldap_use_ssl, p_ldap_use_exact_dn, p_ldap_search_filter to create_ws_auth_setup procedure and function
--     cbcho    04/06/2010 - Added procedures to create Websheet component
--     cbcho    04/08/2010 - Added p_show_group_by to create_worksheet, create_ws_worksheet
--     cbcho    04/08/2010 - Added create_ws_app_sug_objects
--     cbcho    04/13/2010 - Exposed check_sgid_for_ws_app_id
--     pawolf   04/14/2010 - Added stop_execution_on_error to wwv_flow_page_da_actions
--     cbcho    04/15/2010 - Changed create_worksheet_notify,create_ws_notify to populate status,notify_error
--     pawolf   04/17/2010 - Renamed lov_items_to_submit and lov_optimize_refresh to ajax_item_to_submit and ajax_optimize_refresh
--     pawolf   04/18/2010 - Added category to wwv_flow_plugins
--     pawolf   04/22/2010 - Added flow_id and page_id to wwv_flow_page_da_actions
--     jkallman 04/22/2010 - Change p_language_derived_from to p_territory in create_ws_app
--     arayner  04/23/2010 - Removed button show_wait related references from create_page_button and create_page_item
--     cbcho    04/30/2010 - Added  p_data_grid_form_seq to create_ws_column
--     hfarrell 05/10/2010 - Updated create_jstree to include p_selected_node for Selected Node Page Item attribute
--     pawolf   05/11/2010 - Removed EA2 to EA3 compatibility
--     jkallman 05/14/2010 - Update g_compatable to 2010.05.13
--     jkallman 08/27/2010 - Bug 6360643: Added p_restrict_to_user_list to set_flow_status
--     pawolf   12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--     sathikum 01/03/2011 - Added p_enable_drag_drop and p_enable_ajax_data_add to create_calendar (feature #520)
--     sathikum 01/14/2011 - added data_background_color and data_text_color(feature #520)
--     pawolf   01/14/2011 - Added tabular form support for processes and validations (feature# 542)
--     sathikum 01/21/2011 - Added column enable_ajax_data_edit (feature #520)
--     hfarrell 02/01/2011 - Added list_type and list_query to create_list (feature #602)
--     sathikum 02/15/2011 - Added p_enable_ajax_data_delete to create_calendar
--     hfarrell 02/15/2011 - Set default value STATIC for list_type in create_list
--     hfarrell 02/21/2011 - Added p_list_item_icon_alt_attribute to create_list_item
--     pawolf   02/22/2011 - Made "Save state before branch" obsolete (bug# 11795919)
--     arayner  02/23/2011 - Added p_triggering_button_id to create_page_da_event procedure (feature #385)
--     hfarrell 02/24/2011 - Added p_pie_attr to create_flash_chart5
--     pawolf   02/28/2011 - Added new error handling columns (feature# 544)
--     hfarrell 03/02/2011 - Updated create_flash_chart5 to set new p_pie_attr default
--     arayner  03/02/2011 - Added p_button_static_id to create_page_button (feature #385)
--     jstraub  03/02/2011 - Updated g_compatable_from_version to
--     pawolf   03/08/2011 - Added new error display location column to wwv_flow_step_processing and wwv_flow_processing (feature# 544)
--     msewtz   03/10/2011 - Added mobile_page_template to create_template (feature 586)
--     arayner  03/14/2011 - Added p_button_action to create_page_button (feature #385)
--     arayner  03/17/2011 - Converted tabs to spaces in recent create_page_button additions (feature #385)
--     pawolf   03/28/2011 - Removed PLUG_DISPLAY_ERROR_MESSAGE (feature# 544)
--     arayner  03/30/2011 - Added p_button_action and p_button_redirect_url to create_page_item (feature 385)
--     msewtz   03/31/2011 - Added p_render_form_as_table to create_page (feature 586)
--     msewtz   03/31/2011 - Added before_item and after_item to create_field_template (feature 586)
--     msewtz   03/31/2011 - Added use_as_row_header and column_field_template to create_report_columns (feature 586)
--     pawolf   04/06/2011 - Added ajax_items_to_submit and escape_on_http_output to wwv_flow_page_plugs (feature 505 and 649)
--     pawolf   04/06/2011 - Removed wwv_flow_worksheets.page_items_to_submit, it has been replaced by wwv_flow_page_plugs.ajax_items_to_submit (feature 505)
--     pawolf   04/08/2011 - Added "Substitute Attribute Values" (substitute_attributes) to plug-ins (feature 655)
--     msewtz   04/08/2011 - Removed p_render_form_as_table from create_page (feature 586)
--     msewtz   04/08/2011 - Added render_form_items_in_table to create_plug_template  (feature 586)
--     sathikum 04/11/2011 - Added primary_key_column, drag_drop_required_role, drag_drop_process_id and removed some parameteres from create_calendar (feature #520)
--     sathikum 04/14/2011 - Added item_link_primary_key_item, item_link_date_item (feature #520)
--     sathikum 04/18/2011 - Added item_link_open_in to create_calendar (feature #520)
--     pmanirah 04/20/2011 - Added create_load_table procedure (feature #545)
--     pmanirah 04/20/2011 - Added create_table_lookup procedure (feature #545)
--     pmanirah 04/20/2011 - Added create_table_rule procedure (feature #545)
--     hfarrell 05/05/2011 - Updated create_flash_chart5 to include two obsolete parameters p_x_axis_grid_spacing and p_y_axis_grid_spacing removed earlier in release, required for earlier app exports to work
--     msewtz   05/09/2011 - Added default mobile template columns to wwv_flow_themes
--     pawolf   05/10/2011 - Added "is hot button" (feature 702)
--     pawolf   05/11/2011 - Removed the default 28800 for p_max_session_length_sec (bug 12542441)
--     pawolf   05/13/2011 - Added plug-ins for authentication schemes (feature 581)
--     cbcho    05/13/2011 - Added p_show_reset_passwd_yn to create_ws_app (feature 620)
--     cneumuel 05/19/2011 - Added create_authentication: new API for plugin-based authentications (feature 581)
--     pawolf   05/19/2011 - Updated create_authentication (feature 581)
--     jkallman 05/25/2011 - Update create_translation to include column_id
--     cneumuel 05/26/2011 - Added plsql_code to create_authentication (feature 581)
--     cneumuel 05/26/2011 - Added p_invalid_session_function to create_plugin (feature 581)
--     cneumuel 05/30/2011 - Added migration of custom_auth_setups to plugin-based authentications (feature #581)
--     jkallman 06/01/2011 - Added p_date_time_format to create_flow (Feature 715)
--     jkallman 06/01/2011 - Add alternative_key1 and 2 to create_load_table_lookup
--     sathikum 06/02/2011 - added include_time_with_date to Calendar procedure (feature #520)
--     pmanirah 06/02/2011 - Added name, owner to the create_load_table and where_clause, lookup_owner to the create_load_table_lookup
--     cneumuel 06/17/2011 - Added p_browser_cache to create_flow and create_page (feature #726)
--     cneumuel 06/17/2011 - Added p_vpd_teardown_code to create_flow (feature #616)
--     cneumuel 06/20/2011 - Added correct defaults to p_browser_cache of create_flow and create_page (feature #726)
--     jkallman 07/05/2011 - Added p_translate_list_text_y_n to create_list_item
--     cneumuel 07/07/2011 - Added p_browser_frame to create_flow (feature #731)
--     pawolf   08/05/2011 - Added new column compatibility_mode to wwv_flows (bug# 12835127)
--     hfarrell 10/20/2011 - Added remove_restful_service, create_restful_module, create_restful_template, create_restful_handler, create_restful_priv, create_rs_priv_grp
--     hfarrell 10/26/2011 - Updated create_user_groups to set default value of p_group_name to null
--     pawolf   12/23/2011 - Added restricted_characters to wwv_flow_step_items (bug 13344998)
--     sathikum 01/13/2012 - Added procedure set_build_option_status (Bug# #13050595 )
--     pawolf   02/29/2012 - Added placeholder to wwv_flow_step_items (feature# 837)
--     pawolf   03/02/2012 - Added data model changes for several 4.2 features (feature# 778, 826, 819, 817, 816, 815, 823, 767, 825, 828, 829, 844)
--     hfarrell 05/02/2012 - Added data model changes for chart-related 4.2 feature #543 and 494: updated create_flash_chart5 and create_flash_chart5_series
--     pawolf   03/06/2012 - Renamed new css_classes to region_css_classes and tag_css_classes to be consistent with existing columns (feature# 815)
--     pawolf   03/07/2012 - Added new table wwv_flow_theme_styles (feature# 821)
--     pawolf   03/08/2012 - Added data model changes for UI type feature (feature# 827)
--     arayner  03/14/2012 - Added p_bind_delegate_to_selector to create_page_da_event (feature# 836)
--     pawolf   03/14/2012 - Removed display_row_template_id from wwv_flow_lists (feature# 873)
--     sathikum 03/15/2012 - Added parameters to create_calendar_template (feature #812)
--     pawolf   03/19/2012 - Changed code to only use new columns in wwv_flow_user_interfaces instead of the old columns in wwv_flow (feature# 827)
--     pawolf   03/21/2012 - Removed g_new_theme_id
--     pawolf   03/28/2012 - Added 10 more custom plug-in attributes to regions (feature# 890)
--     cbcho    03/28/2012 - Added p_email_from to create_worksheet (feature# 695)
--     hfarrell 03/29/2012 - Added p_required_patch to create_flash_chart5_series (feature #494)
--     cbcho    03/29/2012 - Added p_email_from to create_flow (feature# 695)
--     sathikum 03/30/2012 - Added additional columns to support Agenda Calendar feature (#812)
--     pawolf   03/30/2012 - Added new table wwv_flow_plugin_settings (feature# 895)
--     jkallman 04/02/2012 - Removed create_configuration_item, create_configuration
--     vuvarov  04/03/2012 - Added p_branch_name to create_page_branch() (feature #872)
--     pawolf   04/05/2012 - Added NONE as default transition for p_default_page_transition and p_default_popup_transition
--     pawolf   04/06/2012 - Added read only attributes to wwv_flow_steps and wwv_flow_page_plugs (feature# 570)
--     cneumuel 04/10/2012 - In create_flow: added p_authorize_public_pages_yn (bug #13940433)
--     cbcho    04/13/2012 - Added p_language, p_email_from to create_worksheet_notify (feature ##881)
--     sathikum 04/16/2012 - Added p_month_data_format,p_month_data_entry_format to create_calendar_template (feature #811)
--     sathikum 04/17/2012 - Added p_month_data_display_type to create_Calendar (feature #811)
--     cneumuel 04/17/2012 - Prefix sys objects with schema (bug #12338050)
--     arayner  04/20/2012 - Added wait_for_result to wwv_flow_page_da_actions (feature #599)
--     arayner  04/23/2012 - Changed wait_for_result parameter of create_page_da_action to default to null, not Y (feature #599)
--     pawolf   04/25/2012 - Added column_data_types to wwv_flow_plugin_attributes (feature #918)
--     cbcho    04/25/2012 - Added icon_view_use_custom, icon_view_custom_link to wwv_flow_worksheets (feature #915)
--     cbcho    04/25/2012 - Added language, email_from to create_ws_notify, email_from to create_ws_worksheet (feature #695)
--     cbcho    04/27/2012 - Added email_from to create_ws_app (feature #695)
--     pawolf   04/30/2012 - Added series_ajax_items_to_submit to wwv_flow_flash_chart5_series (feature #741)
--     cneumuel 04/30/2012 - Added check_for_valid_flow_range in spec (bug #14008101)
--     cneumuel 05/02/2012 - Added p_deep_linking to create_flow, create_page (feature #878)
--     pawolf   05/08/2012 - Updated to be compatible with API change (from 2011.02.12 to 2012.01.01)
--     hfarrell 05/03/2012 - Updated remove_restful_service to allow for null value for p_id (associated with bug #14025353)
--     cneumuel 05/10/2012 - In create_ws_auth_setup: added p_ldap_username_escaping (bug #14047270)
--     pawolf   05/11/2012 - Added wwv_flow_page_plugs.plug_item_display_position (feature #278)
--     pawolf   05/14/2012 - Added grid templates (feature #936)
--     arayner  05/15/2012 - Added include_legacy_javascript to wwv_flows (feature #927)
--     arayner  05/15/2012 - Changed default to Y for include_legacy_javascript column in wwv_flows (feature #927)
--     pawolf   05/21/2012 - More changes for grid templates (feature #936)
--     pawolf   05/21/2012 - Added wwv_flow_theme_display_points (feature #936)
--     pawolf   05/21/2012 - More changes for grid templates (feature #936)
--     pawolf   05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--     pmanirah 05/24/2012 - Added column_names_lov_id column and corresponding parameter to create_load_table procedure (feature #833)
--     arayner  05/28/2012 - Added wwv_flow_page_da_actions.affected_button_id (feature #678)
--     cneumuel 05/31/2012 - In create_flow_item: added p_scope (feature #897)
--     cbcho    05/31/2012 - Added post_import_process (feature #268)
--     pmanirah 05/31/2012 - Added p_is_use_version_col_on and p_version_column_name parameters to create_load_table (feature #903)
--     cbcho    06/04/2012 - Added internal_uid to create_worksheet, create_ws_worksheet (feature #268)
--     msewtz   06/05/2012 - Added default_header_template and default_footer_template to create_theme
--     pmanirah 06/08/2012 - Removed the parameter p_is_use_version_col_on (feature #903)
--     cneumuel 06/11/2012 - In create_flow: default p_authorize_public_pages_yn to N, but set to Y in body if import version is <= 4.1 (feature #621)
--     jkallman 06/11/2012 - Added get_build_option_status (#957)
--     pawolf   06/15/2012 - Added has_edit_links to wwv_flow_templates
--     pawolf   06/15/2012 - Added table wwv_flow_plug_tmpl_disp_points (feature #936)
--     sathikum 06/19/2012 - Added p_end_date_column to create_calendar (feature #814)
--     pawolf   06/20/2012 - Added global_page_id to wwv_flow_user_interfaces (feature #987)
--     pawolf   06/26/2012 - Added remove_application
--     cneumuel 06/26/2012 - Fixed typo in wwv_flow_ui_types.autodetect_js_function_body (feature #791)
--     pawolf   06/26/2012 - Removed create_app_from_query
--     pawolf   06/26/2012 - Added table wwv_flow_page_tmpl_disp_points (feature #936)
--     pawolf   07/04/2012 - Added Builder Feature configuration tables (feature #827)
--     cneumuel 07/05/2012 - Made get_default_ldap_escaping public (bug #14047270)
--     cneumuel 07/13/2012 - In create_flow: added p_ui_detection_css_urls (feature #791)
--                         - In create_flow: added p_html_escaping_mode (bug #14047702)
--     vuvarov  07/17/2012 - Added p_nls_sort and p_nls_comp to create_flow() (feature #978)
--     jkallman 08/08/2012 - Added p_template_translatable to create_translation (Bug 13801807)
--     cbcho    08/17/2012 - Added create_worksheet_category (bug 14509942)
--     pawolf   08/23/2012 - Restored create_app_from_query (bug# 14526535)
--     cbcho    08/23/2012 - Removed p_base_cat_id reference as it is obsolete
--     jstraub  11/09/2012 - Added numerous APIs for complete workspace export
--     jstraub  11/20/2012 - Added p_security_group_id to create_clickthru_log*, create_mail_log
--     jstraub  11/20/2012 - Changed p_attachment in create_mail_attachments to take in varchar2 table
--     jstraub  11/29/2012 - Added p_security_group_id to create_password_history and create_script
--     jstraub  11/29/2012 - Added created_by, created_on to create_sw_sql_cmds
--     jstraub  11/29/2012 - Added auditing columns back to workspace export api's
--     jstraub  12/04/2012 - Added p_security_group_id to create_user_access_log*
--     jstraub  12/04/2012 - Added auditing columns to create_ws_app_sug_objects
--     jstraub  12/06/2012 - Removed p_security_group_id from create_clickthru*, create_mail_log, create_password_history,
--                           create_user_access_log*
--     cbcho    01/31/2013 - Exposed check_sgid_for_app_id (bug #16238360)
--     cneumuel 02/26/2014 - In create_flow: "basic" escaping for applications before APEX 4.2 (bug #18314817)
--
--------------------------------------------------------------------------------

--
empty_vc_arr        wwv_flow_global.vc_arr2;
g_raise_errors      boolean := false;
g_id_offset         number := 0;
g_nls_numeric_chars varchar2(8);


-- Valid modes:
--   CREATE  - only insert
--   REMOVE  - only delete
--   REPLACE - delete and insert
g_mode              varchar2(255) := 'CREATE';

---------------------
-- Compatable Version
-- format: YYYY.MM.DD of most recent build which changed inputs
-- set this to the last schema change date
--
-- *** NOTE ***  The corresponding date in flows_version.sql will need
--               to be modified if this version is changed
--
g_compatable_from_version     varchar2(255) := '2012.01.01';
g_is_compatable               boolean       := true;

empty_varchar2_table          sys.dbms_sql.varchar2_table;
g_varchar2_table              sys.dbms_sql.varchar2_table;
g_list_contents_only          boolean := false;
g_import_script_files         wwv_flow_global.vc_arr2;
g_import_script_status        wwv_flow_global.vc_arr2;
g_fnd_user_password_action    boolean := false;
--
--
--
procedure check_sgid;
procedure check_version;

procedure check_sgid_for_app_id(
    p_flow_id in number);

procedure check_sgid_for_ws_app_id(
    p_websheet_application_id in number);
procedure check_for_valid_flow_range (
    p_flow_id in number );

--
-- S E T   V E R S I O N
--
procedure set_version (
    --
    -- This call is expected to be made before running and procedure within wwv_flow_api.
    -- You are expected to inform the flows API which version of flows created your export.
    -- All flow versions are in the form YYYY.MM.DD.
    -- No API calls will work if the versions are incompatable.
    -- An incompatable version is defined as the wwv_flow_api.g_compatable_from_version
    -- (a static plsql package global that indicates from which date this api is good from)
    -- is less then or equal to the calling version passed to this procedure.
    --
    p_version_yyyy_mm_dd in varchar2,
    p_debug              in varchar2 default 'YES')
    ;

--
-- R E M O V E
--
procedure remove_flow (
    --
    -- This procedure deletes a row from the wwv_flows table
    -- which then cascades to all subordinate flow objects.
    --
    -- Run this procedure only from an application export file
    -- because it will make sure that translated apps will not be removed and
    -- saved IR's are stored in memory for later restore.
    --
    -- To delete an application and all it's translations, ... use remove_application
    -- instead.
    --
    p_id in number  default null )
    ;

procedure remove_application (
    --
    -- This procedure deletes an application and all it's child objects like
    -- pages, translated applications, ...
    --
    p_application_id in number );


procedure remove_page (
    --
    -- This procedure deletes a row from the pages table
    -- which then cascades to delete all subordinate meta
    -- data.
    --
    p_flow_id                   in number   default null,
    p_page_id                   in number   default null)
    ;

procedure create_ui_type (
    p_name                        in varchar2,
    p_based_on_ui_type_name       in varchar2 default null,
    p_autodetect_js_file_urls     in varchar2 default null,
    p_autodetect_js_function_body in varchar2 default null,
    p_autodetect_plsql_func_body  in varchar2 default null );

procedure create_ui_type_feature (
    p_ui_type_name       in varchar2,
    p_builder_feature_id in number );

-------------------------------------------------
-- C R E A T E   F L O W   A T T R I B U T E S --
-------------------------------------------------

--
-- F L O W
--
procedure create_flow (
    --
    -- This procedure creates the description of a flow.
    -- A flow is made up of zero or more pages as well as
    -- other "flow level" attributes.
    --
    -- obsolete attributes
    --   P_SECURITY_GROUP_ID (derived from "set credentials" call)
    --   P_WEBDB_TEMPLATE (included for compatability replaced with p_default_page_template)
    --   P_WEBDB_LOGGING (included for compatability replaced with p_page_view_logging)
    --   P_PAGE_RANGE_MINIMUM (included so old flows will still create)
    --   P_PAGE_RANGE_MAXIMUM (included so old flows will still create)
    --
    -- new arguments not yet implemented
    --   P_GLOBAL_ID (will allow alternate flow ID reference... a synonym for a flow ID)


    p_id                        in number   default null,
    p_security_group_id         in number   default null, -- obsolete
    p_display_id                in number   default null,
    p_owner                     in varchar2 default null,
    p_name                      in varchar2 default null,
    p_alias                     in varchar2 default null,
    p_webdb_template            in varchar2 default null, -- obsolete
    p_default_page_template     in number   default null, -- obsolete
    p_home_link                 in varchar2 default null, -- obsolete
    p_box_width                 in varchar2 default null,
    p_webdb_logging             in varchar2 default null, -- obsolete
    p_page_view_logging         in varchar2 default null,
    p_flow_language             in varchar2 default null,
    p_flow_language_derived_from in varchar2 default null,
    p_date_format               in varchar2 default null,
    p_date_time_format          in varchar2 default null,
    p_timestamp_format          in varchar2 default null,
    p_timestamp_tz_format       in varchar2 default null,
    p_nls_sort                  in varchar2 default null,
    p_nls_comp                  in varchar2 default null,
    p_flow_image_prefix         in varchar2 default null,
    p_media_type                in varchar2 default null,
    p_printer_friendly_template in number   default null, -- obsolete
    p_default_region_template   in number   default null, -- obsolete
    p_default_label_template    in number   default null, -- obsolete
    p_default_report_template   in number   default null, -- obsolete
    p_default_list_template     in number   default null, -- obsolete
    p_default_menu_template     in number   default null, -- obsolete
    p_default_button_template   in number   default null, -- obsolete
    p_error_template            in number   default null, -- obsolete
    --
    p_default_chart_template    in number   default null, -- obsolete
    p_default_form_template     in number   default null, -- obsolete
    p_default_wizard_template   in number   default null, -- obsolete
    p_default_tabform_template  in number   default null, -- obsolete
    p_default_reportr_template  in number   default null, -- obsolete
    p_default_menur_template    in number   default null, -- obsolete
    p_default_listr_template    in number   default null, -- obsolete
    p_default_irr_template      in number   default null, -- obsolete
    --
    p_theme_id                  in number   default null, -- obsolete
    p_application_group         in number   default null,
    p_application_group_name    in varchar2 default null,
    p_application_group_comment in varchar2 default null,
    --
    p_documentation_banner      in varchar2 default null,
    p_authentication            in varchar2 default null,
    p_authentication_id         in number   default null,
    p_login_url                 in varchar2 default null, -- obsolete
    p_logout_url                in varchar2 default null,
    p_logo_image                in varchar2 default null,
    p_logo_image_attributes     in varchar2 default null,
    p_public_url_prefix         in varchar2 default null,
    p_public_user               in varchar2 default null,
    p_dbauth_url_prefix         in varchar2 default null,
    p_proxy_server              in varchar2 default null,
    p_cust_authentication_process in varchar2 default null,
    p_cust_authentication_page  in varchar2 default null,
    p_custom_auth_login_url     in varchar2 default null, -- obsolete
    p_flow_version              in varchar2 default null,
    p_page_range_minimum        in number   default null, -- obsolete; not in wwv_flows table
    p_page_range_maximum        in number   default null, -- obsolete; not in wwv_flows table
    p_flow_status               in varchar2 default null,
    p_flow_unavailable_text     in varchar2 default null,
    p_restrict_to_user_list     in varchar2 default null,
    p_build_status              in varchar2 default null,
    p_exact_substitutions_only  in varchar2 default null,
    p_browser_cache             in varchar2 default 'Y',
    p_browser_frame             in varchar2 default 'A',
    p_deep_linking              in varchar2 default 'Y',
    p_vpd                       in varchar2 default null,
    p_vpd_teardown_code         in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_authorize_public_pages_yn in varchar2 default 'N',
    p_application_tab_set       in number   default null, -- obsolete; reused for debugging flag
    p_rejoin_existing_sessions  in varchar2 default null,
    p_substitution_string_01    in varchar2 default null,
    p_substitution_value_01     in varchar2 default null,
    p_substitution_string_02    in varchar2 default null,
    p_substitution_value_02     in varchar2 default null,
    p_substitution_string_03    in varchar2 default null,
    p_substitution_value_03     in varchar2 default null,
    p_substitution_string_04    in varchar2 default null,
    p_substitution_value_04     in varchar2 default null,
    p_substitution_string_05    in varchar2 default null,
    p_substitution_value_05     in varchar2 default null,
    p_substitution_string_06    in varchar2 default null,
    p_substitution_value_06     in varchar2 default null,
    p_substitution_string_07    in varchar2 default null,
    p_substitution_value_07     in varchar2 default null,
    p_substitution_string_08    in varchar2 default null,
    p_substitution_value_08     in varchar2 default null,
    p_substitution_string_09    in varchar2 default null,
    p_substitution_value_09     in varchar2 default null,
    p_substitution_string_10    in varchar2 default null,
    p_substitution_value_10     in varchar2 default null,
    p_substitution_string_11    in varchar2 default null,
    p_substitution_value_11     in varchar2 default null,
    p_substitution_string_12    in varchar2 default null,
    p_substitution_value_12     in varchar2 default null,
    p_substitution_string_13    in varchar2 default null,
    p_substitution_value_13     in varchar2 default null,
    p_substitution_string_14    in varchar2 default null,
    p_substitution_value_14     in varchar2 default null,
    p_substitution_string_15    in varchar2 default null,
    p_substitution_value_15     in varchar2 default null,
    p_substitution_string_16    in varchar2 default null,
    p_substitution_value_16     in varchar2 default null,
    p_substitution_string_17    in varchar2 default null,
    p_substitution_value_17     in varchar2 default null,
    p_substitution_string_18    in varchar2 default null,
    p_substitution_value_18     in varchar2 default null,
    p_substitution_string_19    in varchar2 default null,
    p_substitution_value_19     in varchar2 default null,
    p_substitution_string_20    in varchar2 default null,
    p_substitution_value_20     in varchar2 default null,
    p_required_roles              in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_global_notification         in varchar2 default null,
    p_global_id                   in number   default null,
    p_charset                     in varchar2 default null,
    p_page_protection_enabled_y_n in varchar2 default null,
    p_checksum_salt               in raw      default null,
    p_checksum_salt_last_reset    in varchar2 default null,
    p_csv_encoding                in varchar2 default null,
    p_auto_time_zone              in varchar2 default null,
    p_content_delivery_network    in varchar2 default null,
    p_javascript_file_urls        in varchar2 default null,
    p_include_legacy_javascript   in varchar2 default 'Y',
    p_ui_detection_css_urls       in varchar2 default null,
    p_error_handling_function     in varchar2 default null,
    p_default_error_display_loc   in varchar2 default 'INLINE_WITH_FIELD_AND_NOTIFICATION',
    p_max_session_length_sec      in number   default null,
    p_on_max_session_timeout_url  in varchar2 default null,
    p_max_session_idle_sec        in number   default null,
    p_on_max_idle_timeout_url     in varchar2 default null,
    p_compatibility_mode          in varchar2 default '4.0',
    p_html_escaping_mode          in varchar2 default null,
    p_email_from                  in varchar2 default null,
    --
    p_publish_yn                  in varchar2 default 'N',   -- apex 4.0
    p_allow_feedback_yn           in varchar2 default 'N',   -- apex 4.0
    --
    p_ui_type_name                in varchar2 default 'DESKTOP',
    --
    p_last_updated_by             in varchar2 default null,
    p_last_upd_yyyymmddhh24miss   in varchar2 default null,
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME')
    ;

procedure set_application_name (
    p_flow_id                   in number default null,
    p_name                      in varchar2 default null)
    ;
procedure set_application_alias (
    p_flow_id                   in number default null,
    p_alias                     in varchar2 default null)
    ;
procedure set_exact_subs (
    p_flow_id                   in number default null,
    p_exact_substitutions       in varchar2 default null)
    ;
procedure set_security_scheme (
    p_flow_id                   in number default null,
    p_security_scheme           in varchar2 default null)
    ;
procedure set_proxy_server (
    p_flow_id                   in number default null,
    p_proxy_server              in varchar2 default null)
    ;
procedure set_page_prot_enabled_y_n (
    p_flow_id                   in number default null,
    p_page_protection           in varchar2 default null)
    ;
procedure set_vpd (
    p_flow_id                   in number default null,
    p_vpd                       in varchar2 default null)
    ;
procedure set_application_lock (
    p_flow_id                   in number default null,
    p_locked_by                 in varchar2 default null)
    ;

procedure set_enable_app_debugging (
    p_flow_id                   in number default null,
    p_debugging                 in varchar2 default null)
    ;
procedure set_global_notification (
    p_flow_id                   in number default null,
    p_global_notification       in varchar2 default null)
    ;
procedure set_flow_authentication (
    p_flow_id                   in number default null,
    p_authentication            in varchar2 default null)
    ;
procedure set_logout_url (
    p_flow_id                   in number default null,
    p_logout_url                in varchar2 default null)
    ;
procedure set_logo_image (
    p_flow_id                   in number default null,
    p_logo_image                in varchar2 default null,
    p_logo_image_attributes     in varchar2 default null)
    ;
procedure set_image_prefix (
    p_flow_id                   in number default null,
    p_image_prefix              in varchar2 default null)
    ;
procedure set_logging (
    p_flow_id                   in number default null,
    p_logging                   in varchar2 default null)
    ;
procedure set_application_owner (
    p_flow_id                   in number default null,
    p_application_owner         in varchar2 default null)
    ;
function get_application_owner (
    p_flow_id                   in number )
    return varchar2
    ;
procedure set_public_url_prefix (
    p_flow_id                   in number default null,
    p_public_url_prefix         in varchar2 default null)
    ;
procedure set_authenticated_url_prefix (
    p_flow_id                   in number default null,
    p_authenticated_url_prefix  in varchar2 default null)
    ;
procedure create_build_option (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_build_option_name         in varchar2 default null,
    p_build_option_status       in varchar2 default null,
    p_build_option_comment      in varchar2 default null,
    --
    p_default_on_export         in varchar2 default null,
    p_attribute1                in varchar2 default null,
    p_attribute2                in varchar2 default null,
    p_attribute3                in varchar2 default null,
    p_attribute4                in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;
procedure set_build_option (
    p_id                        in number   default null,
    p_build_option_status       in varchar2 default null)
    ;
procedure set_static_sub_strings (
    p_flow_id                     in number,
    p_substitution_string_01      in varchar2 default null,
    p_substitution_value_01       in varchar2 default null,
    p_substitution_string_02      in varchar2 default null,
    p_substitution_value_02       in varchar2 default null,
    p_substitution_string_03      in varchar2 default null,
    p_substitution_value_03       in varchar2 default null,
    p_substitution_string_04      in varchar2 default null,
    p_substitution_value_04       in varchar2 default null,
    p_substitution_string_05      in varchar2 default null,
    p_substitution_value_05       in varchar2 default null,
    p_substitution_string_06      in varchar2 default null,
    p_substitution_value_06       in varchar2 default null,
    p_substitution_string_07      in varchar2 default null,
    p_substitution_value_07       in varchar2 default null,
    p_substitution_string_08      in varchar2 default null,
    p_substitution_value_08       in varchar2 default null)
    ;
procedure set_flow_status (
    p_flow_id                   in number,
    p_flow_status               in varchar2,
    p_flow_status_message       in varchar2 default null,
    p_restrict_to_user_list     in varchar2 default null)
    ;

procedure create_user_interface (
    p_id              in number   default null,
    p_flow_id         in number,
    p_ui_type_name    in varchar2,
    p_display_name    in varchar2,
    p_display_seq     in number,
    p_use_auto_detect in boolean,
    p_is_default      in boolean,
    p_theme_id        in number,
    p_home_url        in varchar2 default null,
    p_login_url       in varchar2 default null,
    p_global_page_id  in number   default null,
    p_required_patch  in number   default null );

--
-- S E C U R I T Y   S C H E M E S
--
procedure create_security_scheme (
    p_id                       in number   default null,
    p_security_group_id        in number   default null, -- obsolete
    p_flow_id                  in number   default null,
    p_name                     in varchar2 default null,
    p_scheme_type              in varchar2 default null,
    p_attribute_01             in varchar2 default null,
    p_attribute_02             in varchar2 default null,
    p_attribute_03             in varchar2 default null,
    p_attribute_04             in varchar2 default null,
    p_attribute_05             in varchar2 default null,
    p_attribute_06             in varchar2 default null,
    p_attribute_07             in varchar2 default null,
    p_attribute_08             in varchar2 default null,
    p_attribute_09             in varchar2 default null,
    p_attribute_10             in varchar2 default null,
    p_attribute_11             in varchar2 default null,
    p_attribute_12             in varchar2 default null,
    p_attribute_13             in varchar2 default null,
    p_attribute_14             in varchar2 default null,
    p_attribute_15             in varchar2 default null,
    p_scheme                   in varchar2 default null, -- obsolete
    p_scheme_text              in varchar2 default null, -- obsolete
    p_caching                  in varchar2 default null,
    p_error_message            in varchar2 default null,
    p_reference_id             in number   default null,
    p_comments                 in varchar2 default null,
    --
    p_id_offset                in number   default 0,
    p_target                   in varchar2 default 'PRIME')
    ;

--
-- N A V I G A T I O N   B A R
--

procedure create_icon_bar (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_icon_bar_text             in varchar2 default null,
    p_icon_bar_table_width      in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_icon_bar_item (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_icon_sequence             in number   default null,
    p_icon_image                in varchar2 default null,
    p_icon_image2               in varchar2 default null,
    p_icon_image3               in varchar2 default null,
    p_icon_subtext              in varchar2 default null,
    p_icon_subtext2             in varchar2 default null,
    p_icon_subtext3             in varchar2 default null,
    p_icon_target               in varchar2 default null,
    p_icon_image_alt            in varchar2 default null,
    p_icon_height               in number   default null,
    p_icon_width                in number   default null,
    p_icon_height2              in number   default null,
    p_icon_width2               in number   default null,
    p_icon_height3              in number   default null,
    p_icon_width3               in number   default null,
    p_icon_bar_disp_cond        in varchar2 default null,
    p_icon_bar_disp_cond_type   in varchar2 default null,
    p_icon_bar_flow_cond_instr  in varchar2 default null,
    p_begins_on_new_line        in varchar2 default null,
    p_cell_colspan              in number   default null,
    p_onclick                   in varchar2 default null,
    p_required_patch            in number   default null,
    p_security_scheme           in varchar2 default null,
    p_reference_id              in number   default null,
    p_nav_entry_is_feedback_yn  in varchar2 default null,
    p_icon_bar_comment          in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure set_icon_bar_item (
    p_id                        in number,
    p_icon_sequence             in number   default null,
    p_icon_image                in varchar2 default null,
    p_icon_image2               in varchar2 default null,
    p_icon_image3               in varchar2 default null,
    p_icon_subtext              in varchar2 default null,
    p_icon_subtext2             in varchar2 default null,
    p_icon_subtext3             in varchar2 default null,
    p_icon_target               in varchar2 default null,
    p_icon_image_alt            in varchar2 default null,
    p_icon_height               in number   default null,
    p_icon_width                in number   default null,
    p_icon_height2              in number   default null,
    p_icon_width2               in number   default null,
    p_icon_height3              in number   default null,
    p_icon_width3               in number   default null,
    p_icon_bar_disp_cond        in varchar2 default null,
    p_icon_bar_disp_cond_type   in varchar2 default null,
    p_icon_bar_flow_cond_instr  in varchar2 default null,
    p_begins_on_new_line        in varchar2 default null,
    p_cell_colspan              in number   default null,
    p_required_patch            in number   default null,
    p_icon_bar_comment          in varchar2 default null)
    ;

procedure remove_icon_bar_item (
    p_id                        in number)
    ;

--
-- F L O W   P R O C E S S
--
procedure create_flow_process (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_process_sequence          in number   default null,
    p_process_point             in varchar2 default null,
    p_process_type              in varchar2 default null,
    p_process_name              in varchar2 default null,
    p_process_sql               in varchar2 default null,
    p_process_sql_clob          in varchar2 default null,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_attribute_09              in varchar2 default null,
    p_attribute_10              in varchar2 default null,
    p_attribute_11              in varchar2 default null,
    p_attribute_12              in varchar2 default null,
    p_attribute_13              in varchar2 default null,
    p_attribute_14              in varchar2 default null,
    p_attribute_15              in varchar2 default null,
    p_process_error_message     in varchar2 default null,
    p_error_display_location    in varchar2 default 'ON_ERROR_PAGE',
    p_process_when              in varchar2 default null,
    p_process_when_type         in varchar2 default null,
    p_process_when2             in varchar2 default null,
    p_process_when_type2        in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_process_item_name         in varchar2 default null,
    p_process_comment           in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure set_flow_process_sql (
    p_id                        in number   default null,
    p_process_sql               in varchar2 default null)
    ;


--
-- F L O W   I T E M S
--

procedure create_flow_item (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_scope                     in varchar2 default 'APP',
    p_data_type                 in varchar2 default null,
    p_is_Persistent             in varchar2 default null,
    p_required_patch            in number   default null,
    p_protection_level          in varchar2 default null,
    p_item_comment              in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

--
-- F L O W   C O M P U T A T I O N S
--
procedure create_flow_computation (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_computation_sequence      in number   default null,
    p_computation_item          in varchar2 default null,
    p_computation_point         in varchar2 default null,
    p_computation_item_type     in varchar2 default null,
    p_computation_type          in varchar2 default null,
    p_computation_processed     in varchar2 default null,
    p_computation               in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_computation_comment       in varchar2 default null,
    p_compute_when              in varchar2 default null,
    p_compute_when_type         in varchar2 default null,
    p_compute_when_text         in varchar2 default null,
    p_computation_error_message in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;




procedure create_tab (
    --
    -- Standard Tabs
    --
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_tab_set                   in varchar2 default null,
    p_tab_sequence              in number   default null,
    p_tab_name                  in varchar2 default null,
    p_tab_image                 in varchar2 default null,
    p_tab_non_current_image     in varchar2 default null,
    p_tab_image_attributes      in varchar2 default null,
    p_tab_text                  in varchar2 default null,
    p_tab_step                  in number   default null,
    p_tab_also_current_for_pages in varchar2 default null,
    p_tab_parent_tabset         in varchar2 default null,
    p_tab_plsql_condition       in varchar2 default null,
    p_display_condition_type    in varchar2 default null,
    p_tab_disp_cond_text        in varchar2 default null,
    p_required_patch            in number   default null,
    p_security_scheme           in varchar2 default null,
    p_tab_comment               in varchar2 default null,
    --
    p_auto_parent_tab_set       in varchar2 default null,
    p_auto_parent_tab_text      in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;
procedure update_tab_condition (
    p_id                        in number   default null,
    p_tab_plsql_condition       in varchar2 default null)
    ;
procedure update_tab_text (
    p_id                        in number   default null,
    p_tab_text                  in varchar2 default null)
    ;
procedure rename_tabset (
    p_flow_id                   in number   default null,
    p_old_name                  in varchar2 default null,
    p_new_name                  in varchar2 default null)
    ;

procedure create_toplevel_tab (
    --
    -- Parent Tabs
    --
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_tab_set                   in varchar2 default null,
    p_tab_sequence              in number   default null,
    p_tab_name                  in varchar2 default null,
    p_tab_image                 in varchar2 default null,
    p_tab_non_current_image     in varchar2 default null,
    p_tab_image_attributes      in varchar2 default null,
    p_tab_text                  in varchar2 default null,
    p_tab_target                in varchar2 default null,
    p_current_on_tabset         in varchar2 default null,
    p_display_condition         in varchar2 default null,
    p_display_condition2        in varchar2 default null,
    p_display_condition_type    in varchar2 default null,
    p_required_patch            in number   default null,
    p_security_scheme           in varchar2 default null,
    p_tab_comment               in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;
procedure update_toplevel_tab (
    p_id                        in number   default null,
    p_display_condition         in varchar2 default null)
    ;


procedure set_toplevel_tab_target (
    p_id                        in number   default null,
    p_tab_target                in varchar2 default null)
    ;

procedure set_toplevel_tab_text (
    p_id                        in number   default null,
    p_tab_text                  in varchar2 default null)
    ;


--
-- L I S T S  O F  V A L U E S
--

procedure create_list_of_values (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_lov_name                  in varchar2 default null,
    p_lov_query                 in varchar2 default null,
    p_reference_id              in number   default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_static_lov_data (
    p_id                        in number   default null,
    p_lov_id                    in number   default null,
    p_lov_disp_sequence         in number   default null,
    p_lov_disp_value            in varchar2 default null,
    p_lov_return_value          in varchar2 default null,
    p_lov_template              in varchar2 default null,
    p_lov_disp_cond_type        in varchar2 default null,
    p_lov_disp_cond             in varchar2 default null,
    p_lov_disp_cond2            in varchar2 default null,
    p_required_patch            in varchar2 default null,
    p_lov_data_comment          in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

--
-- I N S T A L L E R
--

procedure create_install (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_include_in_export_yn        in varchar2 default 'Y',
    p_welcome_message             in varchar2 default null,
    p_license_message             in varchar2 default null,
    p_configuration_message       in varchar2 default null,
    p_build_options_message       in varchar2 default null,
    p_validation_message          in varchar2 default null,
    p_install_message             in varchar2 default null,
    p_install_success_message     in varchar2 default null,
    p_install_failure_message     in varchar2 default null,
    p_upgrade_message             in varchar2 default null,
    p_upgrade_confirm_message     in varchar2 default null,
    p_upgrade_success_message     in varchar2 default null,
    p_upgrade_failure_message     in varchar2 default null,
    p_get_version_sql_query       in varchar2 default null,
    p_deinstall_message           in varchar2 default null,
    p_deinstall_success_message   in varchar2 default null,
    p_deinstall_failure_message   in varchar2 default null,
    p_deinstall_script_clob       in varchar2 default null,

    p_prompt_sub_string_01        in varchar2 default null,
    p_prompt_sub_string_02        in varchar2 default null,
    p_prompt_sub_string_03        in varchar2 default null,
    p_prompt_sub_string_04        in varchar2 default null,
    p_prompt_sub_string_05        in varchar2 default null,
    p_prompt_sub_string_06        in varchar2 default null,
    p_prompt_sub_string_07        in varchar2 default null,
    p_prompt_sub_string_08        in varchar2 default null,
    p_prompt_sub_string_09        in varchar2 default null,
    p_prompt_sub_string_10        in varchar2 default null,
    p_prompt_sub_string_11        in varchar2 default null,
    p_prompt_sub_string_12        in varchar2 default null,
    p_prompt_sub_string_13        in varchar2 default null,
    p_prompt_sub_string_14        in varchar2 default null,
    p_prompt_sub_string_15        in varchar2 default null,
    p_prompt_sub_string_16        in varchar2 default null,
    p_prompt_sub_string_17        in varchar2 default null,
    p_prompt_sub_string_18        in varchar2 default null,
    p_prompt_sub_string_19        in varchar2 default null,
    p_prompt_sub_string_20        in varchar2 default null,

    p_install_prompt_01           in varchar2 default null,
    p_install_prompt_02           in varchar2 default null,
    p_install_prompt_03           in varchar2 default null,
    p_install_prompt_04           in varchar2 default null,
    p_install_prompt_05           in varchar2 default null,
    p_install_prompt_06           in varchar2 default null,
    p_install_prompt_07           in varchar2 default null,
    p_install_prompt_08           in varchar2 default null,
    p_install_prompt_09           in varchar2 default null,
    p_install_prompt_10           in varchar2 default null,
    p_install_prompt_11           in varchar2 default null,
    p_install_prompt_12           in varchar2 default null,
    p_install_prompt_13           in varchar2 default null,
    p_install_prompt_14           in varchar2 default null,
    p_install_prompt_15           in varchar2 default null,
    p_install_prompt_16           in varchar2 default null,
    p_install_prompt_17           in varchar2 default null,
    p_install_prompt_18           in varchar2 default null,
    p_install_prompt_19           in varchar2 default null,
    p_install_prompt_20           in varchar2 default null,

    p_prompt_if_mult_auth_yn      in varchar2 default null,

    p_trigger_install_when_cond   in varchar2 default null,
    p_trigger_install_when_exp1   in varchar2 default null,
    p_trigger_install_when_exp2   in varchar2 default null,
    p_trigger_failure_message     in varchar2 default null,

    p_required_free_kb            in number   default null,
    p_required_sys_privs          in varchar2 default null,
    p_required_names_available    in varchar2 default null,

    p_last_updated_by             in varchar2 default null,
    p_last_updated_on             in date     default null,
    --
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME')
    ;

procedure create_install_script (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_security_group_id           in number   default null,
    p_install_id                  in number   default null,
    p_name                        in varchar2 default null,
    p_sequence                    in number   default null,
    p_script_type                 in varchar2 default null,
    p_script_clob                 in varchar2 default null,
    p_condition_type              in varchar2 default null,
    p_condition                   in varchar2 default null,
    p_condition2                  in varchar2 default null,
    --
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME')
    ;

procedure append_to_install_script (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_script_clob                 in varchar2 default null,
    p_deinstall                   in boolean  default false)
    ;

procedure create_install_check (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_security_group_id           in number   default null,
    p_install_id                  in number   default null,
    p_name                        in varchar2 default null,
    p_sequence                    in number   default null,
    p_check_type                  in varchar2 default null,
    p_check_condition             in varchar2 default null,
    p_check_condition2            in varchar2 default null,
    p_failure_message             in varchar2 default null,

    p_condition_type              in varchar2 default null,
    p_condition                   in varchar2 default null,
    p_condition2                  in varchar2 default null,
    --
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME')
    ;

procedure create_install_build_option (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_security_group_id           in number   default null,
    p_install_id                  in number   default null,
    p_build_opt_id                in number   default null,
    --
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME')
    ;



--
-- P A G E
--
procedure create_page (
    --
    -- Creates a page identification.  The p_auto_ auto
    -- arguments are used to optionally create new
    -- tab sets and tab text.
    --
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_user_interface_id           in number   default null,
    p_tab_set                     in varchar2 default null,
    p_name                        in varchar2 default null,
    p_alias                       in varchar2 default null,
    p_step_title                  in varchar2 default null,
    p_step_sub_title              in varchar2 default null,
    p_step_sub_title_type         in varchar2 default null,
    p_media_type                  in varchar2 default null,
    p_first_item                  in varchar2 default null,
    p_include_apex_css_js_yn      in varchar2 default null,
    p_render_form_as_table        in varchar2 default null,
    p_welcome_text                in varchar2 default null,
    p_box_welcome_text            in varchar2 default null,
    p_box_footer_text             in varchar2 default null,
    p_footer_text                 in varchar2 default null,
    p_help_text                   in varchar2 default null,
    p_step_template               in number   default null,
    p_box_image                   in varchar2 default null,
    p_required_role               in varchar2 default null,
    p_required_patch              in number   default null,
    p_allow_duplicate_submissions in varchar2 default null,
    p_on_dup_submission_goto_url  in varchar2 default null,
    p_html_page_header            in varchar2 default null,
    p_html_page_onload            in varchar2 default null,
    p_javascript_file_urls        in varchar2 default null,
    p_javascript_code             in varchar2 default null,
    p_javascript_code_onload      in varchar2 default null,
    p_css_file_urls               in varchar2 default null,
    p_inline_css                  in varchar2 default null,
    p_page_is_protected_y_n       in varchar2 default null,
    p_page_is_public_y_n          in varchar2 default null,
    p_protection_level            in varchar2 default null,
    p_error_handling_function     in varchar2 default null,
    p_error_notification_text     in varchar2 default null,
    p_page_comment                in varchar2 default null,
    --
    p_tab_name                    in varchar2 default null,  -- current tab name
    --
    p_auto_tab_set                in varchar2 default null,
    p_auto_tab_text               in varchar2 default null,
    p_auto_parent_tab_set         in varchar2 default null,
    p_auto_parent_tab_text        in varchar2 default null,
    --
    p_autocomplete_on_off         in varchar2 default null,
    p_page_transition             in varchar2 default null,
    p_popup_transition            in varchar2 default null,
    --
    p_browser_cache               in varchar2 default null,
    p_deep_linking                in varchar2 default null,
    --
    p_read_only_when_type         in varchar2 default null,
    p_read_only_when              in varchar2 default null,
    p_read_only_when2             in varchar2 default null,
    --
    p_cache_page_yn               in varchar2 default null,
    p_cache_timeout_seconds       in number   default null,
    p_cache_by_user_yn            in varchar2 default null,
    p_cache_when_condition_type   in varchar2 default null,
    p_cache_when_condition_e1     in varchar2 default null,
    p_cache_when_condition_e2     in varchar2 default null,
    --
    p_group_id                    in number   default null,
    --
    p_last_updated_by             in varchar2 default null,
    p_last_upd_yyyymmddhh24miss   in varchar2 default null,
    --
    p_created_by                  in varchar2 default null,
    p_created_on_yyyymmddhh24miss in varchar2 default null,
    --
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME') ;

procedure create_page_group (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_group_name                  in varchar2 default null,
    p_group_desc                  in varchar2 default null,
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME') ;

procedure create_page_help (
    --
    -- Used to add up to 32767 bytes of page level help text to an existing page.
    -- P_ID identifies the page ID.
    --
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_help_text                   in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME') ;

procedure update_page (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_tab_set                     in varchar2 default null,
    p_name                        in varchar2 default null,
    p_step_title                  in varchar2 default null,
    p_step_sub_title              in varchar2 default null,
    p_step_sub_title_type         in varchar2 default null,
    p_welcome_text                in varchar2 default null,
    p_box_welcome_text            in varchar2 default null,
    p_box_footer_text             in varchar2 default null,
    p_footer_text                 in varchar2 default null,
    p_help_text                   in varchar2 default null,
    p_step_template               in varchar2 default null,
    p_box_image                   in varchar2 default null,
    p_required_role               in varchar2 default null,
    p_required_patch              in number   default null,
    p_page_comment                in varchar2 default null)
    ;


--
-- B U T T O N S
--
procedure create_page_button (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_flow_step_id               in number   default null,
    p_button_sequence            in number   default null,
    p_button_plug_id             in number   default null,
    p_button_name                in varchar2 default null,
    p_button_static_id           in varchar2 default null,
    p_button_image               in varchar2 default null,
    p_button_is_hot              in varchar2 default 'N',
    p_button_image_alt           in varchar2 default null,
    p_button_position            in varchar2 default null,
    p_button_alignment           in varchar2 default null,
    p_button_redirect_url        in varchar2 default null,
    p_button_action              in varchar2 default null,
    p_button_execute_validations in varchar2 default null,
    p_button_condition           in varchar2 default null,
    p_button_condition2          in varchar2 default null,
    p_button_condition_type      in varchar2 default null,
    p_button_image_attributes    in varchar2 default null,
    p_button_css_classes         in varchar2 default null,
    p_button_cattributes         in varchar2 default null,
    p_security_scheme            in varchar2 default null,
    p_required_patch             in number   default null,
    p_button_comment             in varchar2 default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME',
    p_database_action            in varchar2 default null )
    ;

--
-- B R A N C H
--
procedure create_page_branch (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_flow_step_id              in number   default null,
    p_branch_name               in varchar2 default null,
    p_branch_action             in varchar2 default null,
    p_branch_point              in varchar2 default null,
    p_branch_type               in varchar2 default null,
    p_branch_when_button_id     in number   default null,
    p_branch_sequence           in number   default null,
    p_branch_condition_type     in varchar2 default null,
    p_branch_condition          in varchar2 default null,
    p_branch_condition_text     in varchar2 default null,
    p_save_state_before_branch_yn in varchar2 default 'N',
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_branch_comment            in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

--
-- B R A N C H   A R G S
--
procedure create_page_branch_args (
    p_id                        in number   default null,
    p_flow_step_branch_id       in number   default null,
    p_branch_arg_sequence       in number   default null,
    p_branch_arg_source_type    in varchar2 default null,
    p_branch_arg_source         in varchar2 default null,
    p_branch_arg_comment        in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;
--
-- P A G E   I T E M S
--
procedure create_page_item (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_flow_step_id              in number   default null,
    p_name                      in varchar2 default null,
    p_data_type                 in varchar2 default null,
    p_is_required               in boolean  default false,
    p_standard_validations      in varchar2 default null,
    p_accept_processing         in varchar2 default null,
    p_item_sequence             in number   default null,
    p_item_plug_id              in number   default null,
    p_use_cache_before_default  in varchar2 default null,
    p_item_default              in varchar2 default null,
    p_item_default_type         in varchar2 default null,
    p_prompt                    in varchar2 default null,
    p_placeholder               in varchar2 default null,
    p_pre_element_text          in varchar2 default null,
    p_post_element_text         in varchar2 default null,
    p_format_mask               in varchar2 default null,
    p_source                    in varchar2 default null,
    p_source_type               in varchar2 default null,
    p_source_post_computation   in varchar2 default null,
    p_display_as                in varchar2 default null,
    p_named_lov                 in varchar2 default null,
    p_lov                       in varchar2 default null,
    p_lov_columns               in number   default null, -- deprecated
    p_lov_display_extra         in varchar2 default null,
    p_lov_display_null          in varchar2 default null,
    p_lov_null_text             in varchar2 default null,
    p_lov_null_value            in varchar2 default null,
    p_lov_translated            in varchar2 default null,
    p_lov_cascade_parent_items  in varchar2 default null,
    p_ajax_items_to_submit      in varchar2 default null,
    p_ajax_optimize_refresh     in varchar2 default null,
    p_cSize                     in number   default null,
    p_cMaxlength                in number   default null,
    p_cHeight                   in number   default null,
    p_cAttributes               in varchar2 default null,
    p_cAttributes_element       in varchar2 default null,
    p_tag_css_classes           in varchar2 default null,
    p_tag_attributes            in varchar2 default null,
    p_tag_attributes2           in varchar2 default null,
    p_new_grid                  in boolean  default false,
    p_begin_on_new_line         in varchar2 default null,
    p_begin_on_new_field        in varchar2 default null,
    p_colspan                   in number   default null,
    p_rowspan                   in number   default null,
    p_grid_column               in number   default null,
    p_button_image              in varchar2 default null,
    p_button_image_attr         in varchar2 default null,
    p_label_alignment           in varchar2 default null,
    p_field_alignment           in varchar2 default null,
    p_field_template            in varchar2 default null,
    p_display_when              in varchar2 default null,
    p_display_when2             in varchar2 default null,
    p_display_when_type         in varchar2 default null,
    p_is_Persistent             in varchar2 default null,
    p_javascript                in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_item_comment              in varchar2 default null,
    p_help_text                 in varchar2 default null,
    --
    p_read_only_when            in varchar2 default null,
    p_read_only_when2           in varchar2 default null,
    p_read_only_when_type       in varchar2 default null,
    p_read_only_disp_attr       in varchar2 default null,
    --
    p_protection_level          in varchar  default null,
    p_escape_on_http_input      in varchar2 default null,
    p_escape_on_http_output     in varchar2 default null,
    p_restricted_characters     in varchar2 default null,
    --
    p_encrypt_session_state_yn  in varchar2 default 'N',
    --
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_attribute_09              in varchar2 default null,
    p_attribute_10              in varchar2 default null,
    p_attribute_11              in varchar2 default null,
    p_attribute_12              in varchar2 default null,
    p_attribute_13              in varchar2 default null,
    p_attribute_14              in varchar2 default null,
    p_attribute_15              in varchar2 default null,
    --
    p_show_quick_picks          in varchar2 default null,
    p_quick_pick_label_01       in varchar2 default null,
    p_quick_pick_value_01       in varchar2 default null,
    p_quick_pick_label_02       in varchar2 default null,
    p_quick_pick_value_02       in varchar2 default null,
    p_quick_pick_label_03       in varchar2 default null,
    p_quick_pick_value_03       in varchar2 default null,
    p_quick_pick_label_04       in varchar2 default null,
    p_quick_pick_value_04       in varchar2 default null,
    p_quick_pick_label_05       in varchar2 default null,
    p_quick_pick_value_05       in varchar2 default null,
    p_quick_pick_label_06       in varchar2 default null,
    p_quick_pick_value_06       in varchar2 default null,
    p_quick_pick_label_07       in varchar2 default null,
    p_quick_pick_value_07       in varchar2 default null,
    p_quick_pick_label_08       in varchar2 default null,
    p_quick_pick_value_08       in varchar2 default null,
    p_quick_pick_label_09       in varchar2 default null,
    p_quick_pick_value_09       in varchar2 default null,
    p_quick_pick_label_10       in varchar2 default null,
    p_quick_pick_value_10       in varchar2 default null,
    p_quick_pick_link_attr      in varchar2 default null,
    --
    p_reference_id              in number   default null,
    --
    p_button_execute_validations in varchar2 default null,
    p_button_action              in varchar2 default null,
    p_button_redirect_url        in varchar2 default null,
    p_button_is_hot              in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME' )
    ;

--
-- P A G E   C O M P U T A T I O N S
--
procedure create_page_computation (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_flow_step_id              in number   default null,
    p_computation_sequence      in number   default null,
    p_computation_item          in varchar2 default null,
    p_computation_point         in varchar2 default null,
    p_computation_item_type     in varchar2 default null,
    p_computation_type          in varchar2 default null,
    p_computation_processed     in varchar2 default null,
    p_computation               in varchar2 default null,
    p_computation_comment       in varchar2 default null,
    p_compute_when              in varchar2 default null,
    p_compute_when_type         in varchar2 default null,
    p_computation_error_message in varchar2 default null,
    p_compute_when_text         in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

--
-- P A G E   V A L I D A T I O N S
--
procedure create_page_validation (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_flow_step_id              in number   default null,
    p_tabular_form_region_id    in number   default null,
    p_validation_name           in varchar2 default null,
    p_validation_sequence       in number   default null,
    p_validation                in varchar2 default null,
    p_validation2               in varchar2 default null,
    p_validation_type           in varchar2 default null,
    p_error_message             in varchar2 default null,
    p_always_execute            in varchar2 default null,
    p_validation_condition      in varchar2 default null,
    p_validation_condition2     in varchar2 default null,
    p_validation_condition_type in varchar2 default null,
    p_exec_cond_for_each_row    in varchar2 default null,
    p_only_for_changed_rows     in varchar2 default null,
    p_when_button_pressed       in varchar2 default null,
    p_associated_item           in number   default null,
    p_associated_column         in varchar2 default null,
    p_error_display_location    in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_validation_comment        in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


---------------------------------
-- D Y N A M I C    A C T I O N S
--
procedure create_page_da_event (
    p_id                        in number   default null,
    p_flow_id                   in number,
    p_page_id                   in number,
    p_name                      in varchar2,
    p_event_sequence            in number,
    p_triggering_element_type   in varchar2 default null,
    p_triggering_region_id      in number   default null,
    p_triggering_button_id      in number   default null,
    p_triggering_element        in varchar2 default null,
    p_condition_page_item       in varchar2 default null,
    p_triggering_condition_type in varchar2 default null,
    p_triggering_expression     in varchar2 default null,
    p_bind_type                 in varchar2,
    p_bind_delegate_to_selector in varchar2 default null,
    p_bind_event_type           in varchar2,
    p_bind_event_type_custom    in varchar2 default null,
    p_bind_event_data           in varchar2 default null,
    p_display_when_type         in varchar2 default null,
    p_display_when_cond         in varchar2 default null,
    p_display_when_cond2        in varchar2 default null,
    p_required_patch            in number   default null,
    p_security_scheme           in varchar2 default null,
    p_da_event_comment          in varchar2 default null )
    ;

procedure create_page_da_action (
    p_id                        in number   default null,
    p_flow_id                   in number,
    p_page_id                   in number,
    p_event_id                  in number,
    p_event_result              in varchar2,
    p_action_sequence           in number,
    p_execute_on_page_init      in varchar2,
    p_stop_execution_on_error   in varchar2 default 'Y',
    p_wait_for_result           in varchar2 default null,
    p_action                    in varchar2,
    p_affected_elements_type    in varchar2 default null,
    p_affected_region_id        in number   default null,
    p_affected_button_id        in number   default null,
    p_affected_elements         in varchar2 default null,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_attribute_09              in varchar2 default null,
    p_attribute_10              in varchar2 default null,
    p_attribute_11              in varchar2 default null,
    p_attribute_12              in varchar2 default null,
    p_attribute_13              in varchar2 default null,
    p_attribute_14              in varchar2 default null,
    p_attribute_15              in varchar2 default null,
    p_da_action_comment         in varchar2 default null )
    ;

------------------------------
-- P A G E   P R O C E S S E S
--
procedure create_page_process (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_flow_step_id              in number   default null,
    p_process_sequence          in number   default null,
    p_process_point             in varchar2 default null,
    p_process_type              in varchar2 default null,
    p_process_name              in varchar2 default null,
    p_region_id                 in number   default null,
    p_process_sql               in varchar2 default null,
    p_process_sql_clob          in varchar2 default null,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_attribute_09              in varchar2 default null,
    p_attribute_10              in varchar2 default null,
    p_attribute_11              in varchar2 default null,
    p_attribute_12              in varchar2 default null,
    p_attribute_13              in varchar2 default null,
    p_attribute_14              in varchar2 default null,
    p_attribute_15              in varchar2 default null,
    p_process_error_message     in varchar2 default null,
    p_error_display_location    in varchar2 default 'ON_ERROR_PAGE',
    p_process_when_button_id    in number   default null,
    p_process_when              in varchar2 default null,
    p_process_when_type         in varchar2 default null,
    p_process_when2             in varchar2 default null,
    p_exec_cond_for_each_row    in varchar2 default null,
    p_only_for_changed_rows     in varchar2 default null,
    p_process_when_type2        in varchar2 default null,
    p_process_success_message   in varchar2 default null,
    p_security_scheme           in varchar2 default null,
    p_required_patch            in number   default null,
    p_process_is_stateful_y_n   in varchar2 default 'N',
    p_return_key_into_item1     in varchar2 default null,
    p_return_key_into_item2     in varchar2 default null,
    p_process_item_name         in varchar2 default null,
    p_process_comment           in varchar2 default null,
    p_runtime_where_clause      in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure set_page_process_source (
    p_id                        in number default null,
    p_flow_id                   in number   default null,
    p_page_id                   in number   default null,
    p_process_sql_clob          in varchar2 default null)
    ;

------------------------------------------------------------
-- T H E M E S
--

procedure create_theme(
    p_id                          in number default null,
    p_flow_id                     in number default null,
    p_theme_id                    in number default null,
    p_theme_name                  in varchar2,
    p_ui_type_name                in varchar2 default 'DESKTOP',
    p_reference_id                in number   default null,
    p_is_locked                   in boolean  default false,
    p_default_page_template       in number default null,
    p_error_template              in number default null,
    p_printer_friendly_template   in number default null,
    p_breadcrumb_display_point    in varchar2 default null,
    p_sidebar_display_point       in varchar2 default null,
    p_login_template              in number default null,
    p_default_button_template     in number default null,
    p_default_region_template     in number default null,
    p_default_chart_template      in number default null,
    p_default_form_template       in number default null,
    p_default_reportr_template    in number default null,
    p_default_tabform_template    in number default null,
    p_default_wizard_template     in number default null,
    p_default_menur_template      in number default null,
    p_default_listr_template      in number default null,
    p_default_irr_template        in number default null,
    p_default_report_template     in number default null,
    p_default_label_template      in number default null,
    p_default_menu_template       in number default null,
    p_default_calendar_template   in number default null,
    p_default_list_template       in number default null,
    p_default_option_label        in number default null,
    p_default_required_label      in number default null,
    p_default_page_transition     in varchar2 default 'NONE',
    p_default_popup_transition    in varchar2 default 'NONE',
    p_calendar_icon               in varchar2 default null,
    p_calendar_icon_attr          in varchar2 default null,
    p_mobile_login_template       in number default null,
    p_mobile_page_template        in number default null,
    p_mobile_region_template      in number default null,
    p_mobile_list_template        in number default null,
    p_mobile_report_template      in number default null,
    p_mobile_calendar_template    in number default null,
    p_mobile_button_template      in number default null,
    p_mobile_required_label       in number default null,
    p_mobile_optional_label       in number default null,
    p_default_header_template     in number default null,
    p_default_footer_template     in number default null,
    p_theme_description           in varchar2 default null);

procedure create_theme_image (
    p_id                          in number default null,
    p_flow_id                     in number default null,
    p_theme_id                    in number default null,
    p_varchar2_table              in sys.dbms_sql.varchar2_table default empty_varchar2_table,
    p_mimetype                    in varchar2 default null);

procedure delete_theme(
    p_flow_id       in number default null,
    p_theme_id      in number default null,
    p_import        in varchar2 default null);

procedure set_theme_calendar_icon (
    p_id            in number default null,
    p_flow_id       in number default null,
    p_calendar_icon in varchar2 default null,
    p_calendar_icon_attr in varchar2 default null);

procedure create_theme_style (
    p_id                in number   default null,
    p_flow_id           in number,
    p_theme_id          in number,
    p_name              in varchar2,
    p_css_file_urls     in varchar2,
    p_is_current        in boolean,
    p_reference_id      in number   default null,
    p_component_comment in varchar2 default null );

procedure create_theme_display_point (
    p_id                     in number   default null,
    p_flow_id                in number,
    p_theme_id               in number,
    p_name                   in varchar2,
    p_placeholder            in varchar2,
    p_has_grid_support       in boolean,
    p_max_fixed_grid_columns in number   default null,
    p_reference_id           in number   default null,
    p_component_comment      in varchar2 default null );

------------------------------------------------------------
-- T E M P L A T E S
--
-- page template
--

procedure create_template (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_look                      in number   default null,
    p_is_popup                  in boolean  default false,
    p_javascript_file_urls      in varchar2 default null,
    p_javascript_code           in varchar2 default null,
    p_javascript_code_onload    in varchar2 default null,
    p_css_file_urls             in varchar2 default null,
    p_inline_css                in varchar2 default null,
    p_header_template           in varchar2 default null,
    p_footer_template           in varchar2 default null,
    p_success_message           in varchar2 default null,
    --
    p_current_tab               in varchar2 default null,
    p_current_tab_font_attr     in varchar2 default null,
    p_non_current_tab           in varchar2 default null,
    p_non_current_tab_font_attr in varchar2 default null,
    --
    p_current_image_tab         in varchar2 default null,
    p_non_current_image_tab     in varchar2 default null,
    --
    p_top_current_tab            in varchar2 default null,
    p_top_current_tab_font_attr  in varchar2 default null,
    p_top_non_curr_tab           in varchar2 default null,
    p_top_non_curr_tab_font_attr in varchar2 default null,
    --
    p_box                       in varchar2 default null,
    p_navigation_bar            in varchar2 default null,
    p_navbar_entry              in varchar2 default null,
    p_body_title                in varchar2 default null,
    p_notification_message      in varchar2 default null,
    p_attribute1                in varchar2 default null,
    p_attribute2                in varchar2 default null,
    p_attribute3                in varchar2 default null,
    p_attribute4                in varchar2 default null,
    p_attribute5                in varchar2 default null,
    p_attribute6                in varchar2 default null,
    --
    p_table_bgcolor             in varchar2 default null,
    p_heading_bgcolor           in varchar2 default null,
    p_table_cattributes         in varchar2 default null,
    p_font_size                 in varchar2 default null,
    p_font_face                 in varchar2 default null,
    --
    p_region_table_cattributes  in varchar2 default null,
    --
    p_app_tab_before_tabs       in varchar2 default null,
    p_app_tab_current_tab       in varchar2 default null,
    p_app_tab_non_current_tab   in varchar2 default null,
    p_app_tab_after_tabs        in varchar2 default null,
    --
    p_error_page_template       in varchar2 default null,
    --
    p_default_button_position   in varchar2 default null,
    p_required_patch            in number   default null,
    p_reference_id              in number   default null,
    p_translate_this_template   in varchar2 default 'N',
    p_mobile_page_template      in varchar2 default 'N', /* obsolete */
    p_template_comment          in varchar2 default null,
    p_breadcrumb_def_reg_pos    in varchar2 default null,
    p_sidebar_def_reg_pos       in varchar2 default null,
    --
    p_grid_type                      in varchar2 default 'TABLE',
    p_grid_max_columns               in number   default null,
    p_grid_always_use_max_columns    in boolean  default null,
    p_grid_has_column_span           in boolean  default null,
    p_grid_emit_empty_leading_cols   in boolean  default null,
    p_grid_emit_empty_trail_cols     in boolean  default null,
    p_grid_template                  in varchar2 default null,
    p_grid_row_template              in varchar2 default null,
    p_grid_column_template           in varchar2 default null,
    p_grid_first_column_attributes   in varchar2 default null,
    p_grid_last_column_attributes    in varchar2 default null,
    p_grid_javascript_debug_code     in varchar2 default null,
    --
    p_has_edit_links                 in boolean  default true,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure create_page_tmpl_display_point (
    p_id                     in number   default null,
    p_flow_id                in number,
    p_page_template_id       in number,
    p_name                   in varchar2,
    p_placeholder            in varchar2,
    p_has_grid_support       in boolean,
    p_max_fixed_grid_columns in number   default null,
    p_component_comment      in varchar2 default null );

procedure create_button_templates (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_template_name                 in varchar2 default null,
    p_template                      in clob     default null,
    p_hot_template                  in clob     default null,
    p_translate_this_template       in varchar2 default 'N',
    p_template_comment              in varchar2 default null,
    p_reference_id                  in number   default null,
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure create_plug_template (
    p_id                          in number   default null,
    p_flow_id                     in number   default null,
    p_page_plug_template_name     in varchar2 default null,
    p_layout                      in varchar2 default 'TABLE',
    p_render_form_items_in_table  in varchar2 default null,  /* obsolete */
    p_template                    in varchar2 default null,
    p_template2                   in varchar2 default null,
    p_template3                   in varchar2 default null,
    p_sub_plug_header_template    in varchar2 default null,
    p_sub_plug_header_entry_templ in varchar2 default null,
    p_sub_plug_template           in varchar2 default null,
    p_plug_table_bgcolor          in varchar2 default null,
    p_plug_heading_bgcolor        in varchar2 default null,
    p_plug_font_size              in varchar2 default null,
    p_default_field_template_id   in number   default null,
    p_default_req_field_templ_id  in number   default null,
    p_default_label_alignment     in varchar2 default 'RIGHT',
    p_default_field_alignment     in varchar2 default 'LEFT',
    p_default_button_template_id  in number   default null,
    p_default_button_position     in varchar2 default null,
    p_reference_id                in number   default null,
    p_form_table_attr             in varchar2 default null,
    p_translate_this_template     in varchar2 default 'N',
    p_template_comment            in varchar2 default null,
    p_id_offset                   in number   default 0,
    p_target                      in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure set_plug_template_tab_attr (
    -- provides compatability with version 1.0.0
    p_id                            in number   default null,
    p_form_table_attr               in varchar2 default null,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_plug_tmpl_display_point (
    p_id                     in number   default null,
    p_flow_id                in number,
    p_plug_template_id       in number,
    p_name                   in varchar2,
    p_placeholder            in varchar2,
    p_has_grid_support       in boolean,
    p_max_fixed_grid_columns in number   default null,
    p_component_comment      in varchar2 default null );

procedure create_list_template (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_list_template_name            in varchar2 default null,
    p_list_template_current         in varchar2 default null,
    p_list_template_noncurrent      in varchar2 default null,
    p_list_template_before_rows     in varchar2 default null,
    p_list_template_after_rows      in varchar2 default null,
    p_between_items                 in varchar2 default null,
    p_before_sub_list               in varchar2 default null,
    p_after_sub_list                in varchar2 default null,
    p_between_sub_list_items        in varchar2 default null,
    p_sub_list_item_current         in clob     default null,
    p_sub_list_item_noncurrent      in clob     default null,
    p_item_templ_curr_w_child       in clob     default null,
    p_item_templ_noncurr_w_child    in clob     default null,
    p_sub_templ_curr_w_child        in clob     default null,
    p_sub_templ_noncurr_w_child     in clob     default null,
    -- apex 4.0 mike
    p_f_list_template_noncurrent    in clob     default null,
    p_f_list_template_current       in clob     default null,
    p_f_item_template_curr_w_child  in clob     default null,
    p_fi_template_noncurr_w_child   in clob     default null,
    --
    p_reference_id                  in number   default null,
    p_translate_this_template       in varchar2 default 'N',
    p_list_template_comment         in varchar2 default null,
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure create_row_template (
    --
    -- Create a report template which defines HTML
    -- template control over report rows
    --
    p_id                            in number default null,
    p_flow_id                       in number default null,
    p_row_template_name             in varchar2 default null,
    p_row_template_type             in varchar2 default null,
    p_before_column_heading         in varchar2 default null, -- new 3.1
    p_column_heading_template       in varchar2 default null,
    p_column_heading_sort_asc_temp  in varchar2 default null,
    p_column_heading_sort_desc_tem  in varchar2 default null,
    p_column_heading_sort_temp      in varchar2 default null,
    p_after_column_heading          in varchar2 default null, -- new 3.1
    p_row_template1                 in varchar2 default null,
    p_row_template_condition1       in varchar2 default null,
    p_row_template_display_cond1    in varchar2 default null,
    p_row_template2                 in varchar2 default null,
    p_row_template_condition2       in varchar2 default null,
    p_row_template_display_cond2    in varchar2 default null,
    p_row_template3                 in varchar2 default null,
    p_row_template_condition3       in varchar2 default null,
    p_row_template_display_cond3    in varchar2 default null,
    p_row_template4                 in varchar2 default null,
    p_row_template_condition4       in varchar2 default null,
    p_row_template_display_cond4    in varchar2 default null,
    p_row_template_before_rows      in varchar2 default null,
    p_row_template_after_rows       in varchar2 default null,
    p_row_template_before_first     in varchar2 default null,
    p_row_template_after_last       in varchar2 default null,
    p_row_template_table_attr       in varchar2 default null,
    p_reference_id                  in number   default null,
    --
    p_pagination_template           in varchar2 default null,
    p_next_page_template            in varchar2 default null,
    p_previous_page_template        in varchar2 default null,
    p_next_set_template             in varchar2 default null,
    p_previous_set_template         in varchar2 default null,
    --
    p_row_style_mouse_over          in varchar2 default null,
    p_row_style_mouse_out           in varchar2 default null,
    p_row_style_checked             in varchar2 default null,
    p_row_style_unchecked           in varchar2 default null,
    --
    p_translate_this_template       in varchar2 default 'N',
    p_row_template_comment          in varchar2 default null,
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME',
    --
    p_theme_id                      in number   default null,
    p_theme_class_id                in number   default null)
    ;

procedure create_row_template_patch (
    --
    -- This procedure extendes the create_row_template
    -- procedure.  It allows for compatability with version
    -- 1.0.0.
    --
    p_id                            in number,
    p_row_template_before_first     in varchar2 default null,
    p_row_template_after_last       in varchar2 default null,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_field_template (
    --
    -- Create a field template which defines the display
    -- of a form field, for example a form page item label.
    -- Page lables do not require the use of a field template,
    -- the use of field templates is optional.
    -- Field templates are defined at the flow level and shared
    -- to all pages within a flow.
    --
    p_id                            in number default null,
    p_flow_id                       in number default null,
    p_template_name                 in varchar2 default null,
    p_template_body1                in varchar2 default null,
    p_template_body2                in varchar2 default null,
    p_before_item                   in varchar2 default null,
    p_after_item                    in varchar2 default null,
    p_on_error_before_label         in varchar2 default null,
    p_on_error_after_label          in varchar2 default null,
    p_reference_id                  in number   default null,
    p_translate_this_template       in varchar2 default 'N',
    p_template_comment              in varchar2 default null,
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure create_calendar_template (
    -- creates a calendar template
    p_id                              in number   default null,
    p_flow_id                         in number   default null,
    p_cal_template_name               in varchar2 default null,
    p_translate_this_template         in varchar2 default 'N',
    p_month_title_format              in varchar2 default null,
    p_day_of_week_format              in varchar2 default null,
    p_month_open_format               in varchar2 default null,
    p_month_close_format              in varchar2 default null,
    p_day_title_format                in varchar2 default null,
    p_day_open_format                 in varchar2 default null,
    p_day_close_format                in varchar2 default null,
    p_today_open_format               in varchar2 default null,
    p_weekend_title_format            in varchar2 default null,
    p_weekend_open_format             in varchar2 default null,
    p_weekend_close_format            in varchar2 default null,
    p_nonday_title_format             in varchar2 default null,
    p_nonday_open_format              in varchar2 default null,
    p_nonday_close_format             in varchar2 default null,
    p_week_title_format               in varchar2 default null,
    p_week_open_format                in varchar2 default null,
    p_week_close_format               in varchar2 default null,
    p_daily_title_format              in varchar2 default null,
    p_daily_open_format               in varchar2 default null,
    p_daily_close_format              in varchar2 default null,
    p_weekly_title_format             in varchar2 default null,
    p_weekly_day_of_week_format       in varchar2 default null,
    p_weekly_month_open_format        in varchar2 default null,
    p_weekly_month_close_format       in varchar2 default null,
    p_weekly_day_title_format         in varchar2 default null,
    p_weekly_day_open_format          in varchar2 default null,
    p_weekly_day_close_format         in varchar2 default null,
    p_weekly_today_open_format        in varchar2 default null,
    p_weekly_weekend_title_format     in varchar2 default null,
    p_weekly_weekend_open_format      in varchar2 default null,
    p_weekly_weekend_close_format     in varchar2 default null,
    p_weekly_time_open_format         in varchar2 default null,
    p_weekly_time_close_format        in varchar2 default null,
    p_weekly_time_title_format        in varchar2 default null,
    p_weekly_hour_open_format         in varchar2 default null,
    p_weekly_hour_close_format        in varchar2 default null,
    p_daily_day_of_week_format        in varchar2 default null,
    p_daily_month_title_format        in varchar2 default null,
    p_daily_month_open_format         in varchar2 default null,
    p_daily_month_close_format        in varchar2 default null,
    p_daily_day_title_format          in varchar2 default null,
    p_daily_day_open_format           in varchar2 default null,
    p_daily_day_close_format          in varchar2 default null,
    p_daily_today_open_format         in varchar2 default null,
    p_daily_time_open_format          in varchar2 default null,
    p_daily_time_close_format         in varchar2 default null,
    p_daily_time_title_format         in varchar2 default null,
    p_daily_hour_open_format          in varchar2 default null,
    p_daily_hour_close_format         in varchar2 default null,
    p_cust_month_title_format         in varchar2 default null,
    p_cust_day_of_week_format         in varchar2 default null,
    p_cust_month_open_format          in varchar2 default null,
    p_cust_month_close_format         in varchar2 default null,
    p_cust_week_title_format          in varchar2 default null,
    p_cust_week_open_format           in varchar2 default null,
    p_cust_week_close_format          in varchar2 default null,
    p_cust_day_title_format           in varchar2 default null,
    p_cust_day_open_format            in varchar2 default null,
    p_cust_day_close_format           in varchar2 default null,
    p_cust_today_open_format          in varchar2 default null,
    p_cust_daily_title_format         in varchar2 default null,
    p_cust_daily_open_format          in varchar2 default null,
    p_cust_daily_close_format         in varchar2 default null,
    p_cust_nonday_title_format        in varchar2 default null,
    p_cust_nonday_open_format         in varchar2 default null,
    p_cust_nonday_close_format        in varchar2 default null,
    p_cust_weekend_title_format       in varchar2 default null,
    p_cust_weekend_open_format        in varchar2 default null,
    p_cust_weekend_close_format       in varchar2 default null,
    p_cust_hour_open_format           in varchar2 default null,
    p_cust_hour_close_format          in varchar2 default null,
    p_cust_time_title_format          in varchar2 default null,
    p_cust_time_open_format           in varchar2 default null,
    p_cust_time_close_format          in varchar2 default null,
    p_cust_wk_month_title_format      in varchar2 default null,
    p_cust_wk_day_of_week_format      in varchar2 default null,
    p_cust_wk_month_open_format       in varchar2 default null,
    p_cust_wk_month_close_format      in varchar2 default null,
    p_cust_wk_week_title_format       in varchar2 default null,
    p_cust_wk_week_open_format        in varchar2 default null,
    p_cust_wk_week_close_format       in varchar2 default null,
    p_cust_wk_day_title_format        in varchar2 default null,
    p_cust_wk_day_open_format         in varchar2 default null,
    p_cust_wk_day_close_format        in varchar2 default null,
    p_cust_wk_today_open_format       in varchar2 default null,
    p_cust_wk_weekend_title_format    in varchar2 default null,
    p_cust_wk_weekend_open_format     in varchar2 default null,
    p_cust_wk_weekend_close_format    in varchar2 default null,
    p_cust_month_day_height_pix       in varchar2 default null,
    p_cust_month_day_height_per       in varchar2 default null,
    p_cust_week_day_width_pix         in varchar2 default null,
    p_cust_week_day_width_per         in varchar2 default null,
    p_agenda_format                   in varchar2 default null,
    p_agenda_past_day_format          in varchar2 default null,
    p_agenda_today_day_format         in varchar2 default null,
    p_agenda_future_day_format        in varchar2 default null,
    p_agenda_past_entry_format        in varchar2 default null,
    p_agenda_today_entry_format       in varchar2 default null,
    p_agenda_future_entry_format      in varchar2 default null,
    p_month_data_format               in varchar2 default null,
    p_month_data_entry_format         in varchar2 default null,
    p_reference_id                    in number   default null,
    p_id_offset                       in number   default 0,
    p_target                          in varchar2 default 'PRIME',
    --
    p_theme_id                        in number   default null,
    p_theme_class_id                  in number   default null)
    ;

procedure create_report_layout (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_report_layout_name            in varchar2 default null,
    p_report_layout_type            in varchar2 default null,
    p_page_template                 in varchar2 default null,
    p_varchar2_table                in sys.dbms_sql.varchar2_table default empty_varchar2_table,
    p_xslfo_column_heading          in varchar2 default null,
    p_xslfo_column_template         in varchar2 default null,
    p_xslfo_column_template_width   in varchar2 default null,
    p_reference_id                  in number   default null,
    p_report_layout_comment         in varchar2 default null)
    ;

procedure create_shared_query (
    --
    -- For high fidelity printing with custom/uploaded templates
    --
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_query_text                in varchar2 default null,
    p_xml_structure             in varchar2 default null,
    p_report_layout_id          in number   default null,
    p_format                    in varchar2 default null,
    p_format_item               in varchar2 default null,
    p_output_file_name          in varchar2 default null,
    p_content_disposition       in varchar2 default null,
    p_document_header           in varchar2 default null,
    p_xml_items                 in varchar2 default null)
    ;

procedure create_shared_query_stmnt (
    --
    -- For high fidelity printing with custom/uploaded templates
    --
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_shared_query_id           in varchar2 default null,
    p_sql_statement             in varchar2 default null)
    ;

--
-- R E G I O N S  (PLUGS)
--

procedure create_page_plug (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_plug_name                     in varchar2 default null,
    p_region_name                   in varchar2 default null,
    p_parent_plug_id                in number   default null,
    p_plug_template                 in number   default null,
    p_plug_display_sequence         in varchar2 default null,
    p_include_in_reg_disp_sel_yn    in varchar2 default null, --mike
    p_region_css_classes            in varchar2 default null,
    p_region_attributes             in varchar2 default null,
    p_report_attributes             in varchar2 default null,
    p_escape_on_http_output         in varchar2 default 'N',
    p_plug_new_grid                 in boolean  default false,
    p_plug_new_grid_row             in boolean  default true,
    p_plug_new_grid_column          in boolean  default true,
    p_plug_grid_column_span         in number   default null,
    p_plug_display_column           in varchar2 default null,
    p_plug_display_point            in varchar2 default null,
    p_plug_item_display_point       in varchar2 default 'ABOVE',
    p_plug_source                   in varchar2 default null,
    p_plug_source_type              in varchar2 default null,
    p_plug_display_error_message    in varchar2 default null, /* obsolete */
    p_plug_create_link_text         in varchar2 default null,
    p_plug_create_link_target       in varchar2 default null,
    p_plug_create_image             in varchar2 default null,
    p_plug_create_image_attributes  in varchar2 default null,
    p_plug_edit_link_text           in varchar2 default null,
    p_plug_edit_link_target         in varchar2 default null,
    p_plug_edit_image               in varchar2 default null,
    p_plug_edit_image_attributes    in varchar2 default null,
    p_plug_expand_link_text         in varchar2 default null,
    p_plug_expand_link_target       in varchar2 default null,
    p_plug_expand_image             in varchar2 default null,
    p_plug_expand_image_attributes  in varchar2 default null,
    p_plug_close_link_text          in varchar2 default null,
    p_plug_close_link_target        in varchar2 default null,
    p_plug_close_image              in varchar2 default null,
    p_plug_close_image_attributes   in varchar2 default null,
    p_plug_required_role            in varchar2 default null,
    p_plug_display_when_condition   in varchar2 default null,
    p_plug_display_when_cond2       in varchar2 default null,
    p_plug_display_condition_type   in varchar2 default null,
    --
    p_plug_read_only_when_type      in varchar2 default null,
    p_plug_read_only_when           in varchar2 default null,
    p_plug_read_only_when2          in varchar2 default null,
    --
    p_plug_header                   in varchar2 default null,
    p_plug_footer                   in varchar2 default null,
    p_plug_override_reg_pos         in varchar2 default null,
    p_plug_customized               in varchar2 default null,
    p_plug_customized_name          in varchar2 default null,
    p_translate_title               in varchar2 default null,
    p_ajax_enabled                  in varchar2 default null,
    p_ajax_items_to_submit          in varchar2 default null,
    p_rest_enabled                  in varchar2 default null,
    --
    p_region_image                  in varchar2 default null, -- mike 4.0 create_page_plug
    p_region_image_attr             in varchar2 default null,
    --
    p_plug_query_row_template       in number   default null,
    p_plug_query_max_columns        in number   default null,
    p_plug_query_headings           in varchar2 default null,
    p_plug_query_headings_type      in varchar2 default 'COLON_DELMITED_LIST',
    p_plug_query_num_rows           in number   default null,
    p_plug_query_hit_highlighting   in varchar2 default null,
    p_plug_query_options            in varchar2 default null,
    p_plug_query_format_out         in varchar2 default null,
    p_plug_query_show_nulls_as      in varchar2 default null,
    p_plug_query_col_allignments    in varchar2 default null,
    p_plug_query_break_cols         in varchar2 default null,
    p_plug_query_sum_cols           in varchar2 default null,
    p_plug_query_number_formats     in varchar2 default null,
    p_plug_query_table_border       in varchar2 default null,
    p_plug_column_width             in varchar2 default null,
    p_plug_query_no_data_found      in varchar2 default null,
    p_plug_query_more_data          in varchar2 default null,
    p_plug_ignore_pagination        in number   default null,
    p_plug_query_num_rows_item      in varchar2 default null,
    p_plug_query_num_rows_type      in varchar2 default null,
    p_plug_query_row_count_max      in number   default 500,
    p_plug_query_asc_image          in varchar2 default null,
    p_plug_query_asc_image_attr     in varchar2 default null,
    p_plug_query_desc_image         in varchar2 default null,
    p_plug_query_desc_image_attr    in varchar2 default null,
    --
    p_plug_query_exp_filename       in varchar2 default null,
    p_plug_query_exp_separator      in varchar2 default null,
    p_plug_query_exp_enclosed_by    in varchar2 default null,
    p_plug_query_strip_html         in varchar2 default null,
    p_plug_query_parse_override     in varchar2 default null,
    --
    p_pagination_display_position   in varchar2 default null,
    p_report_total_text_format      in varchar2 default null,
    p_break_column_text_format      in varchar2 default null,
    p_break_before_row              in varchar2 default null,
    p_break_generic_column          in varchar2 default null,
    p_break_after_row               in varchar2 default null,
    p_break_type_flag               in varchar2 default null,
    p_break_repeat_heading_format   in varchar2 default null,
    p_csv_output                    in varchar2 default null,
    p_csv_output_link_text          in varchar2 default null,
    p_print_url                     in varchar2 default null,
    p_print_url_label               in varchar2 default null,
    --
    p_prn_output                    in varchar2 default null,
    p_prn_print_server_overwrite    in varchar2 default null,
    p_prn_template_id               in number   default null,
    p_prn_format                    in varchar2 default null,
    p_prn_format_item               in varchar2 default null,
    p_prn_output_show_link          in varchar2 default null,
    p_prn_output_link_text          in varchar2 default null,
    p_prn_output_file_name          in varchar2 default null,
    p_prn_content_disposition       in varchar2 default null,
    p_prn_document_header           in varchar2 default null,
    p_prn_units                     in varchar2 default null,
    p_prn_paper_size                in varchar2 default null,
    p_prn_width_units               in varchar2 default null,
    p_prn_width                     in number   default null,
    p_prn_height                    in number   default null,
    p_prn_orientation               in varchar2 default null,
    p_prn_page_header               in varchar2 default null,
    p_prn_page_header_font_color    in varchar2 default null,
    p_prn_page_header_font_family   in varchar2 default null,
    p_prn_page_header_font_weight   in varchar2 default null,
    p_prn_page_header_font_size     in varchar2 default null,
    p_prn_page_footer               in varchar2 default null,
    p_prn_page_footer_font_color    in varchar2 default null,
    p_prn_page_footer_font_family   in varchar2 default null,
    p_prn_page_footer_font_weight   in varchar2 default null,
    p_prn_page_footer_font_size     in varchar2 default null,
    p_prn_header_bg_color           in varchar2 default null,
    p_prn_header_font_color         in varchar2 default null,
    p_prn_header_font_family        in varchar2 default null,
    p_prn_header_font_weight        in varchar2 default null,
    p_prn_header_font_size          in varchar2 default null,
    p_prn_body_bg_color             in varchar2 default null,
    p_prn_body_font_color           in varchar2 default null,
    p_prn_body_font_family          in varchar2 default null,
    p_prn_body_font_weight          in varchar2 default null,
    p_prn_body_font_size            in varchar2 default null,
    p_prn_border_width              in number   default null,
    --
    p_shared_query_id               in number   default null,
    --
    p_plug_url_text_begin           in varchar2 default null,
    p_plug_url_text_end             in varchar2 default null,
    p_java_entry_point              in varchar2 default null,
    --
    p_plug_caching                  in varchar2 default null,
    p_plug_caching_session_state    in varchar2 default null,
    p_plug_caching_max_age_in_sec   in varchar2 default null,
    p_plug_cache_when_cond_type     in varchar2 default null,
    p_plug_cache_when_condition_e1  in varchar2 default null,
    p_plug_cache_when_condition_e2  in varchar2 default null,
    --
    p_plug_chart_font_size          in varchar2 default null,
    p_plug_chart_max_rows           in varchar2 default null,
    p_plug_chart_num_mask           in varchar2 default null,
    p_plug_chart_scale              in varchar2 default null,
    p_plug_chart_axis               in varchar2 default null,
    p_plug_chart_show_summary       in varchar2 default null,
    --
    p_menu_template_id              in number   default null,
    p_list_template_id              in number   default null,
    --
    p_required_patch                in varchar2 default null,
    p_plug_comment                  in varchar2 default null,
    --
    p_use_custom_item_layout        in varchar2 default null,
    p_custom_item_layout            in varchar2 default null,
    --
    p_prn_page_header_alignment     in varchar2 default null,
    p_prn_page_footer_alignment     in varchar2 default null,
    p_prn_border_color              in varchar2 default null,
    p_sort_null                     in varchar2 default null,
    --
    p_attribute_01                  in varchar2 default null,
    p_attribute_02                  in varchar2 default null,
    p_attribute_03                  in varchar2 default null,
    p_attribute_04                  in varchar2 default null,
    p_attribute_05                  in varchar2 default null,
    p_attribute_06                  in varchar2 default null,
    p_attribute_07                  in varchar2 default null,
    p_attribute_08                  in varchar2 default null,
    p_attribute_09                  in varchar2 default null,
    p_attribute_10                  in varchar2 default null,
    p_attribute_11                  in varchar2 default null,
    p_attribute_12                  in varchar2 default null,
    p_attribute_13                  in varchar2 default null,
    p_attribute_14                  in varchar2 default null,
    p_attribute_15                  in varchar2 default null,
    p_attribute_16                  in varchar2 default null,
    p_attribute_17                  in varchar2 default null,
    p_attribute_18                  in varchar2 default null,
    p_attribute_19                  in varchar2 default null,
    p_attribute_20                  in varchar2 default null,
    p_attribute_21                  in varchar2 default null,
    p_attribute_22                  in varchar2 default null,
    p_attribute_23                  in varchar2 default null,
    p_attribute_24                  in varchar2 default null,
    p_attribute_25                  in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure set_region_column_width (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_plug_column_width             in varchar2 default null)
    ;

procedure create_report_region (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_name                          in varchar2 default null,
    p_region_name                   in varchar2 default null,
    p_parent_plug_id                in number   default null,
    p_template                      in number   default null,
    p_display_sequence              in varchar2 default null,
    p_include_in_reg_disp_sel_yn    in varchar2 default null, --mike
    p_region_css_classes            in varchar2 default null,
    p_region_attributes             in varchar2 default null,
    p_report_attributes             in varchar2 default null,
    p_new_grid                      in boolean  default false,
    p_new_grid_row                  in boolean  default true,
    p_new_grid_column               in boolean  default true,
    p_grid_column_span              in number   default null,
    p_display_column                in varchar2 default null,
    p_display_point                 in varchar2 default null,
    p_item_display_point            in varchar2 default 'ABOVE',
    p_source                        in varchar2 default null,
    p_source_type                   in varchar2 default null,
    p_display_error_message         in varchar2 default null, /* obsolete */
    p_required_role                 in varchar2 default null,
    p_display_when_condition        in varchar2 default null,
    p_display_when_cond2            in varchar2 default null,
    p_display_condition_type        in varchar2 default null,
    --
    p_read_only_when_type           in varchar2 default null,
    p_read_only_when                in varchar2 default null,
    p_read_only_when2               in varchar2 default null,
    --
    p_header                        in varchar2 default null,
    p_footer                        in varchar2 default null,
    p_override_reg_pos              in varchar2 default null,
    p_customized                    in varchar2 default null,
    p_customized_name               in varchar2 default null,
    p_translate_title               in varchar2 default null,
    p_ajax_enabled                  in varchar2 default null,
    p_ajax_items_to_submit          in varchar2 default null,
    p_rest_enabled                  in varchar2 default null,
    p_region_image                  in varchar2 default null, -- mike 4.0 create_report_region
    p_region_image_attr             in varchar2 default null,
    --
    p_query_row_template            in number   default null,
    p_plug_query_max_columns        in number   default null,
    p_query_headings                in varchar2 default null,
    p_query_headings_type           in varchar2 default 'COLON_DELMITED_LIST',
    p_query_num_rows                in number   default null,
    p_query_options                 in varchar2 default null,
    p_query_show_nulls_as           in varchar2 default null,
    p_query_break_cols              in varchar2 default null,
    p_query_no_data_found           in varchar2 default null,
    p_query_more_data               in varchar2 default null,
    p_ignore_pagination             in number   default null,
    p_query_num_rows_item           in varchar2 default null,
    p_query_num_rows_type           in varchar2 default null,
    p_query_row_count_max           in number   default 500,
    --
    p_pagination_display_position   in varchar2 default null,
    p_report_total_text_format      in varchar2 default null,
    p_break_column_text_format      in varchar2 default null,
    p_break_before_row              in varchar2 default null,
    p_break_generic_column          in varchar2 default null,
    p_break_after_row               in varchar2 default null,
    p_break_type_flag               in varchar2 default null,
    p_break_repeat_heading_format   in varchar2 default null,
    p_csv_output                    in varchar2 default null,
    p_csv_output_link_text          in varchar2 default null,
    p_print_url                     in varchar2 default null,
    p_print_url_label               in varchar2 default null,
    --
    p_prn_output                    in varchar2 default null,
    p_prn_print_server_overwrite    in varchar2 default null,
    p_prn_template_id               in number   default null,
    p_prn_format                    in varchar2 default null,
    p_prn_format_item               in varchar2 default null,
    p_prn_output_show_link          in varchar2 default null,
    p_prn_output_link_text          in varchar2 default null,
    p_prn_output_file_name          in varchar2 default null,
    p_prn_content_disposition       in varchar2 default null,
    p_prn_document_header           in varchar2 default null,
    p_prn_units                     in varchar2 default null,
    p_prn_paper_size                in varchar2 default null,
    p_prn_width_units               in varchar2 default null,
    p_prn_width                     in number   default null,
    p_prn_height                    in number   default null,
    p_prn_orientation               in varchar2 default null,
    p_prn_page_header               in varchar2 default null,
    p_prn_page_header_font_color    in varchar2 default null,
    p_prn_page_header_font_family   in varchar2 default null,
    p_prn_page_header_font_weight   in varchar2 default null,
    p_prn_page_header_font_size     in varchar2 default null,
    p_prn_page_footer               in varchar2 default null,
    p_prn_page_footer_font_color    in varchar2 default null,
    p_prn_page_footer_font_family   in varchar2 default null,
    p_prn_page_footer_font_weight   in varchar2 default null,
    p_prn_page_footer_font_size     in varchar2 default null,
    p_prn_header_bg_color           in varchar2 default null,
    p_prn_header_font_color         in varchar2 default null,
    p_prn_header_font_family        in varchar2 default null,
    p_prn_header_font_weight        in varchar2 default null,
    p_prn_header_font_size          in varchar2 default null,
    p_prn_body_bg_color             in varchar2 default null,
    p_prn_body_font_color           in varchar2 default null,
    p_prn_body_font_family          in varchar2 default null,
    p_prn_body_font_weight          in varchar2 default null,
    p_prn_body_font_size            in varchar2 default null,
    p_prn_border_width              in number   default null,
    --
    p_shared_query_id               in number   default null,
    --
    p_query_asc_image               in varchar2 default 'arrow_down_gray_dark.gif',
    p_query_asc_image_attr          in varchar2 default 'width="13" height="12"',
    p_query_desc_image              in varchar2 default 'arrow_up_gray_dark.gif',
    p_query_desc_image_attr         in varchar2 default 'width="13" height="12"',
    --
    p_plug_query_exp_filename       in varchar2 default null,
    p_plug_query_exp_separator      in varchar2 default null,
    p_plug_query_exp_enclosed_by    in varchar2 default null,
    p_plug_query_strip_html         in varchar2 default null,
    p_plug_query_parse_override     in varchar2 default null,
    --
    p_required_patch                in varchar2 default null,
    p_comment                       in varchar2 default null,
    --
    p_plug_column_width             in varchar2 default null,
    --
    p_prn_page_header_alignment     in varchar2 default null,
    p_prn_page_footer_alignment     in varchar2 default null,
    p_prn_border_color              in varchar2 default null,
    p_sort_null                     in varchar2 default null,
    --
    p_plug_caching                  in varchar2 default null,
    p_plug_caching_session_state    in varchar2 default null,
    p_plug_caching_max_age_in_sec   in varchar2 default null,
    p_plug_cache_when_cond_type     in varchar2 default null,
    p_plug_cache_when_condition_e1  in varchar2 default null,
    p_plug_cache_when_condition_e2  in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_report_columns(
    p_id                             in number default null,
    p_region_id                      in number default null,
    p_flow_id                        in number default null,
    p_query_column_id                in number default null,
    p_form_element_id                in number default null,
    p_column_alias                   in varchar2 default null,
    p_column_display_sequence        in varchar2 default null,
    p_column_heading                 in varchar2 default null,
    p_use_as_row_header              in varchar2 default null,
    p_column_format                  in varchar2 default null,
    p_column_html_expression         in varchar2 default null,
    p_column_css_class               in varchar2 default null,
    p_column_css_style               in varchar2 default null,
    p_column_hit_highlight           in varchar2 default null,
    p_column_link                    in varchar2 default null,
    p_column_linktext                in varchar2 default null,
    p_column_link_attr               in varchar2 default null,
    p_column_alignment               in varchar2 default 'LEFT',
    p_heading_alignment              in varchar2 default 'CENTER',
    p_default_sort_column_sequence   in varchar2 default null,
    p_default_sort_dir               in varchar2 default null,
    p_disable_sort_column            in varchar2 default 'Y',
    p_sum_column                     in varchar2 default 'N',
    p_hidden_column                  in varchar2 default 'N',
    p_display_when_cond_type         in varchar2 default null,
    p_display_when_condition         in varchar2 default null,
    p_display_when_condition2        in varchar2 default null,
    p_report_column_required_role    in varchar2 default null,
    p_security_group_id              in varchar2 default null,
    p_last_updated_by                in varchar2 default null,
    p_last_updated_on                in varchar2 default null,
    p_display_as                     in varchar2 default 'ESCAPE_SC',
    p_named_lov                      in varchar2 default null,
    p_inline_lov                     in varchar2 default null,
    p_lov_show_nulls                 in varchar2 default null,
    p_lov_null_text                  in varchar2 default null,
    p_lov_null_value                 in varchar2 default null,
    p_report_column_width            in varchar2 default null,
    p_column_width                   in varchar2 default null,
    p_column_height                  in varchar2 default null,
    p_css_classes                    in varchar2 default null,
    p_cattributes                    in varchar2 default null,
    p_cattributes_element            in varchar2 default null,
    p_column_field_template          in number   default null,
    p_is_required                    in boolean  default false,
    p_standard_validations           in varchar2 default null,
    --
    p_attribute_01                   in varchar2 default null,
    p_attribute_02                   in varchar2 default null,
    p_attribute_03                   in varchar2 default null,
    p_attribute_04                   in varchar2 default null,
    p_attribute_05                   in varchar2 default null,
    p_attribute_06                   in varchar2 default null,
    p_attribute_07                   in varchar2 default null,
    p_attribute_08                   in varchar2 default null,
    p_attribute_09                   in varchar2 default null,
    p_attribute_10                   in varchar2 default null,
    p_attribute_11                   in varchar2 default null,
    p_attribute_12                   in varchar2 default null,
    p_attribute_13                   in varchar2 default null,
    p_attribute_14                   in varchar2 default null,
    p_attribute_15                   in varchar2 default null,
    --
    p_pk_col_source_type             in varchar2 default null,
    p_pk_col_source                  in varchar2 default null,
    p_derived_column                 in varchar2 default null,
    --
    p_column_default                 in varchar2 default null,
    p_column_default_type            in varchar2 default null,
    p_lov_display_extra              in varchar2 default null,
    --
    p_include_in_export             in varchar2 default null,
    p_print_col_width               in varchar2 default null,
    p_print_col_align               in varchar2 default null,
    --
    p_ref_schema                     in varchar2 default null,
    p_ref_table_name                 in varchar2 default null,
    p_ref_column_name                in varchar2 default null,
    --
    p_column_link_checksum_type      in varchar2 default null,
    --
    p_column_comment                 in varchar2 default null,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_query_definition(
    p_id                               in number default null,
    p_region_id                        in number default null,
    p_flow_id                          in number default null,
    p_reference_id                     in number default null)
    ;

procedure create_query_object(
    p_id                               in number default null,
    p_query_id                         in number default null,
    p_object_owner                     in varchar2 default null,
    p_object_name                      in varchar2 default null,
    p_object_alias                     in varchar2 default null)
    ;

procedure create_query_column(
    p_id                               in number default null,
    p_query_id                         in number default null,
    p_query_object_id                  in number default null,
    p_column_number                    in number default null,
    p_column_alias                     in varchar2 default null,
    p_column_sql_expression            in varchar2 default null,
    p_column_group_by_sequence         in varchar2 default null)
    ;

procedure create_query_condition(
    p_id                               in number default null,
    p_query_id                         in number default null,
    p_condition                        in varchar2 default null,
    p_cond_column                      in varchar2 default null,
    p_cond_id1                         in number default null,
    p_cond_id2                         in number default null,
    p_cond_root                        in varchar2 default null,
    p_operator                         in varchar2 default null)
    ;

procedure set_plug_source (
    p_id                            in number   default null,
    p_plug_source                   in varchar2 default null)
    ;

procedure set_plug_query_heading (
    p_id                            in number   default null,
    p_plug_query_heading            in varchar2 default null)
    ;

procedure create_chart_series_attr (
    p_id                            in number default null,
    p_region_id                     in number default null,
    p_series_id                     in number default null,
    p_a001                          in varchar2 default null,
    p_a002                          in varchar2 default null,
    p_a003                          in varchar2 default null,
    p_a004                          in varchar2 default null,
    p_a005                          in varchar2 default null,
    p_a006                          in varchar2 default null,
    p_a007                          in varchar2 default null,
    p_a008                          in varchar2 default null,
    p_a009                          in varchar2 default null,
    p_a010                          in varchar2 default null,
    p_a011                          in varchar2 default null,
    p_a012                          in varchar2 default null,
    p_a013                          in varchar2 default null,
    p_a014                          in varchar2 default null,
    p_a015                          in varchar2 default null,
    p_a016                          in varchar2 default null,
    p_a017                          in varchar2 default null,
    p_a018                          in varchar2 default null,
    p_a019                          in varchar2 default null,
    p_a020                          in varchar2 default null,
    p_a021                          in varchar2 default null,
    p_a022                          in varchar2 default null,
    p_a023                          in varchar2 default null,
    p_a024                          in varchar2 default null,
    p_a025                          in varchar2 default null,
    p_a026                          in varchar2 default null,
    p_a027                          in varchar2 default null,
    p_a028                          in varchar2 default null,
    p_a029                          in varchar2 default null,
    p_a030                          in varchar2 default null,
    p_a031                          in varchar2 default null,
    p_a032                          in varchar2 default null,
    p_a033                          in varchar2 default null,
    p_a034                          in varchar2 default null,
    p_a035                          in varchar2 default null,
    p_a036                          in varchar2 default null,
    p_a037                          in varchar2 default null,
    p_a038                          in varchar2 default null,
    p_a039                          in varchar2 default null,
    p_a040                          in varchar2 default null,
    p_a041                          in varchar2 default null,
    p_a042                          in varchar2 default null,
    p_a043                          in varchar2 default null,
    p_a044                          in varchar2 default null,
    p_a045                          in varchar2 default null,
    p_a046                          in varchar2 default null,
    p_a047                          in varchar2 default null,
    p_a048                          in varchar2 default null,
    p_a049                          in varchar2 default null,
    p_a050                          in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_generic_attr (
    p_id                            in number   default null,
    p_region_id                     in number   default null,
    p_attribute_id                  in number   default null,
    p_attribute_value               in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME')
    ;

procedure create_region_rpt_cols (
    --
    -- Updatable report columns define attributes of regions
    -- of type UPDATABLE_SQL_QUERY.
    --
    p_id                            in number,
    p_FLOW_ID                       in number,
    p_PLUG_ID                       in number,
    p_COLUMN_SEQUENCE               in number,
    p_QUERY_COLUMN_NAME             in varchar2,
    p_DISPLAY_AS                    in varchar2 default null,
    p_NAMED_LOV                     in number   default null,
    p_INLINE_LOV                    in varchar2 default null,
    p_LOV_SHOW_NULLS                in varchar2 default null,
    p_LOV_NULL_TEXT                 in varchar2 default null,
    p_LOV_NULL_VALUE                in varchar2 default null,
    p_COLUMN_WIDTH                  in number   default null,
    p_COLUMN_HEIGHT                 in number   default null,
    p_CATTRIBUTES                   in varchar2 default null,
    p_COLUMN_COMMENT                in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


procedure create_calendar (
    --
    -- create calendar and easy_calendar
    --
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_plug_name                     in varchar2 default null,
    p_region_name                   in varchar2 default null,
    p_parent_plug_id                in number   default null,
    p_plug_template                 in number   default null,
    p_plug_display_sequence         in varchar2 default null,
    p_include_in_reg_disp_sel_yn    in varchar2 default null, --mike
    p_region_css_classes            in varchar2 default null,
    p_region_attributes             in varchar2 default null,
    p_report_attributes             in varchar2 default null,
    p_plug_new_grid                 in boolean  default false,
    p_plug_new_grid_row             in boolean  default true,
    p_plug_new_grid_column          in boolean  default true,
    p_plug_grid_column_span         in number   default null,
    p_plug_display_column           in varchar2 default null,
    p_plug_display_point            in varchar2 default null,
    p_plug_item_display_point       in varchar2 default 'ABOVE',
    p_plug_source                   in varchar2 default null,
    p_plug_source_type              in varchar2 default null,
    p_plug_display_error_message    in varchar2 default null, /* obsolete */
    p_plug_required_role            in varchar2 default null,
    p_plug_display_when_condition   in varchar2 default null,
    p_plug_display_when_cond2       in varchar2 default null,
    p_plug_display_condition_type   in varchar2 default null,
    --
    p_plug_read_only_when_type      in varchar2 default null,
    p_plug_read_only_when           in varchar2 default null,
    p_plug_read_only_when2          in varchar2 default null,
    --
    p_plug_header                   in varchar2 default null,
    p_plug_footer                   in varchar2 default null,
    p_plug_override_reg_pos         in varchar2 default null,
    p_plug_customized               in varchar2 default null,
    p_plug_customized_name          in varchar2 default null,
    p_translate_title               in varchar2 default null,
    p_rest_enabled                  in varchar2 default null,
    --
    p_plug_caching                  in varchar2 default null,
    p_plug_caching_session_state    in varchar2 default null,
    p_plug_caching_max_age_in_sec   in varchar2 default null,
    p_plug_cache_when_cond_type     in varchar2 default null,
    p_plug_cache_when_condition_e1  in varchar2 default null,
    p_plug_cache_when_condition_e2  in varchar2 default null,
    --
    p_required_patch                in varchar2 default null,
    p_plug_comment                  in varchar2 default null,
    --
    p_cal_id                        in number          default null,
    p_start_date                    in varchar2        default null,
    p_end_date                      in varchar2        default null,
    p_begin_at_start_of_interval    in varchar2        default 'Y',
    p_date_item                     in varchar2        default null,
    p_end_date_item                 in varchar2        default null,
    p_display_as                    in varchar2        default null,
    p_display_item                  in varchar2        default null,
    p_display_type                  in varchar2        default null,
    p_item_format                   in varchar2        default null,
    p_easy_sql_owner                in varchar2        default null,
    p_easy_sql_table                in varchar2        default null,
    p_date_column                   in varchar2        default null,
    p_end_date_column               in varchar2        default null,
    p_display_column                in varchar2        default null,
    p_template_id                   in number          default null,
    p_start_of_week                 in number          default null,
    p_day_link                      in varchar2        default null,
    p_item_link                     in varchar2        default null,
    p_start_time                    in varchar2        default null,
    p_end_time                      in varchar2        default null,
    p_time_format                   in varchar2        default null,
    p_week_start_day                in varchar2        default null,
    p_week_end_day                  in varchar2        default null,
    p_date_type_column              in varchar2        default null,
    p_calendar_type                 in varchar2        default null,
    p_include_custom_cal            in varchar2        default null,
    p_custom_cal_days               in number          default 3,
    p_primary_key_column            in varchar2        default null,
    p_drag_drop_required_role       in varchar2        default null,
    p_drag_drop_process_id          in number          default null,
    p_item_link_primary_key_item    in varchar2        default null,
    p_item_link_date_item           in varchar2        default null,
    p_item_link_open_in             in varchar2        default null,
    p_include_time_with_date        in varchar2        default 'N',
    p_data_background_color         in varchar2        default null,
    p_data_text_color               in varchar2        default null,
    p_agenda_cal_days_type          in varchar2        default 'MONTH',
    p_agenda_cal_days               in number          default 30,
    p_calendar_comments             in varchar2        default null,
    --
    p_plug_column_width             in varchar2 default null,
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME');
--
-- B U G
--

procedure create_bug (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_page_id                   in number   default null,
    p_bug_description           in varchar2 default null,
    p_bug_priority              in varchar2 default null,
    p_bug_status_code           in varchar2 default null,
    p_bug_reported_by           in varchar2 default null,
    p_bug_reported_on           in date     default null,
    p_bug_assigned_to           in varchar2 default null,
    p_bug_assigned_on           in date     default null,
    p_bug_fix_in_version        in varchar2 default null,
    p_bug_projected_close_date  in date     default null,
    p_bug_close_date            in date     default null,
    p_bug_affected_files_or_mod in varchar2 default null,
    p_bug_text                  in varchar2 default null,
    p_bug_how_to_reproduce      in varchar2 default null,
    p_bug_workaround            in varchar2 default null,
    p_bug_additional_text       in varchar2 default null,
    p_bug_work_log              in varchar2 default null,
    p_bug_last_updated_by       in varchar2 default null,
    p_bug_last_updated_on       in date     default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;



--
-- L I S T S
--



procedure create_list (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_list_type                 in varchar2 default 'STATIC',
    p_list_query                in varchar2 default null,
    p_list_status               in varchar2 default null,
    p_list_displayed            in varchar2 default null,
    p_display_row_template_id   in number   default null, /* obsolete */
    p_required_patch            in number   default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


procedure create_list_item (
    p_id                           in number   default null,
    p_list_id                      in number   default null,
    p_list_item_type               in varchar2 default null,
    p_list_item_status             in varchar2 default null,
    p_item_displayed               in varchar2 default null,
    p_list_item_display_sequence   in number   default null,
    p_list_item_link_text          in varchar2 default null,
    p_list_item_link_target        in varchar2 default null,
    p_list_item_icon               in varchar2 default null,
    p_list_item_icon_attributes    in varchar2 default null,
    p_list_item_icon_alt_attribute in varchar2 default null,
    p_list_item_disp_cond_type     in varchar2 default null,
    p_list_item_disp_condition     in varchar2 default null,
    p_list_item_disp_cond_type2    in varchar2 default null,
    p_list_item_disp_condition2    in varchar2 default null,
    --
    p_list_item_icon_exp           in varchar2 default null,
    p_list_item_icon_exp_attr      in varchar2 default null,
    p_list_item_parent_id          in number default null,
    p_parent_list_item_id          in number default null,
    p_sub_item_count               in number default null,
    --
    p_list_countclicks_y_n         in varchar2 default null,
    p_list_countclicks_cat         in varchar2 default null,
    p_list_text_01                 in varchar2 default null,
    p_list_text_02                 in varchar2 default null,
    p_list_text_03                 in varchar2 default null,
    p_list_text_04                 in varchar2 default null,
    p_list_text_05                 in varchar2 default null,
    p_list_text_06                 in varchar2 default null,
    p_list_text_07                 in varchar2 default null,
    p_list_text_08                 in varchar2 default null,
    p_list_text_09                 in varchar2 default null,
    p_list_text_10                 in varchar2 default null,
    p_translate_list_text_y_n      in varchar2 default null,
    p_list_item_owner              in varchar2 default null,
    p_list_item_current_for_pages  in varchar2 default null,
    p_list_item_current_type       in varchar2 default null,
    p_security_scheme              in varchar2 default null,
    p_required_patch               in number   default null,
    --
    p_id_offset                    in number   default 0,
    p_target                       in varchar2 default 'PRIME')
    ;


procedure set_list_item_sequence (
    p_id                         in number   default null,
    p_item_sequence              in number   default null)
    ;

procedure set_list_item_link_text (
    p_id                         in number   default null,
    p_link_text                  in varchar2 default null)
    ;
procedure set_list_item_link_target (
    p_id                         in number   default null,
    p_link_target                in varchar2 default null)
    ;

--------------------------
-- C O M M E N T S
--
procedure create_app_comments (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_pages                      in varchar2 default null,
    p_app_comment                in varchar2 default null,
    p_comment_owner              in varchar2 default null,
    p_comment_flag               in varchar2 default null,
    p_app_version                in varchar2 default null,
    --
    p_created_by                 in varchar2 default null,
    p_created_on                 in varchar2 default null,
    p_updated_by                 in varchar2 default null,
    p_updated_on                 in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


--------------------------
-- T R A N S L A T I O N S
--

procedure create_dynamic_translation (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_language                   in varchar2 default null,
    p_from                       in varchar2 default null,
    p_to                         in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_message (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_name                       in varchar2 default null,
    p_message_language           in varchar2 default null,
    p_message_text               in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


procedure create_language_map (
    p_id                            in number   default null,
    p_primary_language_flow_id      in number   default null,
    p_translation_flow_id           in number   default null,
    p_translation_flow_language_cd  in varchar2 default null,
    p_translation_image_directory   in varchar2 default null,
    p_translation_comments          in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_translation (
    p_id                            in number default null,
    p_translated_flow_id            in number default null,
    p_flow_id                       in number default null,
    p_page_id                       in number default null,
    p_translate_column_id           in number default null,
    p_translate_to_id               in number default null,
    p_translate_from_id             in number default null,
    p_translate_to_lang_code        in varchar2 default null,
    p_translation_specific_to_item  in varchar2 default 'NO',
    p_translate_to_text             in varchar2 default null,
    p_translate_from_text           in varchar2 default null,
    p_template_translatable         in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure remove_translation (
    p_translated_flow_id            in number default null)
    ;

procedure remove_dyanamic_translation (
    p_flow_id            in number default null,
    p_language           in varchar2 default null)
    ;


procedure create_image (
    p_id                in number default null,
    p_flow_id           in number default null,
    p_image_name        in varchar2 default null,
    p_national_language in varchar2 default null,
    p_height            in number   default null,
    p_width             in number   default null,
    p_notes             in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_or_remove_file (
    p_name                      in varchar2,
    p_varchar2_table            in sys.dbms_sql.varchar2_table default empty_varchar2_table,
    p_mimetype                  in varchar2 default null,
    p_location                  in varchar2 default 'WORKSPACE',
    p_flow_id                   in number   default null,
    p_nlang                     in varchar2 default null,
    p_height                    in number   default null,
    p_width                     in number   default null,
    p_notes                     in varchar2 default '',
    p_mode                      in varchar2 default 'CREATE_OR_REPLACE',
    p_type                      in varchar2 default 'STATIC')
    ;

procedure create_shortcut (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_shortcut_name              in varchar2 default null,
    p_shortcut_consideration_seq in number   default null,
    p_shortcut_type              in varchar2 default null,
    p_shortcut_condition_type1   in varchar2 default null,
    p_shortcut_condition1        in varchar2 default null,
    p_shortcut_condition_type2   in varchar2 default null,
    p_shortcut_condition2        in varchar2 default null,
    p_build_option               in number   default null,
    p_error_text                 in varchar2 default null,
    p_reference_id               in number default null,
    p_comments                   in varchar2 default null,
    p_shortcut                   in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;


procedure create_tree  (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_type                      in varchar2 default 'DYNAMIC',
    p_item                      in varchar2 default null,
    p_query                     in varchar2 default null,
    p_levels                    in number   default null,
    p_unexpanded_parent         in varchar2 default null,
    p_unexpanded_parent_last    in varchar2 default null,
    p_expanded_parent           in varchar2 default null,
    p_expanded_parent_last      in varchar2 default null,
    p_leaf_node                 in varchar2 default null,
    p_leaf_node_last            in varchar2 default null,
    p_name_link_anchor_tag      in varchar2 default null,
    p_name_link_not_anchor_tag  in varchar2 default null,
    p_indent_vertical_line      in varchar2 default null,
    p_indent_vertical_line_last in varchar2 default null,
    p_drill_up                  in varchar2 default null,
    p_before_tree               in varchar2 default null,
    p_after_tree                in varchar2 default null,
    p_level_1_template          in varchar2 default null,
    p_level_2_template          in varchar2 default null,
    --
    p_id_offset                 in number   default 0,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_jstree  (
    p_id                        in number default null,
    p_flow_id                   in number default null,
    p_page_id                   in number default null,
    p_region_id                 in number default null,
    p_tree_template             in varchar2 default null,
    p_tree_source               in varchar2 default null,
    p_tree_query                in varchar2 default null,
    p_tree_node_title           in varchar2 default null,
    p_tree_node_value           in varchar2 default null,
    p_tree_node_icon            in varchar2 default null,
    p_tree_node_link            in varchar2 default null,
    p_tree_node_hints           in varchar2 default null,
    p_tree_start_item           in varchar2 default null,
    p_tree_start_value          in varchar2 default null,
    p_tree_button_option        in varchar2 default null,
    p_show_node_link            in varchar2 default null,
    p_node_link_checksum_type   in varchar2 default null,
    p_tree_comment              in varchar2 default null,
    p_show_hints                in varchar2 default null,
    p_tree_has_focus            in varchar2 default null,
    p_tree_hint_text            in varchar2 default null,
    p_tree_click_action         in varchar2 default null,
    p_selected_node             in varchar2 default null)
    ;

--
-- P L U G I N S
--
procedure remove_plugin (
    p_flow_id     in number,
    p_plugin_type in varchar2,
    p_name        in varchar2 );

procedure create_plugin (
    p_id                           in number   default null,
    p_flow_id                      in number,
    p_plugin_type                  in varchar2,
    p_name                         in varchar2,
    p_display_name                 in varchar2,
    p_category                     in varchar2 default null,
    p_supported_ui_types           in varchar2 default 'DESKTOP',
    p_image_prefix                 in varchar2 default null,
    p_plsql_code                   in varchar2 default null,
    p_render_function              in varchar2 default null,
    p_ajax_function                in varchar2 default null,
    p_validation_function          in varchar2 default null,
    p_execution_function           in varchar2 default null,
    p_session_sentry_function      in varchar2 default null,
    p_invalid_session_function     in varchar2 default null,
    p_authentication_function      in varchar2 default null,
    p_post_logout_function         in varchar2 default null,
    p_builder_validation_function  in varchar2 default null,
    p_migration_function           in varchar2 default null,
    p_standard_attributes          in varchar2 default null,
    p_sql_min_column_count         in number   default null,
    p_sql_max_column_count         in number   default null,
    p_sql_examples                 in varchar2 default null,
    p_substitute_attributes        in boolean  default true,
    p_attribute_01                 in varchar2 default null, /* obsolete */
    p_attribute_02                 in varchar2 default null, /* obsolete */
    p_attribute_03                 in varchar2 default null, /* obsolete */
    p_attribute_04                 in varchar2 default null, /* obsolete */
    p_attribute_05                 in varchar2 default null, /* obsolete */
    p_attribute_06                 in varchar2 default null, /* obsolete */
    p_attribute_07                 in varchar2 default null, /* obsolete */
    p_attribute_08                 in varchar2 default null, /* obsolete */
    p_attribute_09                 in varchar2 default null, /* obsolete */
    p_attribute_10                 in varchar2 default null, /* obsolete */
    p_attribute_11                 in varchar2 default null, /* obsolete */
    p_attribute_12                 in varchar2 default null, /* obsolete */
    p_attribute_13                 in varchar2 default null, /* obsolete */
    p_attribute_14                 in varchar2 default null, /* obsolete */
    p_attribute_15                 in varchar2 default null, /* obsolete */
    p_reference_id                 in number   default null,
    p_subscribe_plugin_settings    in boolean  default true,
    p_help_text                    in varchar2 default null,
    p_version_identifier           in varchar2 default null,
    p_about_url                    in varchar2 default null,
    p_plugin_comment               in varchar2 default null );

procedure create_plugin_attribute (
    p_id                          in number   default null,
    p_flow_id                     in number,
    p_plugin_id                   in number,
    p_attribute_scope             in varchar2,
    p_attribute_sequence          in number,
    p_display_sequence            in number   default null,
    p_prompt                      in varchar2,
    p_attribute_type              in varchar2,
    p_is_required                 in boolean,
    p_default_value               in varchar2 default null,
    p_display_length              in number   default null,
    p_max_length                  in number   default null,
    p_sql_min_column_count        in number   default null,
    p_sql_max_column_count        in number   default null,
    p_column_data_types           in varchar2 default null,
    p_is_translatable             in boolean,
    p_depending_on_attribute_id   in number   default null,
    p_depending_on_condition_type in varchar2 default null,
    p_depending_on_expression     in varchar2 default null,
    p_help_text                   in varchar2 default null,
    p_attribute_comment           in varchar2 default null );

procedure create_plugin_attr_value (
    p_id                     in number   default null,
    p_flow_id                in number,
    p_plugin_attribute_id    in number,
    p_display_sequence       in number,
    p_display_value          in varchar2,
    p_return_value           in varchar2 );

procedure create_plugin_file (
    p_id           in number   default null,
    p_flow_id      in number,
    p_plugin_id    in number,
    p_file_name    in varchar2,
    p_mime_type    in varchar2,
    p_file_charset in varchar2 default null,
    p_file_content in sys.dbms_sql.varchar2_table );

procedure create_plugin_event (
    p_id           in number   default null,
    p_flow_id      in number,
    p_plugin_id    in number,
    p_name         in varchar2,
    p_display_name in varchar2 );

procedure create_plugin_setting (
    p_id           in number   default null,
    p_flow_id      in number,
    p_plugin_type  in varchar2,
    p_plugin       in varchar2,
    p_attribute_01 in varchar2 default null,
    p_attribute_02 in varchar2 default null,
    p_attribute_03 in varchar2 default null,
    p_attribute_04 in varchar2 default null,
    p_attribute_05 in varchar2 default null,
    p_attribute_06 in varchar2 default null,
    p_attribute_07 in varchar2 default null,
    p_attribute_08 in varchar2 default null,
    p_attribute_09 in varchar2 default null,
    p_attribute_10 in varchar2 default null,
    p_attribute_11 in varchar2 default null,
    p_attribute_12 in varchar2 default null,
    p_attribute_13 in varchar2 default null,
    p_attribute_14 in varchar2 default null,
    p_attribute_15 in varchar2 default null );

--
-- RESTful Services Procedures
--
procedure remove_restful_service (
    p_id                in number default null,
    p_name              in varchar2);


procedure create_user_groups (
    p_id                in number,
    p_group_name        in varchar2,
    p_group_desc        in varchar2  default null,
    p_security_group_id in number    default null);

procedure create_restful_module (
    p_id                           in number   default null,
    p_name                         in varchar2,
    p_uri_prefix                   in varchar2 default null,
    p_parsing_schema               in varchar2 default null,
    p_origins_allowed              in varchar2 default null,
    p_items_per_page               in varchar2 default null,
    p_privilege_id                 in number default null,
    p_privilege_name               in varchar2 default null,
    p_status                       in varchar2 default null,
    p_comments                     in varchar2 default null,
    p_security_group_id            in number default null,
    p_row_version_number           in number default null);


procedure create_restful_template (
    p_id                           in number   default null,
    p_module_id                    in number,
    p_uri_template                 in varchar2,
    p_priority                     in number default null,
    p_etag_type                    in varchar2 default null,
    p_etag_query                   in varchar2 default null,
    p_comments                     in varchar2 default null,
    p_security_group_id            in number default null,
    p_row_version_number           in number default null);


procedure create_restful_handler (
    p_id                           in number   default null,
    p_template_id                  in number,
    p_source_type                  in varchar2,
    p_format                       in varchar2 default null,
    p_method                       in varchar2 default null,
    p_mimes_allowed                in varchar2 default null,
    p_items_per_page               in number default null,
    p_require_https                in varchar2 default null,
    p_privilege_id                 in number default null,
    p_source                       in clob default null,
    p_comments                     in varchar2 default null,
    p_security_group_id            in number default null,
    p_row_version_number           in number default null);


procedure create_restful_param (
    p_id                           in number   default null,
    p_handler_id                   in number,
    p_name                         in varchar2,
    p_bind_variable_name           in varchar2 default null,
    p_source_type                  in varchar2 default null,
    p_access_method                in varchar2 default null,
    p_param_type                   in varchar2 default null,
    p_comments                     in varchar2 default null,
    p_security_group_id            in number default null,
    p_row_version_number           in number default null);


procedure create_restful_priv (
    p_id                           in number,
    p_name                         in varchar2,
    p_label                        in varchar2,
    p_description                  in varchar2 default null,
    p_comments                     in varchar2 default null,
    p_security_group_id            in number   default null,
    p_row_version_number           in number   default null);


procedure create_rs_priv_grp (
    p_id                           in number   default null,
    p_privilege_id                 in number   default null,
    p_privilege_name               in varchar2 default null,
    p_user_group_id                in number   default null,
    p_group_name                   in varchar2 default null,
    p_security_group_id            in number   default null,
    p_row_version_number           in number   default null);


procedure create_popup_lov_template (
    p_id                 in number   default null,
    p_security_group_id  in number   default null,
    p_flow_id            in number   default null,
    p_popup_icon         in varchar2 default null,
    p_popup_icon_attr    in varchar2 default null,
    p_popup_icon2        in varchar2 default null,
    p_popup_icon_attr2   in varchar2 default null,
    p_page_name          in varchar2 default null,
    p_page_title         in varchar2 default null,
    p_page_html_head     in varchar2 default null,
    p_page_body_attr     in varchar2 default null,
    p_before_field_text  in varchar2 default null,
    p_page_heading_text  in varchar2 default null,
    p_page_footer_text   in varchar2 default null,
    p_filter_width       in varchar2 default null,
    p_filter_max_width   in varchar2 default null,
    p_filter_text_attr   in varchar2 default null,
    p_find_button_text   in varchar2 default null,
    p_find_button_image  in varchar2 default null,
    p_find_button_attr   in varchar2 default null,
    p_close_button_text  in varchar2 default null,
    p_close_button_image in varchar2 default null,
    p_close_button_attr  in varchar2 default null,
    p_next_button_text   in varchar2 default null,
    p_next_button_image  in varchar2 default null,
    p_next_button_attr   in varchar2 default null,
    p_prev_button_text   in varchar2 default null,
    p_prev_button_image  in varchar2 default null,
    p_prev_button_attr   in varchar2 default null,
    p_after_field_text   in varchar2 default null,
    p_scrollbars         in varchar2 default null,
    p_resizable          in varchar2 default null,
    p_width              in varchar2 default null,
    p_height             in varchar2 default null,
    p_result_row_x_of_y  in varchar2 default null,
    p_result_rows_per_pg in varchar2 default null,
    p_before_result_set  in varchar2 default null,
    p_after_result_set   in varchar2 default null,
    p_when_no_data_found_message     in varchar2 default null,
    p_before_first_fetch_message     in varchar2 default null,
    p_minimum_characters_required    in number   default null,
    p_reference_id       in number   default null,
    p_translate_this_template        in varchar2 default 'N',
    --
    p_id_offset          in number   default 0,
    p_target             in varchar2 default 'PRIME',
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;

procedure create_menu (
    p_id                       in number   default null,
    p_flow_id                  in number   default null,
    p_name                     in varchar2 default null,
    p_security_group_id        in number   default null,
    --
    p_id_offset                in number   default 0,
    p_target                   in varchar2 default 'PRIME')
    ;

procedure create_menu_option (
    p_id                       in number   default null,
    p_parent_id                in number   default null,
    p_menu_id                  in number   default null,
    p_option_sequence          in number   default null,
    p_short_name               in varchar2 default null,
    p_long_name                in varchar2 default null,
    p_link                     in varchar2 default null,
    p_page_id                  in number   default null,
    p_also_current_for_pages   in varchar2 default null,
    p_display_when_cond_type   in varchar2 default null,
    p_display_when_condition   in varchar2 default null,
    p_display_when_condition2  in varchar2 default null,
    p_security_scheme          in varchar2 default null,
    p_required_patch           in number   default null,
    p_security_group_id        in number   default null,
    --
    p_id_offset                in number   default 0,
    p_target                   in varchar2 default 'PRIME')
    ;

procedure create_menu_template (
    p_id                       in number   default null,
    p_flow_id                  in number   default null,
    p_name                     in varchar2 default null,
    p_before_first             in varchar2 default null,
    p_current_page_option      in varchar2 default null,
    p_non_current_page_option  in varchar2 default null,
    p_menu_link_attributes     in varchar2 default null,
    p_between_levels           in varchar2 default null,
    p_after_last               in varchar2 default null,
    p_max_levels               in number   default null,
    p_start_with_node          in varchar2 default null,
    p_translate_this_template  in varchar2 default 'N',
    p_template_comments        in varchar2 default null,
    p_security_group_id        in number   default null,
    p_reference_id             in number   default null,
    --
    p_id_offset                in number   default 0,
    p_target                   in varchar2 default 'PRIME',
    --
    p_theme_id                  in number   default null,
    p_theme_class_id            in number   default null)
    ;



procedure create_web_service (
    p_id                       in number   default null,
    p_security_group_id        in number   default null,
    p_flow_id                  in number   default null,
    p_name                     in varchar2 default null,
    p_url                      in varchar2 default null,
    p_action                   in varchar2 default null,
    p_proxy_override           in varchar2 default null,
    p_soap_version             in varchar2 default null,
    p_soap_envelope            in varchar2 default null,
    p_flow_items_comma_delimited in varchar2 default null,
    p_static_parm_01           in varchar2 default null,
    p_static_parm_02           in varchar2 default null,
    p_static_parm_03           in varchar2 default null,
    p_static_parm_04           in varchar2 default null,
    p_static_parm_05           in varchar2 default null,
    p_static_parm_06           in varchar2 default null,
    p_static_parm_07           in varchar2 default null,
    p_static_parm_08           in varchar2 default null,
    p_static_parm_09           in varchar2 default null,
    p_static_parm_10           in varchar2 default null,
    p_stylesheet               in varchar2 default null,
    p_reference_id             in number   default null,
    --
    p_id_offset                in number   default 0,
    p_target                   in varchar2 default 'PRIME')
    ;

procedure create_ws_operations (
    p_id                       in number   default null,
    p_ws_id                    in number   default null,
    p_name                     in varchar2 default null,
    p_input_message_name       in varchar2 default null,
    p_input_message_ns         in varchar2 default null,
    p_input_message_style      in varchar2 default null,
    p_output_message_name      in varchar2 default null,
    p_output_message_ns        in varchar2 default null,
    p_output_message_style     in varchar2 default null,
    p_header_message_name      in varchar2 default null,
    p_header_message_style     in varchar2 default null,
    p_soap_action              in varchar2 default null)
    ;

procedure create_ws_parameters (
    p_id                       in number   default null,
    p_ws_opers_id              in number   default null,
    p_name                     in varchar2 default null,
    p_input_or_output          in varchar2 default null,
    p_parm_type                in varchar2 default null,
    p_path                     in varchar2 default null,
    p_type_is_xsd              in varchar2 default null,
    p_form_qualified           in varchar2 default null,
    p_parent_id                in varchar2 default null)
    ;

procedure create_ws_process_parms_map (
    p_id                       in number   default null,
    p_parameter_id             in number   default null,
    p_process_id               in number   default null,
    p_map_type                 in varchar2 default null,
    p_parm_value               in varchar2 default null)
    ;

--##############################################################################
--#
--# AUTHENTICATION
--#
--##############################################################################

--==============================================================================
-- internal utility function, also needed for wwv_flow_upgrade
--==============================================================================
function get_default_ldap_escaping (
    p_edit_function in varchar2 )
    return varchar2;
--==============================================================================
-- legacy API for pre 4.1
--==============================================================================
procedure create_auth_setup(
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_description               in varchar2 default null,
    p_reference_id              in number   default null,
    p_page_sentry_function      in varchar2 default null,
    p_sess_verify_function      in varchar2 default null,
    p_invalid_session_page      in varchar2 default null,
    p_invalid_session_url       in varchar2 default null,
    p_pre_auth_process          in varchar2 default null,
    p_auth_function             in varchar2 default null,
    p_post_auth_process         in varchar2 default null,
    p_cookie_name               in varchar2 default null,
    p_cookie_path               in varchar2 default null,
    p_cookie_domain             in varchar2 default null,
    p_use_secure_cookie_yn      in varchar2 default null,
    p_ldap_host                 in varchar2 default null,
    p_ldap_port                 in varchar2 default null,
    p_ldap_string               in varchar2 default null,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_required_patch            in varchar2 default null,
    p_security_group_id         in number   default null,
    p_target                    in varchar2 default 'PRIME')
    ;
--
--==============================================================================
-- new API for plugin-based authentications (4.1+)
--==============================================================================
procedure create_authentication (
    p_id                        in number   default null,
    p_flow_id                   in number,
    p_name                      in varchar2,
    p_scheme_type               in varchar2,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_attribute_09              in varchar2 default null,
    p_attribute_10              in varchar2 default null,
    p_attribute_11              in varchar2 default null,
    p_attribute_12              in varchar2 default null,
    p_attribute_13              in varchar2 default null,
    p_attribute_14              in varchar2 default null,
    p_attribute_15              in varchar2 default null,
    p_plsql_code                in varchar2 default null,
    p_verification_function     in varchar2 default null,
    p_invalid_session_type      in varchar2 default null,
    p_invalid_session_url       in varchar2 default null,
    p_logout_url                in varchar2 default null,
    p_pre_auth_process          in varchar2 default null,
    p_post_auth_process         in varchar2 default null,
    p_cookie_name               in varchar2 default null,
    p_cookie_path               in varchar2 default null,
    p_cookie_domain             in varchar2 default null,
    p_use_secure_cookie_yn      in varchar2 default null,
    p_help_text                 in varchar2 default null,
    p_reference_id              in number   default null,
    p_comments                  in varchar2 default null,
    p_target                    in varchar2 default 'PRIME' );

--==============================================================================
-- websheet authentication
--==============================================================================
procedure create_ws_auth_setup(
    p_id                        in number   default null,
    p_websheet_application_id   in number   default null,
    p_name                      in varchar2 default null,
    p_description               in varchar2 default null,
    p_reference_id              in number   default null,
    p_page_sentry_function      in varchar2 default null,
    p_sess_verify_function      in varchar2 default null,
    p_invalid_session_page      in varchar2 default null,
    p_invalid_session_url       in varchar2 default null,
    p_pre_auth_process          in varchar2 default null,
    p_auth_function             in varchar2 default null,
    p_post_auth_process         in varchar2 default null,
    p_cookie_name               in varchar2 default null,
    p_cookie_path               in varchar2 default null,
    p_cookie_domain             in varchar2 default null,
    p_use_secure_cookie_yn      in varchar2 default null,
    p_ldap_host                 in varchar2 default null,
    p_ldap_port                 in varchar2 default null,
    p_ldap_use_ssl              in varchar2 default 'N',
    p_ldap_use_exact_dn         in varchar2 default 'Y',
    p_ldap_string               in varchar2 default null,
    p_ldap_search_filter        in varchar2 default null,
    p_ldap_edit_function        in varchar2 default null,
    p_ldap_username_escaping    in varchar2 default null,
    p_logout_url                in varchar2 default null,
    p_required_patch            in varchar2 default null,
    p_security_group_id         in number   default null,
    p_target                    in varchar2 default 'PRIME' );

function create_ws_auth_setup(
    p_id                        in number   default null,
    p_websheet_application_id   in number   default null,
    p_name                      in varchar2 default null,
    p_description               in varchar2 default null,
    p_reference_id              in number   default null,
    p_page_sentry_function      in varchar2 default null,
    p_sess_verify_function      in varchar2 default null,
    p_invalid_session_page      in varchar2 default null,
    p_invalid_session_url       in varchar2 default null,
    p_pre_auth_process          in varchar2 default null,
    p_auth_function             in varchar2 default null,
    p_post_auth_process         in varchar2 default null,
    p_cookie_name               in varchar2 default null,
    p_cookie_path               in varchar2 default null,
    p_cookie_domain             in varchar2 default null,
    p_use_secure_cookie_yn      in varchar2 default null,
    p_ldap_host                 in varchar2 default null,
    p_ldap_port                 in varchar2 default null,
    p_ldap_use_ssl              in varchar2 default 'N',
    p_ldap_use_exact_dn         in varchar2 default 'Y',
    p_ldap_string               in varchar2 default null,
    p_ldap_search_filter        in varchar2 default null,
    p_ldap_edit_function        in varchar2 default null,
    p_ldap_username_escaping    in varchar2 default null,
    p_logout_url                in varchar2 default null,
    p_required_patch            in varchar2 default null,
    p_security_group_id         in number   default null,
    p_target                    in varchar2 default 'PRIME')
    return number;

--##############################################################################
--#
--# FLASH CHARTS
--#
--##############################################################################

procedure create_flash_chart (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_region_id                  in number   default null,
    p_default_chart_type         in varchar2 default null,
    p_chart_title                in varchar2 default null,
    p_chart_width                in number   default null,
    p_chart_height               in number   default null,
    p_chart_animation            in varchar2 default null,
    p_display_attr               in varchar2 default null,
    p_dial_tick_attr             in varchar2 default null,
    p_margins                    in varchar2 default null,
    p_omit_label_interval        in number   default null,
    --
    p_bgtype                     in varchar2 default null,
    p_bgcolor1                   in varchar2 default null,
    p_bgcolor2                   in varchar2 default null,
    p_gradient_rotation          in number   default null,
    p_color_scheme               in varchar2 default null,
    p_custom_colors              in varchar2 default null,
    --
    p_x_axis_title               in varchar2 default null,
    p_x_axis_min                 in number   default null,
    p_x_axis_max                 in number   default null,
    p_x_axis_grid_spacing        in number   default null,
    p_x_axis_prefix              in varchar2 default null,
    p_x_axis_postfix             in varchar2 default null,
    p_x_axis_group_sep           in varchar2 default null,
    p_x_axis_decimal_place       in number   default null,
    --
    p_y_axis_title               in varchar2 default null,
    p_y_axis_min                 in number   default null,
    p_y_axis_max                 in number   default null,
    p_y_axis_grid_spacing        in number   default null,
    p_y_axis_prefix              in varchar2 default null,
    p_y_axis_postfix             in varchar2 default null,
    p_y_axis_group_sep           in varchar2 default null,
    p_y_axis_decimal_place       in number   default null,
    --
    p_async_update               in varchar2 default null,
    p_async_time                 in number   default null,
    --
    p_names_font                 in varchar2 default null,
    p_names_rotation             in number   default null,
    p_values_font                in varchar2 default null,
    p_values_rotation            in number   default null,
    p_hints_font                 in varchar2 default null,
    p_legend_font                in varchar2 default null,
    p_grid_labels_font           in varchar2 default null,
    p_chart_title_font           in varchar2 default null,
    p_x_axis_title_font          in varchar2 default null,
    p_y_axis_title_font          in varchar2 default null,
    --
    p_use_chart_xml              in varchar2 default null,
    p_chart_xml                  in varchar2 default null,
    p_attribute_01               in varchar2 default null,
    p_attribute_02               in varchar2 default null,
    p_attribute_03               in varchar2 default null,
    p_attribute_04               in varchar2 default null,
    p_attribute_05               in varchar2 default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME')
    ;

procedure create_flash_chart5 (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_region_id                  in number   default null,
    p_default_chart_type         in varchar2 default null,
    p_chart_title                in varchar2 default null,
    p_chart_rendering            in varchar2 default 'FLASH_PREFERRED',
    p_chart_name                 in varchar2 default null,
    p_chart_width                in number   default null,
    p_chart_height               in number   default null,
    p_chart_animation            in varchar2 default null,
    p_display_attr               in varchar2 default null,
    p_dial_tick_attr             in varchar2 default null,
    p_gantt_attr                 in varchar2 default null,
    p_pie_attr                   in varchar2 default 'Outside:::',
    p_map_attr                   in varchar2 default null,
    p_map_source                 in varchar2 default null,
    p_margins                    in varchar2 default null,
    p_omit_label_interval        in number   default null,
    --
    p_bgtype                     in varchar2 default null,
    p_bgcolor1                   in varchar2 default null,
    p_bgcolor2                   in varchar2 default null,
    p_gradient_rotation          in number   default null,
    p_grid_bgtype                in varchar2 default null,
    p_grid_bgcolor1              in varchar2 default null,
    p_grid_bgcolor2              in varchar2 default null,
    p_grid_gradient_rotation     in number   default null,
    p_color_scheme               in varchar2 default null,
    p_custom_colors              in varchar2 default null,
    p_map_undef_color_scheme     in varchar2 default null,
    p_map_undef_custom_colors    in varchar2 default null,
    --
    p_x_axis_title               in varchar2 default null,
    p_x_axis_min                 in number   default null,
    p_x_axis_max                 in number   default null,
    p_x_axis_grid_spacing        in number   default null,  -- obsolete
    p_x_axis_decimal_place       in number   default null,
    p_x_axis_prefix              in varchar2 default null,
    p_x_axis_postfix             in varchar2 default null,
    p_x_axis_label_rotation      in varchar2 default null,
    p_x_axis_label_font          in varchar2 default null,
    p_x_axis_major_interval      in number   default null,
    p_x_axis_minor_interval      in number   default null,
    --
    p_y_axis_title               in varchar2 default null,
    p_y_axis_min                 in number   default null,
    p_y_axis_max                 in number   default null,
    p_y_axis_grid_spacing        in number   default null,  -- obsolete
    p_y_axis_decimal_place       in number   default null,
    p_y_axis_prefix              in varchar2 default null,
    p_y_axis_postfix             in varchar2 default null,
    p_y_axis_label_rotation      in varchar2 default null,
    p_y_axis_label_font          in varchar2 default null,
    p_y_axis_major_interval      in number   default null,
    p_y_axis_minor_interval      in number   default null,
    --
    p_async_update               in varchar2 default null,
    p_async_time                 in number   default null,
    --
    p_legend_title               in varchar2 default null,
    p_legend_title_font          in varchar2 default null,
    --
    p_names_font                 in varchar2 default null,
    p_names_rotation             in number   default null,
    p_values_font                in varchar2 default null,
    p_values_rotation            in number   default null,
    p_values_prefix              in varchar2 default null,
    p_values_postfix             in varchar2 default null,
    p_hints_font                 in varchar2 default null,
    p_legend_font                in varchar2 default null,
    p_grid_labels_font           in varchar2 default null,
    p_chart_title_font           in varchar2 default null,
    p_x_axis_title_font          in varchar2 default null,
    p_x_axis_title_rotation      in varchar2 default null,
    p_y_axis_title_font          in varchar2 default null,
    p_y_axis_title_rotation      in varchar2 default null,
    p_gauge_labels_font          in varchar2 default null,
    --
    p_use_chart_xml              in varchar2 default null,
    p_chart_xml                  in varchar2 default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME')
    ;

procedure create_flash_chart_series (
    p_id                           in number default null,
    p_chart_id                     in number default null,
    p_flow_id                      in number default null,
    p_series_seq                   in number default null,
    p_series_name                  in varchar2 default null,
    p_series_query                 in varchar2 default null,
    p_series_query_type            in varchar2 default null,
    p_series_query_parse_opt       in varchar2 default null,
    p_series_query_no_data_found   in varchar2 default null,
    p_series_query_row_count_max   in number default null,
    --
    p_id_offset                    in number   default 0,
    p_target                       in varchar2 default 'PRIME')
    ;

procedure create_flash_chart5_series (
    p_id                           in number   default null,
    p_chart_id                     in number   default null,
    p_flow_id                      in number   default null,
    p_series_seq                   in number   default null,
    p_series_name                  in varchar2 default null,
    p_series_query                 in varchar2 default null,
    p_series_type                  in varchar2 default null,
    p_series_required_role         in varchar2 default null,
    p_required_patch               in number   default null,
    p_series_query_type            in varchar2 default null,
    p_series_ajax_items_to_submit  in varchar2 default null,
    p_series_query_parse_opt       in varchar2 default null,
    p_series_query_no_data_found   in varchar2 default null,
    p_series_query_row_count_max   in number   default null,
    p_action_link                  in varchar2 default null,
    p_show_action_link             in varchar2 default null,
    p_action_link_checksum_type    in varchar2 default null,
    p_display_when_cond_type       in varchar2 default null,
    p_display_when_condition       in varchar2 default null,
    p_display_when_condition2      in varchar2 default null,
    --
    p_id_offset                    in number   default 0,
    p_target                       in varchar2 default 'PRIME')
    ;

procedure create_worksheet (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_region_id                  in number   default null,
    p_name                       in varchar2 default null,
    p_folder_id                  in number   default null,
    p_alias                      in varchar2 default null,
    p_report_id_item             in varchar2 default null,
    p_max_row_count              in varchar2 default null,
    p_max_row_count_message      in varchar2 default null,
    p_no_data_found_message      in varchar2 default null,
    p_max_rows_per_page          in varchar2 default null,
    p_search_button_label        in varchar2 default null,
    p_page_items_to_submit       in varchar2 default null, /* obsolete, is stored in wwv_flow_page_plugs.ajax_items_to_submit now */
    p_sort_asc_image             in varchar2 default null,
    p_sort_asc_image_attr        in varchar2 default null,
    p_sort_desc_image            in varchar2 default null,
    p_sort_desc_image_attr       in varchar2 default null,
    --
    p_sql_query                  in varchar2 default null,
    p_base_table_or_view         in varchar2 default null,
    p_base_pk1                   in varchar2 default null,
    p_base_pk2                   in varchar2 default null,
    p_base_pk3                   in varchar2 default null,
    p_sql_hint                   in varchar2 default null,
    --
    p_status                     in varchar2 default null,
    --
    p_allow_report_saving        in varchar2 default null,
    p_allow_save_rpt_public      in varchar2 default null,
    p_save_rpt_public_auth_scheme in varchar2 default null,
    p_allow_report_categories    in varchar2 default null,
    p_show_nulls_as              in varchar2 default null,
    p_pagination_type            in varchar2 default null,
    p_pagination_display_pos     in varchar2 default null,
    p_button_template            in number   default null,
    p_show_finder_drop_down      in varchar2 default null,
    p_show_display_row_count     in varchar2 default null,
    p_show_search_bar            in varchar2 default null,
    p_show_search_textbox        in varchar2 default null,
    p_show_actions_menu          in varchar2 default null,
    p_actions_menu_icon          in varchar2 default null,
    p_finder_icon                in varchar2 default null,
    p_report_list_mode           in varchar2 default null,
    --
    p_show_detail_link           in varchar2 default null,
    p_show_select_columns        in varchar2 default null,
    p_show_rows_per_page         in varchar2 default null,
    p_show_filter                in varchar2 default null,
    p_show_sort                  in varchar2 default null,
    p_show_control_break         in varchar2 default null,
    p_show_highlight             in varchar2 default null,
    p_show_computation           in varchar2 default null,
    p_show_aggregate             in varchar2 default null,
    p_show_chart                 in varchar2 default null,
    p_show_group_by              in varchar2 default null,
    p_show_notify                in varchar2 default null,
    p_show_calendar              in varchar2 default null,
    p_show_flashback             in varchar2 default null,
    p_show_reset                 in varchar2 default null,
    p_show_download              in varchar2 default null,
    p_show_help                  in varchar2 default null,
    p_download_formats           in varchar2 default null,
    p_download_filename          in varchar2 default null,
    p_csv_output_separator       in varchar2 default null,
    p_csv_output_enclosed_by     in varchar2 default null,
    --
    p_email_from                 in varchar2 default null,
    --
    p_detail_link                in varchar2 default null,
    p_detail_link_text           in varchar2 default null,
    p_detail_link_attr           in varchar2 default null,
    p_detail_link_checksum_type  in varchar2 default null,
    p_detail_link_condition_type in varchar2 default null,
    p_detail_link_cond           in varchar2 default null,
    p_detail_link_cond2          in varchar2 default null,
    p_detail_link_auth_scheme    in varchar2 default null,
    --
    p_allow_exclude_null_values  in varchar2 default null,
    p_allow_hide_extra_columns   in varchar2 default null,
    --
    p_max_query_cost             in varchar2 default null,
    p_max_flashback              in varchar2 default null,
    p_worksheet_flags            in varchar2 default null,
    --
    p_icon_view_enabled_yn       in varchar2 default 'N',
    p_icon_view_use_custom       in varchar2 default 'N',
    p_icon_view_custom_link      in varchar2 default null,
    p_icon_view_link_column      in varchar2 default null,
    p_icon_view_img_src_column   in varchar2 default null,
    p_icon_view_label_column     in varchar2 default null,
    p_icon_view_img_attr_text    in varchar2 default null,
    p_icon_view_alt_text         in varchar2 default null,
    p_icon_view_title_text       in varchar2 default null,
    p_icon_view_columns_per_row  in number   default null,
    p_detail_view_enabled_yn     in varchar2 default 'N',
    p_detail_view_before_rows    in varchar2 default null,
    p_detail_view_for_each_row   in varchar2 default null,
    p_detail_view_after_rows     in varchar2 default null,
    --
    p_description                in varchar2 default null,
    p_owner                      in varchar2 default null,
    --
    p_internal_uid               in number default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME');

procedure create_worksheet_category (
    p_id                in number   default null,
    p_worksheet_id      in number   default null,
    p_flow_id           in number   default null,
    p_application_user  in varchar2 default null,
    p_name              in varchar2 default null,
    p_display_sequence  in number   default null,
    --
    p_id_offset         in number   default 0,
    p_target            in varchar2 default 'PRIME');

procedure create_worksheet_column (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    --
    p_db_column_name          in varchar2 default null,
    p_display_order           in number   default null,
    p_group_id                in number   default null,
    p_column_identifier       in varchar2 default null,
    p_column_expr             in varchar2 default null,
    p_column_label            in varchar2 default null,
    p_report_label            in varchar2 default null,
    p_sync_form_label         in varchar2 default null,
    --
    p_display_in_default_rpt  in varchar2 default null,
    p_column_html_expression  in varchar2 default null,
    p_column_link             in varchar2 default null,
    p_column_linktext         in varchar2 default null,
    p_column_link_attr        in varchar2 default null,
    p_column_link_checksum_type in varchar2 default null,
    --
    p_is_sortable             in varchar2 default null,
    p_allow_sorting           in varchar2 default null,
    p_allow_filtering         in varchar2 default null,
    p_allow_highlighting      in varchar2 default null,
    p_allow_ctrl_breaks       in varchar2 default null,
    p_allow_aggregations      in varchar2 default null,
    p_allow_computations      in varchar2 default null,
    p_allow_charting          in varchar2 default null,
    p_allow_group_by          in varchar2 default null,
    p_allow_hide              in varchar2 default null,
    --
    p_use_custom              in varchar2 default null,
    p_custom_filter           in varchar2 default null,
    p_base_column             in varchar2 default null,
    p_allow_filters           in varchar2 default null,
    --
    p_others_may_edit         in varchar2 default null,
    p_others_may_view         in varchar2 default null,
    --
    p_column_type             in varchar2 default null,
    p_display_as              in varchar2 default null,
    p_display_text_as         in varchar2 default null,
    p_heading_alignment       in varchar2 default null,
    p_column_alignment        in varchar2 default null,
    p_max_length              in number   default null,
    p_display_width           in number   default null,
    p_display_height          in number   default null,
    --
    p_allow_null              in varchar2 default null,
    p_format_mask             in varchar2 default null,
    p_tz_dependent            in varchar2 default null,
    p_fact_table_key          in varchar2 default null,
    p_dimension_table         in varchar2 default null,
    p_dimension_table_id      in varchar2 default null,
    p_dimension_table_value   in varchar2 default null,
    --
    p_rpt_distinct_lov        in varchar2 default null,
    p_rpt_lov                 in varchar2 default null,
    p_rpt_named_lov           in number   default null,
    p_rpt_show_filter_lov     in varchar2 default null,
    p_rpt_filter_date_ranges  in varchar2 default null,
    --
    p_static_lov              in varchar2 default null,
    p_lov_null_text           in varchar2 default null,
    p_lov_allow_new_values    in varchar2 default null,
    p_lov_is_distinct_values  in varchar2 default null,
    p_lov_num_columns         in number   default null,
    p_lov_id                  in number   default null,
    --
    p_computation_type        in varchar2 default null,
    p_computation_expr_1      in varchar2 default null,
    p_computation_expr_2      in varchar2 default null,
    --
    p_validation_type         in varchar2 default null,
    p_validation_expr_1       in varchar2 default null,
    p_validation_expr_2       in varchar2 default null,
    --
    p_display_condition_type  in varchar2 default null,
    p_display_condition       in varchar2 default null,
    p_display_condition2      in varchar2 default null,
    --
    p_default_value           in varchar2 default null,
    p_default_when            in varchar2 default null,
    p_help_text               in varchar2 default null,
    p_security_scheme         in varchar2 default null,
    p_column_flags            in varchar2 default null,
    p_column_comment          in varchar2 default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');

procedure create_worksheet_col_group (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    p_name                    in varchar2 default null,
    p_description             in varchar2 default null,
    p_display_sequence        in number   default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');

procedure create_worksheet_rpt (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    p_session_id              in number   default null,
    p_base_report_id          in number   default null,
    p_application_user        in varchar2 default null,
    p_name                    in varchar2 default null,
    p_description             in varchar2 default null,
    p_report_seq              in number   default null,
    p_report_type             in varchar2 default null,
    p_report_alias            in varchar2 default null,
    p_status                  in varchar2 default null,
    p_category_id             in number   default null,
    p_autosave                in varchar2 default null,
    p_is_default              in varchar2 default null,
    --
    p_display_rows            in number   default null,
    p_view_mode               in varchar2 default null,
    p_report_columns          in varchar2 default null,
    --
    p_sort_column_1           in varchar2 default null,
    p_sort_direction_1        in varchar2 default null,
    p_sort_column_2           in varchar2 default null,
    p_sort_direction_2        in varchar2 default null,
    p_sort_column_3           in varchar2 default null,
    p_sort_direction_3        in varchar2 default null,
    p_sort_column_4           in varchar2 default null,
    p_sort_direction_4        in varchar2 default null,
    p_sort_column_5           in varchar2 default null,
    p_sort_direction_5        in varchar2 default null,
    p_sort_column_6           in varchar2 default null,
    p_sort_direction_6        in varchar2 default null,
    --
    p_break_on                in varchar2 default null,
    p_break_enabled_on        in varchar2 default null,
    p_control_break_options   in varchar2 default null,
    --
    p_sum_columns_on_break    in varchar2 default null,
    p_avg_columns_on_break    in varchar2 default null,
    p_max_columns_on_break    in varchar2 default null,
    p_min_columns_on_break    in varchar2 default null,
    p_median_columns_on_break in varchar2 default null,
    p_mode_columns_on_break   in varchar2 default null,
    p_count_columns_on_break  in varchar2 default null,
    p_count_distnt_col_on_break in varchar2 default null,
    --
    p_flashback_mins_ago      in varchar2 default null,
    p_flashback_enabled       in varchar2 default null,
    --
    p_chart_type              in varchar2 default null,
    p_chart_3d                in varchar2 default null,
    p_chart_label_column      in varchar2 default null,
    p_chart_label_title       in varchar2 default null,
    p_chart_value_column      in varchar2 default null,
    p_chart_aggregate         in varchar2 default null,
    p_chart_value_title       in varchar2 default null,
    p_chart_sorting           in varchar2 default null,
    --
    p_calendar_date_column    in varchar2 default null,
    p_calendar_display_column in varchar2 default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');

procedure create_worksheet_condition (
    p_id                    in number   default null,
    p_flow_id               in number   default null,
    p_page_id               in number   default null,
    p_worksheet_id          in number   default null,
    p_websheet_id           in number   default null,
    p_report_id             in number   default null,
    p_name                  in varchar2 default null,
    p_condition_type        in varchar2 default null,
    p_allow_delete          in varchar2 default null,
    --
    p_column_name           in varchar2 default null,
    p_operator              in varchar2 default null,
    p_expr_type             in varchar2 default null,
    p_expr                  in varchar2 default null,
    p_expr2                 in varchar2 default null,
    p_time_zone             in varchar2 default null,
    p_condition_sql         in varchar2 default null,
    p_condition_display     in varchar2 default null,
    --
    p_enabled               in varchar2 default null,
    --
    p_highlight_sequence    in number   default null,
    p_row_bg_color          in varchar2 default null,
    p_row_font_color        in varchar2 default null,
    p_row_format            in varchar2 default null,
    p_column_bg_color       in varchar2 default null,
    p_column_font_color     in varchar2 default null,
    p_column_format         in varchar2 default null,
    --
    p_id_offset             in number   default 0,
    p_target                in varchar2 default 'PRIME');

procedure create_worksheet_computation (
    p_id                    in number   default null,
    p_flow_id               in number   default null,
    p_page_id               in number   default null,
    p_worksheet_id          in number   default null,
    p_websheet_id           in number   default null,
    p_report_id             in number   default null,
    --
    p_db_column_name        in varchar2 default null,
    p_column_identifier     in varchar2 default null,
    p_computation_expr      in varchar2 default null,
    p_format_mask           in varchar2 default null,
    p_column_type           in varchar2 default null,
    --
    p_column_label          in varchar2 default null,
    p_report_label          in varchar2 default null,
    --
    p_id_offset             in number   default 0,
    p_target                in varchar2 default 'PRIME');

procedure create_worksheet_group_by (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_worksheet_id               in number   default null,
    p_websheet_id                in number   default null,
    p_report_id                  in number   default null,
    --
    p_group_by_columns           in varchar2 default null,
    p_function_01                in varchar2 default null,
    p_function_column_01         in varchar2 default null,
    p_function_db_column_name_01 in varchar2 default null,
    p_function_label_01          in varchar2 default null,
    p_function_format_mask_01    in varchar2 default null,
    p_function_sum_01            in varchar2 default null,
    p_function_02                in varchar2 default null,
    p_function_column_02         in varchar2 default null,
    p_function_db_column_name_02 in varchar2 default null,
    p_function_label_02          in varchar2 default null,
    p_function_format_mask_02    in varchar2 default null,
    p_function_sum_02            in varchar2 default null,
    p_function_03                in varchar2 default null,
    p_function_column_03         in varchar2 default null,
    p_function_db_column_name_03 in varchar2 default null,
    p_function_label_03          in varchar2 default null,
    p_function_format_mask_03    in varchar2 default null,
    p_function_sum_03            in varchar2 default null,
    p_function_04                in varchar2 default null,
    p_function_column_04         in varchar2 default null,
    p_function_db_column_name_04 in varchar2 default null,
    p_function_label_04          in varchar2 default null,
    p_function_format_mask_04    in varchar2 default null,
    p_function_sum_04            in varchar2 default null,
    p_function_05                in varchar2 default null,
    p_function_column_05         in varchar2 default null,
    p_function_db_column_name_05 in varchar2 default null,
    p_function_label_05          in varchar2 default null,
    p_function_format_mask_05    in varchar2 default null,
    p_function_sum_05            in varchar2 default null,
    p_function_06                in varchar2 default null,
    p_function_column_06         in varchar2 default null,
    p_function_db_column_name_06 in varchar2 default null,
    p_function_label_06          in varchar2 default null,
    p_function_format_mask_06    in varchar2 default null,
    p_function_sum_06            in varchar2 default null,
    p_function_07                in varchar2 default null,
    p_function_column_07         in varchar2 default null,
    p_function_db_column_name_07 in varchar2 default null,
    p_function_label_07          in varchar2 default null,
    p_function_format_mask_07    in varchar2 default null,
    p_function_sum_07            in varchar2 default null,
    p_function_08                in varchar2 default null,
    p_function_column_08         in varchar2 default null,
    p_function_db_column_name_08 in varchar2 default null,
    p_function_label_08          in varchar2 default null,
    p_function_format_mask_08    in varchar2 default null,
    p_function_sum_08            in varchar2 default null,
    p_function_09                in varchar2 default null,
    p_function_column_09         in varchar2 default null,
    p_function_db_column_name_09 in varchar2 default null,
    p_function_label_09          in varchar2 default null,
    p_function_format_mask_09    in varchar2 default null,
    p_function_sum_09            in varchar2 default null,
    p_function_10                in varchar2 default null,
    p_function_column_10         in varchar2 default null,
    p_function_db_column_name_10 in varchar2 default null,
    p_function_label_10          in varchar2 default null,
    p_function_format_mask_10    in varchar2 default null,
    p_function_sum_10            in varchar2 default null,
    p_function_11                in varchar2 default null,
    p_function_column_11         in varchar2 default null,
    p_function_db_column_name_11 in varchar2 default null,
    p_function_label_11          in varchar2 default null,
    p_function_format_mask_11    in varchar2 default null,
    p_function_sum_11            in varchar2 default null,
    p_function_12                in varchar2 default null,
    p_function_column_12         in varchar2 default null,
    p_function_db_column_name_12 in varchar2 default null,
    p_function_label_12          in varchar2 default null,
    p_function_format_mask_12    in varchar2 default null,
    p_function_sum_12            in varchar2 default null,
    p_sort_column_01             in varchar2 default null,
    p_sort_direction_01          in varchar2 default null,
    p_sort_column_02             in varchar2 default null,
    p_sort_direction_02          in varchar2 default null,
    p_sort_column_03             in varchar2 default null,
    p_sort_direction_03          in varchar2 default null,
    p_sort_column_04             in varchar2 default null,
    p_sort_direction_04          in varchar2 default null,
    p_sort_column_05             in varchar2 default null,
    p_sort_direction_05          in varchar2 default null,
    p_sort_column_06             in varchar2 default null,
    p_sort_direction_06          in varchar2 default null,
    p_sort_column_07             in varchar2 default null,
    p_sort_direction_07          in varchar2 default null,
    p_sort_column_08             in varchar2 default null,
    p_sort_direction_08          in varchar2 default null,
    p_sort_column_09             in varchar2 default null,
    p_sort_direction_09          in varchar2 default null,
    p_sort_column_10             in varchar2 default null,
    p_sort_direction_10          in varchar2 default null,
    p_sort_column_11             in varchar2 default null,
    p_sort_direction_11          in varchar2 default null,
    p_sort_column_12             in varchar2 default null,
    p_sort_direction_12          in varchar2 default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME');

procedure create_worksheet_notify (
    p_id                     in number   default null,
    p_flow_id                in number   default null,
    p_worksheet_id           in number   default null,
    p_websheet_id            in number   default null,
    p_report_id              in number   default null,
    p_owner                  in varchar2 default null,
    p_language               in varchar2 default null,
    p_email_from             in varchar2 default null,
    p_email_subject          in varchar2 default null,
    p_email_address          in varchar2 default null,
    p_start_date             in varchar2 default null,
    p_end_date               in varchar2 default null,
    p_end_day                in number   default null,
    p_end_day_unit           in varchar2 default null,
    p_offset_date            in varchar2 default null,
    p_notify_interval        in varchar2 default null,
    p_status                 in varchar2 default null,
    p_notify_error           in varchar2 default null,
    --
    p_id_offset              in number   default 0,
    p_target                 in varchar2 default 'PRIME');

procedure create_entry_point(
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_name                      in varchar2 default null,
    p_page_reset                in varchar2 default null,
    p_entry_point_comment       in number   default null,
    p_security_group_id         in number   default null,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure create_entry_point_args(
    p_id                        in number   default null,
    p_flow_entry_point_id       in number   default null,
    p_entry_point_arg_sequence  in varchar2 default null,
    p_entry_point_arg_item_id   in varchar2 default null,
    p_entry_point_arg_comment   in number   default null,
    p_security_group_id         in number   default null,
    p_target                    in varchar2 default 'PRIME')
    ;

procedure set_security_group_id(
    p_security_group_id in number default null)
    --
    -- This procedure allows the caller to set wwv_flow_security.g_security_group_id
    -- to the security group id of the schema they are currently running in.
    --
    ;

function get_security_group_id
    --
    -- This function returns wwv_flow_security.g_security_group_id
    --
    return number
    ;

procedure update_owner(
    -----------------------------
    -- Change flow schema (owner)
    --
    p_flow_id in number   default null,
    p_owner   in varchar2 default null)
    ;

procedure set_build_status_run_only(
    ---------------------------------------
    -- Change flow build status to RUN_ONLY
    --
    p_flow_id in number default null)
    ;

procedure delete_template(
    ------------------------------------
    -- Delete template of specified type
    --
    p_type    in varchar2 default null,
    p_flow_id in number   default null,
    p_id      in number   default null)
    ;

procedure set_page_help_text(
    ----------------------------------
    -- select page help text into clob
    --
    p_flow_id       in number   default null,
    p_flow_step_id  in number   default null,
    p_text          in varchar2 default null)
    ;

procedure set_html_page_header(
    ------------------------------------
    -- select html page header into clob
    --
    p_flow_id       in number   default null,
    p_flow_step_id  in number   default null,
    p_text          in varchar2 default null)
    ;

procedure import_script (
    p_filename        in varchar2,
    p_varchar2_table  in sys.dbms_sql.varchar2_table,
    p_flow_id         in number default null,
    p_pathid          in number default null,
    p_name            in varchar2 default null,
    p_title           in varchar2 default null,
    p_mime_type       in varchar2 default null,
    p_dad_charset     in varchar2 default null,
    p_deleted_as_of   in date default null,
    p_content_type    in varchar2 default null,
    p_language        in varchar2 default null,
    p_description     in varchar2 default null,
    p_file_type       in varchar2 default null,
    p_file_charset    in varchar2 default null)
    ;

procedure create_script (
    p_id                in number  default null,
    p_flow_id           in number  default null,
    p_name              in varchar2 default null,
    p_pathid            in number default null,
    p_filename          in varchar2,
    p_title             in varchar2 default null,
    p_mime_type         in varchar2 default null,
    p_dad_charset       in varchar2 default null,
    p_created_by        in varchar2 default null,
    p_created_on        in date     default null,
    p_updated_by        in varchar2 default null,
    p_updated_on        in date     default null,
    p_deleted_as_of     in date default null,
    p_content_type      in varchar2 default null,
    p_blob_content      in sys.dbms_sql.varchar2_table,
    p_language          in varchar2 default null,
    p_description       in varchar2 default null,
    p_file_type         in varchar2 default null,
    p_file_charset      in varchar2 default null)
    ;

procedure update_page_item (
    p_flow_id              in number,
    p_page_id              in number,
    p_item_id              in number,
    p_new_sequence         in number,
    p_display_as           in varchar2,
    p_new_name             in varchar2,
    p_new_label            in varchar2,
    p_new_begin_new_line   in varchar2,
    p_new_begin_new_field  in varchar2,
    p_attribute_01         in varchar2,
    p_attribute_02         in varchar2,
    p_attribute_03         in varchar2,
    p_attribute_04         in varchar2,
    p_attribute_05         in varchar2,
    p_attribute_06         in varchar2,
    p_attribute_07         in varchar2,
    p_attribute_08         in varchar2,
    p_attribute_09         in varchar2,
    p_attribute_10         in varchar2,
    p_attribute_11         in varchar2,
    p_attribute_12         in varchar2,
    p_attribute_13         in varchar2,
    p_attribute_14         in varchar2,
    p_attribute_15         in varchar2
    );

procedure set_feedback_origin (
    p_identifier  in varchar2,
    p_import_into in varchar2 );

procedure import_feedback (
    p_id                        in number,
    p_feedback_id               in number   default null,
    p_feedback_comment          in varchar2,
    p_developer_comment         in varchar2 default null,
    p_public_response           in varchar2 default null,
    p_feedback_status           in number   default null,
    p_feedback_type             in number   default null,
    p_tags                      in varchar2 default null,
    p_application_id            in number   default null,
    p_application_name          in varchar2 default null,
    p_page_id                   in number   default null,
    p_page_name                 in varchar2 default null,
    p_page_last_updated_by      in varchar2 default null,
    p_page_last_updated_on      in date     default null,
    p_session_id                in varchar2 default null,
    p_apex_user                 in varchar2 default null,
    p_user_email                in varchar2 default null,
    p_logging_email             in varchar2 default null,
    p_logging_security_group_id in number   default null,
    p_logged_by_workspace_name  in varchar2 default null,
    p_application_version       in varchar2 default null,
    p_parsing_schema            in varchar2 default null,
    p_http_user_agent           in varchar2 default null,
    p_remote_addr               in varchar2 default null,
    p_remote_user               in varchar2 default null,
    p_http_host                 in varchar2 default null,
    p_server_name               in varchar2 default null,
    p_server_port               in varchar2 default null,
    p_screen_width              in varchar2 default null,
    p_screen_height             in varchar2 default null,
    p_session_state             in varchar2 default null,
    p_session_info              in varchar2 default null,
    p_label_01                  in varchar2 default null,
    p_label_02                  in varchar2 default null,
    p_label_03                  in varchar2 default null,
    p_label_04                  in varchar2 default null,
    p_label_05                  in varchar2 default null,
    p_label_06                  in varchar2 default null,
    p_label_07                  in varchar2 default null,
    p_label_08                  in varchar2 default null,
    p_attribute_01              in varchar2 default null,
    p_attribute_02              in varchar2 default null,
    p_attribute_03              in varchar2 default null,
    p_attribute_04              in varchar2 default null,
    p_attribute_05              in varchar2 default null,
    p_attribute_06              in varchar2 default null,
    p_attribute_07              in varchar2 default null,
    p_attribute_08              in varchar2 default null,
    p_created_by                in varchar2                 default null,
    p_created_on                in timestamp with time zone default null,
    p_updated_by                in varchar2                 default null,
    p_updated_on                in timestamp with time zone default null );

procedure import_feedback_followup (
    p_id          in number,
    p_feedback_id in number,
    p_follow_up   in varchar2,
    p_email       in varchar2,
    p_created_by  in varchar2                 default null,
    p_created_on  in timestamp with time zone default null,
    p_updated_by  in varchar2                 default null,
    p_updated_on  in timestamp with time zone default null );

procedure parse_file_source (
    p_source               in varchar2,
    p_db_column           out varchar2,
    p_mimetype_column     out varchar2,
    p_filename_column     out varchar2,
    p_last_updated_col    out varchar2,
    p_charset_column      out varchar2,
    p_content_disposition out varchar2,
    p_download_link_text  out varchar2 );

-------------------------------
-- Websheet Procedures
--
procedure create_ws_app (
    p_id                            in number default null,
    p_name                          in varchar2 default null,
    p_owner                         in varchar2 default null,
    p_description                   in varchar2 default null,
    p_status                        in varchar2 default null,
    p_date_format                   in varchar2 default null,
    p_language                      in varchar2 default null,
    p_territory                     in varchar2 default null,
    p_home_page_id                  in number default null,
    p_page_style                    in number default null,
    p_custom_css                    in varchar2 default null,
    p_auth_id                       in number default null,
    p_acl_type                      in varchar2 default null,
    p_login_url                     in varchar2 default null,
    p_logout_url                    in varchar2 default null,
    p_allow_sql_yn                  in varchar2 default null,
    p_show_peer_navigation_yn       in varchar2 default null,
    p_show_child_navigation_yn      in varchar2 default null,
    p_show_annotations_control_yn   in varchar2 default null,
    p_show_reset_passwd_yn          in varchar2 default null,
    p_allow_public_access_yn        in varchar2 default null,
    p_login_page_message            in varchar2 default null,
    p_logo_type                     in varchar2 default null,
    p_logo_text                     in varchar2 default null,
    p_logo_text_attributes          in varchar2 default null,
    p_varchar2_table                in sys.dbms_sql.varchar2_table,
    p_logo_image_filename           in varchar2 default null,
    p_logo_image_mimetype           in varchar2 default null,
    p_logo_image_charset            in varchar2 default null,
    p_logo_image_last_update        in date default null,
    p_logo_image_attributes         in varchar2 default null,
    p_logo_filepath                 in varchar2 default null,
    p_logo_filepath_attributes      in varchar2 default null,
    p_email_from                    in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME'
    );

procedure create_ws_app_sug_objects (
    p_id                 in number      default null,
    p_ws_app_id          in number      default null,
    p_object_name        in varchar2    default null,
    p_object_comment     in varchar2    default null,
    p_last_updated_by    in varchar2    default null,
    p_last_updated_on    in date        default null,
    p_created_by         in varchar2    default null,
    p_created_on         in date        default null);

procedure create_ws_worksheet (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_region_id                  in number   default null,
    p_name                       in varchar2 default null,
    p_folder_id                  in number   default null,
    p_alias                      in varchar2 default null,
    p_report_id_item             in varchar2 default null,
    p_max_row_count              in varchar2 default null,
    p_max_row_count_message      in varchar2 default null,
    p_no_data_found_message      in varchar2 default null,
    p_max_rows_per_page          in varchar2 default null,
    p_search_button_label        in varchar2 default null,
    p_page_items_to_submit       in varchar2 default null,
    p_sort_asc_image             in varchar2 default null,
    p_sort_asc_image_attr        in varchar2 default null,
    p_sort_desc_image            in varchar2 default null,
    p_sort_desc_image_attr       in varchar2 default null,
    --
    p_sql_query                  in varchar2 default null,
    p_base_table_or_view         in varchar2 default null,
    p_base_pk1                   in varchar2 default null,
    p_base_pk2                   in varchar2 default null,
    p_base_pk3                   in varchar2 default null,
    p_sql_hint                   in varchar2 default null,
    --
    p_status                     in varchar2 default null,
    --
    p_allow_report_saving        in varchar2 default null,
    p_allow_save_rpt_public      in varchar2 default null,
    p_save_rpt_public_auth_scheme in varchar2 default null,
    p_allow_report_categories    in varchar2 default null,
    p_show_nulls_as              in varchar2 default null,
    p_pagination_type            in varchar2 default null,
    p_pagination_display_pos     in varchar2 default null,
    p_button_template            in number   default null,
    p_show_finder_drop_down      in varchar2 default null,
    p_show_display_row_count     in varchar2 default null,
    p_show_search_bar            in varchar2 default null,
    p_show_search_textbox        in varchar2 default null,
    p_show_actions_menu          in varchar2 default null,
    p_actions_menu_icon          in varchar2 default null,
    p_finder_icon                in varchar2 default null,
    p_report_list_mode           in varchar2 default null,
    --
    p_show_detail_link           in varchar2 default null,
    p_show_select_columns        in varchar2 default null,
    p_show_rows_per_page         in varchar2 default null,
    p_show_filter                in varchar2 default null,
    p_show_sort                  in varchar2 default null,
    p_show_control_break         in varchar2 default null,
    p_show_highlight             in varchar2 default null,
    p_show_computation           in varchar2 default null,
    p_show_aggregate             in varchar2 default null,
    p_show_chart                 in varchar2 default null,
    p_show_group_by              in varchar2 default null,
    p_show_notify                in varchar2 default null,
    p_show_calendar              in varchar2 default null,
    p_show_flashback             in varchar2 default null,
    p_show_reset                 in varchar2 default null,
    p_show_download              in varchar2 default null,
    p_show_help                  in varchar2 default null,
    p_download_formats           in varchar2 default null,
    p_download_filename          in varchar2 default null,
    p_csv_output_separator       in varchar2 default null,
    p_csv_output_enclosed_by     in varchar2 default null,
    p_email_from                 in varchar2 default null,
    --
    p_detail_link                in varchar2 default null,
    p_detail_link_text           in varchar2 default null,
    p_detail_link_attr           in varchar2 default null,
    p_detail_link_checksum_type  in varchar2 default null,
    p_detail_link_condition_type in varchar2 default null,
    p_detail_link_cond           in varchar2 default null,
    p_detail_link_cond2          in varchar2 default null,
    p_detail_link_auth_scheme    in varchar2 default null,
    --
    p_allow_exclude_null_values  in varchar2 default null,
    p_allow_hide_extra_columns   in varchar2 default null,
    --
    p_max_query_cost             in varchar2 default null,
    p_max_flashback              in varchar2 default null,
    p_worksheet_flags            in varchar2 default null,
    --
    p_icon_view_enabled_yn       in varchar2 default 'N',
    p_icon_view_use_custom       in varchar2 default 'N',
    p_icon_view_custom_link      in varchar2 default null,
    p_icon_view_link_column      in varchar2 default null,
    p_icon_view_img_src_column   in varchar2 default null,
    p_icon_view_label_column     in varchar2 default null,
    p_icon_view_img_attr_text    in varchar2 default null,
    p_icon_view_alt_text         in varchar2 default null,
    p_icon_view_title_text       in varchar2 default null,
    p_icon_view_columns_per_row  in number   default null,
    p_detail_view_enabled_yn     in varchar2 default 'N',
    p_detail_view_before_rows    in varchar2 default null,
    p_detail_view_for_each_row   in varchar2 default null,
    p_detail_view_after_rows     in varchar2 default null,
    --
    p_description                in varchar2 default null,
    p_owner                      in varchar2 default null,
    --
    p_internal_uid               in number default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME');

procedure create_ws_data_grid (
    p_id                     in number default null,
    p_ws_app_id              in number default null,
    p_worksheet_id           in number default null,
    p_status                 in varchar2 default null,
    p_publish_yn             in varchar2 default null,
    p_websheet_name          in varchar2 default null,
    p_websheet_alias         in varchar2 default null,
    p_websheet_type          in varchar2 default null,
    p_is_template            in varchar2 default null,
    p_ws_report_owner        in varchar2 default null,
    p_websheet_owner         in varchar2 default null,
    p_view_only_columns      in varchar2 default null,
    p_username_in_columns    in varchar2 default null,
    p_parent_column          in varchar2 default null,
    p_child_column           in varchar2 default null,
    p_row_pk1                in varchar2 default null,
    p_row_pk2                in varchar2 default null,
    p_row_pk3                in varchar2 default null,
    p_geo_url                in varchar2 default null,
    p_geo_proxy              in varchar2 default null,
    p_geo_addr_sep           in varchar2 default null,
    p_geo_resp_type          in varchar2 default null,
    p_geo_resp_ns            in varchar2 default null,
    p_geo_path_to_lat        in varchar2 default null,
    p_geo_path_to_long       in varchar2 default null,
    p_geo_resp_sep           in varchar2 default null,
    --
    p_id_offset              in number   default 0,
    p_target                 in varchar2 default 'PRIME');

procedure create_ws_column (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    --
    p_db_column_name          in varchar2 default null,
    p_display_order           in number   default null,
    p_data_grid_form_seq      in number   default null,
    p_group_id                in number   default null,
    p_column_identifier       in varchar2 default null,
    p_column_expr             in varchar2 default null,
    p_column_label            in varchar2 default null,
    p_report_label            in varchar2 default null,
    p_sync_form_label         in varchar2 default null,
    --
    p_display_in_default_rpt  in varchar2 default null,
    p_column_html_expression  in varchar2 default null,
    p_column_link             in varchar2 default null,
    p_column_linktext         in varchar2 default null,
    p_column_link_attr        in varchar2 default null,
    p_column_link_checksum_type in varchar2 default null,
    --
    p_is_sortable             in varchar2 default null,
    p_allow_sorting           in varchar2 default null,
    p_allow_filtering         in varchar2 default null,
    p_allow_highlighting      in varchar2 default null,
    p_allow_ctrl_breaks       in varchar2 default null,
    p_allow_aggregations      in varchar2 default null,
    p_allow_computations      in varchar2 default null,
    p_allow_charting          in varchar2 default null,
    p_allow_group_by          in varchar2 default null,
    p_allow_hide              in varchar2 default null,
    --
    p_use_custom              in varchar2 default null,
    p_custom_filter           in varchar2 default null,
    p_base_column             in varchar2 default null,
    p_allow_filters           in varchar2 default null,
    --
    p_others_may_edit         in varchar2 default null,
    p_others_may_view         in varchar2 default null,
    --
    p_column_type             in varchar2 default null,
    p_display_as              in varchar2 default null,
    p_display_text_as         in varchar2 default null,
    p_heading_alignment       in varchar2 default null,
    p_column_alignment        in varchar2 default null,
    p_max_length              in number   default null,
    p_display_width           in number   default null,
    p_display_height          in number   default null,
    --
    p_allow_null              in varchar2 default null,
    p_format_mask             in varchar2 default null,
    p_tz_dependent            in varchar2 default null,
    p_fact_table_key          in varchar2 default null,
    p_dimension_table         in varchar2 default null,
    p_dimension_table_id      in varchar2 default null,
    p_dimension_table_value   in varchar2 default null,
    --
    p_rpt_distinct_lov        in varchar2 default null,
    p_rpt_lov                 in varchar2 default null,
    p_rpt_named_lov           in number   default null,
    p_rpt_show_filter_lov     in varchar2 default null,
    p_rpt_filter_date_ranges  in varchar2 default null,
    --
    p_static_lov              in varchar2 default null,
    p_lov_null_text           in varchar2 default null,
    p_lov_allow_new_values    in varchar2 default null,
    p_lov_is_distinct_values  in varchar2 default null,
    p_lov_num_columns         in number   default null,
    p_lov_id                  in number   default null,
    --
    p_computation_type        in varchar2 default null,
    p_computation_expr_1      in varchar2 default null,
    p_computation_expr_2      in varchar2 default null,
    --
    p_validation_type         in varchar2 default null,
    p_validation_expr_1       in varchar2 default null,
    p_validation_expr_2       in varchar2 default null,
    --
    p_display_condition_type  in varchar2 default null,
    p_display_condition       in varchar2 default null,
    p_display_condition2      in varchar2 default null,
    --
    p_default_value           in varchar2 default null,
    p_default_when            in varchar2 default null,
    p_help_text               in varchar2 default null,
    p_security_scheme         in varchar2 default null,
    p_column_flags            in varchar2 default null,
    p_column_comment          in varchar2 default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');

procedure create_ws_col_group (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    p_name                    in varchar2 default null,
    p_description             in varchar2 default null,
    p_display_sequence        in number   default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');


procedure create_ws_rpt (
    p_id                      in number   default null,
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_worksheet_id            in number   default null,
    p_websheet_id             in number   default null,
    p_session_id              in number   default null,
    p_base_report_id          in number   default null,
    p_application_user        in varchar2 default null,
    p_name                    in varchar2 default null,
    p_description             in varchar2 default null,
    p_report_seq              in number   default null,
    p_report_type             in varchar2 default null,
    p_report_alias            in varchar2 default null,
    p_status                  in varchar2 default null,
    p_category_id             in number   default null,
    p_autosave                in varchar2 default null,
    p_is_default              in varchar2 default null,
    --
    p_display_rows            in number   default null,
    p_view_mode               in varchar2 default null,
    p_report_columns          in varchar2 default null,
    --
    p_sort_column_1           in varchar2 default null,
    p_sort_direction_1        in varchar2 default null,
    p_sort_column_2           in varchar2 default null,
    p_sort_direction_2        in varchar2 default null,
    p_sort_column_3           in varchar2 default null,
    p_sort_direction_3        in varchar2 default null,
    p_sort_column_4           in varchar2 default null,
    p_sort_direction_4        in varchar2 default null,
    p_sort_column_5           in varchar2 default null,
    p_sort_direction_5        in varchar2 default null,
    p_sort_column_6           in varchar2 default null,
    p_sort_direction_6        in varchar2 default null,
    --
    p_break_on                in varchar2 default null,
    p_break_enabled_on        in varchar2 default null,
    p_control_break_options   in varchar2 default null,
    --
    p_sum_columns_on_break    in varchar2 default null,
    p_avg_columns_on_break    in varchar2 default null,
    p_max_columns_on_break    in varchar2 default null,
    p_min_columns_on_break    in varchar2 default null,
    p_median_columns_on_break in varchar2 default null,
    p_mode_columns_on_break   in varchar2 default null,
    p_count_columns_on_break  in varchar2 default null,
    p_count_distnt_col_on_break in varchar2 default null,
    --
    p_flashback_mins_ago      in varchar2 default null,
    p_flashback_enabled       in varchar2 default null,
    --
    p_chart_type              in varchar2 default null,
    p_chart_3d                in varchar2 default null,
    p_chart_label_column      in varchar2 default null,
    p_chart_label_title       in varchar2 default null,
    p_chart_value_column      in varchar2 default null,
    p_chart_aggregate         in varchar2 default null,
    p_chart_value_title       in varchar2 default null,
    p_chart_sorting           in varchar2 default null,
    --
    p_calendar_date_column    in varchar2 default null,
    p_calendar_display_column in varchar2 default null,
    --
    p_id_offset               in number   default 0,
    p_target                  in varchar2 default 'PRIME');

procedure create_ws_condition (
    p_id                    in number   default null,
    p_flow_id               in number   default null,
    p_page_id               in number   default null,
    p_worksheet_id          in number   default null,
    p_websheet_id           in number   default null,
    p_report_id             in number   default null,
    p_name                  in varchar2 default null,
    p_condition_type        in varchar2 default null,
    p_allow_delete          in varchar2 default null,
    --
    p_column_name           in varchar2 default null,
    p_operator              in varchar2 default null,
    p_expr_type             in varchar2 default null,
    p_expr                  in varchar2 default null,
    p_expr2                 in varchar2 default null,
    p_time_zone             in varchar2 default null,
    p_condition_sql         in varchar2 default null,
    p_condition_display     in varchar2 default null,
    --
    p_enabled               in varchar2 default null,
    --
    p_highlight_sequence    in number   default null,
    p_row_bg_color          in varchar2 default null,
    p_row_font_color        in varchar2 default null,
    p_row_format            in varchar2 default null,
    p_column_bg_color       in varchar2 default null,
    p_column_font_color     in varchar2 default null,
    p_column_format         in varchar2 default null,
    --
    p_id_offset             in number   default 0,
    p_target                in varchar2 default 'PRIME');

procedure create_ws_computation (
    p_id                    in number   default null,
    p_flow_id               in number   default null,
    p_page_id               in number   default null,
    p_worksheet_id          in number   default null,
    p_websheet_id           in number   default null,
    p_report_id             in number   default null,
    --
    p_db_column_name        in varchar2 default null,
    p_column_identifier     in varchar2 default null,
    p_computation_expr      in varchar2 default null,
    p_format_mask           in varchar2 default null,
    p_column_type           in varchar2 default null,
    --
    p_column_label          in varchar2 default null,
    p_report_label          in varchar2 default null,
    --
    p_id_offset             in number   default 0,
    p_target                in varchar2 default 'PRIME');

procedure create_ws_group_by (
    p_id                         in number   default null,
    p_flow_id                    in number   default null,
    p_page_id                    in number   default null,
    p_worksheet_id               in number   default null,
    p_websheet_id                in number   default null,
    p_report_id                  in number   default null,
    --
    p_group_by_columns           in varchar2 default null,
    p_function_01                in varchar2 default null,
    p_function_column_01         in varchar2 default null,
    p_function_db_column_name_01 in varchar2 default null,
    p_function_label_01          in varchar2 default null,
    p_function_format_mask_01    in varchar2 default null,
    p_function_sum_01            in varchar2 default null,
    p_function_02                in varchar2 default null,
    p_function_column_02         in varchar2 default null,
    p_function_db_column_name_02 in varchar2 default null,
    p_function_label_02          in varchar2 default null,
    p_function_format_mask_02    in varchar2 default null,
    p_function_sum_02            in varchar2 default null,
    p_function_03                in varchar2 default null,
    p_function_column_03         in varchar2 default null,
    p_function_db_column_name_03 in varchar2 default null,
    p_function_label_03          in varchar2 default null,
    p_function_format_mask_03    in varchar2 default null,
    p_function_sum_03            in varchar2 default null,
    p_function_04                in varchar2 default null,
    p_function_column_04         in varchar2 default null,
    p_function_db_column_name_04 in varchar2 default null,
    p_function_label_04          in varchar2 default null,
    p_function_format_mask_04    in varchar2 default null,
    p_function_sum_04            in varchar2 default null,
    p_function_05                in varchar2 default null,
    p_function_column_05         in varchar2 default null,
    p_function_db_column_name_05 in varchar2 default null,
    p_function_label_05          in varchar2 default null,
    p_function_format_mask_05    in varchar2 default null,
    p_function_sum_05            in varchar2 default null,
    p_function_06                in varchar2 default null,
    p_function_column_06         in varchar2 default null,
    p_function_db_column_name_06 in varchar2 default null,
    p_function_label_06          in varchar2 default null,
    p_function_format_mask_06    in varchar2 default null,
    p_function_sum_06            in varchar2 default null,
    p_function_07                in varchar2 default null,
    p_function_column_07         in varchar2 default null,
    p_function_db_column_name_07 in varchar2 default null,
    p_function_label_07          in varchar2 default null,
    p_function_format_mask_07    in varchar2 default null,
    p_function_sum_07            in varchar2 default null,
    p_function_08                in varchar2 default null,
    p_function_column_08         in varchar2 default null,
    p_function_db_column_name_08 in varchar2 default null,
    p_function_label_08          in varchar2 default null,
    p_function_format_mask_08    in varchar2 default null,
    p_function_sum_08            in varchar2 default null,
    p_function_09                in varchar2 default null,
    p_function_column_09         in varchar2 default null,
    p_function_db_column_name_09 in varchar2 default null,
    p_function_label_09          in varchar2 default null,
    p_function_format_mask_09    in varchar2 default null,
    p_function_sum_09            in varchar2 default null,
    p_function_10                in varchar2 default null,
    p_function_column_10         in varchar2 default null,
    p_function_db_column_name_10 in varchar2 default null,
    p_function_label_10          in varchar2 default null,
    p_function_format_mask_10    in varchar2 default null,
    p_function_sum_10            in varchar2 default null,
    p_function_11                in varchar2 default null,
    p_function_column_11         in varchar2 default null,
    p_function_db_column_name_11 in varchar2 default null,
    p_function_label_11          in varchar2 default null,
    p_function_format_mask_11    in varchar2 default null,
    p_function_sum_11            in varchar2 default null,
    p_function_12                in varchar2 default null,
    p_function_column_12         in varchar2 default null,
    p_function_db_column_name_12 in varchar2 default null,
    p_function_label_12          in varchar2 default null,
    p_function_format_mask_12    in varchar2 default null,
    p_function_sum_12            in varchar2 default null,
    p_sort_column_01             in varchar2 default null,
    p_sort_direction_01          in varchar2 default null,
    p_sort_column_02             in varchar2 default null,
    p_sort_direction_02          in varchar2 default null,
    p_sort_column_03             in varchar2 default null,
    p_sort_direction_03          in varchar2 default null,
    p_sort_column_04             in varchar2 default null,
    p_sort_direction_04          in varchar2 default null,
    p_sort_column_05             in varchar2 default null,
    p_sort_direction_05          in varchar2 default null,
    p_sort_column_06             in varchar2 default null,
    p_sort_direction_06          in varchar2 default null,
    p_sort_column_07             in varchar2 default null,
    p_sort_direction_07          in varchar2 default null,
    p_sort_column_08             in varchar2 default null,
    p_sort_direction_08          in varchar2 default null,
    p_sort_column_09             in varchar2 default null,
    p_sort_direction_09          in varchar2 default null,
    p_sort_column_10             in varchar2 default null,
    p_sort_direction_10          in varchar2 default null,
    p_sort_column_11             in varchar2 default null,
    p_sort_direction_11          in varchar2 default null,
    p_sort_column_12             in varchar2 default null,
    p_sort_direction_12          in varchar2 default null,
    --
    p_id_offset                  in number   default 0,
    p_target                     in varchar2 default 'PRIME');


procedure create_ws_notify (
    p_id                     in number   default null,
    p_flow_id                in number   default null,
    p_worksheet_id           in number   default null,
    p_websheet_id            in number   default null,
    p_report_id              in number   default null,
    p_owner                  in varchar2 default null,
    p_language               in varchar2 default null,
    p_email_from             in varchar2 default null,
    p_email_subject          in varchar2 default null,
    p_email_address          in varchar2 default null,
    p_start_date             in varchar2 default null,
    p_end_date               in varchar2 default null,
    p_end_day                in number   default null,
    p_end_day_unit           in varchar2 default null,
    p_offset_date            in varchar2 default null,
    p_notify_interval        in varchar2 default null,
    p_status                 in varchar2 default null,
    p_notify_error           in varchar2 default null,
    --
    p_id_offset              in number   default 0,
    p_target                 in varchar2 default 'PRIME');

procedure create_ws_lov (
    p_id                  in number default null,
    p_worksheet_id        in number default null,
    p_websheet_id         in number default null,
    p_name                in varchar default null,
    --
    p_id_offset           in number   default 0,
    p_target              in varchar2 default 'PRIME'
    );

procedure create_ws_lov_entries (
    p_id                  in number default null,
    p_worksheet_id        in number default null,
    p_websheet_id         in number default null,
    p_lov_id              in number default null,
    p_display_sequence    in number default null,
    p_entry_text          in varchar2 default null,
    --
    p_id_offset           in number   default 0,
    p_target              in varchar2 default 'PRIME'
    );

procedure create_ws_col_validation (
    p_id                  in number default null,
    p_ws_app_id           in number default null,
    p_worksheet_id        in number default null,
    p_websheet_id         in number default null,
    p_validation_level    in varchar2 default null,
    p_validation_seq      in number default null,
    p_validation_name     in varchar2 default null,
    p_validation_type     in varchar2 default null,
    p_validation_expr1    in varchar2 default null,
    p_validation_expr2    in varchar2 default null,
    p_error_message       in varchar2 default null,
    --
    p_id_offset           in number   default 0,
    p_target              in varchar2 default 'PRIME'
    );

procedure create_ws_page (
    p_id                  in number default null,
    p_page_number         in number default null,
    p_ws_app_id           in number default null,
    p_parent_page_id      in number default null,
    p_name                in varchar2 default  null,
    p_upper_name          in varchar2 default  null,
    p_page_alias          in varchar2 default  null,
    p_owner               in varchar2 default  null,
    p_status              in varchar2 default  null,
    p_description         in varchar2 default  null,
    --
    p_id_offset           in number   default 0,
    p_target              in varchar2 default 'PRIME'
    );

procedure remove_ws_app (
    p_ws_app_id in number   default null);

procedure create_load_table(
   p_id                       in number    default null,
   p_flow_id                  in number,
   p_name                     in varchar2,
   p_owner                    in varchar2,
   p_table_name               in varchar2,
   p_unique_column_1          in varchar2,
   p_is_uk1_case_sensitive    in varchar2,
   p_unique_column_2          in varchar2  default null,
   p_is_uk2_case_sensitive    in varchar2  default null,
   p_unique_column_3          in varchar2  default null,
   p_is_uk3_case_sensitive    in varchar2  default null,
   p_version_column_name      in varchar2  default null,
   p_column_names_lov_id      in number    default null,
   p_wizard_page_ids          in varchar2  default null,
   p_comments                 in varchar2  default null);

procedure create_load_table_lookup(
   p_id                        in number    default null,
   p_flow_id                   in number,
   p_load_table_id             in number,
   p_load_column_name          in varchar2,
   p_lookup_owner              in varchar2,
   p_lookup_table_name         in varchar2,
   p_key_column                in varchar2,
   p_display_column            in varchar2,
   p_alternative_key_column1     in varchar2  default null,
   p_alternative_display_column1 in varchar2  default null,
   p_alternative_key_column2     in varchar2  default null,
   p_alternative_display_column2 in varchar2  default null,
   p_where_clause              in varchar2 default null,
   p_insert_new_value          in varchar2  default 'N',
   p_error_message             in varchar2  default null);

procedure create_load_table_rule(
   p_id                        in number    default null,
   p_flow_id                   in number,
   p_load_table_id             in number,
   p_load_column_name          in varchar2,
   p_rule_name                 in varchar2,
   p_rule_type                 in varchar2,
   p_rule_sequence             in number,
   p_rule_expression1          in varchar2  default null,
   p_rule_expression2          in varchar2  default null,
   p_error_message             in varchar2  default null);
--
-- Procedure to change the status of Build Options
-- p_app: The Application id
-- p_id: The Build Option Id
-- p_build_status: Status with possible values 'INCLUDE','EXCLUDE' (Both uppercase)
procedure set_build_option_status(
   p_application_id    in number,
   p_id                in number,
   p_build_status      in varchar2 );

--
-- Function to get the status of Build Options
-- p_application_id: The Application id
-- p_id:  The Build Option Id
--
function get_build_option_status(
   p_application_id   in number,
   p_id               in number )
return varchar2;

--
-- Function to get the status of Build Options
-- p_application_id: The Application id
-- p_build_option_name: Build Option Name
--
function get_build_option_status(
   p_application_id   in number,
   p_build_option_name in varchar2 )
return varchar2;


procedure post_import_process (
    p_flow_id    in number);

-- Used by SQL Developer
procedure create_app_from_query (
    p_schema                     in varchar2,
    p_workspace_id               in number,
    p_application_name           in varchar2,
    p_authentication             in varchar2 default 'DATABASE ACCOUNT',
    p_application_id             out number,
    p_theme                      in number,
    p_theme_type                 in varchar2,
    p_sql                        in varchar2,
    p_page_name                  in varchar2 default 'Page 1',
    p_max_displayed_columns      in number default 30,
    p_group_name                 in varchar2 default null);

------------------------
-- Complete workspace export
--
procedure create_app_build_pref (
    p_id                               in number      default null,
    p_default_parsing_schema           in varchar2    default null,
    p_default_auth_scheme              in varchar2    default null,
    p_default_app_theme                in number      default null,
    p_default_tabs                     in varchar2    default null,
    p_default_proxy_server             in varchar2    default null,
    p_default_language                 in varchar2    default null,
    p_default_language_derived         in varchar2    default null,
    p_date_format                      in varchar2    default null,
    p_date_time_format                 in varchar2    default null,
    p_timestamp_format                 in varchar2    default null,
    p_timestamp_tz_format              in varchar2    default null,
    p_created_on                       in date        default null,
    p_created_by                       in varchar2    default null,
    p_updated_on                       in date        default null,
    p_updated_by                       in varchar2    default null );

procedure create_clickthru_log$ (
    p_clickdate                        in date        default null,
    p_category                         in varchar2    default null,
    p_id                               in number      default null,
    p_flow_user                        in varchar2    default null,
    p_ip                               in varchar2    default null );

procedure create_clickthru_log2$ (
    p_clickdate                        in date        default null,
    p_category                         in varchar2    default null,
    p_id                               in number      default null,
    p_flow_user                        in varchar2    default null,
    p_ip                               in varchar2    default null );

procedure create_data_load_bad_log (
    p_id                               in number      default null,
    p_load_id                          in number      default null,
    p_errm                             in varchar2    default null,
    p_data                             in varchar2    default null );

procedure create_data_load_unload (
    p_id                               in number      default null,
    p_platform                         in varchar2    default null,
    p_file_columns                     in varchar2    default null,
    p_data_type                        in varchar2    default null,
    p_data_schema                      in varchar2    default null,
    p_data_table                       in varchar2    default null,
    p_success_rows                     in number      default null,
    p_failed_rows                      in number      default null,
    p_data_id                          in number      default null,
    p_job_id                           in number      default null,
    p_created_on                       in date        default null,
    p_created_by                       in varchar2    default null,
    p_created_by_id                    in number      default null,
    p_enclosed_by                      in varchar2    default null,
    p_separator                        in varchar2    default null );

procedure create_mail_attachments (
    p_id                               in number      default null,
    p_mail_id                          in number      default null,
    p_filename                         in varchar2    default null,
    p_mime_type                        in varchar2    default null,
    p_inline                           in varchar2    default null,
    p_attachment                       in sys.dbms_sql.varchar2_table default wwv_flow_api.empty_varchar2_table,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null);

procedure create_mail_log (
    p_mail_to                          in varchar2    default null,
    p_mail_from                        in varchar2    default null,
    p_mail_replyto                     in varchar2    default null,
    p_mail_subj                        in varchar2    default null,
    p_mail_cc                          in varchar2    default null,
    p_mail_bcc                         in varchar2    default null,
    p_mail_send_error                  in varchar2    default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_mail_queue (
    p_id                               in number      default null,
    p_mail_to                          in varchar2    default null,
    p_mail_from                        in varchar2    default null,
    p_mail_replyto                     in varchar2    default null,
    p_mail_subj                        in varchar2    default null,
    p_mail_cc                          in varchar2    default null,
    p_mail_bcc                         in varchar2    default null,
    p_mail_body                        in clob        default null,
    p_mail_body_html                   in clob        default null,
    p_mail_send_count                  in number      default null,
    p_mail_send_error                  in varchar2    default null,
    p_includes_html                    in number      default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_model_pages (
    p_id                               in number      default null,
    p_model_id                         in number      default null,
    p_page_id                          in number      default null,
    p_parent_page_id                   in number      default null,
    p_display_sequence                 in number      default null,
    p_page_type                        in varchar2    default null,
    p_page_source                      in varchar2    default null,
    p_page_name                        in varchar2    default null,
    p_source                           in clob        default null,
    p_block_id                         in number      default null,
    p_report_id                        in number      default null,
    p_mig_comments                     in varchar2    default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_model_page_regions (
    p_id                               in number      default null,
    p_model_page_id                    in number      default null,
    p_region_id                        in number      default null,
    p_region_name                      in varchar2    default null,
    p_region_source                    in varchar2    default null,
    p_source                           in clob        default null,
    p_display_sequence                 in number      default null,
    p_report_implementation            in varchar2    default null,
    p_search_enabled                   in varchar2    default null,
    p_link_column                      in varchar2    default null,
    p_link_text                        in varchar2    default null,
    p_parent_link_from_column1         in varchar2    default null,
    p_parent_link_from_column2         in varchar2    default null,
    p_link_to_column1                  in varchar2    default null,
    p_link_to_column2                  in varchar2    default null,
    p_display_column                   in varchar2    default null,
    p_supp_info_column                 in varchar2    default null,
    p_report_filter                    in varchar2    default null,
    p_column_heading_sorting           in varchar2    default null,
    p_download_link                    in varchar2    default null,
    p_chart_title                      in varchar2    default null,
    p_chart_type                       in varchar2    default null,
    p_chart_rendering                  in varchar2    default null,
    p_x_axis_title                     in varchar2    default null,
    p_y_axis_title                     in varchar2    default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_model_page_cols (
    p_id                               in number      default null,
    p_model_region_id                  in number      default null,
    p_column_name                      in varchar2    default null,
    p_column_display_name              in varchar2    default null,
    p_column_sequence                  in number      default null,
    p_help_text                        in varchar2    default null,
    p_display_as_form                  in varchar2    default null,
    p_form_attribute_01                in varchar2    default null,
    p_form_attribute_02                in varchar2    default null,
    p_form_attribute_03                in varchar2    default null,
    p_form_attribute_04                in varchar2    default null,
    p_form_attribute_05                in varchar2    default null,
    p_form_attribute_06                in varchar2    default null,
    p_form_attribute_07                in varchar2    default null,
    p_form_attribute_08                in varchar2    default null,
    p_form_attribute_09                in varchar2    default null,
    p_form_attribute_10                in varchar2    default null,
    p_form_attribute_11                in varchar2    default null,
    p_form_attribute_12                in varchar2    default null,
    p_form_attribute_13                in varchar2    default null,
    p_form_attribute_14                in varchar2    default null,
    p_form_attribute_15                in varchar2    default null,
    p_display_as_tab_form              in varchar2    default null,
    p_datatype                         in varchar2    default null,
    p_alignment                        in varchar2    default null,
    p_display_width                    in number      default null,
    p_max_width                        in number      default null,
    p_height                           in number      default null,
    p_format_mask                      in varchar2    default null,
    p_hidden_column                    in varchar2    default null,
    p_sort_sequence                    in number      default null,
    p_sort_dir                         in number      default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_password_history (
    p_id                               in number      default null,
    p_user_id                          in number      default null,
    p_password                         in raw         default null,
    p_created                          in date        default null );

procedure create_pkg_app_map (
    p_id                               in number      default null,
    p_app_id                           in number      default null,
    p_installed_app_id                 in number      default null,
    p_installed_ws_id                  in number      default null,
    p_installed_build_version          in number      default null,
    p_app_locked                       in varchar2    default null,
    p_created                          in date        default null,
    p_created_by                       in varchar2    default null,
    p_updated                          in date        default null,
    p_updated_by                       in varchar2    default null );

procedure create_preferences$ (
    p_id                               in number      default null,
    p_user_id                          in varchar2    default null,
    p_preference_name                  in varchar2    default null,
    p_attribute_value                  in varchar2    default null );

procedure create_provision_serice_mod (
    p_id                               in number      default null,
    p_service_name                     in varchar2    default null,
    p_service_attribute_1              in varchar2    default null,
    p_service_attribute_2              in varchar2    default null,
    p_service_attribute_3              in varchar2    default null,
    p_service_attribute_4              in varchar2    default null,
    p_service_attribute_5              in varchar2    default null,
    p_service_attribute_6              in varchar2    default null,
    p_service_attribute_7              in varchar2    default null,
    p_service_attribute_8              in varchar2    default null,
    p_requested_on                     in date        default null,
    p_requested_by                     in varchar2    default null,
    p_last_status_change_on            in date        default null,
    p_last_status_change_by            in varchar2    default null,
    p_request_status                   in varchar2    default null,
    p_request_work_log                 in varchar2    default null,
    p_request_comments                 in varchar2    default null );

procedure create_qb_saved_cond (
    p_id                               in number      default null,
    p_col                              in varchar2    default null,
    p_alias                            in varchar2    default null,
    p_fv                               in varchar2    default null,
    p_fp                               in varchar2    default null,
    p_out                              in varchar2    default null,
    p_st                               in varchar2    default null,
    p_so                               in varchar2    default null,
    p_grp                              in varchar2    default null,
    p_con                              in varchar2    default null,
    p_ord                              in number      default null );

procedure create_qb_saved_join (
    p_id                               in number      default null,
    p_field1                           in varchar2    default null,
    p_field2                           in varchar2    default null,
    p_cond                             in varchar2    default null );

procedure create_qb_saved_query (
    p_id                               in number      default null,
    p_query_owner                      in varchar2    default null,
    p_title                            in varchar2    default null,
    p_qb_sql                           in clob        default null,
    p_description                      in varchar2    default null,
    p_query_type                       in varchar2    default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

procedure create_qb_saved_tabs (
    p_id                               in number      default null,
    p_oid                              in number      default null,
    p_cnt                              in number      default null,
    p_top                              in varchar2    default null,
    p_left                             in varchar2    default null,
    p_tname                            in varchar2    default null );

procedure create_rt$approvals (
    p_id                               in number      default null,
    p_client_id                        in number      default null,
    p_user_name                        in varchar2    default null,
    p_status                           in varchar2    default null,
    p_row_version_number               in number      default null );

procedure create_rt$approval_privs (
    p_id                               in number      default null,
    p_approval_id                      in number      default null,
    p_privilege_id                     in number      default null,
    p_row_version_number               in number      default null );

procedure create_rt$clients (
    p_id                               in number      default null,
    p_name                             in varchar2    default null,
    p_description                      in varchar2    default null,
    p_auth_flow                        in varchar2    default null,
    p_apex_app_id                      in number      default null,
    p_response_type                    in varchar2    default null,
    p_client_id                        in varchar2    default null,
    p_client_secret                    in varchar2    default null,
    p_redirect_uri                     in varchar2    default null,
    p_support_email                    in varchar2    default null,
    p_about_url                        in varchar2    default null,
    p_row_version_number               in number      default null );

procedure create_rt$client_privileges (
    p_id                               in number      default null,
    p_client_id                        in number      default null,
    p_privilege_id                     in number      default null,
    p_row_version_number               in number      default null );

procedure create_rt$errors (
    p_id                               in number      default null,
    p_handler_id                       in number      default null,
    p_request_path                     in varchar2    default null,
    p_request_parameters               in varchar2    default null,
    p_parsed_schema                    in varchar2    default null,
    p_sql_error_code                   in number      default null,
    p_sql_error_message                in varchar2    default null );

procedure create_rt$pending_approvals (
    p_id                               in number      default null,
    p_approval_id                      in number      default null,
    p_client_state                     in varchar2    default null,
    p_row_version_number               in number      default null );

procedure create_rt$user_sessions (
    p_id                               in number      default null,
    p_approval_id                      in number      default null,
    p_apex_session_id                  in number      default null,
    p_bearer_token                     in varchar2    default null,
    p_refresh_token                    in varchar2    default null,
    p_token_expiry                     in timestamp   default null,
    p_refresh_expiry                   in timestamp   default null,
    p_client_state                     in varchar2    default null,
    p_row_version_number               in number      default null );

procedure create_sw_detail_results (
    p_id                               in number      default null,
    p_result_id                        in number      default null,
    p_file_id                          in number      default null,
    p_seq_id                           in number      default null,
    p_stmt_num                         in number      default null,
    p_stmt_text                        in clob        default null,
    p_result                           in clob        default null,
    p_result_size                      in number      default null,
    p_result_rows                      in number      default null,
    p_msg                              in varchar2    default null,
    p_success                          in varchar2    default null,
    p_failure                          in varchar2    default null,
    p_started                          in date        default null,
    p_start_time                       in number      default null,
    p_ended                            in date        default null,
    p_end_time                         in number      default null,
    p_run_complete                     in varchar2    default null,
    p_last_updated                     in date        default null );

procedure create_sw_results (
    p_id                               in number      default null,
    p_file_id                          in number      default null,
    p_job_id                           in number      default null,
    p_run_by                           in varchar2    default null,
    p_run_as                           in varchar2    default null,
    p_started                          in date        default null,
    p_start_time                       in number      default null,
    p_ended                            in date        default null,
    p_end_time                         in number      default null,
    p_status                           in varchar2    default null,
    p_run_comments                     in varchar2    default null );

procedure create_sw_sql_cmds (
    p_id                               in number      default null,
    p_command                          in clob        default null,
    p_parsed_schema                    in varchar2    default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null );

procedure create_sw_stmts (
    p_id                               in number      default null,
    p_file_id                          in number      default null,
    p_stmt_number                      in number      default null,
    p_src_line_number                  in number      default null,
    p_offset                           in number      default null,
    p_length                           in number      default null,
    p_stmt_class                       in number      default null,
    p_stmt_id                          in number      default null,
    p_isrunnable                       in varchar2    default null,
    p_stmt                             in clob        default null );

procedure create_user_access_log1$ (
    p_login_name                       in varchar2    default null,
    p_auth_method                      in varchar2    default null,
    p_app                              in number      default null,
    p_owner                            in varchar2    default null,
    p_access_date                      in date        default null,
    p_ip_address                       in varchar2    default null,
    p_remote_user                      in varchar2    default null,
    p_auth_result                      in number      default null,
    p_custom_status_text               in varchar2    default null );

procedure create_user_access_log2$ (
    p_login_name                       in varchar2    default null,
    p_auth_method                      in varchar2    default null,
    p_app                              in number      default null,
    p_owner                            in varchar2    default null,
    p_access_date                      in date        default null,
    p_ip_address                       in varchar2    default null,
    p_remote_user                      in varchar2    default null,
    p_auth_result                      in number      default null,
    p_custom_status_text               in varchar2    default null );

procedure create_models (
    p_id                               in number      default null,
    p_session_id                       in number      default null,
    p_flow_id                          in number      default null,
    p_owner                            in varchar2    default null,
    p_name                             in varchar2    default null,
    p_model_complete                   in varchar2    default null,
    p_created_by                       in varchar2    default null,
    p_created_on                       in date        default null,
    p_last_updated_by                  in varchar2    default null,
    p_last_updated_on                  in date        default null );

end wwv_flow_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FILE_API"
as

g_file_inserted       boolean := false;
g_file_inserted_count pls_integer := 0;

/*
 * Clean a directory varchar2 value
 */
function clean_dirname(
    p_dir                       in varchar2)
    return varchar2
    ;

/*
 * Clean a filename varchar2 value
 */
function clean_filename(
    p_file                      in varchar2)
    return varchar2
    ;

/*
 * Take a BLOB, and write it to a table of VARCHAR2's. You can then use
 *  varchar2_to_blob to reconstruct your binary objects from your varchars'2.
 */
function blob_to_varchar2(
    p_blob                      in blob)
    return sys.dbms_sql.varchar2_table
    ;

/*
 * Take a table of varchar2s, and write them to a blob.
 */
function varchar2_to_blob(
    p_varchar2_tab              in sys.dbms_sql.varchar2_table)
    return blob
    ;

/*
 * Create a new record in the wwv_flow_file_objects$ table.
 */
function new_file_object$(
    p_name                    in out varchar2,
    p_blob                        in blob,
    p_mimetype                    in varchar2)
    return number
    ;

procedure remove_file(
    p_id                        in number,
    p_file_path                 in varchar2,
    p_file_name                 in varchar2)
    ;

function get_file_id (
   p_file_name                  in varchar2)
   return number;

procedure set_file_security_group_id (
   p_file_name                  in varchar2)
   ;

procedure set_file_security_group_id (
   p_file_id                    in number)
   ;

procedure create_file (
       p_id              in number default null,
       p_flow_id         in number default null,
       p_name            in varchar2 default null,
       p_pathid          in number default null,
       p_filename        in varchar2 default null,
       p_title           in varchar2 default null,
       p_mime_type       in varchar2 default null,
       p_doc_size        in number default null,
       p_dad_charset     in varchar2 default null,
       p_created_by      in varchar2 default null,
       p_created_on      in date default null,
       p_updated_by      in varchar2 default null,
       p_updated_on      in date default null,
       p_deleted_as_of   in date default null,
       p_last_updated    in date default null,
       p_content_type    in varchar2 default null,
       p_blob_content    in blob default null,
       p_language        in varchar2 default null,
       p_description     in varchar2 default null,
       p_file_type       in varchar2 default null)
       ;

end wwv_flow_file_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FILE_MGR"
as

-- Copyright (c) Oracle Corporation 2000-2008. All Rights Reserved.
--
--    DESCRIPTION
--      File Upload/Download services
--
--    SECURITY
--
--    NOTES
--      Package Body should be wrapped
--

procedure show_download_format_page (
    p_format       in varchar2 default null)
    ;

function get_file_id(
    p_name in varchar2)
    return number
    ;

procedure process_download
    ;

--==============================================================================
-- Procedure to download a file identified by it's id.
-- Note: the parameter p_mime_type will be ignored and is deprecated.
--==============================================================================
procedure get_file(
    p_id        in varchar2,
    p_mime_type in varchar2 default null, /* deprecated */
    p_inline    in varchar2 default 'NO' );

--==============================================================================
-- Procedure to download a workspace or application file identified by its name.
--==============================================================================
procedure get_file(
    p_fname             in varchar2,
    p_security_group_id in varchar2,
    p_flow_id           in varchar2 default null,
    p_inline            in varchar2 default 'YES' );

--==============================================================================
-- Procedure to download a plugin file identified by its name.
-- If the file is a text file, all occurences of #PLUGIN_PREFIX# are replaced by
-- the URL to access a plugin file.
--==============================================================================
procedure get_file (
    p_plugin_id         in number,
    p_security_group_id in number,
    p_file_name         in varchar2 );

procedure download_file (
    p_file_content    in blob,
    p_file_name       in varchar2,
    p_mime_type       in varchar2,
    p_file_charset    in varchar2,
    p_last_updated_on in date,
    p_etag            in varchar2,
    p_is_attachment   in boolean default true );

--==============================================================================
-- Procedure to download a Websheet file identified by its ID.
--==============================================================================
procedure get_ws_file (
    s  in number, -- session ID
    f  in number, -- file id
    ck in varchar2 );

--==============================================================================
-- Procedure to download a Team Development file identified by its ID.
--==============================================================================
procedure get_team_file (
    p  in number, -- page ID
    s  in number, -- session ID
    f  in number, -- file id
    ck in varchar2 );

end wwv_flow_file_mgr;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FILE_OBJECT_ID"
is
   g_id number;
end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DB_VERSION" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_db_version.sql
--
--    DESCRIPTION
--      This package gives information about the current database version,
--      including the patch level (e.g. the last number in 11.2.0.2), which is
--      missing in dbms_db_version.
--
--      Because c_full_version is a varchar2 constant, this can not be used for
--      conditional compilation, however.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED (MM/DD/YYYY)
--     cneumuel 04/26/2011 - Created
--
--------------------------------------------------------------------------------

c_full_version    constant varchar2(4000) := sys.dbms_registry.release_version;

c_ver_le_11_2_0_1 constant boolean        := c_full_version < '11.2.0.2.';

end wwv_flow_db_version;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLUGIN_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_plugin_api.sql
--
--    DESCRIPTION
--      This package provides all types, constants and APIs for plug-ins.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      02/03/2009 - Created based on wwv_flow_plugin
--    pawolf      02/20/2010 - Added support for processes
--    pawolf      04/17/2010 - Renamed lov_items_to_submit and lov_optimize_refresh to ajax_item_to_submit and ajax_optimize_refresh
--    arayner     04/23/2010 - Added "plain_label" attribute to t_page_item record (bug #9557074)
--    pawolf      04/26/2010 - Removed lov_query_result_translated and standard_validations
--    pawolf      12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--    cneumuel    02/02/2011 - Added plugin support for authorization (feature #580)
--    pawolf      03/28/2011 - Removed PLUG_DISPLAY_ERROR_MESSAGE (feature# 544)
--    pawolf      04/07/2011 - Added "Page Items to Submit" (ajax_items_to_submit) support for regions (eg. Classic Report) (feature #505)
--    pawolf      04/08/2011 - Added "Escape Special Characters" (escape_on_http_output) support for region plug-ins (feature #649)
--    pawolf      04/08/2011 - Added "Substitute Attribute Values" (substitute_attributes) to plug-ins (feature 655)
--    pawolf      04/20/2011 - Renamed wwv_flow_plugin.c_inline_in_notifiction to c_inline_in_notification
--    pawolf      05/13/2011 - Added plug-ins for authentication schemes (feature 581)
--    cneumuel    05/19/2011 - Extensions to authentication records (feature 581)
--    pawolf      05/23/2011 - Changed authentication plugin records (feature 581)
--    cneumuel    05/26/2011 - Added t_authentication.plsql_code (feature 581)
--    cneumuel    08/09/2011 - Renamed t_authorization.user_name to username (bug #12849435)
--    pawolf      02/27/2012 - Renamed package to wwv_flow_plugin_api
--    pawolf      02/28/2012 - Added placeholder attribute for page items (feature# 837)
--    pawolf      03/02/2012 - Added css_classes for page items (feature# 815)
--    pawolf      03/28/2012 - Added 10 more custom plug-in attributes to regions (feature# 890)
--    pawolf      04/18/2012 - Added fetched_rows to t_region (feature# 907)
--    pawolf      04/19/2012 - Added no_data_found_message to t_region (feature# 909)
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------
type t_plugin is record (
    name         varchar2(45),
    file_prefix  varchar2(4000),
    attribute_01 varchar2(32767),
    attribute_02 varchar2(32767),
    attribute_03 varchar2(32767),
    attribute_04 varchar2(32767),
    attribute_05 varchar2(32767),
    attribute_06 varchar2(32767),
    attribute_07 varchar2(32767),
    attribute_08 varchar2(32767),
    attribute_09 varchar2(32767),
    attribute_10 varchar2(32767),
    attribute_11 varchar2(32767),
    attribute_12 varchar2(32767),
    attribute_13 varchar2(32767),
    attribute_14 varchar2(32767),
    attribute_15 varchar2(32767) );

type t_page_item is record (
    id                          number,
    name                        varchar2(255),
    label                       varchar2(4000),
    plain_label                 varchar2(4000),
    placeholder                 varchar2(255),
    format_mask                 varchar2(255),
    is_required                 boolean,
    lov_definition              varchar2(4000),
    lov_display_extra           boolean,
    lov_display_null            boolean,
    lov_null_text               varchar2(255),
    lov_null_value              varchar2(255),
    lov_cascade_parent_items    varchar2(255),
    ajax_items_to_submit        varchar2(255),
    ajax_optimize_refresh       boolean,
    element_width               number,
    element_max_length          number,
    element_height              number,
    element_css_classes         varchar2(255),
    element_attributes          varchar2(2000),
    element_option_attributes   varchar2(4000),
    escape_output               boolean,
    attribute_01                varchar2(32767),
    attribute_02                varchar2(32767),
    attribute_03                varchar2(32767),
    attribute_04                varchar2(32767),
    attribute_05                varchar2(32767),
    attribute_06                varchar2(32767),
    attribute_07                varchar2(32767),
    attribute_08                varchar2(32767),
    attribute_09                varchar2(32767),
    attribute_10                varchar2(32767),
    attribute_11                varchar2(32767),
    attribute_12                varchar2(32767),
    attribute_13                varchar2(32767),
    attribute_14                varchar2(32767),
    attribute_15                varchar2(32767) );

type t_page_item_render_result is record (
    is_navigable     boolean default false,
    navigable_dom_id varchar2(255)          /* should only be set if navigable element is not equal to item name */
    );

type t_page_item_ajax_result is record (
    dummy boolean /* not used yet */
    );

type t_page_item_validation_result is record (
    message          varchar2(32767),
    display_location varchar2(40),    /* if not set the application default will be used */
    page_item_name   varchar2(255) ); /* if not set the validated page item name will be used */

type t_region is record (
    id                    number,
    static_id             varchar2(255),
    name                  varchar2(255),
    type                  varchar2(255),
    source                varchar2(32767),
    ajax_items_to_submit  varchar2(32767),
    fetched_rows          pls_integer,
    escape_output         boolean,
    error_message         varchar2(32767), /* obsolete */
    no_data_found_message varchar2(32767),
    attribute_01          varchar2(32767),
    attribute_02          varchar2(32767),
    attribute_03          varchar2(32767),
    attribute_04          varchar2(32767),
    attribute_05          varchar2(32767),
    attribute_06          varchar2(32767),
    attribute_07          varchar2(32767),
    attribute_08          varchar2(32767),
    attribute_09          varchar2(32767),
    attribute_10          varchar2(32767),
    attribute_11          varchar2(32767),
    attribute_12          varchar2(32767),
    attribute_13          varchar2(32767),
    attribute_14          varchar2(32767),
    attribute_15          varchar2(32767),
    attribute_16          varchar2(32767),
    attribute_17          varchar2(32767),
    attribute_18          varchar2(32767),
    attribute_19          varchar2(32767),
    attribute_20          varchar2(32767),
    attribute_21          varchar2(32767),
    attribute_22          varchar2(32767),
    attribute_23          varchar2(32767),
    attribute_24          varchar2(32767),
    attribute_25          varchar2(32767) );

type t_region_render_result is record (
    dummy boolean /* not used yet */
    );

type t_region_ajax_result is record (
    dummy boolean /* not used yet */
    );

type t_dynamic_action is record (
    id           number,
    action       varchar2(50),
    attribute_01 varchar2(32767),
    attribute_02 varchar2(32767),
    attribute_03 varchar2(32767),
    attribute_04 varchar2(32767),
    attribute_05 varchar2(32767),
    attribute_06 varchar2(32767),
    attribute_07 varchar2(32767),
    attribute_08 varchar2(32767),
    attribute_09 varchar2(32767),
    attribute_10 varchar2(32767),
    attribute_11 varchar2(32767),
    attribute_12 varchar2(32767),
    attribute_13 varchar2(32767),
    attribute_14 varchar2(32767),
    attribute_15 varchar2(32767) );

type t_dynamic_action_render_result is record (
    javascript_function varchar2(32767),
    ajax_identifier     varchar2(255),
    attribute_01        varchar2(32767),
    attribute_02        varchar2(32767),
    attribute_03        varchar2(32767),
    attribute_04        varchar2(32767),
    attribute_05        varchar2(32767),
    attribute_06        varchar2(32767),
    attribute_07        varchar2(32767),
    attribute_08        varchar2(32767),
    attribute_09        varchar2(32767),
    attribute_10        varchar2(32767),
    attribute_11        varchar2(32767),
    attribute_12        varchar2(32767),
    attribute_13        varchar2(32767),
    attribute_14        varchar2(32767),
    attribute_15        varchar2(32767) );

type t_dynamic_action_ajax_result is record (
    dummy boolean /* not used yet */
    );

type t_process is record (
    id                   number,
    name                 varchar2(255),
    success_message      varchar2(32767),
    attribute_01         varchar2(32767),
    attribute_02         varchar2(32767),
    attribute_03         varchar2(32767),
    attribute_04         varchar2(32767),
    attribute_05         varchar2(32767),
    attribute_06         varchar2(32767),
    attribute_07         varchar2(32767),
    attribute_08         varchar2(32767),
    attribute_09         varchar2(32767),
    attribute_10         varchar2(32767),
    attribute_11         varchar2(32767),
    attribute_12         varchar2(32767),
    attribute_13         varchar2(32767),
    attribute_14         varchar2(32767),
    attribute_15         varchar2(32767) );

type t_process_exec_result is record (
    success_message varchar2(32767)
    );

type t_authorization is record (
    id                   number,
    name                 varchar2(255),
    username             varchar2(255),
    attribute_01         varchar2(32767),
    attribute_02         varchar2(32767),
    attribute_03         varchar2(32767),
    attribute_04         varchar2(32767),
    attribute_05         varchar2(32767),
    attribute_06         varchar2(32767),
    attribute_07         varchar2(32767),
    attribute_08         varchar2(32767),
    attribute_09         varchar2(32767),
    attribute_10         varchar2(32767),
    attribute_11         varchar2(32767),
    attribute_12         varchar2(32767),
    attribute_13         varchar2(32767),
    attribute_14         varchar2(32767),
    attribute_15         varchar2(32767) );

type t_authorization_exec_result is record (
    is_authorized        boolean
    );

type t_authentication is record (
    id                   number,
    name                 varchar2(255),
    invalid_session_url  varchar2(4000),
    logout_url           varchar2(4000),
    plsql_code           clob,
    attribute_01         varchar2(32767),
    attribute_02         varchar2(32767),
    attribute_03         varchar2(32767),
    attribute_04         varchar2(32767),
    attribute_05         varchar2(32767),
    attribute_06         varchar2(32767),
    attribute_07         varchar2(32767),
    attribute_08         varchar2(32767),
    attribute_09         varchar2(32767),
    attribute_10         varchar2(32767),
    attribute_11         varchar2(32767),
    attribute_12         varchar2(32767),
    attribute_13         varchar2(32767),
    attribute_14         varchar2(32767),
    attribute_15         varchar2(32767),
    --
    session_id           number,
    username             varchar2(255) );

type t_authentication_sentry_result is record (
    is_valid             boolean
    );

type t_authentication_inval_result is record (
    redirect_url         varchar2(4000)
    );

type t_authentication_auth_result is record (
    is_authenticated     boolean,
    redirect_url         varchar2(4000), -- Can be used for a change password page if password is expired
    log_code             number,         -- code to log in wwv_flow_...
    log_text             varchar2(4000), -- text to log in wwv_flow_...
    display_text         varchar2(4000)  -- text to display if authentication fails
    );

type t_authentication_ajax_result is record (
    dummy                boolean /* not used yet */
    );

type t_authentication_logout_result is record (
    redirect_url         varchar2(4000)
    );

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------

-- used for p_item.standard_validations in render function of page item type
c_std_val_browser             constant varchar2(20) := 'BROWSER';
c_std_val_server              constant varchar2(20) := 'SERVER';
c_std_val_browser_and_server  constant varchar2(20) := 'BROWSER_AND_SERVER';

-- used for display_location in a validation function result of page item type
c_inline_with_field           constant varchar2(40) := 'INLINE_WITH_FIELD';
c_inline_with_field_and_notif constant varchar2(40) := 'INLINE_WITH_FIELD_AND_NOTIFICATION';
c_inline_in_notification      constant varchar2(40) := 'INLINE_IN_NOTIFICATION';
c_on_error_page               constant varchar2(40) := 'ON_ERROR_PAGE';

-- deprecated
c_inline_in_notifiction       constant varchar2(40) := 'INLINE_IN_NOTIFICATION';

--------------------------------------------------------------------------------
-- Global variables
--------------------------------------------------------------------------------
--
/* Note: for internal use only!!! */
g_plugin                       t_plugin;

g_page_item                    t_page_item;
g_page_item_render_result      t_page_item_render_result;
g_page_item_ajax_result        t_page_item_ajax_result;
g_page_item_validation_result  t_page_item_validation_result;

g_region                       t_region;
g_region_render_result         t_region_render_result;
g_region_ajax_result           t_region_ajax_result;

g_dynamic_action               t_dynamic_action;
g_dynamic_action_render_result t_dynamic_action_render_result;
g_dynamic_action_ajax_result   t_dynamic_action_ajax_result;

g_process                      t_process;
g_process_exec_result          t_process_exec_result;

g_authorization                t_authorization;
g_authorization_exec_result    t_authorization_exec_result;

g_authentication               t_authentication;
g_authentication_sentry_result t_authentication_sentry_result;
g_authentication_inval_result  t_authentication_inval_result;
g_authentication_auth_result   t_authentication_auth_result;
g_authentication_ajax_result   t_authentication_ajax_result;
g_authentication_logout_result t_authentication_logout_result;

--------------------------------------------------------------------------------
-- Public functions
--------------------------------------------------------------------------------

--==============================================================================
-- Returns the name attribute which has to be used for a HTML input element if
-- you want that the value of the element is stored in session state when the
-- page is submitted. If you have a HTML input element which returns multiple
-- values (eg. select list with multiple="multiple") you have
-- to set p_is_multi_value.
-- Note: This function has to be called before you write something to the
--       HTTP buffer with HTP.P(RN)
--==============================================================================
function get_input_name_for_page_item (
    p_is_multi_value in boolean )
    return varchar2;
--
--==============================================================================
-- Returns the AJAX identifier which has to be used for the on-demand call
-- of a plug-in.
--
-- Note: if the plug-in doesn't have an AJAX callback configured, null will be
--       returned!
--==============================================================================
function get_ajax_identifier return varchar2;
--
end wwv_flow_plugin_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLUGIN_UTIL"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_plugin_util.sql
--
--    DESCRIPTION
--      This package is a collection of utility functions for plug-ins.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      02/03/2010 - Created
--    pawolf      02/09/2010 - Added print_hidden_protected
--    pawolf      02/20/2010 - Added support for process plugins
--    pawolf      03/04/2010 - Added p_escape to print_option
--    pawolf      03/08/2010 - Added pagination support to prepare_query and get_data
--    pawolf      03/18/2010 - Added page_item_names_to_jQuery
--    pawolf      04/14/2010 - Added name to t_column_values
--    pawolf      04/15/2010 - Added get_plsql_expression_result, get_plsql_function_result and execute_plsql_code
--    pawolf      08/23/2010 - Bug# 10041505: Add LIKE operation for prepare_query and get_search_string
--    pawolf      08/27/2010 - Bug# 10024385: added cleanup_page_item_names
--    pawolf      08/29/2010 - Bug# 10157646: added is_component_used
--    pawolf      12/03/2010 - Bug# 10301638: increase t_column_values.name to have the same size as sys.dbms_sql.desc_tab2.col_name
--    cneumuel    02/03/2011 - Added plugin support for authorization (feature #580)
--    pawolf      04/21/2011 - Fixed get_data_legacy to support the search type c_search_like_ignore used in popup LOVs (bug# 12361232)
--    pawolf      04/28/2011 - Added replace_substitutions, set_component_values, clear_component_values and get_value_as_varchar2
--    pawolf      05/04/2011 - Added support for quoted/multibyte bind variables (feature 224)
--    pawolf      05/10/2011 - Added p_replace_substitutions parameter to print_lov_as_json (bug 12535720)
--    pawolf      05/13/2011 - Added plug-ins for authentication schemes (feature 581)
--    pawolf      05/20/2011 - Added bind variable support for get_plsql_* functions
--    arayner     05/31/2011 - Added get_layout_table_attributes function (feature 422)
--    pawolf      06/01/2011 - Added print_page_item_lov_as_json and added the parameter p_set_mime_type to print_lov_as_json (feature feature 629)
--    arayner     06/01/2011 - Moved get_layout_table_attributes to wwv_flow_utilities
--    pawolf      06/09/2011 - Added get_column_no
--    pawolf      01/24/2012 - Added print_hidden, print_protected (bug 12790216)
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      03/05/2012 - Added new function get_element_attributes and new interface for print_display_only (feature# 815)
--    pawolf      04/25/2012 - Added new get_data, get_data2 functions which support p_search_column_name as parameter (feature# 917)
--    pawolf      04/25/2012 - Fixed value of c_data_type_timestamp_tz
--    pawolf      04/25/2012 - Added p_auto_bind_items and p_bind_list to a number of APIs
--    pawolf      04/26/2012 - Added ROWID data type detection
--    cneumuel    08/07/2012 - In get_data, get_display_data: added optimization for static lovs (bug #14191581)
--                             In prepare_query: change p_sql_handler to "in out nocopy", since the rewrite may change columns and require a new parse
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------
type t_sql_handler is record (
    cursor_handler number,
    base_statement varchar2(32767),
    column_list    sys.dbms_sql.desc_tab2 );

type t_value is record (
    varchar2_value      varchar2(32767),
    number_value        number,
    date_value          date,
    timestamp_value     timestamp,
    timestamp_tz_value  timestamp with time zone,
    timestamp_ltz_value timestamp with local time zone,
    interval_y2m_value  interval year to month,
    interval_d2s_value  interval day to second,
    blob_value          blob,
    bfile_value         bfile,
    clob_value          clob );

type t_value_list is table of t_value index by pls_integer;

type t_column_values is record (
    name       varchar2(32767),
    data_type  varchar2(20), /* use c_data_type_* constants to compare */
    value_list t_value_list );

type t_column_value_list  is table of wwv_flow_global.vc_arr2 index by pls_integer;
type t_column_value_list2 is table of t_column_values         index by pls_integer;

type t_bind is record (
    name  varchar2(30),
    value varchar2(32767) );

type t_bind_list is table of t_bind index by pls_integer;

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------
c_search_contains_case    constant varchar2(20) := 'CONTAINS_CASE';   -- uses INSTR
c_search_contains_ignore  constant varchar2(20) := 'CONTAINS_IGNORE'; -- uses INSTR with UPPER
c_search_exact_case       constant varchar2(20) := 'EXACT_CASE';      -- uses LIKE value%
c_search_exact_ignore     constant varchar2(20) := 'EXACT_IGNORE';    -- uses LIKE VALUE% with UPPER
c_search_like_case        constant varchar2(20) := 'LIKE_CASE';       -- uses LIKE %value%
c_search_like_ignore      constant varchar2(20) := 'LIKE_IGNORE';     -- uses LIKE %VALUE% with UPPER
c_search_lookup           constant varchar2(20) := 'LOOKUP';          -- uses = value
--
c_data_type_varchar2      constant varchar2(20) := 'VARCHAR2';
c_data_type_number        constant varchar2(20) := 'NUMBER';
c_data_type_date          constant varchar2(20) := 'DATE';
c_data_type_timestamp     constant varchar2(20) := 'TIMESTAMP';
c_data_type_timestamp_tz  constant varchar2(20) := 'TIMESTAMP_TZ';
c_data_type_timestamp_ltz constant varchar2(20) := 'TIMESTAMP_LTZ';
c_data_type_interval_y2m  constant varchar2(20) := 'INTERVAL_Y2M';
c_data_type_interval_d2s  constant varchar2(20) := 'INTERVAL_D2S';
c_data_type_blob          constant varchar2(20) := 'BLOB';
c_data_type_bfile         constant varchar2(20) := 'BFILE';
c_data_type_clob          constant varchar2(20) := 'CLOB';
c_data_type_rowid         constant varchar2(20) := 'ROWID';
--
c_empty_data_type_list    wwv_flow_global.vc_arr2;
c_empty_bind_list         t_bind_list;
--
--==============================================================================
-- Returns p_value escaped or not depending on the escape parameter.
--==============================================================================
function escape (
    p_value  in varchar2,
    p_escape in boolean )
    return varchar2;
--
--==============================================================================
-- Replaces all &ITEM. substitution references in p_value and returns the result.
-- If p_escape is TRUE, special characters in the replaced values will be escaped.
--==============================================================================
function replace_substitutions (
    p_value  in varchar2,
    p_escape in boolean  default true )
    return varchar2;
--
--==============================================================================
-- Returns some of the general attributes of an HTML element (eg. id, name,
-- required, placeholder, aria-error-attributes, class) which should be used
-- if a HTML input/select/textarea/... tag is generated to get a consistent
-- set of attributes.
--==============================================================================
function get_element_attributes (
    p_item           in wwv_flow_plugin_api.t_page_item,
    p_name           in varchar2 default null,
    p_default_class  in varchar2 default null,
    p_add_id         in boolean  default true )
    return varchar2;
--
--==============================================================================
-- XXX. $$$
--
-- p_value: t_value record type
--==============================================================================
procedure set_component_values (
    p_column_value_list in t_column_value_list2,
    p_row_num           in pls_integer );
--
--==============================================================================
-- XXX. $$$
--
-- p_value: t_value record type
--==============================================================================
procedure clear_component_values;
--
--==============================================================================
-- Returns TRUE if both values are equal and FALSE if not.
-- Note: if both values are null, TRUE will be returned as well.
--==============================================================================
function is_equal (
    p_value1 in varchar2,
    p_value2 in varchar2 )
    return boolean;
--
--==============================================================================
-- Returns the position in the list where p_value is stored. If it's not found
-- null will be returned.
--==============================================================================
function get_position_in_list (
    p_list  in wwv_flow_global.vc_arr2,
    p_value in varchar2 )
    return number;
--
--==============================================================================
-- Outputs the value in an escaped form. It's also taking care of chunking big
-- strings into smaller outputs.
--==============================================================================
procedure print_escaped_value (
    p_value in varchar2 );
--
--==============================================================================
-- Outputs a hidden field to store the page item value if the
-- page item is rendered readonly but not printer friendly.
--==============================================================================
procedure print_hidden_if_readonly (
    p_item_name           in varchar2,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean,
    p_id_postfix          in varchar2 default null );
--
--==============================================================================
-- Outputs a hidden field to store the page item value.
--==============================================================================
procedure print_hidden (
    p_item_name  in varchar2,
    p_value      in varchar2,
    p_id_postfix in varchar2 default null );
--
--==============================================================================
-- Outputs a hidden protected field to store the page item value.
--==============================================================================
procedure print_hidden_protected (
    p_item_name  in varchar2,
    p_value      in varchar2,
    p_id_postfix in varchar2 default null );
--
--==============================================================================
-- Outputs a checksum to protect the value of a page item from manipulations.
--==============================================================================
procedure print_protected (
    p_item_name in varchar2,
    p_value     in varchar2 );
--
--==============================================================================
-- Outputs a SPAN tag for a display only field.
-- If p_escape isn't specified, the value from p_item.escape_output will be used.
--==============================================================================
procedure print_display_only (
    p_item             in wwv_flow_plugin_api.t_page_item,
    p_display_value    in varchar2,
    p_show_line_breaks in boolean,
    p_escape           in boolean  default null,
    p_id_postfix       in varchar2 default '_DISPLAY' );
--
--==============================================================================
-- Deprecated!
--
-- Outputs a SPAN tag for a display only field.
--==============================================================================
procedure print_display_only (
    p_item_name        in varchar2,
    p_display_value    in varchar2,
    p_show_line_breaks in boolean,
    p_escape           in boolean,
    p_attributes       in varchar2,
    p_id_postfix       in varchar2 default '_DISPLAY' );
--
--==============================================================================
-- Outputs an OPTION tag. The values are always escaped.
--==============================================================================
procedure print_option (
    p_display_value in varchar2,
    p_return_value  in varchar2,
    p_is_selected   in boolean,
    p_attributes    in varchar2,
    p_escape        in boolean  default true );
--
--==============================================================================
-- Outputs the standard HTTP header for a JSON output.
--==============================================================================
procedure print_json_http_header;
--
--==============================================================================
-- Outputs a JSON response based on the result of a two column LOV in the format:
-- [{"d":"display","r":"return"},{"d":...,"r":...},...]
--
-- p_sql_statement         A SQL statement which returns two columns from the SELECT.
-- p_component_name        The name of the page item or report column that is used
--                         in case an error is displayed.
-- p_escape                If set to TRUE the value of the display column will be
--                         escaped, otherwise it will be output as is.
-- p_replace_substitutions If set to TRUE, replace_substitutions will be called
--                         for the value of the display column, otherwise it will
--                         be output as is.
-- p_set_mime_type         If set to TRUE, the HTTP header is initialized with
--                         mime type "application/json".
--==============================================================================
procedure print_lov_as_json (
    p_sql_statement         in varchar2,
    p_component_name        in varchar2,
    p_escape                in boolean,
    p_replace_substitutions in boolean default false,
    p_set_mime_type         in boolean default true,
    p_support_legacy_lov    in boolean default false /* for internal use only! */
    );
--
--==============================================================================
-- Outputs a JSON response based on the result of a two column LOV in the format:
-- {"values":[{"d":"display","r":"return"},{"d":...,"r":...},...], "default":"..."}
--
-- The difference to print_lov_as_json is that the result also contains the
-- default value of the specified page item in the JSON attribute "default".
--
-- p_sql_statement         A SQL statement which returns two columns from the SELECT.
-- p_page_item_name        The name of the page item that is used to read the
--                         default value and which is also used in case an error is displayed.
-- p_escape                If set to TRUE the value of the display column will be
--                         escaped, otherwise it will be output as is.
-- p_replace_substitutions If set to TRUE, replace_substitutions will be called
--                         for the value of the display column, otherwise it will
--                         be output as is.
--
-- Note: The HTTP header is initialized with mime type "application/json".
--==============================================================================
procedure print_page_item_lov_as_json (
    p_sql_statement         in varchar2,
    p_page_item_name        in varchar2,
    p_escape                in boolean,
    p_replace_substitutions in boolean default false,
    p_support_legacy_lov    in boolean default false /* for internal use only! */
    );
--
--==============================================================================
-- Returns a jQuery selector based on a comma delimited string of page item names.
--==============================================================================
function page_item_names_to_jquery (
    p_page_item_names in varchar2 )
    return varchar2;
--
--==============================================================================
-- Returns a cleaned up version of a comma delimited string of page item names
-- where all spaces are removed, colons are replaced with a comma and the
-- page item names are converted to uppercase.
-- This is important for JavaScript code, because page item names are
-- case sensitive in the browser.
--==============================================================================
function cleanup_page_item_names (
    p_page_item_names in varchar2 )
    return varchar2;
--
--==============================================================================
-- Maps the numeric column type in p_sql_handler.column_list(x).col_type into
-- fewer data types defined by the constants c_data_type_*.
--==============================================================================
function get_data_type (
    p_col_type in number )
    return varchar2;
--
--==============================================================================
-- Returns the passed in value of p_value as VARCHAR2.
--
-- p_value: t_value record type
--==============================================================================
function get_value_as_varchar2 (
    p_data_type in varchar2,
    p_value     in t_value )
    return varchar2;
--
--==============================================================================
-- Returns the index of the specified column alias in p_column_value_list.
--==============================================================================
function get_column_no (
    p_attribute_label   in varchar2,
    p_column_alias      in varchar2,
    p_column_value_list in t_column_value_list2,
    p_is_required       in boolean,
    p_data_type         in varchar2 default c_data_type_varchar2 )
    return pls_integer;
--
--==============================================================================
-- Returns the index of the specified column alias in p_sql_handler.
--==============================================================================
function get_column_no (
    p_attribute_label in varchar2,
    p_column_alias    in varchar2,
    p_sql_handler     in t_sql_handler,
    p_is_required     in boolean,
    p_data_type       in varchar2 default c_data_type_varchar2 )
    return pls_integer;
--
--==============================================================================
-- Returns the index of the specified column alias in p_sql_handler.column_list.
--==============================================================================
function get_column_no (
    p_sql_handler  in t_sql_handler,
    p_column_alias in varchar2 )
    return pls_integer;
--==============================================================================
-- Executes the query restricted by search string (optional) and returns the
-- values for each column.
-- Note: All column values are returned as a string, independent of there
--       data type!
--
-- p_sql_statement:      SQL statement which should be executed.
-- p_min_columns and
-- p_max_columns:        Used to check if the SQL statement complies to the number
--                       of required columns.
-- p_component_name:     The name of the page item or report column, ... which is
--                       used in case an error has to be displayed.
-- p_search_type:        Use one of the c_search_* constants.
-- p_search_column_name: Column name which should be used to restrict the SQL statement.
-- p_search_string:      Value which should be used to restrict the query.
-- p_first_row:          Skips all rows before the specified row. Can be used for
--                       pagination.
-- p_max_rows:           Limits the number of returned rows.
--==============================================================================
function get_data (
    p_sql_statement      in varchar2,
    p_min_columns        in number,
    p_max_columns        in number,
    p_component_name     in varchar2,
    p_search_type        in varchar2    default null,
    p_search_column_name in varchar2    default null,
    p_search_string      in varchar2    default null,
    p_first_row          in number      default null,
    p_max_rows           in number      default null,
    p_auto_bind_items    in boolean     default true,
    p_bind_list          in t_bind_list default c_empty_bind_list )
    return t_column_value_list;
--
--==============================================================================
-- Same as the above get_data but references the search column by position number.
--==============================================================================
function get_data (
    p_sql_statement      in varchar2,
    p_min_columns        in number,
    p_max_columns        in number,
    p_component_name     in varchar2,
    p_search_type        in varchar2,
    p_search_column_no   in varchar2,
    p_search_string      in varchar2,
    p_first_row          in number      default null,
    p_max_rows           in number      default null,
    p_auto_bind_items    in boolean     default true,
    p_bind_list          in t_bind_list default c_empty_bind_list,
    p_support_legacy_lov in boolean     default false  /* for internal use only! */ )
    return t_column_value_list;
--
--==============================================================================
-- Executes the query restricted by search string (optional) and returns the
-- values for each column. This is a more advanced version of get_data, because
-- it returns the column values with there original data types.
--
-- p_sql_statement:      SQL statement which should be executed.
-- p_min_columns and
-- p_max_columns:        Used to check if the SQL statement complies to the number
--                       of required columns.
-- p_data_type_list:     If provided checks that the data type for each column
--                       matches to the specified data type in the array.
--                       Use the constants c_data_type_* for available data types.
-- p_component_name:     The name of the page item or report column, ... which is
--                       used in case an error has to be displayed.
-- p_search_type:        Use one of the c_search_* constants.
-- p_search_column_name: Column name which should be used to restrict the SQL statement.
-- p_search_string:      Value which should be used to restrict the query.
-- p_first_row:          Skips all rows before the specified row. Can be used for
--                       pagination.
-- p_max_rows:           Limits the number of returned rows.
--==============================================================================
function get_data2 (
    p_sql_statement      in varchar2,
    p_min_columns        in number,
    p_max_columns        in number,
    p_data_type_list     in wwv_flow_global.vc_arr2 default c_empty_data_type_list,
    p_component_name     in varchar2,
    p_search_type        in varchar2    default null,
    p_search_column_name in varchar2    default null,
    p_search_string      in varchar2    default null,
    p_first_row          in number      default null,
    p_max_rows           in number      default null,
    p_auto_bind_items    in boolean     default true,
    p_bind_list          in t_bind_list default c_empty_bind_list )
    return t_column_value_list2;
--
--==============================================================================
-- Same as the above get_data2 but references the search column by position number.
--==============================================================================
function get_data2 (
    p_sql_statement    in varchar2,
    p_min_columns      in number,
    p_max_columns      in number,
    p_data_type_list   in wwv_flow_global.vc_arr2 default c_empty_data_type_list,
    p_component_name   in varchar2,
    p_search_type      in varchar2,
    p_search_column_no in varchar2,
    p_search_string    in varchar2,
    p_first_row        in number      default null,
    p_max_rows         in number      default null,
    p_auto_bind_items  in boolean     default true,
    p_bind_list        in t_bind_list default c_empty_bind_list )
    return t_column_value_list2;
--
--==============================================================================
-- Gets the display (lookup) value for the value specified in p_search_string.
--
-- p_sql_statement:     SQL statement which is used for the lookup.
-- p_min_columns and
-- p_max_columns:       Used to check if the SQL statement complies to the number
--                      of required columns.
-- p_component_name:    The name of the page item or report column, ... which is
--                      used in case an error has to be displayed.
-- p_display_column_no: Column which should be returned from the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_column_no:  Column which should be used to restrict the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_string:     Value which should be looked up.
-- p_display_extra:     If set to TRUE and a value isn't found, the search value
--                      will be added to the result instead.
--
-- Note: In the case multiple rows are returned by the query, just the first one
--       is returned.
--==============================================================================
function get_display_data (
    p_sql_statement      in varchar2,
    p_min_columns        in number,
    p_max_columns        in number,
    p_component_name     in varchar2,
    p_display_column_no  in binary_integer default 1,
    p_search_column_no   in binary_integer default 2,
    p_search_string      in varchar2,
    p_display_extra      in boolean        default true,
    p_auto_bind_items    in boolean        default true,
    p_bind_list          in t_bind_list    default c_empty_bind_list,
    p_support_legacy_lov in boolean        default false /* for internal use only! */ )
    return varchar2;
--
--==============================================================================
-- Gets the display (lookup) values for the values specified in p_search_value_list.
--
-- p_sql_statement:     SQL statement which is used for the lookup.
-- p_min_columns and
-- p_max_columns:       Used to check if the SQL statement complies to the number
--                      of required columns.
-- p_component_name:    The name of the page item or report column, ... which is
--                      used in case an error has to be displayed.
-- p_display_column_no: Column which should be returned from the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_column_no:  Column which should be used to restrict the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_value_list: Array of values which should be looked up.
-- p_display_extra:     If set to TRUE and a value isn't found, the search value
--                      will be added to the result instead.
--==============================================================================
function get_display_data (
    p_sql_statement      in varchar2,
    p_min_columns        in number,
    p_max_columns        in number,
    p_component_name     in varchar2,
    p_display_column_no  in binary_integer default 1,
    p_search_column_no   in binary_integer default 2,
    p_search_value_list  in wwv_flow_global.vc_arr2,
    p_display_extra      in boolean        default true,
    p_auto_bind_items    in boolean        default true,
    p_bind_list          in t_bind_list    default c_empty_bind_list,
    p_support_legacy_lov in boolean        default false /* for internal use only! */ )
    return wwv_flow_global.vc_arr2;
--
--==============================================================================
-- Opens a sql cursor and returns useful information about the SQL statement
-- in a record structure. Like used bind variables, column information, ...
--
-- p_sql_statement:  SQL statement which should be executed.
-- p_min_columns and
-- p_max_columns:    Used to check if the SQL statement complies to the number
--                   of required columns.
-- p_data_type_list: If provided checks that the data type for each column
--                   matches to the specified data type in the array.
--                   Use the constants c_data_type_* for available data types.
--                   Note: This parameter should be used in combination with
--                         get_data2.
-- p_component_name: The name of the page item or report column, ... which is
--                   used in case an error has to be displayed.
--
-- Note: Always call free_sql_handler after you are done reading data. Don't
--       forget to add it to the exception handler as well to release the cursor!
--==============================================================================
function get_sql_handler (
    p_sql_statement   in varchar2,
    p_min_columns     in number,
    p_max_columns     in number,
    p_data_type_list  in wwv_flow_global.vc_arr2 default c_empty_data_type_list,
    p_component_name  in varchar2,
    p_auto_bind_items in boolean     default true,
    p_bind_list       in t_bind_list default c_empty_bind_list )
    return t_sql_handler;
--
--==============================================================================
-- Closes the open cursor created by get_sql_handler.
--
-- p_sql_handler: Record returned by get_sql_handler.
--==============================================================================
procedure free_sql_handler (
    p_sql_handler in out nocopy t_sql_handler );
--
--==============================================================================
-- Creates and parses a SQL statement based on p_search_type and p_max_row.
-- The procedure also already binds all page item bind variables.
-- Call get_data afterwards to get the actual data.
--
-- p_sql_handler:        Record returned by get_sql_handler.
-- p_search_type:        Use one of the c_search_* constants.
-- p_search_column_name: Column which should be used to restrict the SQL statement.
-- p_first_row:          Skips all rows before the specified row. Can be used for
--                       pagination.
-- p_max_rows:           Limits the number of returned rows.
--
-- Note: get_sql_handler has to be called before this call.
--==============================================================================
procedure prepare_query (
    p_sql_handler        in out nocopy t_sql_handler,
    p_search_type        in varchar2,
    p_search_column_name in varchar2,
    p_first_row          in number         default null,
    p_max_rows           in number         default null,
    p_auto_bind_items    in boolean        default true,
    p_bind_list          in t_bind_list    default c_empty_bind_list );
--
--==============================================================================
-- Creates and parses a SQL statement based on p_search_type and p_max_row.
-- The procedure also already binds all page item bind variables.
-- Call get_data afterwards to get the actual data.
--
-- p_sql_handler:      Record returned by get_sql_handler.
-- p_search_type:      Use one of the c_search_* constants.
-- p_search_column_no: Column which should be used to restrict the SQL statement.
--                     Has to be in range of p_min_column and p_max_column.
-- p_first_row:        Skips all rows before the specified row. Can be used for
--                     pagination.
-- p_max_rows:         Limits the number of returned rows.
--
-- Note: get_sql_handler has to be called before this call.
--==============================================================================
procedure prepare_query (
    p_sql_handler      in out nocopy t_sql_handler,
    p_search_type      in varchar2       default null,
    p_search_column_no in binary_integer default 2,
    p_first_row        in number         default null,
    p_max_rows         in number         default null,
    p_auto_bind_items  in boolean        default true,
    p_bind_list        in t_bind_list    default c_empty_bind_list );
--
--==============================================================================
-- Converts the search string in uppercase if it's a case insensitive search.
--
-- p_search_type:   Use one of the c_search_* constants.
-- p_search_string: Search string.
--==============================================================================
function get_search_string (
    p_search_type   in varchar2,
    p_search_string in varchar2 )
    return varchar2;
--
--==============================================================================
-- Executes the query restricted by search string (optional) and returns the
-- values for each column.
-- Note: All column values are returned as a string, independent of there
--       data type!
--
-- p_sql_handler:        Record returned by get_sql_handler.
-- p_search_column_name: Column name which should be used to restrict the SQL statement.
-- p_search_string:      The query is restricted by this value.
--
-- Note: prepare_query has to be called before!
--==============================================================================
function get_data (
    p_sql_handler        in t_sql_handler,
    p_search_column_name in varchar2      default null,
    p_search_string      in varchar2      default null )
    return t_column_value_list;
--
--==============================================================================
-- Same as the above get_data but references the search column by position number.
--==============================================================================
function get_data (
    p_sql_handler      in t_sql_handler,
    p_search_column_no in binary_integer,
    p_search_string    in varchar2 )
    return t_column_value_list;
--
--==============================================================================
-- Executes the query restricted by search string (optional) and returns the
-- values for each column.
--
-- p_sql_handler:        Record returned by get_sql_handler.
-- p_search_column_name: Column name which should be used to restrict the SQL statement.
-- p_search_string:      The query is restricted by this value.
--
-- Note: prepare_query has to be called before!
--==============================================================================
function get_data2 (
    p_sql_handler        in t_sql_handler,
    p_search_column_name in varchar2       default null,
    p_search_string      in varchar2       default null )
    return t_column_value_list2;
--
--==============================================================================
-- Same as the above get_data2 but references the search column by position number.
--==============================================================================
function get_data2 (
    p_sql_handler      in t_sql_handler,
    p_search_column_no in binary_integer,
    p_search_string    in varchar2 )
    return t_column_value_list2;
--
--==============================================================================
-- Gets the display (lookup) values for the values specified in p_search_value_list.
--
-- p_sql_handler:       Record returned by get_sql_handler.
-- p_display_column_no: Column which should be returned from the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_column_no:  Column which should be used to restrict the SQL statement.
--                      Has to be in range of p_min_column and p_max_column.
-- p_search_value_list: Array of values which should be looked up.
-- p_display_extra:     If set to TRUE and a value isn't found, the search value
--                      will be added to the result instead.
--
-- Note: get_sql_handler has to be called before!
--       prepare_query will be called by this function.
--==============================================================================
function get_display_data (
    p_sql_handler        in t_sql_handler,
    p_display_column_no  in binary_integer default 1,
    p_search_column_no   in binary_integer default 2,
    p_search_value_list  in wwv_flow_global.vc_arr2,
    p_display_extra      in boolean        default true,
    p_auto_bind_items    in boolean        default true,
    p_bind_list          in t_bind_list    default c_empty_bind_list )
    return wwv_flow_global.vc_arr2;
--
--==============================================================================
-- Executes a PL/SQL expression and returns the result.
--
-- p_plsql_expression: PL/SQL expression which returns string.
--==============================================================================
function get_plsql_expression_result (
    p_plsql_expression in varchar2,
    p_auto_bind_items  in boolean     default true,
    p_bind_list        in t_bind_list default c_empty_bind_list )
    return varchar2;
--
--==============================================================================
-- Executes a PL/SQL expression and returns the result.
--
-- p_plsql_expression: PL/SQL expression which returns boolean.
--==============================================================================
function get_plsql_expr_result_boolean (
    p_plsql_expression in varchar2,
    p_auto_bind_items  in boolean     default true,
    p_bind_list        in t_bind_list default c_empty_bind_list )
    return boolean;
--
--==============================================================================
-- Executes a PL/SQL function code block and returns the result.
--
-- p_plsql_function: PL/SQL function which returns string.
--                   For example:
--                   declare
--                       l_test varchar2(10);
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_function_result (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean     default true,
    p_bind_list       in t_bind_list default c_empty_bind_list )
    return varchar2;
--
--==============================================================================
-- Executes a PL/SQL function code block and returns the result.
--
-- p_plsql_function: PL/SQL function which returns boolean.
--                   For example:
--                   declare
--                       l_test boolean;
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_func_result_boolean (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean     default true,
    p_bind_list       in t_bind_list default c_empty_bind_list )
    return boolean;
--
--==============================================================================
-- Executes a PL/SQL function code block and returns the result.
--
-- p_plsql_function: PL/SQL function which returns clob.
--                   For example:
--                   declare
--                       l_test clob;
--                   begin
--                       -- do something
--                       return l_test;
--                   end;
--==============================================================================
function get_plsql_func_result_clob (
    p_plsql_function  in varchar2,
    p_auto_bind_items in boolean     default true,
    p_bind_list       in t_bind_list default c_empty_bind_list )
    return clob;
--
--==============================================================================
-- Executes a PL/SQL code block.
--==============================================================================
procedure execute_plsql_code (
    p_plsql_code      in varchar2,
    p_auto_bind_items in boolean     default true,
    p_bind_list       in t_bind_list default c_empty_bind_list );
--
--==============================================================================
-- Function returns true if the passed build option, authorization and
-- condition are ok to display/process/use this component.
--==============================================================================
function is_component_used (
    p_build_option_id         in number   default null,
    p_authorization_scheme_id in varchar2,
    p_condition_type          in varchar2,
    p_condition_expression1   in varchar2,
    p_condition_expression2   in varchar2,
    p_component               in varchar2 default null )
    return boolean;
--
--==============================================================================
-- Writes the data of the page item meta data into the debug output.
--==============================================================================
procedure debug_page_item (
    p_plugin    in wwv_flow_plugin_api.t_plugin,
    p_page_item in wwv_flow_plugin_api.t_page_item );
--
procedure debug_page_item (
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_page_item           in wwv_flow_plugin_api.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean );
--
--==============================================================================
-- Writes the data of the region meta data into the debug output.
--==============================================================================
procedure debug_region (
    p_plugin in wwv_flow_plugin_api.t_plugin,
    p_region in wwv_flow_plugin_api.t_region );
--
procedure debug_region (
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_region              in wwv_flow_plugin_api.t_region,
    p_is_printer_friendly in boolean );
--
--==============================================================================
-- Writes the data of the dynamic action meta data into the debug output.
--==============================================================================
procedure debug_dynamic_action (
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_dynamic_action in wwv_flow_plugin_api.t_dynamic_action );
--
--==============================================================================
-- Writes the data of the process meta data into the debug output.
--==============================================================================
procedure debug_process (
    p_plugin  in wwv_flow_plugin_api.t_plugin,
    p_process in wwv_flow_plugin_api.t_process );
--
--==============================================================================
-- Writes the data of the authorization meta data into the debug output.
--==============================================================================
procedure debug_authorization (
    p_plugin        in wwv_flow_plugin_api.t_plugin,
    p_authorization in wwv_flow_plugin_api.t_authorization );
--
--==============================================================================
-- Writes the data of the authentication meta data into the debug output.
--==============================================================================
procedure debug_authentication (
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication );
--
end wwv_flow_plugin_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LEGACY_PLUGINS"
as
------------------------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_legacy_plugins.sql
--
--    DESCRIPTION
--      This package contains the code for all legacy APEX Builder compents that
--      have been converted into plug-ins.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    hfarrell    04/13/2012 - Created
--    hfarrell    04/17/2012 - Added show_html_chart - called directly for existing HTML Charts
--
------------------------------------------------------------------------------------------------

-- Global Variables
g_region_id           number := null;  -- current region id
g_row_cnt             number := 0;
g_scale               number;
g_bar_width           number;
g_bar_height          number;
g_max_rows            number;
g_min_row             number;
g_range               number;
g_total_value         number := 0;
g_max_value           number := -999999999999999999999999999999999999;
g_min_value           number := 999999999999999999999999999999999999;
g_max_element         number := 0;
g_min_element         number := 0;
g_axis                varchar2(10);
g_bar_color           varchar2(10);
g_use_flow_pagination varchar2(30) := null;
g_bar_image           varchar2(250);
g_num_mask            varchar2(250);
g_font_size           varchar2(250);
g_font_color          varchar2(250);
g_font_face           varchar2(250);
g_image_locat         varchar2(250);
g_chart_title         varchar2(2000);
g_status              varchar2(32767) := null;
g_pagination_row      varchar2(32767) := null;
empty_vc_arr          wwv_flow_global.vc_arr2;
g_colors              wwv_flow_global.vc_arr2;
g_link                wwv_flow_global.vc_arr2;
g_text                wwv_flow_global.vc_arr2;
g_value               wwv_flow_global.vc_arr2;
g_upper_span          wwv_flow_global.vc_arr2;
g_lower_span          wwv_flow_global.vc_arr2;


--
-- REGION PLUG-INs
--

-- Renders the HTML Chart region.
function render_html_chart (
    p_region              in wwv_flow_plugin_api.t_region,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_region_render_result;


-- Show the HTML Chart region.
procedure show_html_chart(
    p_cursor              in integer      default null,
    p_chart_type          in varchar2     default 'HBAR',
    p_bar_image           in varchar2     default 'MULTI',
    p_chart_title         in varchar2     default null,
    p_axis                in varchar2     default 'ZERO',
    p_scale               in number       default 300,
    p_bar_width           in number       default 40,
    p_bar_height          in number       default 20,
    p_num_mask            in varchar2     default '999,999,999,999,999,999,999,999,999,999,999,999,999',
    p_font_size           in varchar2     default '-2',
    p_font_color          in varchar2     default null,
    p_font_face           in varchar2     default null,
    p_max_rows            in number       default 2000,
    p_min_row             in number       default 1,
    p_show_summary        in varchar2     default null, -- 'CAMXVSFLR'
    p_image_prefix        in varchar2     default nvl(wwv_flow.g_image_prefix,'/'||'i/'),
    p_use_flow_pagination in varchar2     default 'YES' );


end wwv_flow_legacy_plugins;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_EPG_INCLUDE_MODULES"
as

function authorize(
    procedure_name in varchar2)
    return boolean
    ;
end wwv_flow_epg_include_modules;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_RANDOM" is
--  Copyright (c) Oracle Corporation 1999. All Rights Reserved.
--
--    DESCRIPTION
--      Generate random numbers
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--      tkyte     08/01/1998 - Created
--      sdillon   03/21/2001 - Reseed body due to REUSE CONNECTIONS
--      mhichwa   03/27/2001 - Added exception to rand function to avoid errors on 64 bit hp
--      mhichwa   04/10/2001 - Added set define at end of file
--
  pragma restrict_references( wwv_flow_random, WNDS, RNPS );
  --
  -- seed random function
  procedure srand( new_seed in number );

  function rand return number;
  pragma restrict_references( rand, WNDS  );

  procedure get_rand( r OUT number );

  function rand_max( n IN number ) return number;
  pragma restrict_references( rand_max, WNDS);

  procedure get_rand_max( r OUT number, n IN number );

end wwv_flow_random;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ID"
as
--  Copyright (c) Oracle Corporation 1999. All Rights Reserved.
--
--    DESCRIPTION
--      Unique id generation utility
--
--    SECURITY
--     Publicly executable
--
--    NOTES
--      This package generates sequence numbers which
--      are, for all practial purposes, globally unique.
--      This assumes the following: "create sequence wwv_seq"

   function curr_val return number;
   pragma restrict_references( curr_val, wnds, rnds, wnps );
   --
   function next_val return number;
end wwv_flow_id;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_MIGRATE_METADATA" as

--  Copyright (c) Oracle Corporation 2001. All Rights Reserved.
--
--    DESCRIPTION
--      The purpose of this package is to run during upgrade process to update Flows metadata value.
--
--    NOTES
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--


procedure cleanup_misspelled_type;

end wwv_flow_migrate_metadata;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FND_USER_PW_PREF"
as
    web_password_format varchar2(255) := 'CLEAR_TEXT';
end wwv_flow_fnd_user_pw_pref;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ASSERT" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2007 - 2008. All Rights Reserved.
--
--    NAME
--      wwv_flow_assert.sql
--
--    DESCRIPTION
--      Project-specific and interim substitute for DBMS_ASSERT
--
--    MODIFIED   (MM/DD/YYYY)
--      sspadafo  01/05/2008 - Created
--      sspadafo  01/07/2008 - Added sql_query_start
--      sspadafo  01/15/2008 - Added functions where_clause_start, function_body_start,
--      sspadafo  01/15/2008 - Added procedure verify_parsing_schema
--      sspadafo  01/15/2008 - Added function sql_or_function_start
--      sspadafo  01/15/2008 - Added procedure versions of functions
--      sspadafo  01/15/2008 - Added comments
--      sspadafo  01/16/2008 - Added function and procedure null_or_simple_sql_name
--      sspadafo  01/16/2008 - Added overloaded versions of noop
--      sspadafo  05/18/2009 - Added functions normal_sql_name, null_or_normal_sql_name
--      sspadafo  05/18/2009 - Sync changes from deferred 3.2 work (Bug 8352574)
--      jstraub   05/06/2010 - Added noop with p_value in clob
--      cneumuel  05/30/2011 - Added enquote_name and enquote_literal
--      cneumuel  01/16/2013 - Added dml_result
--      cneumuel  03/18/2013 - Added desupported_api
--      cneumuel  03/25/2013 - Removed get_first_token. added no_dynamic_sql (bug #16002408)
--
--------------------------------------------------------------------------------

INVALID_SCHEMA_NAME exception;
    pragma exception_init(invalid_schema_name, -44001);
INVALID_OBJECT_NAME exception;
    pragma exception_init(invalid_object_name, -44002);
INVALID_SQL_NAME exception;
    pragma exception_init(invalid_sql_name, -44003);

--==============================================================================
-- Purpose: dummy check to prevent reporting by SQL injection tool
-- Example: if wwv_flow_assert.noop(p_value => <some parameter>) then null; end if;
-- Notes:   Use sparingly, as a last resort when you are absolutely sure of the safety of not checking the input value
--==============================================================================
function noop(
    p_value in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: dummy check to prevent reporting by SQL injection tool
-- Example: wwv_flow_assert.noop(p_value => <some parameter>);
-- Notes:   Use sparingly, as a last resort when you are absolutely sure of the safety of not checking the input value
--==============================================================================
procedure noop(
    p_value in varchar2);

--==============================================================================
-- Purpose: dummy check to prevent reporting by SQL injection tool
-- Example: wwv_flow_assert.noop(p_value => <some parameter>);
-- Notes:   Use sparingly, as a last resort when you are absolutely sure of the safety of not checking the input value
--==============================================================================
procedure noop(
    p_value in clob);


--==============================================================================
-- Purpose: dummy check to prevent reporting by SQL injection tool
-- Example: if wwv_flow_assert.noop(p_value => <some parameter>) then null; end if;
-- Notes:   Use sparingly, as a last resort when you are absolutely sure of the safety of not checking the input value
--      :   Overloaded
--==============================================================================
function noop(
    p_value in wwv_flow_global.vc_arr2)
    return wwv_flow_global.vc_arr2;

--==============================================================================
-- Purpose: dummy check to prevent reporting by SQL injection tool
-- Example: wwv_flow_assert.noop(p_value => <some parameter>);
-- Notes:   Use sparingly, as a last resort when you are absolutely sure of the safety of not checking the input value
--      :   Overloaded
--==============================================================================
procedure noop(
    p_value in wwv_flow_global.vc_arr2);

--==============================================================================
-- Purpose: check for existing schema in database
-- Example: if wwv_flow_assert.schema_name(p_schema => <some parameter>) then null; end if;
-- Notes  : input schema name may be enclosed in double quotes; Checks for existence of schema in database
--==============================================================================
function schema_name(
    p_schema in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check for existing schema in database
-- Example: wwv_flow_assert.schema_name(p_schema => <some parameter>);
-- Notes  : input schema name may be enclosed in double quotes; Checks for existence of schema in database
--==============================================================================
procedure schema_name(
    p_schema in varchar2);

--==============================================================================
-- Purpose: check for valid identifier
-- Example: if wwv_flow_assert.simple_sql_name(p_name => <some parameter>) then null; end if;
-- Notes  : input name may be enclosed in double quotes; length is checked
--==============================================================================
function simple_sql_name(
    p_name in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check for valid identifier
-- Example: wwv_flow_assert.simple_sql_name(p_name => <some parameter>);
-- Notes  : input name may be enclosed in double quotes; length is checked
--==============================================================================
procedure simple_sql_name(
    p_name in varchar2);

--==============================================================================
-- Purpose: check for null or valid identifier
-- Example: if wwv_flow_assert.simple_sql_name(p_name => <some parameter>) then null; end if;
-- Notes  : input name may be enclosed in double quotes; length is checked
--==============================================================================
function null_or_simple_sql_name(
    p_name in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check for null or valid identifier
-- Example: wwv_flow_assert.simple_sql_name(p_name => <some parameter>);
-- Notes  : input name may be enclosed in double quotes; length is checked
--==============================================================================
procedure null_or_simple_sql_name(
    p_name in varchar2);

--==============================================================================
-- Purpose: check for valid identifier
-- Example: if wwv_flow_assert.simple_sql_name(p_name => <some parameter>) then null; end if;
-- Notes  : input name assumed to be in "normal" format and must not be enclosed in double quotes; length is checked
--==============================================================================
function normal_sql_name(
    p_name in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check for null or valid identifier
-- Example: if wwv_flow_assert.null_or_normal_sql_name(p_name => <some parameter>) then null; end if;
-- Notes  : input name assumed to be in "normal" format and must not be enclosed in double quotes; length is checked
--==============================================================================
function null_or_normal_sql_name(
    p_name in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check that p_query does not contain dynamic sql (execute immediate, dbms_sql, etc.)
-- Example: wwv_flow_assert.no_dynamic_sql(q'{begin execute immediate 'grant dba to scott'; end;}');
-- Notes  : Function raises an exception if dynamic sql is encountered.
--==============================================================================
procedure no_dynamic_sql (
    p_query in varchar2 );

--==============================================================================
-- Purpose: check that first token is 'SELECT' or 'WITH'
-- Example: if wwv_flow_assert.sql_query_start(p_query => <some parameter>) then null; end if;
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
function sql_query_start(
    p_query in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check that first token is 'SELECT' or 'WITH'
-- Example: wwv_flow_assert.sql_query_start(p_query => <some parameter>);
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
procedure sql_query_start(
    p_query in varchar2);

--==============================================================================
-- Purpose: check that first token is 'WHERE'
-- Example: if wwv_flow_assert.where_clause_start(p_query => <some parameter>) then null; end if;
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
function where_clause_start (
    p_query              in varchar2 )
    return varchar2;

--==============================================================================
-- Purpose: check that first token is 'WHERE'
-- Example: wwv_flow_assert.where_clause_start(p_query => <some parameter>);
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
procedure where_clause_start (
    p_query              in varchar2 );

--==============================================================================
-- Purpose: check that first token is 'DECLARE' or 'BEGIN'
-- Example: if wwv_flow_assert.function_body_start(p_query => <some parameter>) then null; end if;
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
function function_body_start(
    p_query in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check that first token is 'DECLARE' or 'BEGIN'
-- Example: wwv_flow_assert.function_body_start(p_query => <some parameter>);
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
procedure function_body_start(
    p_query in varchar2);

--==============================================================================
-- Purpose: check that first token is 'SELECT' or 'WITH' or DECLARE' or 'BEGIN'
-- Example: if wwv_flow_assert.sql_or_function_start(p_query => <some parameter>) then null; end if;
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
function sql_or_function_start (
    p_query in varchar2)
    return varchar2;

--==============================================================================
-- Purpose: check that first token is 'SELECT' or 'WITH' or DECLARE' or 'BEGIN'
-- Example: wwv_flow_assert.sql_or_function_start(p_query => <some parameter>);
-- Notes:   Function ignores case of input and trims leading whitespace and left parentheses
--==============================================================================
procedure sql_or_function_start(
    p_query in varchar2);

--==============================================================================
-- Purpose: check that parsing schema is allowed to parse in current security group ID (wwv_flow_security.g_security_group_id)
-- Example: if wwv_flow_assert.verify_parsing_schema(p_schema => <some parameter>) then null; end if;
-- Notes:   Schema name, if provided, may not be double-quoted
--==============================================================================
procedure verify_parsing_schema(
    p_schema in varchar2 default wwv_flow_security.g_parse_as_schema);

--==============================================================================
-- Purpose: check that parsing schema is allowed to parse in current security group ID (wwv_flow_security.g_security_group_id)
-- Example: wwv_flow_assert.verify_parsing_schema(p_schema => <some parameter>);
-- Notes:   Schema name, if provided, may not be double-quoted
--==============================================================================
function verify_parsing_schema(
    p_schema in varchar2 default wwv_flow_security.g_parse_as_schema)
    return varchar2;

--==============================================================================
-- wrapper around dbms_assert.enquote_name that does not capitalize p_str.
-- this is the behaviour we always want in APEX.
--==============================================================================
function enquote_name (
    p_str in varchar2 )
    return varchar2;

--==============================================================================
-- wrapper around dbms_assert.enquote_literal that supports single quotes
-- within p_str (enhancement request 9777721)
--==============================================================================
function enquote_literal (
    p_str in varchar2 )
    return varchar2;

--==============================================================================
-- Raise an internal error if sql%rowcount is not what was expected
--
-- EXAMPLE
--   wwv_flow_debug.trace('updating EMP...');
--   update EMP
--      set sal=4711
--    where ename=:APP_USER;
--   wwv_flow_assert.dml_result(p_for => 'EMP.SAL');
--
-- ARGUMENTS
-- * p_for:          An optional string that describes the dml target.
-- * p_rowcount:     The expected value of sql%rowcount, defaults to 1.
--==============================================================================
procedure dml_result (
    p_for      in varchar2       default null,
    p_rowcount in binary_integer default 1 );

--==============================================================================
-- Raise an internal error for desupported PL/SQL APIs.
--
-- EXAMPLE
--   procedure desupported_in_apex_5
--   is
--   begin
--       wwv_flow_assert.desupported_api (
--           p_required_version_older_than => 5,
--           p_api_name                    => 'desupported_in_apex_5' );
--       ...code for older versions...
--   end desupported_in_apex_5;
--
-- ARGUMENTS
-- * p_api_name:                    The name of the desupported API
-- * p_required_version_older_than: Raise an error if the compatibility mode is
--                                  newer than this value, emit a deprecation
--                                  warning debug message otherwise.
--==============================================================================
procedure desupported_api (
    p_api_name                    in varchar2,
    p_required_version_older_than in number );

end wwv_flow_assert;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ERROR_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_error_api.sql
--
--    DESCRIPTION
--      This package is responsible for handling errors.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    02/27/2012 - Created
--      pawolf    02/27/2012 - Moved public constants and types to wwv_flow_error_api
--      pawolf    06/25/2012 - Changed error example
--
--------------------------------------------------------------------------------

--==============================================================================
-- Example of an error handling function
--==============================================================================
/*

create or replace function apex_error_handling_example (
    p_error in apex_error.t_error )
    return apex_error.t_error_result
is
    l_result          apex_error.t_error_result;
    l_reference_id    number;
    l_constraint_name varchar2(255);
begin
    l_result := apex_error.init_error_result (
                    p_error => p_error );

    -- If it's an internal error raised by APEX, like an invalid statement or
    -- code which can't be executed, the error text might contain security sensitive
    -- information. To avoid this security problem we can rewrite the error to
    -- a generic error message and log the original error message for further
    -- investigation by the help desk.
    if p_error.is_internal_error then
        -- Access Denied errors raised by application or page authorization
        -- and all errors regarding session state should still show up with the
        -- original error message
        if    p_error.apex_error_code <> 'APEX.AUTHORIZATION.ACCESS_DENIED'
          and p_error.apex_error_code not like 'APEX.SESSION_STATE.%'
        then
            -- log error for example with an autonomous transaction and return
            -- l_reference_id as reference#
            -- l_reference_id := log_error (
            --                       p_error => p_error );
            --

            -- Change the message to the generic error message which doesn't expose
            -- any sensitive information.
            l_result.message         := 'An unexpected internal application error has occurred. '||
                                        'Please get in contact with XXX and provide '||
                                        'reference# '||to_char(l_reference_id, '999G999G999G990')||
                                        ' for further investigation.';
            l_result.additional_info := null;
        end if;
    else
        -- Always show the error as inline error
        -- Note: If you have created manual tabular forms (using the package
        --       apex_item/htmldb_item in the SQL statement) you should still
        --       use "On error page" on that pages to avoid loosing entered data
        l_result.display_location := case
                                       when l_result.display_location = apex_error.c_on_error_page then apex_error.c_inline_in_notification
                                       else l_result.display_location
                                     end;

        -- If it's a constraint violation like
        --
        --   -) ORA-00001: unique constraint violated
        --   -) ORA-02091: transaction rolled back (-> can hide a deferred constraint)
        --   -) ORA-02290: check constraint violated
        --   -) ORA-02291: integrity constraint violated - parent key not found
        --   -) ORA-02292: integrity constraint violated - child record found
        --
        -- we try to get a friendly error message from our constraint lookup configuration.
        -- If we don't find the constraint in our lookup table we fallback to
        -- the original ORA error message.
        if p_error.ora_sqlcode in (-1, -2091, -2290, -2291, -2292) then
            l_constraint_name := apex_error.extract_constraint_name (
                                     p_error => p_error );

            begin
                select message
                  into l_result.message
                  from constraint_lookup
                 where constraint_name = l_constraint_name;
            exception when no_data_found then null; -- not every constraint has to be in our lookup table
            end;
        end if;

        -- If an ORA error has been raised, for example a raise_application_error(-20xxx, '...')
        -- in a table trigger or in a PL/SQL package called by a process and we
        -- haven't found the error in our lookup table, then we just want to see
        -- the actual error text and not the full error stack with all the ORA error numbers.
        if p_error.ora_sqlcode is not null and l_result.message = p_error.message then
            l_result.message := apex_error.get_first_ora_error_text (
                                    p_error => p_error );
        end if;

        -- If no associated page item/tabular form column has been set, we can use
        -- apex_error.auto_set_associated_item to automatically guess the affected
        -- error field by examine the ORA error for constraint names or column names.
        if l_result.page_item_name is null and l_result.column_alias is null then
            apex_error.auto_set_associated_item (
                p_error        => p_error,
                p_error_result => l_result );
        end if;
    end if;

    return l_result;
end apex_error_handling_example;

*/

-- Record structure which is passed into an error handling callout function and
-- which contains all the relevant information about the occurred error
type t_error is record (
    message           varchar2(32767),     /* Error message which will be displayed */
    additional_info   varchar2(32767),     /* Only used for display_location ON_ERROR_PAGE to display additional error information */
    display_location  varchar2(40),        /* Use constants "used for display_location" below */
    association_type  varchar2(40),        /* Use constants "used for asociation_type" below */
    page_item_name    varchar2(255),       /* Associated page item name */
    region_id         number,              /* Associated tabular form region id of the primary application */
    column_alias      varchar2(255),       /* Associated tabular form column alias */
    row_num           pls_integer,         /* Associated tabular form row */
    is_internal_error boolean,             /* Set to TRUE if it's a critical error raised by the APEX engine, like an invalid SQL/PLSQL statements, ... Internal Errors are always displayed on the Error Page */
    apex_error_code   varchar2(255),       /* Contains the system message code if it's an error raised by APEX */
    ora_sqlcode       number,              /* SQLCODE on exception stack which triggered the error, NULL if the error was not raised by an ORA error */
    ora_sqlerrm       varchar2(32767),     /* SQLERRM which triggered the error, NULL if the error was not raised by an ORA error */
    error_backtrace   varchar2(32767),     /* Output of sys.dbms_utility.format_error_backtrace or sys.dbms_utility.format_call_stack */
    component         wwv_flow.t_component /* Component which has been processed when the error occurred */
    );

-- Record structure which has to be returned my an error handling callout function
type t_error_result is record (
    message          varchar2(32767), /* Error message which will be displayed */
    additional_info  varchar2(32767), /* Only used for display_location ON_ERROR_PAGE to display additional error information */
    display_location varchar2(40),    /* Use constants "used for display_location" below */
    page_item_name   varchar2(255),   /* Associated page item name */
    column_alias     varchar2(255)    /* Associated tabular form column alias */
    );

--==============================================================================
-- Global constants
--==============================================================================

-- used for display_location
c_inline_with_field           constant varchar2(40) := 'INLINE_WITH_FIELD';
c_inline_with_field_and_notif constant varchar2(40) := 'INLINE_WITH_FIELD_AND_NOTIFICATION';
c_inline_in_notification      constant varchar2(40) := 'INLINE_IN_NOTIFICATION';
c_on_error_page               constant varchar2(40) := 'ON_ERROR_PAGE';

-- used for association_type
c_ass_type_page_item     constant varchar2(30) := 'PAGE_ITEM';
c_ass_type_region        constant varchar2(30) := 'REGION';
c_ass_type_region_column constant varchar2(30) := 'REGION_COLUMN';

--==============================================================================
-- Global variables
--==============================================================================

/* Note: for internal use only!!! */
g_error        t_error;
g_error_result t_error_result;

--==============================================================================
-- Adds an error message onto the error stack.
-- Note: This procedure has to be called before APEX has performed the
--       last validation/process, otherwise it will not take the error into account
--       when the inline errors are displayed.
--==============================================================================
procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2, -- use constants "used for display_location"
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2,
    p_page_item_name   in varchar2,
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_error_code          in varchar2, -- name of a "Text Message"
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2, -- use constants "used for display_location"
    p_page_item_name      in varchar2,
    p_ignore_ora_error    in boolean  default false );

procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2, -- use constants "used for display_location"
    p_region_id        in number,
    p_column_alias     in varchar2 default null,
    p_row_num          in number,
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_error_code          in varchar2, -- name of a "Text Message"
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2, -- use constants "used for display_location"
    p_region_id           in number,
    p_column_alias        in varchar2 default null,
    p_row_num             in number,
    p_ignore_ora_error    in boolean  default false );

--==============================================================================
-- Function which returns the t_error_result record initialized with the values
-- stored in p_error.
-- Note: This function should be used for initialization to be compatible with
--       future changes in t_error_result and to properly initialize them.
--==============================================================================
function init_error_result (
    p_error in t_error )
    return t_error_result;

--==============================================================================
-- This procedure tries to automatically set the associated page item/tabular
-- form column based on a constraint contained in the ORA error message.
--
-- 1) The constraint is identified by searching for the pattern (schema.constraint)
-- 2) Only constraints of type P, U, R and C are supported
-- 3) For constraints of type C (check constraints) the procedure tries to parse
--    the expression to identify those columns which are used in the constraint
--    expresion
-- 4) Using those columns, the procedure will get the first visible page item or
--    tabular form column which is based on that column and set it as associated
--    p_error_result.page_item_name/p_error_result.column_alias.
-- 5) If a page item/tabular form column was found, p_error_result.display_location
--    will be set to apex_error.c_inline_with_field_and_notif
--==============================================================================
procedure auto_set_associated_item (
    p_error_result in out nocopy t_error_result,
    p_error        in            t_error );

--==============================================================================
-- Function which tries to extract a constraint name contained in p_error.ora_sqlerrm.
-- The constraint has to match to the pattern (schema.constraint).
-- If p_include_schema is set to TRUE, the result will be prefixed with the
-- schema name (for example: HR.DEMO_PRODUCT_INFO_PK), if FALSE only the
-- constraint name will be returned.
--==============================================================================
function extract_constraint_name (
    p_error          in t_error,
    p_include_schema in boolean default false )
    return varchar2;

--==============================================================================
-- Function which returns the first ORA error message text stored in
-- p_error.ora_sqlerrm. If p_error.ora_sqlerrm doesn't contain a value, NULL
-- will be returned. Only if p_include_error_no is set to TRUE, ORA-xxxx: will
-- be included in the returned error message, otherwise only the message text
-- will be returned.
--==============================================================================
function get_first_ora_error_text (
    p_error            in t_error,
    p_include_error_no in boolean default false )
    return varchar2;

--==============================================================================
-- Writes the data of the error to the debug output.
--==============================================================================
procedure debug_error (
    p_error in t_error );

--==============================================================================
-- Function returns TRUE if (inline) errors have occurred and FALSE if
-- no error has occurred.
--==============================================================================
function have_errors_occurred return boolean;

--==============================================================================
-- Function returns the number of errors on the stack.
--==============================================================================
function get_error_count return pls_integer;

--==============================================================================
-- Returns a string containing the relevant ARIA attributes for an item that
-- has errors, only when running in screen reader mode.
--==============================================================================
function get_aria_error_attributes (
    p_item_name in varchar2 )
    return varchar2;
--
--
end wwv_flow_error_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ERROR"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_error.sql
--
--    DESCRIPTION
--      This package is responsible for handling errors.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    02/15/2011 - Created (feature# 544)
--      pawolf    03/31/2011 - Improved the apex_error_handling_example
--      pawolf    04/20/2011 - Renamed wwv_flow_plugin.c_inline_in_notifiction to c_inline_in_notification
--      arayner   05/27/2011 - Added get_aria_error_attributes function that returns ARIA attributes for an item that has errors (feature 422)
--      pawolf    06/24/2011 - Moved g_painting_error_page to package spec
--      pawolf    11/23/2011 - Added p_ignore_ora_error to add_error and raise_internal_error (bug# 13014776)
--      pawolf    12/21/2011 - Added clear/set_error_backtrace to get a correct error backtrace (bug 13510548)
--      pawolf    12/22/2011 - Removed clear/set_error_backtrace and moved it to wwv_dbms_sql
--      pawolf    02/27/2012 - Moved public APIs to wwv_flow_error_api
--      pawolf    02/27/2012 - Moved public constants and types to wwv_flow_error_api
--      pawolf    07/18/2012 - Added get_internal_error (bug# 13078212)
--      cneumuel  08/01/2012 - In get_internal_error: default p_escape_placeholders to false, to prevent double escaping (bug # 13078212)
--
--------------------------------------------------------------------------------


--==============================================================================
-- Global constants
--==============================================================================

-- used by raise_internal_error
c_internal_error_no constant pls_integer := -20987;
e_internal_error    exception;
pragma exception_init(e_internal_error, -20987);

--==============================================================================
-- Global variables
--==============================================================================
g_painting_error_page boolean := false; -- TRUE if we are currently painting the
                                        -- error page to avoid recursions

--==============================================================================
-- Adds an error message onto the error stack.
-- Note: This procedure has to be called before APEX has performed the
--       last validation/process, otherwise it will not take the error into account
--       when the inline errors are displayed.
--==============================================================================
procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2, -- use constants "used for display_location"
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2,
    p_page_item_name   in varchar2,
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_error_code          in varchar2, -- name of a "Text Message"
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2, -- use constants "used for display_location"
    p_page_item_name      in varchar2,
    p_ignore_ora_error    in boolean  default false );

procedure add_error (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2, -- use constants "used for display_location"
    p_region_id        in number,
    p_column_alias     in varchar2 default null,
    p_row_num          in number,
    p_ignore_ora_error in boolean  default false );

procedure add_error (
    p_error_code          in varchar2, -- name of a "Text Message"
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2, -- use constants "used for display_location"
    p_region_id           in number,
    p_column_alias        in varchar2 default null,
    p_row_num             in number,
    p_ignore_ora_error    in boolean  default false );

--==============================================================================
-- Writes the data of the error to the debug output.
--==============================================================================
procedure debug_error (
    p_error in wwv_flow_error_api.t_error );

--==============================================================================
-- Function returns TRUE if (inline) errors have occurred and FALSE if
-- no error has occurred.
--==============================================================================
function have_errors_occurred return boolean;

--==============================================================================
-- Function returns the number of errors on the stack.
--==============================================================================
function get_error_count return pls_integer;

--==============================================================================
-- Returns a string containing the relevant ARIA attributes for an item that
-- has errors, only when running in screen reader mode.
--==============================================================================
function get_aria_error_attributes (
    p_item_name in varchar2 )
    return varchar2;

--==============================================================================
-- Function returns TRUE if for that page items errors have occurred.
--==============================================================================
function has_page_item_errors (
    p_page_item_name in varchar2 )
    return boolean;

--==============================================================================
-- Function returns TRUE if for that tabular form row errors have occurred.
--==============================================================================
function has_tabular_form_row_errors (
    p_tabular_form_region_id in number,
    p_row_num                in pls_integer )
    return boolean;

--==============================================================================
-- Function returns TRUE if for that tabular form column and row errors have occurred.
--==============================================================================
function has_tabular_form_column_errors (
    p_tabular_form_region_id in number,
    p_column_alias           in varchar2,
    p_row_num                in pls_integer )
    return boolean;

--==============================================================================
-- Procedure called from wwv_flow.show which will make the necessary adjustments
-- to the page item labels and the error stack if inline errors
-- have occurred during "Page Processing".
--==============================================================================
procedure prepare_inline_error_output;

--==============================================================================
-- Procedure to show an APEX engine error on the error page.
-- p_error_code is the name of a system message.
-- p_overwrite_internal_error can be used to remove a previously raised internal
-- error from the error stack and display the current one. If set to FALSE,
-- the previous more specific error will always be displayed.
--==============================================================================
procedure raise_internal_error (
    p_error_code               in varchar2,
    p0                         in varchar2 default null,
    p1                         in varchar2 default null,
    p2                         in varchar2 default null,
    p3                         in varchar2 default null,
    p4                         in varchar2 default null,
    p5                         in varchar2 default null,
    p6                         in varchar2 default null,
    p7                         in varchar2 default null,
    p8                         in varchar2 default null,
    p9                         in varchar2 default null,
    p_escape_placeholders      in boolean  default true,
    p_additional_info          in varchar2 default null,
    p_overwrite_internal_error in boolean  default false,
    p_ignore_ora_error         in boolean  default false );

--==============================================================================
-- Procedure to show an APEX engine error on the error page.
-- p_overwrite_internal_error can be used to remove a previously raised internal
-- error from the error stack and display the current one. If set to FALSE,
-- the previous more specific error will always be displayed.
--==============================================================================
procedure raise_internal_error (
    p_error_message            in varchar2,
    p_additional_info          in varchar2 default null,
    p_overwrite_internal_error in boolean  default false,
    p_ignore_ora_error         in boolean  default false );

--==============================================================================
-- Function to get an APEX engine error message which is internally calling
-- the application error handling function to modify the message if necessary.
--==============================================================================
function get_internal_error (
    p_error_code          in varchar2,
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default false,
    p_ignore_ora_error    in boolean  default false )
    return varchar2;

--==============================================================================
-- Returns TRUE if the current ORA error is our "Internal Error" reraise exception.
-- Always returns FALSE if p_overwrite_internal_error = TRUE or if it's not our
-- reraise exception.
--
-- The reason for not just using WHEN e_internal_error or SQLCODE = c_internal_error_no
-- is that a customer could have also used that error no for his custom error
-- messages.
--==============================================================================
function is_internal_error_on_stack (
    p_overwrite_internal_error in boolean default false )
    return boolean;

--==============================================================================
-- Returns TRUE if the current ORA error is our "Stop APEX Engine" reraise
-- exception, otherwise returns FALSE.
--
-- The reason for not just using WHEN e_stop_apex_engine or SQLCODE = c_stop_apex_engine
-- is that a customer could have also used that error no for his custom error
-- messages.
--==============================================================================
function is_stop_apex_engine_on_stack return boolean;

end wwv_flow_error;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_META_CLEANUP"
as
--
--
--
--  Copyright (c) Oracle Corporation 2000 - 2002. All Rights Reserved.
--
--    NAME
--      meta_cleanup.sql
--
--    DESCRIPTION
--      Package to cleanup meta data between versions
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--
--

    procedure template_head_update;

    procedure item_attributes;

    procedure row_template_condition;

    procedure copy_svg_series_attr;

    procedure menu_options_update;

    procedure lov_data_update;

    procedure svg_region_source_update;

    procedure report_columns_update;

    procedure fix_app_auth_logout_url;

    procedure enforce_page_alias_uniqueness;

    procedure fix_file_repository;

end wwv_meta_cleanup;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_UPGRADE"
as
--
--
--
--  Copyright (c) Oracle Corporation 2000 - 2005. All Rights Reserved.
--
--    NAME
--      wwv_flow_sw_upgrade.sql
--
--    DESCRIPTION
--      Package to upgrade SQL Workshop meta data between versions
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--
--

procedure sw_script_name_cleanup;

procedure sw_ctrl_file_cleanup (
    p_ctrl_filename     in varchar2,
    p_security_group_id in number,
    p_ctrl_files        in wwv_flow_global.vc_arr2
    );

procedure sw_archive_cleanup (
    p_owner              in varchar2,
    p_title              in varchar2,
    p_created_by         in varchar2,
    p_created_on         in date,
    p_security_group_id  in number,
    p_sql                in clob,
    p_description        in varchar2 default null
    );
end wwv_flow_sw_upgrade;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_UPGRADE"
--
--  Copyright (c) Oracle Corporation 2001 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_upgrade
--
--    DESCRIPTION
--      This package facilitates flows upgrades.
--      Follow the following steps to upgrade:
--      1. Install a new version of flows into a "new flows" schema.
--      2. Login to sqlplus as the "new flows" user.
--      3. exec wwv_flow_upgrade.copy_flow_meta_data('FLOWS1','FLOWS2')
--         assume flows1 is the old schema and flows2 is the new schema.
--      4. Review the upgrade log (see example query)
--      5. exec wwv_flow_upgrade.recreate_public_synonyms('FLOWS2')
--
--    NOTES
--      Example Log Query:
--         column upgrade_sequence format 9999
--         column upgrade_action format a44 wrapped
--         column upgrade_error format a50 wrapped
--         column upgrade_command format a50 wrapped
--         set linesize 160
--         set pagesize 1000
--         select upgrade_sequence, upgrade_action, upgrade_error, upgrade_command
--         from   wwv_flow_upgrade_progress
--         order by upgrade_id desc, upgrade_sequence desc
--
--      Example Log Query 2:
--         column upgrade_sequence format 9999
--         column upgrade_action format a44 wrapped
--         column upgrade_error format a50 wrapped
--         column upgrade_command format a50 wrapped
--         set linesize 160
--         set pagesize 1000
--         select upgrade_sequence, upgrade_action, upgrade_error, upgrade_command
--         from   wwv_flow_upgrade_progress
--         order by upgrade_id desc, upgrade_sequence
--
as
g_version_from       varchar2(255);
g_version_to         varchar2(255);
g_f number;
c number;
p number;
i number;
g_row_cnt            number := 0;
g_session_seq1       number := 0;
g_session_seq2       number := 0;
g_pref_name          wwv_flow.flow_vc_arr;
g_pref_value         wwv_flow.flow_vc_arr;
g_pref_desc          wwv_flow.flow_vc_arr;


procedure increment_session(
    p_old_schema        in varchar2,
    p_new_schema        in varchar2)
    ;

procedure log (
   p_action  in varchar2,
   p_error   in varchar2 default null,
   p_command in varchar2 default null)
   ;

procedure set_environment (
    p_environment_type in varchar2 default null )
    ;

procedure drop_public_synonyms (
    p_drop_all in boolean default false )
   --
   -- drop public synonyms to flow objects
   --
   -- sqlplus example:
   --    exec wwv_flow_upgrade.drop_public_synonyms;
   --
   ;

procedure create_public_synonyms (
   --
   -- create public synonyms only without dropping or granting
   -- sqlplus example:
   --    exec wwv_flow_upgrade.create_public_synonyms('FLOWS2')
   --
   p_owner_to          in varchar2)
   ;

procedure grant_public_synonyms (
   --
   -- issue grants to public synonyms only without dropping or creating
   -- sqlplus example:
   --    exec wwv_flow_upgrade.grant_public_synonyms('FLOWS2')
   --
   p_owner_to          in varchar2)
   ;


procedure recreate_public_synonyms (
   --
   -- create all needed public synonyms for a flows environment.
   --
   -- sqlplus example:
   --    exec wwv_flow_upgrade.recreate_public_synonyms('FLOWS2')
   --
   p_owner_to          in varchar2)
   ;

procedure copy_flow_meta_data (
   --
   -- Copy flows meta data from once schema to another.
   --
   -- sqlplus example:
   --    exec wwv_flow_upgrade.copy_flow_meta_data('FLOWS1','FLOWS2')
   --
   p_owner_from        in varchar2,
   p_owner_to          in varchar2)
   ;

procedure remove_meta_data (
   --
   -- Remove meta data that is not owned by the internal user.
   -- WARNING running this procedure could remove your flows data!
   -- Without flow meta data you have not flows.
   --
   p_schema in varchar2)
   ;

procedure purge_log
   --
   -- delete all entries in the flow upgrade log
   --
   ;

procedure remove_jobs
    --
    -- Remove all of the standard dbms_jobs for a schema
    ;

procedure create_jobs(
    --
    -- Create all of the standard dbms_jobs for a given schema
    p_owner     in varchar2)
    ;

procedure flows_files_objects_create(
    --
    -- Create the proper grants and synonyms for the flows_files schema
    -- used for file upload / download
    p_flow_owner    in varchar2,
    p_owner         in varchar2 default 'FLOWS_FILES'
    )
    ;

procedure flows_files_objects_remove(
    --
    -- Remove the proper grants and synonyms for the flows_files schema
    -- used for file upload / download
    p_flow_owner    in varchar2,
    p_owner         in varchar2 default 'FLOWS_FILES'
    )
    ;

procedure meta_cleanup(
    p_from      in varchar2,
    P_to        in varchar2);

procedure report_column_cleanup;

procedure template_name_cleanup(
    p_owner     in varchar2);

procedure switch_schemas(
    --
    -- This procedure should be run after an additional copy of flows is installed,
    -- as it is the final step in the upgrade process.
    -- Once this procedure is run, you will be running in the new version of flows.
    -- This will:
    --     1.  Remove all old dbms_jobs
    --     2.  Create all new dbms_jobs
    --     3.  Drop All public synonyms
    --     4.  Create all new public synonyms
    --     5.  Perform all necessary grants on public synoyms
    p_from      in varchar2,
    P_to        in varchar2)
    ;


procedure copy_prefs (
    --
    -- Copys old preferences from schema1.WWV_FLOW_PLATFORM_PREFS
    -- to schema2.WWV_FLOW_PLATFORM_PREFS
    --
    p_owner_from        in varchar2,
    p_owner_to          in varchar2)
    ;
function to_template_id(
  p_in varchar2)
  return number;

procedure upgrade_to_040200(
    p_owner             in varchar2,
    p_from              in varchar2)
    ;

procedure upgrade_ws_to_040200(
    p_from              in varchar2)
    ;

procedure sw_cleanup (
    p_from    in varchar2,
    p_to      in varchar2)
    ;

procedure enable_ws_constraints (
    p_to      in varchar2)
    ;

end wwv_flow_upgrade;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLSQL_JOB"
as

g_job number;

/*
 * This function updates the wwv_flow_jobs table with values passed
 * in.  This can be called from the process itself, which in turn
 * allows the application to see all it's own outstanding jobs
 * running and their status or error text.
 * Arguments:
 *  p_job: passed the reserved word JOB.  when this code is executed
 *         it will have visibility to the job number via the reserved
 *         word JOB.
 *  p_status: plain text that you want associated with JOB: p_job
 *  p_desc: in case you need additional text for explaining the status
 *          field, you can pass it here.
 * Note:
 *  wwv_flow_security.g_security_group_id must be the sgid of the JOB
 *  originator
 */
procedure update_job_status(
    p_job                 in number,
    p_status              in varchar2)
    ;

/*
 *  Deprecated - Please apply any changes to the overloaded version with p_when as a date type
 */
function submit_process(
    p_sql                 in varchar2,
    p_when                in varchar2    default sysdate,
    p_status              in varchar2    default 'PENDING')
    return number
    ;

/*
 * Submit a process to be placed in the "background" of your session.
 * Arguments:
 *  p_sql: the process you wish to run in your job
 *  p_when: when you want to run it.  default is "ASAP" (type date)
 *  p_totalwork: the total number of units of work to be accomplished.
 *               this is useful when you are checking status
 *  p_status: plain text status information for this job.  this will
 *            eventually be updateable through this API.
 *  p_units: plain text value of what "units" p_totalwork refers to
 */
function submit_process(
    p_sql                 in varchar2,
    p_when                in date        default sysdate,
    p_status              in varchar2    default 'PENDING')
    return number
    ;

/*
 * processes may only be removed if they have not begun.  this call
 * can be made without problems regardless of whether the job has begun
 * or not.
 * Note:
 *  wwv_flow_security.g_security_group_id must be the sgid of the JOB
 *  originator
 */
procedure purge_process(
    p_job                 in number)
    ;

/*
 * This function is for determining whether or not the database
 * instance is configured to run jobs or not.
 */
function jobs_are_enabled
    return boolean
    ;

/*
 * determine the amount of time which has elapsed since the job
 * was submitted.
 * (ie, l_elapsed_minutes := wwv_flow_job.time_elapsed(l_myjobno)/1440;
 */
function time_elapsed(
    p_job                 in number)
    return number
    ;

end wwv_flow_plsql_job;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_RPT_STD_MSG"
is
--
--
--
--  Copyright (c) Oracle Corporation 2008. All Rights Reserved.
--
--    NAME
--      wwv_flow_rpt_std_msg.sql
--
--    DESCRIPTION
--      Messages used in report engines
--
--    RUNTIME DEPLOYMENT: YES
--
--

t_msg_rows                    varchar2(255) := 'Rows';
t_msg_all                     varchar2(255) := 'All';
t_msg_go                      varchar2(255) := 'Go';
t_msg_select_columns          varchar2(255) := 'Select Columns';
t_msg_filter                  varchar2(255) := 'Filter';
t_msg_sort                    varchar2(255) := 'Sort';
t_msg_group_by_sort           varchar2(255) := 'Group By Sort';
t_msg_control_break           varchar2(255) := 'Control Break';
t_msg_highlight               varchar2(255) := 'Highlight';
t_msg_compute                 varchar2(255) := 'Compute';
t_msg_aggregate               varchar2(255) := 'Aggregate';
t_msg_chart                   varchar2(255) := 'Chart';
t_msg_notify                  varchar2(255) := 'Subscription';
t_msg_flashback               varchar2(255) := 'Flashback';
t_msg_save_report             varchar2(255) := 'Save Report';
t_msg_reset                   varchar2(255) := 'Reset';
t_msg_help                    varchar2(255) := 'Help';
t_msg_download                varchar2(255) := 'Download';

t_msg_sort_ascending          varchar2(255) := 'Sort Ascending';
t_msg_sort_descending         varchar2(255) := 'Sort Descending';
--t_msg_remove_filter           varchar2(255) := 'Remove Filter';
t_msg_hide_column             varchar2(255) := 'Hide Column';
--t_msg_control_break           varchar2(255) := 'Control Break';
t_msg_column_info             varchar2(255) := 'Column Information';
--t_msg_compute                 varchar2(255) := 'Compute';

t_msg_report                  varchar2(255) := 'Report';
t_msg_delete_report           varchar2(255) := 'Delete Report';
t_msg_filters                 varchar2(255) := 'Filters';
t_msg_remove_filter           varchar2(255) := 'Remove Filter';
t_msg_remove_flashback        varchar2(255) := 'Remove Flashback';
t_msg_break                   varchar2(255) := 'Control Break';
t_msg_breaks                  varchar2(255) := 'Control Breaks';
t_msg_remove_break            varchar2(255) := 'Remove Breaks';
t_msg_highlights              varchar2(255) := 'Highlights';
t_msg_remove_highlight        varchar2(255) := 'Remove Highlight';

t_msg_next                    varchar2(255) := 'Next';
t_msg_previous                varchar2(255) := 'Previous';
t_msg_enable_disable_alt      varchar2(255) := 'Enable/Disable';
t_msg_edit_filter             varchar2(255) := 'Edit Filter';
t_msg_edit_highlight          varchar2(255) := 'Edit Highlight';
t_msg_rename_report           varchar2(255) := 'Rename Report';

t_msg_working_report          varchar2(255) := 'Working Report';
t_msg_view_chart              varchar2(255) := 'View Chart';
t_msg_edit_chart              varchar2(255) := 'Edit Chart';
t_msg_view_report             varchar2(255) := 'View Report';
t_msg_chart_initializing      varchar2(255) := 'Initializing...';

t_msg_agg_sum                 varchar2(255) := 'Sum';
t_msg_agg_avg                 varchar2(255) := 'Avg';
t_msg_agg_min                 varchar2(255) := 'Min';
t_msg_agg_max                 varchar2(255) := 'Max';
t_msg_agg_median              varchar2(255) := 'Median';
t_msg_agg_count               varchar2(255) := 'Count';
t_msg_agg_count_distinct      varchar2(255) := 'Count Distinct';


-- Classic Reports
t_PAGINATION_NEXT             varchar2(255) := 'Next';
t_PAGINATION_PREVIOUS         varchar2(255) := 'Previous';
t_PAGINATION_NEXT_SET         varchar2(255) := 'Next Set';
t_PAGINATION_PREVIOUS_SET     varchar2(255) := 'Previous Set';
t_SORT_BY_THIS_COLUMN         varchar2(255) := 'Sort by this column';

procedure init (
    p_mode in varchar2 default 'ALL');

end wwv_flow_rpt_std_msg;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEAM"
as

g_bug_id number;
g_todo_id number;
g_feature_id number;

procedure team_dash_1 (
	p_developer         in varchar2 default null,
    p_release           in varchar2 default '0',
    p_application       in number   default 0,
    p_session           in number default 0,
    p_security_group_id in number default 0,
    p_show              in varchar2 default 'ALL'
    );

procedure feedback_dash_1 (
	p_developer         in varchar2 default null,
    p_release           in varchar2 default '0',
    p_application       in number   default 0,
    p_session           in number default 0,
    p_security_group_id in number default 0,
    p_show              in varchar2 default 'ALL'
    );

procedure show_todo_dash_1 (
	p_developer         in varchar2 default null,
    p_release           in varchar2 default '0',
    p_application       in number   default 0,
    p_show              in varchar2 default 'ALL',
    p_session           in number default 0,
    p_security_group_id in number default 0
   );

procedure show_feature_dash_1 (
    p_release        in varchar2 default '0',
    p_application    in number   default 0,
    p_show           in varchar2 default 'ALL',
    p_session        in number default 0,
    p_security_group_id in number default 0
	);

procedure log_feedback_as_todo (
    p_feedback_id        in number,
    p_workspace_id       in number,
	P_ASSIGNED_TO        in varchar2 default null,
	P_DESCRIPTION        in varchar2 default null,
	p_name               in varchar2 default null,
	p_RELEASE            in varchar2 default null,
	p_STATUS             in varchar2 default null,
	p_CATEGORY           in varchar2 default null,
	p_delete_feedback_yn in varchar2 default 'N'
    );

procedure log_feedback_as_bug (
    p_feedback_id  in number,
    p_workspace_id in number,
	P_ASSIGNED_TO  in varchar2 default null,
	P_BUG_TITLE    in varchar2 default null,
	P_SEVERITY     in varchar2 default null,
	P_RELEASE      in varchar2 default null)
	;

function get_default_release (
   p_security_group_id in number   default null,
   p_return_null_as    in varchar2 default null)
   return varchar2
   ;

function get_email (
   p_security_group_id in number   default null,
   p_apex_developer    in varchar2 default null)
   return varchar2
   ;

procedure send_developer_summary (
   p_current_user       in varchar2 default null,
   p_release             in varchar2 default null,
   p_security_group_id  in number,
   p_developer          in varchar2 default null,
   p_subject            in varchar2 default null,
   p_from               in varchar2 default null,
   p_to                 in varchar2 default null,
   p_cc                 in varchar2 default null,
   p_body               in varchar2 default null,
   p_number_format      in varchar2 default '999G999G999G990',
   p_date_format        in varchar2 default 'DD-MON-YYYY',
   p_show_milestone_details in varchar2 default 'Y')
   ;

procedure show_developer_summary (
    p_security_group_id in number   default null,
    p_release           in varchar2 default null,
    p_developer         in varchar2 default null,
    p_number_format     in varchar2 default '999G999G999G990',
    p_date_format        in varchar2 default 'DD-MON-YYYY',
    p_htp_result_yn     in varchar2 default 'Y',
    p_show_milestone_details in varchar2 default 'Y')
    ;

procedure show_bug_dashboard1 (
    p_show              in varchar2 default null,
    p_security_group_id in number   default null,
    p_release           in varchar2 default null,
    p_session           in number   default null)
    ;

procedure show_milestone_dashboard1 (
    p_security_group_id in number   default null,
    p_release           in varchar2 default null,
    p_session           in number   default null)
    ;

procedure show_breadcrumbs (
    p_application_id    in number,
    p_security_group_id in number,
    p_app_session       in number)
    ;


procedure wwv_flow_team_tag_sync (
    p_component_type    in varchar2 default 'FEATURE',
    p_component_id      in number   default null,
    p_new_tags          in varchar2 default null,
    p_security_group_id in number   default null)
    ;

procedure wwv_flow_render_tag_cloud (
    p_security_group_id     in number,
    p_session_id            in number,
    P_tag_type              in varchar2 default 'ALL',
    p_alpha                 in number default 1,
    p_max                   in number default 100,
    p_limit                 in number default 10000,
    p_link_to_page          in varchar2 default '8800',
    p_tag_item_filter       in varchar2 default 'IRC_TAGS',
    p_clear_cache           in varchar2 default '8800,RIR')
    ;

end wwv_flow_team;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_STANDARD"
is
--
--
--
--  Copyright (c) Oracle Corporation 2007. All Rights Reserved.
--
--    NAME
--      wwv_flow_worksheet_standard.sql
--
--    DESCRIPTION
--      Generic worksheet APIs.
--
--    RUNTIME DEPLOYMENT: YES
--
--

    empty_vc_arr wwv_flow_global.vc_arr2;

    type col_attr_t is record (
        id                     number,
        column_expression      varchar2(4000),
        db_column_name         varchar2(255),
        column_alias           varchar2(255),
        column_identifier      varchar2(10),
        report_label           varchar2(4000),
        column_type            varchar2(255),
        format_mask            varchar2(255),
        display_as             varchar2(255),
        display_text_as        varchar2(255),
        display_order          number,
        heading_alignment      varchar2(255),
        column_alignment       varchar2(255),
        max_length             number,
        --
        filter_date_ranges     varchar2(255),
        col_index_in_query     number,
        html_expression        varchar2(4000),
        link                   varchar2(4000),
        linktext               varchar2(4000),
        link_attr              varchar2(4000),
        link_checksum_type     varchar2(255),
        --
        rpt_distinct_lov       varchar2(1),
        rpt_show_filter_lov    varchar2(1),
        rpt_lov                varchar2(4000),
        rpt_named_lov          varchar2(32767),
        --
        fact_table_key         varchar2(4000),
        dimension_table        varchar2(4000),
        dimension_table_id     varchar2(4000),
        dimension_table_value  varchar2(4000),
        --
        display_condition_type varchar2(255),
        display_condition      varchar2(4000),
        display_condition2     varchar2(4000),
        security_scheme        varchar2(255),
        user_may_view          varchar2(1),
        user_may_edit          varchar2(1),
        show_column            varchar2(1),
        tz_dependent           varchar2(1),
        is_computed            varchar2(1));

    type col_arr   is table of col_attr_t index by binary_integer;
    type col_arr2  is table of col_attr_t index by varchar2(255);

    type full_col_arr  is table of wwv_flow_worksheet_columns%rowtype index by binary_integer;
    type full_col_arr2 is  table of wwv_flow_worksheet_columns%rowtype index by varchar2(255);

    type bind_arr  is table of varchar2(4000) index by varchar2(30);
    empty_bind_arr        bind_arr;

    g_pref_parent_report_id  number;
    g_pref_show_nulls        varchar2(30);
    g_pref_show_rpt_cols     varchar2(30);
    g_pref_show_rpt_settings varchar2(30);
    g_pref_rpt_view_mode     varchar2(255);

    type col_privs is table of boolean index by varchar2(30);
    g_empty_col_privs     col_privs;
    g_user_may_view_col   col_privs;
    g_user_may_edit_col   col_privs;

    g_attachment_subquery       varchar2(255) := '(select r.id from dual where exists (select null from apex$_ws_files where row_id = r.id and component_level = ''ROW''))';
    g_sticky_subquery           varchar2(255) := '(select r.id from dual where exists (select null from apex$_ws_notes where row_id = r.id and component_level = ''ROW''))';
    g_link_subquery             varchar2(255) := '(select r.id from dual where exists (select null from apex$_ws_links where row_id = r.id and component_level = ''ROW''))';

    g_attachment_alias          varchar2(30)  := 'acnt';
    g_sticky_alias              varchar2(30)  := 'scnt';
    g_link_alias                varchar2(30)  := 'lcnt';
    g_value                     varchar2(32767);

    g_running_worksheets_app    boolean := (case when wwv_flow.g_flow_id = 4900 and wwv_flow.g_flow_step_id in (0, 2, 20) then true else false end);
    g_running_ws_report         boolean := (case when wwv_flow.g_flow_id = 4900 and wwv_flow.g_flow_step_id in (3000) then true else false end);
    g_ws_app_date_format        varchar2(255);

    g_canonical_date_format     varchar2(255) := 'YYYYMMDDHH24MISS';
    g_canonical_number_format   varchar2(255) := '99999999999999999999999999999999999999.99999999';
    g_nls_num_characters        varchar2(255) := 'NLS_NUMERIC_CHARACTERS=''.,''';

    function get_ir_security_group_id return number;

    function all_column_function_disabled (
        p_column_id      in number,
        p_db_column_name in varchar2,
        p_worksheet_id   in number) return boolean;

    function get_requested_report_id (
        p_request       in varchar2,
        p_worksheet_id  in number)
        return number;

    function esc_ir_col_header (
        p_string in varchar2)
        return varchar2;

    ----------------------
    -- get_dbms_sql_cursor
    --
    function get_dbms_sql_cursor(
        p_query              in varchar2,
        p_owner              in varchar2 default null,
        p_do_worksheet_binds in varchar2 default 'N',
        p_bind_array         in bind_arr default empty_bind_arr,
        p_final_query        out varchar2)
        return integer;

    function get_dbms_sql_cursor(
        p_query              in varchar2,
        p_owner              in varchar2 default null,
        p_do_worksheet_binds in varchar2 default 'N',
        p_bind_array         in bind_arr default empty_bind_arr)
        return integer;

    ----------
    -- buttons
    --
    procedure show_worksheet_button (
       p_button_template_id in varchar2 default null,
       p_button_label       in varchar2 default null,
       p_button_link        in varchar2 default null,
       p_button_attributes  in varchar2 default null,
       p_button_class       in varchar2 default null,
       p_button_name        in varchar2 default null);


    --------------
    -- preferences
    --
    procedure init_worksheet_prefs (
       p_worksheet_id      in number,
       p_app_user          in varchar2);

    procedure set_worksheet_prefs (
       p_worksheet_id      in number,
       p_app_user          in varchar2,
       p_parent_report_id  in number   default g_pref_parent_report_id,
       p_show_rpt_settings in varchar2 default g_pref_show_rpt_settings,
       p_show_nulls        in varchar2 default g_pref_show_nulls,
       p_show_rpt_cols     in varchar2 default g_pref_show_rpt_cols,
       p_rpt_view_mode     in varchar2 default g_pref_rpt_view_mode);

    -------------------------------
    -- column computation functions
    --

    function col_heading_num_to_char (
        p_number       in number)
        return varchar2;

    function col_heading_char_to_num (
        p_char         in varchar2)
        return number;

    function get_next_identifier (
        p_worksheet_id in number)
        return varchar2;

    function get_next_computed_identifier (
        p_worksheet_id in number,
        p_report_id in number)
        return varchar2;

    function get_next_db_column_name (
        p_worksheet_id in number,
        p_column_type  in varchar2)
        return varchar2;

    function get_next_computed_column_name (
        p_worksheet_id in number,
        p_report_id in number)
        return varchar2;

    function get_next_display_order_number (
        p_worksheet_id in number)
        return number;

    function get_pseudocolumn_attributes (
        p_column_alias in varchar2)
        return col_attr_t;

    function get_db_column_name (
        p_worksheet_id in number,
        p_column_identifier in varchar2)
        return varchar2;

    function get_column_label (
       p_worksheet_id           in number,
       p_db_column_name         in varchar2,
       p_computed_column_prefix in varchar2 default null
       ) return varchar2;

    function get_column_type (
       p_worksheet_id   in number,
       p_app_user       in varchar2,
       p_report_id      in number,
       p_db_column_name in varchar2
       ) return varchar2;

    function get_condition_name (
        p_condition_name in varchar2,
        p_column_label   in varchar2,
        p_operator       in varchar2,
        p_expr           in varchar2,
        p_expr2          in varchar2)
        return varchar2;

    procedure get_column_attributes (
        p_worksheet_id          in number,
        p_app_user              in varchar2,
        p_report_id             in number default null,
        --
        p_column_name           in varchar2 default null,
        p_include_hidden_cols   in varchar2 default 'N',
        p_include_computed_cols in varchar2 default 'Y',
        --
        p_column_attributes         out full_col_arr,
        p_column_attributes_by_name out full_col_arr2);

    function get_single_column_attributes (
        p_worksheet_id in number,
        p_app_user     in varchar2,
        p_report_id    in number default null,
        --
        p_column_name  in varchar2)
        return wwv_flow_worksheet_columns%rowtype;

    function get_group_name (
        p_worksheet_id   in number,
        p_group_id       in number)
        return varchar2;

    function get_compute_sql (
        p_worksheet_id  in number,
        p_app_user      in varchar2,
        p_report_id     in number,
        --
        p_expr          in varchar2)
        return varchar2;

    function get_row_filter_sql (
        p_worksheet_id  in number,
        p_app_user      in varchar2,
        p_report_id     in number,
        --
        p_expr          in varchar2)
        return varchar2;


    -----------------------------
    -- dialog validations
    --

    function check_computation_expr (
        p_worksheet_id     in number,
        p_app_user         in varchar2,
        p_report_id        in number,
        --
        p_format_mask      in varchar2,
        p_computation_expr in varchar2)
    return varchar2;

    function check_filter_expr (
        p_worksheet_id     in number,
        p_app_user         in varchar2,
        p_report_id        in number,
        --
        p_filter_expr      in varchar2)
    return varchar2;

    function check_flashback_time (
        p_flashback_time in varchar2)
    return varchar2;

    function check_highlight (
        p_worksheet_id   in number,
        p_app_user       in varchar2,
        p_report_id      in number,
        --
        p_condition_id   in number,
        p_name           in varchar2,
        p_sequence       in varchar2,
        p_color1         in varchar2,
        p_color2         in varchar2,
        --
        p_column         in varchar2,
        p_operator       in varchar2,
        p_expr           in varchar2,
        p_expr2          in varchar2)
    return varchar2;

    ---------------------
    -- report settings
    --

    function get_report_id (
        p_worksheet_id               in number,
        p_app_user                   in varchar2,
        p_report_id                  in number,
        --
        p_new_default_rpt_type       in varchar2 default 'PRIMARY',
        p_new_default_rpt_name       in varchar2 default null,
        p_create_report_if_necessary in varchar2 default 'Y')
    return number;

    function save_derived_report (
        p_worksheet_id      in number,
        p_app_user          in varchar2,
        p_base_report_id    in number,
        p_report_name       in varchar2 default null,
        p_report_descr      in varchar2 default null,
        p_category_id       in varchar2 default null,
        p_public            in varchar2 default null,
        p_is_default        in varchar2 default null,
        p_default_rpt_type  in varchar2 default 'PRIMARY')
        return number;

    procedure delete_report (
        p_worksheet_id      in number,
        p_app_user          in varchar2,
        p_report_id         in number);

    function is_column_filtered (
        p_worksheet_id        in number,
        p_app_user            in varchar2,
        p_derived_report_id   in varchar2,
        --
        p_filter_column       in varchar2)
        return varchar2;

    --
    -- security checks
    --

    function user_may_edit_worksheet (
        p_worksheet_id in number)
        return boolean;

    function user_may_view_col (
        p_worksheet_id   in number,
        p_app_user       in varchar2,
        p_db_column_name in varchar2)
        return boolean;

    function user_may_edit_col (
        p_worksheet_id   in number,
        p_app_user       in varchar2,
        p_db_column_name in varchar2)
        return boolean;

    procedure get_col_privs (
        p_worksheet_id   in number,
        p_others_may_view  out varchar2,
        p_others_may_edit  out varchar2);

    procedure save_col_privs (
        p_worksheet_id   in number,
        p_others_may_view  in varchar2,
        p_others_may_edit  in varchar2);

    --
    -- sync report columns
    --

    procedure get_column_diff (
        p_flow_id         in  number,
        p_region_id       in  number,
        p_query           in  varchar2,
        p_removed_columns out wwv_flow_global.vc_arr2,
        p_new_columns     out wwv_flow_global.vc_arr2)
        ;

    procedure synch_report_columns (
        p_flow_id   in number,
        p_region_id in number,
        p_query     in varchar2,
        p_add_new_cols_to_default_rpt in varchar2 default 'Y')
        ;

    function is_valid_ir_query (
        p_flow_id   in number,
        p_region_id in number default null,
        p_query     in varchar2,
        p_show_detail_link in varchar2 default null,
        p_pk1       in varchar2 default null,
        p_pk2       in varchar2 default null,
        p_pk3       in varchar2 default null)
    return varchar2;

    procedure set_ws_app_date_format( p_ws_app_id in number );

    function get_group_by_function_label (
        p_worksheet_id     in number,
        p_function         in varchar2,
        p_function_column  in varchar2,
        p_label            in varchar2 default null
        ) return varchar2;

end wwv_flow_worksheet_standard;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_EXPR"
as

function is_valid_format_mask (
    p_format_mask in varchar2,
    p_string_type in varchar2 default 'BOTH',
    p_allow_since in varchar2 default 'Y')
return boolean;

function tokenize (
    p_expression in varchar2)
return wwv_flow_global.vc_arr2;

function validate_comp_expression (
    p_token_list           in  wwv_flow_global.vc_arr2,
    p_valid_token_list     in  wwv_flow_global.vc_arr2,
    p_allow_literals       in  varchar2 default 'Y',
    p_invalid_token_return out varchar2)
return boolean;

function get_row_filter_sql (
    p_expression             in varchar2,
    p_columns_by_identifier  in wwv_flow_worksheet_standard.bind_arr)
    return varchar2;

function get_compute_sql (
    p_expression   in varchar2,
    p_columns_by_identifier  in wwv_flow_worksheet_standard.bind_arr)
return varchar2;

function get_compute_sql2 (
    p_worksheet_id in number,
    p_expression   in varchar2)
return varchar2;

function in_list (
    p_in_expr in varchar2)
return wwv_flow_global.vc_arr2;

function highlight_expr(
    p_val1 in varchar2,
    p_val2 in varchar2,
    p_expression_type in varchar2,
    p_highlight_rule in number)
return number;

end wwv_flow_worksheet_expr;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET"
as

g_notify_in_progress        boolean := false;
g_delete_in_progress        boolean := false;

g_notify_websheet_id        number := null;

empty_worksheet_attributes  wwv_flow_worksheets%rowtype;
empty_report_attributes     wwv_flow_worksheet_rpts%rowtype;
empty_col_arr               wwv_flow_worksheet_standard.col_arr;
empty_col_arr2              wwv_flow_worksheet_standard.col_arr2;
empty_binds                 wwv_flow_worksheet_standard.bind_arr;

g_worksheet_attributes      wwv_flow_worksheets%rowtype;
g_report_attributes         wwv_flow_worksheet_rpts%rowtype;
g_column_attributes         wwv_flow_worksheet_standard.col_arr;
g_column_attributes_by_name wwv_flow_worksheet_standard.col_arr2;
g_binds                     wwv_flow_worksheet_standard.bind_arr;

g_num_highlight_cols        number := 0;
g_num_link_cols             number := 0;
g_num_break_cols            number := 0;
g_num_visible_cols          number := 0;
g_num_hidden_cols           number := 0;
g_num_aggregate_cols        number := 0;

g_break_col_list            varchar2(32767) := null;

g_base_worksheet_table      varchar2(255) := null;
g_base_worksheet_table_pk1  varchar2(255) := null;
g_base_worksheet_table_pk2  varchar2(255) := null;
g_base_worksheet_table_pk3  varchar2(255) := null;

g_id_postfix                varchar2(255);

g_export_clob               clob;

-- Actions Menu Settings
-- This gets set from wwv_flow_worksheet_api.ir_actions_menu_settings
g_ir_show_select_columns      varchar2(1) := null;
g_ir_show_filter              varchar2(1) := null;
g_ir_show_sort                varchar2(1) := null;
g_ir_show_ctrl_break          varchar2(1) := null;
g_ir_show_highlight           varchar2(1) := null;
g_ir_show_computation         varchar2(1) := null;
g_ir_show_aggregate           varchar2(1) := null;
g_ir_show_notify              varchar2(1) := null;
g_ir_show_chart               varchar2(1) := null;
g_ir_show_group_by            varchar2(1) := null;
g_ir_show_flashback           varchar2(1) := null;
g_ir_show_save_report         varchar2(1) := null;
g_ir_show_save_report_public  varchar2(1) := null;
g_ir_show_reset               varchar2(1) := null;
g_ir_show_help                varchar2(1) := null;
g_ir_show_download            varchar2(1) := null;
g_ir_show_download_csv        varchar2(1) := null;
g_ir_show_download_html       varchar2(1) := null;
g_ir_show_download_email      varchar2(1) := null;
g_ir_show_download_xls        varchar2(1) := null;
g_ir_show_download_pdf        varchar2(1) := null;
g_ir_show_download_rtf        varchar2(1) := null;
g_ir_show_download_xml        varchar2(1) := null;

type num_arr is table of number index by binary_integer;


procedure reset_globals;

-- ------------------------------
-- procedures to populate globals
--
procedure get_worksheet_attributes (
    p_worksheet_id in number
);

procedure get_report_attributes (
    p_worksheet_id   in number,
    p_app_user       in varchar2,
    p_base_report_id in number
);

-- ----------------------------------------
-- procedure to fetch all column attributes
-- including computed columns for the
-- specified report
--
procedure get_all_column_attributes (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number default null,
    --
    p_include_hidden_cols in varchar2 default 'N',
    --
    p_column_attributes         out wwv_flow_worksheet_standard.full_col_arr,
    p_column_attributes_by_name out wwv_flow_worksheet_standard.full_col_arr2);

-- ---------------------------
-- functions returning queries
--
function get_filter_query (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number default null,
    p_derived_report_id in number default null,
    p_column            in varchar2,
    p_search_string     in varchar2 default null
) return varchar2;

function get_single_row_query (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_derived_report_id in number,
    --
    p_columns           in varchar2 default null,
    p_pk1               in varchar2,
    p_pk2               in varchar2 default null,
    p_pk3               in varchar2 default null
) return varchar2;

function get_worksheet_report_query (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_sql_hint             in varchar2 default 'DEFAULT',
    p_highlight_list       in varchar2 default 'DEFAULT',
    p_pk_columns           in varchar2 default 'DEFAULT',
    p_select_list          in varchar2 default 'DEFAULT',
    p_aggregate_list       in varchar2 default 'DEFAULT',
    p_from                 in varchar2 default 'DEFAULT',
    p_flashback            in varchar2 default 'DEFAULT',
    p_where                in varchar2 default 'DEFAULT',
    p_group_by             in varchar2 default 'DEFAULT',
    p_order_by             in varchar2 default 'DEFAULT',
    --
    p_include_max_row_cnt  in varchar2 default 'N',
    p_include_max_row_filter in varchar2 default 'Y',
    p_exclude_column       in varchar2 default null,
    p_apply_sql_formats    in varchar2 default 'N',
    p_select_hidden_cols   in varchar2 default 'Y',
    p_exclude_special_formats in varchar2 default 'N',
    p_include_change_count    in varchar2 default 'N'
    )
return varchar2;

-- -----------------------------------------
-- procedures to display interactive reports
--
procedure show_report (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_report_id        in number default null,
    --
    p_request          in varchar2,
    p_flow_id          in number default null,
    p_max_rows         in number default null,
    p_view_mode        in varchar2 default null,
    p_search_string    in varchar2 default null,
    --
    p_show_checkbox    in varchar2 default 'N',
    p_show_report_tabs in varchar2 default null
    );

procedure show_full_worksheet_region (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_report_id        in number default null,
    --
    p_request          in varchar2,
    --
    p_show_checkbox    in varchar2 default 'N',
    p_show_report_tabs in varchar2 default null
    );

procedure show_region (
    p_region_id        in number,
    p_region_static_id in varchar2 default null
    );

procedure show_report_and_worksheet_bar (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_report_id        in number default null,
    --
    p_request          in varchar2,
    p_flow_id          in number default null,
    p_max_rows         in number default null,
    p_view_mode        in varchar2 default null,
    p_search_string    in varchar2 default null,
    --
    p_show_checkbox    in varchar2 default 'N',
    p_show_report_tabs in varchar2 default null
    );

function get_report_summary_text (
    p_region                varchar2 default null,
    p_report                varchar2 default null,
    p_view                  varchar2 default null,
    p_displayed_rows_start  varchar2 default null,
    p_displayed_rows_end    varchar2 default null,
    p_total_rows            varchar2 default null
) return varchar2;

end wwv_flow_worksheet;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_API"
is
--
--
--
--  Copyright (c) Oracle Corporation 2007. All Rights Reserved.
--
--    NAME
--      wwv_flow_worksheet_api.sql
--
--    DESCRIPTION
--      Public worksheet APIs.
--
--    RUNTIME DEPLOYMENT: YES
--
--

g_flow_id      number;
g_worksheet_id number;


--
--
--
function get_report_id_using_alias (
    p_worksheet_id  in number,
    p_report_alias  in varchar2)
    return number;

function get_worksheet_id_to_use (
    p_page_id    in number,
    p_region_id  in number) return number;

function get_filter_opterator (
    p_operator_abbr  in varchar2)
    return varchar2;

function saved_report_exists (
    p_region_id   in number) return boolean;

function get_worksheet_id (
    p_worksheet_alias     in varchar2,
    p_flow_id             in number default null)
return number;

function highlight_expr(
    p_val1 in varchar2,
    p_val2 in varchar2,
    p_expression_type in varchar2,
    p_highlight_rule in number)
return number;

function get_report_name (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number)
return varchar2;

function get_column_info (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2)
return varchar2;

function get_primary_report_id (
    p_worksheet_id in number)
    return number;

--------------------
-- USER PREFERENCES
--
procedure clear_worksheet_prefs (
    p_worksheet_id   in number,
    p_app_user       in varchar2);

procedure reset_pagination (
    p_child_report_id   in number);

procedure reset_pagination (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure ir_reset_pagination (
    p_page_id      in number,
    p_report_alias in varchar2 default null);

------------------
-- SELECT COLUMNS
--
procedure hide_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2);

procedure show_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2);

procedure show_column_in_default_report (
    p_worksheet_id        in number,
    p_column              in varchar2);

function get_column_list (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number)
return varchar2;

procedure save_column_list (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_column_list  in wwv_flow_global.vc_arr2);

-----------------------
-- USER DEFINED REPORTS
--
procedure reset_report_settings (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number);

procedure clear_report_settings (
    p_worksheet_id    in number,
    p_app_user        in varchar2,
    p_report_id       in number);

function save_derived_report (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_base_report_id    in number,
    p_report_name       in varchar2 default null,
    p_report_descr      in varchar2 default null,
    p_category_id       in varchar2 default null,
    p_public            in varchar2 default null,
    p_is_default        in varchar2 default null,
    p_default_rpt_type  in varchar2 default 'PRIMARY'
    )
    return number;

procedure rename_report (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number,
    p_report_name       in varchar2 default null,
    p_report_descr      in varchar2 default null,
    p_category_id       in varchar2 default null,
    p_public            in varchar2 default null,
    p_is_default        in varchar2 default null,
    p_default_rpt_type  in varchar2 default 'PRIMARY');

procedure delete_report (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number,
    p_is_default        in varchar2 default null);

procedure delete_saved_report (
    p_worksheet_id      in number,
    p_report_id         in number,
    p_is_default        in varchar2 default null);

procedure delete_subscription (
    p_subscription_id     in number,
    p_security_group_id   in number);

procedure edit_report_alias (
    p_report_id      in number,
    p_report_alias   in varchar2);

procedure delete_reports_for_user (
    p_flow_id           in number,
    p_page_id           in number default null,
    p_app_user          in varchar2,
    p_delete_child_rpts in varchar2 default 'Y');

procedure delete_reports_for_app (
    p_flow_id             in number,
    p_page_id             in number default null,
    p_delete_child_rpts   in varchar2 default 'Y',
    p_delete_default_rpts in varchar2 default 'N');

-------------
-- SORTING
--
procedure sort_on_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_sort_column         in varchar2,
    p_sort_direction      in varchar2);

procedure save_ordering (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    p_sort_column         in wwv_flow_global.vc_arr2,
    p_sort_direction      in wwv_flow_global.vc_arr2,
    p_null_sorting        in wwv_flow_global.vc_arr2);

procedure sort_on_group_by_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    p_sort_column         in varchar2,
    p_sort_direction      in varchar2);

procedure save_group_by_sort (
    p_id                  in number,
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    p_sort_column         in wwv_flow_global.vc_arr2,
    p_sort_direction      in wwv_flow_global.vc_arr2,
    p_null_sorting        in wwv_flow_global.vc_arr2);

-----------------
-- CONTROL BREAKS
--
procedure break_on_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2);

procedure remove_break_on_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2);

procedure toggle_break_on_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_column              in varchar2);

procedure set_control_breaks (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_break_on            in wwv_flow_global.vc_arr2,
    p_break_enabled_list  in wwv_flow_global.vc_arr2);

-----------
-- FILTERS
--

procedure add_or_update_filter (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    -- filtering
    p_condition_id        in number   default null,
    p_filter_name         in varchar2 default null,
    p_filter_column       in varchar2 default null,
    p_filter_operator     in varchar2 default '=',
    p_filter_expr_type    in varchar2 default null,
    p_filter_expr         in varchar2 default null,
    p_filter_expr2        in varchar2 default null,
    --
    p_clear_existing_col_filters in varchar2 default 'Y',
    p_filter_type         in varchar2 default 'NORMAL',
    --
    p_validation_error    out varchar2);

procedure clear_filters_on_column (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_filter_column       in varchar2);

procedure clear_filter (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_condition_id in number);

procedure toggle_filter (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number,
    --
    p_condition_id      in number,
    p_filter_enabled    in varchar2);

-------------
-- HIGHLIGHTS
--
procedure toggle_highlighting (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in number,
    --
    p_condition_id      in number,
    p_highlight_enabled in varchar2);

procedure fetch_highlight (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_condition_id        in number default null,
    p_name                out varchar2,
    -- highlight condition
    p_column              out varchar2,
    p_operator            out varchar2,
    p_expr_type           out varchar2,
    p_expr                out varchar2,
    -- highlight formatting
    p_highlight_sequence  out varchar2,
    p_highlight_enabled   out varchar2,
    p_row_bg_color        out varchar2,
    p_row_font_color      out varchar2,
    p_row_format          out varchar2,
    p_column_bg_color     out varchar2,
    p_column_font_color   out varchar2,
    p_column_format       out varchar2
    );

procedure add_or_update_highlight (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_condition_id        in number   default null,
    p_name                in varchar2 default null,
    -- highlight condition
    p_column              in varchar2,
    p_operator            in varchar2,
    p_expr_type           in varchar2 default null,
    p_expr                in varchar2 default null,
    p_expr2               in varchar2 default null,
    -- highlight settings
    p_highlight_sequence  in varchar2 default null,
    p_highlight_enabled   in varchar2 default 'Y',
    p_highlight_type      in varchar2 default 'ROW',
    -- highlight formatting
    p_bg_color            in varchar2 default null,
    p_font_color          in varchar2 default null,
    p_format              in varchar2 default null,
    p_validation_error    out varchar2
    );


procedure clear_highlight (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_condition_id in number);

--------------
-- AGGREGATES
--
procedure create_aggregate (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    p_old_aggregation     in varchar2 default null,
    p_aggregate           in varchar2 default null,
    p_column              in varchar2 default null);

procedure remove_aggregate (
    p_worksheet_id    in number,
    p_app_user        in varchar2,
    p_report_id       in number,
    p_aggregate       in varchar2,
    p_column          in varchar2);

----------------
-- COMPUTATIONS
--
procedure add_or_update_computation (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_computation_id      in number default null,
    p_computation_expr    in varchar2 default null,
    p_format_mask         in varchar2 default null,
    p_column_label        in varchar2 default null,
    p_report_label        in varchar2 default null,
    p_validation_error    out varchar2);

procedure fetch_computation (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_computation_id      in number,
    --
    p_computation_expr    out varchar2,
    p_format_mask         out varchar2,
    p_column_label        out varchar2,
    p_report_label        out varchar2);

procedure delete_computation (
    p_worksheet_id        in number,
    p_app_user            in varchar2,
    p_report_id           in number,
    --
    p_computation_id      in number);

---------------
-- FLASHBACK
--
procedure set_flashback (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_report_id        in number,
    p_mins_ago         in varchar2,
    p_validation_error out varchar2);

procedure toggle_flashback (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_flashback_enabled in varchar2 default null);

procedure clear_flashback (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);


-------------------
-- CHART / CALENDAR
--
procedure set_report_type (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_report_type  in varchar2);

procedure save_chart (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_chart_type         in varchar2 default null,
    p_chart_label_column in varchar2 default null,
    p_chart_label_title  in varchar2 default null,
    p_chart_value_column in varchar2 default null,
    p_chart_aggregate    in varchar2 default null,
    p_chart_value_title  in varchar2 default null,
    p_chart_sorting      in varchar2 default null,
    --
    p_validation_error   out varchar2);

procedure delete_chart (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure save_calendar (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    --
    p_calendar_date_column in varchar2,
    p_calendar_display_column in varchar2);

-----------------------------
-- Report / Category Creation
--
procedure create_category (
    p_id                      in varchar2 default null,
    p_worksheet_id            in varchar2 default null,
    p_base_cat_id             in varchar2 default null,
    p_application_user        in varchar2 default null,
    p_name                    in varchar2 default null,
    p_display_sequence        in varchar2 default null);

procedure update_category (
    p_id                      in varchar2 default null,
    p_worksheet_id            in varchar2 default null,
    p_base_cat_id             in varchar2 default null,
    p_application_user        in varchar2 default null,
    p_name                    in varchar2 default null);

procedure delete_category (
    p_id                      in varchar2 default null);

procedure create_worksheet_report (
    p_id                      in number   default null,
    p_worksheet_id            in number   default null,
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_session_id              in number   default null,
    p_base_report_id          in number   default null,
    p_application_user        in varchar2 default null,
    p_name                    in varchar2 default null,
    p_description             in varchar2 default null,
    p_report_seq              in varchar2 default null,
    p_report_type             in varchar2 default null,
    p_report_alias            in varchar2 default null,
    p_status                  in varchar2 default null,
    p_category_id             in varchar2 default null,
    p_autosave                in varchar2 default null,
    --
    p_display_rows            in number   default null,
    p_view_mode               in varchar2 default null,
    p_report_columns          in varchar2 default null,
    --
    p_sort_column_1           in varchar2 default null,
    p_sort_direction_1        in varchar2 default null,
    p_sort_column_2           in varchar2 default null,
    p_sort_direction_2        in varchar2 default null,
    p_sort_column_3           in varchar2 default null,
    p_sort_direction_3        in varchar2 default null,
    p_sort_column_4           in varchar2 default null,
    p_sort_direction_4        in varchar2 default null,
    p_sort_column_5           in varchar2 default null,
    p_sort_direction_5        in varchar2 default null,
    p_sort_column_6           in varchar2 default null,
    p_sort_direction_6        in varchar2 default null,
    --
    p_break_on                in varchar2 default null,
    p_break_enabled_on        in varchar2 default null,
    p_control_break_options   in varchar2 default null,
    --
    p_sum_columns_on_break    in varchar2 default null,
    p_avg_columns_on_break    in varchar2 default null,
    p_max_columns_on_break    in varchar2 default null,
    p_min_columns_on_break    in varchar2 default null,
    p_median_columns_on_break in varchar2 default null,
    p_mode_columns_on_break   in varchar2 default null,
    p_count_distnt_col_on_break in varchar2 default null,
    --
    p_flashback_mins_ago      in varchar2 default null,
    p_flashback_enabled       in varchar2 default null,
    --
    p_chart_type              in varchar2 default null,
    p_chart_3d                in varchar2 default null,
    p_chart_label_column      in varchar2 default null,
    p_chart_label_title       in varchar2 default null,
    p_chart_value_column      in varchar2 default null,
    p_chart_aggregate         in varchar2 default null,
    p_chart_value_title       in varchar2 default null,
    p_chart_sorting           in varchar2 default null,
    -- calendar
    p_calendar_date_column    in varchar2 default null,
    p_calendar_display_column in varchar2 default null);

procedure create_ws_report_condition (
    p_id                        in number   default null,
    p_flow_id                   in number   default null,
    p_page_id                   in number   default null,
    p_worksheet_id              in number   default null,
    p_report_id                 in number   default null,
    p_name                      in varchar2 default null,
    p_condition_type            in varchar2 default null,
    p_allow_delete              in varchar2 default null,
    --
    p_column_name               in varchar2 default null,
    p_operator                  in varchar2 default null,
    p_expr_type                 in varchar2 default null,
    p_expr                      in varchar2 default null,
    p_expr2                     in varchar2 default null,
    p_condition_sql             in varchar2 default null,
    p_condition_display         in varchar2 default null,
    --
    p_enabled                   in varchar2 default null,
    --
    p_highlight_sequence        in number   default null,
    p_row_bg_color              in varchar2 default null,
    p_row_font_color            in varchar2 default null,
    p_row_format                in varchar2 default null,
    p_column_bg_color           in varchar2 default null,
    p_column_font_color         in varchar2 default null,
    p_column_format             in varchar2 default null);

procedure create_ws_col_group (
    p_id               in number default null,
    p_flow_id          in number   default null,
    p_worksheet_id     in number default null,
    p_name             in varchar2 default null,
    p_description      in varchar2 default null,
    p_display_sequence in varchar2 default null);
--
--
--
procedure create_dataview (
    p_flow_id                       in varchar2,
    p_tab_owner                     in varchar2,
    p_tabview                       in varchar2,
    p_columns                       in varchar2,
    p_name                          in varchar2,
    p_owner                         in varchar2);

procedure show_single_row_view (
    p_flow_id          in number,
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_row_id           in varchar2 default null,
    p_base_report_id   in number   default null
    );

procedure get_form_navigation (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_pk               in varchar2 default null,
    p_base_report_id   in number default null,
    p_next_pk          out varchar2,
    p_prev_pk          out varchar2,
    p_row_cnt          out number,
    p_total_row_cnt    out number
    );

procedure get_condition_sql (
    p_worksheet_id       in number,
    p_app_user           in varchar2,
    p_derived_report_id  in number,
    p_condition_type     in varchar2 default 'FILTER',
    -- condition
    p_column_name        in varchar2 default null,
    p_operator           in varchar2 default '=',
    p_expr_type          in varchar2 default null,
    p_expr               in out varchar2,
    p_expr2              in out varchar2,
    p_time_zone          out varchar2,
    p_use_bind_for_expr  in varchar2 default 'Y',
    -- parameters to override display settings
    p_display_column     in varchar2 default null,
    p_display_operator   in varchar2 default null,
    p_display_expr       in varchar2 default null,
    p_display_expr2      in varchar2 default null,
    -- output
    p_condition_sql      out varchar2,
    p_condition_name     out varchar2,
    p_validation_error   out varchar2
    );

procedure send_email (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_base_report_id   in number,
    p_to               in varchar2,
    p_cc               in varchar2 default null,
    p_bcc              in varchar2 default null,
    p_subject          in varchar2 default null,
    p_body             in varchar2 default null);

procedure save_group_by (
    p_worksheet_id                 in number,
    p_app_user                     in varchar2,
    p_report_id                    in number,
    --
    p_group_by_id                  in number default null,
    --
    p_group_by_columns_1           in varchar2 default null,
    p_group_by_columns_2           in varchar2 default null,
    p_group_by_columns_3           in varchar2 default null,
    p_group_by_columns_4           in varchar2 default null,
    --
    p_group_by_function_1          in varchar2 default null,
    p_group_by_function_column_1   in varchar2 default null,
    p_group_by_function_label_1    in varchar2 default null,
    p_group_by_function_fmt_mask_1 in varchar2 default null,
    p_group_by_function_sum_1      in varchar2 default null,
    --
    p_group_by_function_2          in varchar2 default null,
    p_group_by_function_column_2   in varchar2 default null,
    p_group_by_function_label_2    in varchar2 default null,
    p_group_by_function_fmt_mask_2 in varchar2 default null,
    p_group_by_function_sum_2      in varchar2 default null,
    --
    p_group_by_function_3          in varchar2 default null,
    p_group_by_function_column_3   in varchar2 default null,
    p_group_by_function_label_3    in varchar2 default null,
    p_group_by_function_fmt_mask_3 in varchar2 default null,
    p_group_by_function_sum_3      in varchar2 default null,
    --
    p_group_by_function_4          in varchar2 default null,
    p_group_by_function_column_4   in varchar2 default null,
    p_group_by_function_label_4    in varchar2 default null,
    p_group_by_function_fmt_mask_4 in varchar2 default null,
    p_group_by_function_sum_4      in varchar2 default null,
    --
    p_group_by_function_5          in varchar2 default null,
    p_group_by_function_column_5   in varchar2 default null,
    p_group_by_function_label_5    in varchar2 default null,
    p_group_by_function_fmt_mask_5 in varchar2 default null,
    p_group_by_function_sum_5      in varchar2 default null,
    --
    p_group_by_function_6          in varchar2 default null,
    p_group_by_function_column_6   in varchar2 default null,
    p_group_by_function_label_6    in varchar2 default null,
    p_group_by_function_fmt_mask_6 in varchar2 default null,
    p_group_by_function_sum_6      in varchar2 default null,
    --
    p_validation_error       out varchar2
    );

procedure delete_group_by (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_group_by_id  in number);

procedure save_notify (
    p_worksheet_id    in number,
    p_app_user        in varchar2,
    p_report_id       in number,
    p_notify_id       in number default null,
    p_email_address   in varchar2 default null,
    p_email_subject   in varchar2 default null,
    p_start_date      in date default null,
    p_start_hh        in varchar2 default null,
    p_start_am_pm     in varchar2 default null,
    p_end_date        in date default null,
    p_end_day         in number default null,
    p_end_day_unit    in varchar2 default null,
    p_notify_interval in varchar2 default null,
    p_validation_error out varchar2);

procedure delete_notify (
    p_worksheet_id    in number,
    p_app_user        in varchar2,
    p_report_id       in number,
    p_notify_id       in number default null);

function do_app_substitutions (
    p_string                       in varchar2 default null)
    return varchar2;

procedure do_notify;

procedure ir_actions_menu_settings (
    p_settings  in varchar2 default null,
    p_enable_yn in varchar2 default null
    );

procedure reset_report_using_alias (
    p_page_id      in number,
    p_region_id    in number default null,
    p_report_alias in varchar2 default null);

procedure clear_report_using_alias (
    p_page_id      in number,
    p_region_id    in number default null,
    p_report_alias in varchar2 default null);

procedure add_filter_using_alias (
    p_page_id       in number,
    p_report_column in varchar2,
    p_filter_value  in varchar2,
    p_operator_abbr in varchar2 default null,
    p_region_id     in number default null,
    p_report_alias  in varchar2 default null
    );
end wwv_flow_worksheet_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AJAX" as

empty_vc_arr wwv_flow_global.vc_arr2;
empty_vc_map wwv_flow_global.vc_map;

function json_replace(
    p_text     in varchar2 default null
)return varchar2;

procedure json_from_array (
    p_rows   in number default null,
    p_cols   in number default null,
    p_name01 in varchar2 default null,
    p_name02 in varchar2 default null,
    p_name03 in varchar2 default null,
    p_name04 in varchar2 default null,
    p_name05 in varchar2 default null,
    p_name06 in varchar2 default null,
    p_name07 in varchar2 default null,
    p_name08 in varchar2 default null,
    p_name09 in varchar2 default null,
    p_name10 in varchar2 default null,
    p_f01    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f02    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f03    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f04    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f05    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f06    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f07    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f08    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f09    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f10    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_sub    in varchar2 default 'N');

procedure json_from_sql (
    sqlq                 in varchar2 default null,
    p_cursor             in integer  default null,
    p_sub                in varchar2 default 'N',
    p_owner              in varchar2 default null,
    p_do_worksheet_binds in varchar2 default 'N',
    p_aliases            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_escape_columns     in wwv_flow_global.vc_map default empty_vc_map
);

procedure json_from_items(
    p_items      in varchar2 default null,
    p_separator  in varchar2 default ':',
    p_sub        in varchar2 default 'N'
);

procedure json_from_string(
    p_items      in varchar2 default null,
    p_separator  in varchar2 default ':',
    p_sub        in varchar2 default 'N'
);

procedure ajax_collection(
	p_collection    in varchar2 default null,
	p_action		in varchar2 default null,
	p_format		in varchar2 default null,
	p_item			in varchar2 default null
);

procedure widget;

end wwv_flow_ajax;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_DIALOGUE"
as


function get_sql_functions return vc4000Array;

function get_row_filter_operators return vc4000Array;

function get_pseudo_column_label (
    p_db_column_name in varchar2) return varchar2;



procedure get_column_list (
    p_worksheet_id      in number,
    p_app_user          in varchar2,
    p_report_id         in varchar2,
    p_type              in varchar2 default null,
    p_display_pseudo_column in varchar2 default 'Y',
    p_column_label      out wwv_flow_global.vc_arr2,
    p_db_column_name    out wwv_flow_global.vc_arr2,
    p_is_displayed      out wwv_flow_global.vc_arr2,
    p_group_id          out wwv_flow_global.vc_arr2,
    p_column_type       out wwv_flow_global.vc_arr2,
    p_column_category   out wwv_flow_global.vc_arr2,
    p_rows              out number);

procedure print_button (
    p_worksheet_id in number default null,
    p_cancel       in varchar2 default null,
    p_delete       in varchar2 default null,
    p_apply        in varchar2 default null,
    p_add          in varchar2 default null,
    p_apply_label  in varchar2 default null,
    p_add_label    in varchar2 default null
    );

procedure print_button2 (
    p_worksheet_id in number default null,
    p_cancel       in varchar2 default null,
    p_delete       in varchar2 default null,
    p_reset        in varchar2 default null,
    p_apply        in varchar2 default null,
    p_add          in varchar2 default null,
    p_delete_label in varchar2 default null,
    p_reset_label  in varchar2 default null,
    p_apply_label  in varchar2 default null,
    p_add_label    in varchar2 default null
    );

procedure print_column_lov (
    p_worksheet_id            in number,
    p_base_report_id          in number,
    p_derived_report_id       in number,
    p_app_user                in varchar2,
    p_report_columns          in varchar2 default null,
    p_selected_column         in varchar2 default null,
    p_column_type             in varchar2 default null,
    p_dialog_type             in varchar2 default null,
    p_display_computed_column in varchar2 default 'Y',
    p_display_null            in varchar2 default 'Y',
    p_display_pseudo_column   in varchar2 default 'Y',
    p_include_class           in varchar2 default 'N'
    );

procedure show_format_mask (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in varchar2);

procedure show_column_list (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in varchar2,
    p_column_type  in varchar2 default null);

procedure show_select_columns (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in varchar2);

procedure save_column_list (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in varchar2,
    p_column_list  in wwv_flow_global.vc_arr2);

procedure show_highlight (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_condition_id in varchar2 default null);

procedure show_filter (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_condition_id in varchar2 default null);

procedure show_ordering (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_group_by_sort (
    p_worksheet_id      in number,
    p_report_id         in number,
    p_app_user          in varchar2
    );

procedure show_save (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_save_type    in varchar2 default 'SAVE');

procedure show_save_default (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_save_type    in varchar2 default 'SAVE');

procedure show_chart (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_calendar (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_delete (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_is_default   in varchar2 default 'N');

procedure show_aggregate (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_aggregate    in varchar2 default null);

procedure show_flashback (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_reset (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_computation (
    p_worksheet_id   in number,
    p_app_user       in varchar2,
    p_report_id      in number,
    p_computation_id in varchar2 default null);

procedure show_download (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_control_break (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number);

procedure show_group_by (
    p_worksheet_id in number,
    p_app_user     in varchar2,
    p_report_id    in number,
    p_group_by_id  in number default null);

procedure show_notify (
    p_worksheet_id  in number,
    p_app_user      in varchar2,
    p_report_id     in number
    );
end  wwv_flow_worksheet_dialogue;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_FORM"
as

type col_value_arr is table of varchar2(32767) index by binary_integer;
type col_value_arr2 is table of varchar2(32767) index by varchar2(255);

empty_full_col_arr2         wwv_flow_worksheet_standard.full_col_arr2;

function get_lov_query (
    p_worksheet_id      in number,
    p_column_id         in number default null,
    p_db_column_name    in varchar2 default null) return varchar2;

procedure get_column_value (
    p_worksheet_id              in number,
    p_app_user                  in varchar2,
    p_row_id                    in varchar2,
    p_ok_column_attributes_by_n in wwv_flow_worksheet_standard.full_col_arr2 default empty_full_col_arr2,
    p_column_value              out col_value_arr,
    p_column_value_by_name      out col_value_arr2);

procedure form_navigation (
    p_worksheet_id     in number,
    p_app_user         in varchar2,
    p_pk               in varchar2 default null,
    p_base_report_id   in number   default null,
    p_init             in varchar2 default 'N',
    p_next_pk          out varchar2,
    p_prev_pk          out varchar2,
    p_row_cnt          out number,
    p_total_row_cnt    out number
    );

procedure show (
    p_flow_id            in number,
    p_worksheet_id       in number,
    p_app_user           in varchar2,
    p_row_id             in varchar2 default null,
    p_show_column_edit   in varchar2 default 'N',
    p_show_stickies      in varchar2 default 'Y',
    p_session            in number   default null,
    p_base_report_id     in number   default null,
    p_style              in varchar2 default 'REPLACE',
    p_display_button_bar in varchar2 default 'Y'
    );

end wwv_flow_worksheet_form;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_AJAX" as

type col_attr_t is record (
    db_column_name       varchar2(255),
    report_label         varchar2(255),
    column_type          varchar2(255),
    format_mask          varchar2(255),
    computation_expr_1   varchar2(4000));

type col_arr is table of col_attr_t index by binary_integer;

procedure sort_widget(
	p_worksheet_id in varchar2,
	p_app_user     in varchar2,
	p_report_id    in number,
	p_col			     in varchar2 default null,
	p_col_state    in varchar2 default null,
	p_filter		   in varchar2 default null
);

procedure uvalues(
	p_worksheet_id in varchar2,
	p_app_user     in varchar2,
	p_report_id    in number,
	p_col			     in varchar2 default null
);

procedure sort_widget_html(
    p_worksheet     in varchar2 default null,
    p_edit_link     in varchar2 default null);

procedure widget;

end wwv_flow_worksheet_ajax;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSHEET_UTIL"
as

type t_report is record (
    sql_query     varchar2(32767),
    binds         wwv_flow_plugin_util.t_bind_list);

--==============================================================================
-- Function returns last viewed base report_id for specified page and region.
--==============================================================================
function get_last_viewed_report_id (
    p_page_id       in number,
    p_region_id     in number) return number;

--==============================================================================
-- Function returns Interactive report runtime query with binds.
-- If p_report_id is null, it gets last viewed report information.
--
-- Note: This function works within the same application where the Interactive report exists
--       and cannot be called outside of APEX environment.
--==============================================================================
function get_report (
    p_page_id        in number,
    p_region_id      in number,
    p_report_id      in number default null) return t_report;

--==============================================================================
-- Procedure adds Interactive report column filter using report_id.
-- If p_report_id is null, it adds filter to the last viewed report.
--==============================================================================
procedure add_filter (
    p_page_id       in number,
    p_region_id     in number,
    p_report_column in varchar2,
    p_filter_value  in varchar2,
    p_operator_abbr in varchar2 default null,
    p_report_id     in number default null
    );

--==============================================================================
-- Procedure adds Interactive report column filter using report_alias.
-- If p_report_alias is null, it adds filter to the last viewed report.
--==============================================================================
procedure add_filter (
    p_page_id       in number,
    p_region_id     in number,
    p_report_column in varchar2,
    p_filter_value  in varchar2,
    p_operator_abbr in varchar2 default null,
    p_report_alias  in varchar2 default null
    );

--==============================================================================
-- Procedure resets Interactive report to the factory default settings using report_id.
-- If p_report_id is null, it resets the last viewed report.
--==============================================================================
procedure reset_report (
    p_page_id      in number,
    p_region_id    in number,
    p_report_id    in number default null);

--==============================================================================
-- Procedure resets Interactive report to the factory default settings using report_alias.
-- If p_report_alias is null, it resets the last viewed report.
--==============================================================================
procedure reset_report (
    p_page_id      in number,
    p_region_id    in number,
    p_report_alias in varchar2 default null);

--==============================================================================
-- Procedure clears Interactive report settings using report_id as follows:
--     control break, aggregate, flashback, chart, number of rows to display,
--      filter, highlight, computation, group by
-- Procedure does NOT clear the following:
--     display column list, sorting,
--     report preference (view mode, display nulls in detail view, expand/collapse of report settings).
-- If p_report_id is null, it clears the last viewed report settings.
--==============================================================================
procedure clear_report (
    p_page_id      in number,
    p_region_id    in number,
    p_report_id    in number default null);

--==============================================================================
-- Procedure clears Interactive report settings using report_alias as follows:
--     control break, aggregate, flashback, chart, number of rows to display,
--      filter, highlight, computation, group by
-- Procedure does NOT clear the following:
--     display column list, sorting,
--     report preference (view mode, display nulls in detail view, expand/collapse of report settings).
-- If p_report_alias is null, it clears the last viewed report settings.
--==============================================================================
procedure clear_report (
    p_page_id      in number,
    p_region_id    in number,
    p_report_alias in varchar2 default null);

--==============================================================================
-- Procedure deletes saved reports.
-- It deletes all saved reports except the Primary Default.
--==============================================================================
procedure delete_report (
    p_report_id          in number);

--==============================================================================
-- Procedure deletes Interactive report subscriptions.
--==============================================================================
procedure delete_subscription (
    p_subscription_id    in number);

--==============================================================================
-- Procedure changes Interactive report subscriptions langugae.
-- When email sends out, subscription sends message in the defined language
--==============================================================================
procedure change_subscription_lang (
    p_subscription_id    in number,
    p_language           in varchar2);

--==============================================================================
-- Procedure changes owner of all non-default saved reports (public, private) for the current application.
--==============================================================================
procedure change_report_owner (
    p_report_id    in number,
    p_old_owner    in varchar2,
    p_new_owner    in varchar2);
end wwv_flow_worksheet_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."APEXWS"
is

--  Copyright (c) Oracle Corporation 2007. All Rights Reserved.

    procedure home (
       s   in varchar2 default null
       );

     procedure search (
       s   in varchar2 default null
       );

    procedure folder (
       i   in varchar2 default null,
       s   in varchar2 default null,
       u   in varchar2 default null
       );

    procedure sheet (
       i   in varchar2 default null,
       s   in varchar2 default null
       );

    procedure row (
       i   in varchar2 default null,
       s   in varchar2 default null,
       r   in varchar2 default null);

    procedure page (
       i   in varchar2 default null,
       s   in varchar2 default null
       );

end apexws;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUDIT" as

    g_cascade boolean := false;

procedure audit_action (
    p_table_name              in varchar2,
    p_action                  in varchar2,
    p_table_pk                in number,
    p_object_name             in varchar2)
    ;

procedure remove_audit_trail (
    p_flow_id                 in number)
    ;

end wwv_flow_audit;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_USER_API" as

--  Copyright (c) Oracle Corporation 2001. All Rights Reserved.
--
--    DESCRIPTION
--      API access to oracle platform user management system.
--      Provides user group functionality.
--      Provides userid to username, username to userid, etc translations.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--      This package provides read access to user information for use with flow cookie
--      based flow authentication (e.g. the user repository which ships with flows).
--      If your flow is not using the wwv_flow_fnd_user table as the user repository then
--      this API will not work.
--
--      Results are restricted to current company therefore this API may not work from sqlplus.
--      This API is based on the wwv_flow_fnd_user table.
--
--      Use this API from within region, item, navbar... conditions from within the flow builder.
--
--    RUNTIME DEPLOYMENT: YES
--






--------------------------------
-- C H E C K   F U N C T I O N S
--

function current_user_in_group (
   --
   -- Given a group name return a boolean true or false if the current
   -- flow user is part of that group.
   -- Example: if wwv_flow_user_api.current_user_in_group('MY_GROUP') then ...
   --
   p_group_name          in varchar2 )
   return boolean
   ;


function current_user_in_group (
   --
   -- Given a group numeric identifier return a boolean true or false if the current
   -- flow user is part of that group.
   -- Example: if wwv_flow_user_api.current_user_in_group(1234567) then ...
   -- The above example assumes that 1234567 is a valid group ID.
   --
   p_group_id            in number)
   return boolean
   ;

function is_login_password_valid (
   --
   -- Checks the wwv_flow_fnd_users table to see if
   -- username/password combo is valid within a company (checking by security_group_id)
   --
   p_username in varchar2 default null,
   p_password  in varchar2 default null)
   return boolean
   ;

function is_username_unique (
   --
   -- Simply checks wwv_flow_fnd_users table to see if
   -- username is unique within a company (checking by security_group_id)
   --
   p_username              in varchar2)
   return boolean
   ;


----------------------------
-- G E T   F U N C T I O N S
--


function get_group_id (
   --
   -- Given a group name return the groups numeric identifier.
   -- Example: ... wwv_flow_user_api.get_group_name('MY_GROUP') ...
   --
   p_group_name          in varchar2 )
   return number
   ;


function get_group_name (
   --
   -- Given a group ID return the aphanumeric name.
   -- Example: ... wwv_flow_user_api.get_group_name(1234567) ...
   --
   p_group_id            in varchar2 )
   return varchar2
   ;


function get_group_name (
   --
   -- Added overloaded version with correct number type for p_group_id.
   -- Given a group ID return the aphanumeric name.
   -- Example: ... wwv_flow_user_api.get_group_name(1234567) ...
   --
   p_group_id            in number )
   return varchar2
   ;


function get_email (
   --
   -- For a given user return the identified email addresswwv_flow_user_api.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not return useful information.
   -- Example:  ... wwv_flow_user_api.get_email('MHICHWA')
   -- The example above assumes a username MHICHWA exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_first_name (
   --
   -- For a given user return the identified first name.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not return useful information.
   -- Example:  ... wwv_flow_user_api.get_first_name('MHICHWA')
   -- The example above assumes a username MHICHWA exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_last_name (
   --
   -- For a given user return the identified last name.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not return useful information.
   -- Example:  ... wwv_flow_user_api.get_last_name('MHICHWA')
   -- The example above assumes a username MHICHWA exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_current_user_id
   --
   -- For the current user return the flows numeric identifier.  Only
   -- useful when useing flows user management system.
   --
   return number
   ;


function get_user_id (
   --
   -- Given a username return the numeric idenfier.
   -- Example: ... wwv_flow_user_api.get_user_id('MHICHWA')
   -- The example above assumes MHICHWA is a valid username.
   --
   p_username            in varchar2)
   return number
   ;


function get_username (
   --
   -- Given a user ID return the username.
   -- Example: ... wwv_flow_user_api.get_username(222222)
   -- The example above assumes 222222 is a valid user ID.
   --
   p_userid              in number)
   return varchar2
   ;

function get_attribute (
   --
   -- Given a user name and attribute number, valid values are 1..10
   -- return the attribute value.  The wwv_flow_fnd_user table contains
   -- 10 columns attribute_01 .. attribute_10 for extra user attributes.
   --
   p_username             in varchar2,
   p_attribute_number     in number)
   return varchar2
   ;


function get_groups_user_belongs_to (
   --
   -- Given a username returns a comma seperated list of groups that
   -- this user is a member of.
   -- Example: htp.p('user mhichwa is a member of the following groups: '||
   --                 wwv_flow_user_api.get_groups_user_belongs_to('MHICHWA'));
   --
   p_username            in varchar2)
   return varchar2
   ;

function get_default_schema
   --
   -- For the currently logged in user, return the schema that the company
   -- was provisioned with, by default.
   --
   return varchar2
   ;

----------------------------
-- S E T   F U N C T I O N S
--

procedure set_email (
   --
   -- For a given userid set the identified email address.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not set useful information.
   -- Example:  ... wwv_flow_user_api.set_email(222222,'MIKE@HOTMAIL.COM')
   -- The example above assumes a user ID 222222 exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_email               in varchar2)
   ;


procedure set_first_name (
   --
   -- For a given user set the identified first name.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not return useful information.
   -- Example:  ... wwv_flow_user_api.set_first_name(222222,'Mike')
   -- The example above assumes a user ID 222222 exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_first_name          in varchar2)
   ;


procedure set_last_name (
   --
   -- For a given user set the identified last name.  Only works
   -- with flows standard user management system.  If you use flows with
   -- other user repositories this API will not return useful information.
   -- Example:  ... wwv_flow_user_api.set_last_name('MHICHWA')
   -- The example above assumes a username MHICHWA exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_last_name           in varchar2)
   ;


procedure set_username (
   --
   -- Given a user ID set the username.
   -- Example: ... wwv_flow_user_api.set_username(222222,'JOE')
   -- The example above assumes 222222 is a valid user ID.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_username            in varchar2)
   ;

procedure set_attribute (
   --
   -- Given a user ID and attribute number, valid values are 1..10
   -- set the attribute value.  The wwv_flow_fnd_user table contains
   -- 10 columns attribute_01 .. attribute_10 for extra user attributes.
   -- An error will be raised in the event this procedure fails.
   -- Example: ... wwv_flow_user_api.set_attribute(22222,1,'likes sailing and tennis');
   --
   p_userid               in number,
   p_attribute_number     in number,
   p_attribute_value      in varchar2)
   ;


end wwv_flow_user_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FND_USER_API"
as
    c_person_type_external constant varchar2(1) := 'E';

    g_mime_shown      boolean := false;
    g_password_save               raw(255);

--  Copyright (c) Oracle Corporation 2001-2010. All Rights Reserved.
--
--    NAME
--      wwv_flow_fnd_user_api.sql
--
--    DESCRIPTION
--      API to manage cookie based users.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      No known issues
--
--    MULTI-CUSTOMER
--      Requires that wwv_flow_security.g_security_group_id be properly set.

procedure export_fnd_users (
    -- Description:
    --    This procedure exports all users in a the current company, designed
    --    to be called from the flows html development environment.
    --
    p_export_format         in varchar2 default 'UNIX',
    p_include_script_header in boolean default true,
    p_minimal               in boolean default false )
    ;

procedure create_company (
    -- Description:
    --    This procedure creates a company description.
    --    Without a company user and flows can not be
    --    creatd.
    --
    -- Arguments:
    --    p_id                        = unique ID which identifies a company row, not referenced by other tables
    --    p_provisioning_company_id   = security_group_id column is a foreign key to this column.  The
    --                                  security_group_id column is used by all tables that store data that is
    --                                  specific to a given company.
    --    p_short_name                = name of the company used to login
    --    p_first_schema_provisioned  = is used to indicate the first schema created. This is necessary to
    --                                  determine things like what is the default tablespace for this company
    --    p_company_schemas           = colon delimited list of schemas that this company can "parse as".
    --    p_ws_schema                 = indicates the schema for Websheet objects
    --    p_rm_consumer_group         = Resource Manager consumer group which should be used when executing
    --                                  applications for this company.
    --    p_path_prefix               = is used in RESTful Services to determine workspace associated with RESTful service
    --    p_allow_restful_services_yn = is a workspace level setting to to determine whether RESTful Services is enabled. This
    --                                  setting is dependent on the instance level preference RESTFUL_SERVICES_ENABLED being set to 'Y'.
    --
    p_id                           in number,
    p_provisioning_company_id      in number,
    p_short_name                   in varchar2,
    p_display_name                 in varchar2 default null,
    p_workspace_service_id         in number   default null,
    p_first_schema_provisioned     in varchar2,
    p_company_schemas              in varchar2,
    p_ws_schema                    in varchar2 default null,
    p_expire_fnd_user_accounts     in varchar2 default null,
    p_account_lifetime_days        in number   default null,
    p_fnd_user_max_login_failures  in number   default null,
    p_account_status               in varchar2 default 'ASSIGNED',
    p_allow_plsql_editing          in varchar2 default null,
    p_allow_app_building_yn        in varchar2 default null,
    p_allow_sql_workshop_yn        in varchar2 default null,
    p_allow_websheet_dev_yn        in varchar2 default null,
    p_allow_team_development_yn    in varchar2 default null,
    p_allow_to_be_purged_yn        in varchar2 default null,
    p_source_identifier            in varchar2 default null,
    p_auto_archive_yn              in varchar2 default null,
    p_builder_notification_message in varchar2 default null,
    p_workspace_image_mime_type    in varchar2 default null,
    p_workspace_image              in sys.dbms_sql.varchar2_table default wwv_flow_api.empty_varchar2_table,
    p_rm_consumer_group            in varchar2 default null,
    p_host_prefix                  in varchar2 default null,
    p_cloud_group_name             in varchar2 default null,
    p_cloud_service_name           in varchar2 default null,
    p_path_prefix                  in varchar2 default null,
    p_allow_restful_services_yn    in varchar2 default null)
    ;

procedure create_user_group (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users.
    --
    -- Arguments:
    --    p_ID                = unique identifier of the group, typically a large virtually globally unique number.
    --    p_group_name        = name of group
    --    p_security_group_id = identifies which company this user group belongs to
    --    p_group_desc        = text description used as an note to the developer
    --
    p_id                      in number,
    p_group_name              in varchar2,
    p_security_group_id       in number,
    p_group_desc              in varchar2)
    ;


procedure delete_user_group (
    -- Description
    --   This procedure allows for removal of group from wwv_flow_fnd_user_groups.
    --   This procedure is overloaded.
    -- Arguments:
    --    p_group_id          = unique identifier of the group, typically a large virtually globally unique number.
    --
    p_group_id                      in number)
    ;

procedure delete_user_group (
    -- Description
    --   This procedure allows for removal of group from wwv_flow_fnd_user_groups.
    --   This procedure is overloaded.
    -- Arguments:
    --    p_group_name          = group name.
    p_group_name              in varchar2)
    ;

procedure create_fnd_user (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users.
    --
    -- Example:
    --    From sqlplus logged in as the privileged flows user, first
    --    ensure that the security group id is set properly, then create
    --    your users.
    --
    --    begin wwv_flow_security.g_security_group_id := 20; end;
    --    /
    --
    --    begin
    --       for i in 1..10 loop
    --          wwv_flow_fnd_user_api.create_fnd_user(
    --             p_user_name => 'USER_'||i,
    --             p_email_address => 'user_'||i||'@example.com',
    --             p_web_password => 'user_'||i) ;
    --       end loop;
    --       commit;
    --    end;
    --    /
    --
    --
    -- Arguments:
    --    p_user_id         numeric primary key of user
    --    p_user_name       the username the user uses to login
    --    p_first_name      informational only
    --    p_last_name       informational only
    --    p_web_password    the unencrypted password for the new user
    --    p_group_ids       A colon delimited list of group IDs from the table wwv_flow_fnd_user_groups
    --    p_developer_privs A colon delmited list of developer privs, privs include:
    --                      ADMIN:BROWSE:CREATE:DATA_LOADER:DB_MONITOR:EDIT:HELP:MONITOR:SQL:USER_MANAGER
    --    p_default_schema  A valid oracle schema that is the default schema for use in browsing and
    --                      creating flows
    --    p_allow_access_to_schemas A colon delimited list of oracle schemas that the user is allowed to
    --                      parse as.  If null the user can parse as any schema available to the company.
    --                      This does not provide privilege it only resticts privilege, so listing a schema
    --                      does not provide the privilege to parse as a schema, it only restricts that user
    --                      to that list of schemas.
    --    p_attributes_XX   These attributes allow you to store arbitary information about a given user.
    --                      They are for use by flow developers who want to extend user information.
    --    p_web_password_format Identifies the format of the web password.
    --                      The range of values is CLEAR_TEXT, HEX_ENCODED_DIGEST, DIGEST
    --    p_person_type     "E" marks the user as external
    --
    --
    --
    p_user_id                      in number   default null,
    p_user_name                    in varchar2,
    p_first_name                   in varchar2 default null,
    p_last_name                    in varchar2 default null,
    p_description                  in varchar2 default null,
    p_email_address                in varchar2 default null,
    p_web_password                 in varchar2,
    p_web_password_format          in varchar2 default 'CLEAR_TEXT',
    p_group_ids                    in varchar2 default null,
    p_developer_privs              in varchar2 default null,
    p_default_schema               in varchar2 default null,
    p_default_date_format          in varchar2 default null,
    p_allow_access_to_schemas      in varchar2 default null,
    p_account_expiry               in date     default trunc(sysdate),
    p_account_locked               in varchar2 default 'N',
    p_failed_access_attempts       in number   default 0,
    p_change_password_on_first_use in varchar2 default 'Y',
    p_first_password_use_occurred  in varchar2 default 'N',
    p_attribute_01                 in varchar2 default null,
    p_attribute_02                 in varchar2 default null,
    p_attribute_03                 in varchar2 default null,
    p_attribute_04                 in varchar2 default null,
    p_attribute_05                 in varchar2 default null,
    p_attribute_06                 in varchar2 default null,
    p_attribute_07                 in varchar2 default null,
    p_attribute_08                 in varchar2 default null,
    p_attribute_09                 in varchar2 default null,
    p_attribute_10                 in varchar2 default null,
    p_allow_app_building_yn        in varchar2 default null,
    p_allow_sql_workshop_yn        in varchar2 default null,
    p_allow_websheet_dev_yn        in varchar2 default null,
    p_allow_team_development_yn    in varchar2 default null,
    p_person_type                  in varchar2 default null)
    ;

procedure create_user_from_file (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users
    --    from a text file.  The file must be in one of two formats.
    --
    --    FORMAT 1
    --    username,email,PRIV1:PRIV2,password
    --
    --    FORMAT 2
    --    username,email,PRIV1:PRIV2
    --
    --    PRIV1:PRIV2 is a colon delimited list of developer privelages of the
    --    user.  Valid privelages are detailed in create_fnd_user spec.
    --
    --    Each line must end with a line feed (chr(10)).
    --
    -- Arguments:
    --
    --    p_id          The id of the file in wwv_flow_file_objects$
    --    p_mode        Either CREATE or display depending on whether you
    --                  actually want to create the users or just display them
    --                  via sys.htp.p
    --    p_format      Can be either 1, 2 or 3.  Refers to the format of the file
    --                  and the create user process.  1: passwords are contained in
    --                  the file in clear text.  2: passwords have been supplied via
    --                  the p_password parameter.  3: passwords should be randomly
    --                  generated and then e-mailed to the user.
    --    p_password    Only relevant in format 2.  Every user created is given the
    --                  password supplied in this parameter.
    --    p_app         The name of the application.  This name appears in the subject
    --                  and body of the e-mail message sent to users when format is 3.
    --    p_appurl      Optional URL can be supplied when file format is 3.  The URL will
    --                  appear at the end of the mail message.
    --    p_start       This parameter holds the start time of execution
    --    p_end         Parameter holds the time the procedure completes
    --    p_loaded      The number of users that were provisioned by the execution of the
    --                  procedure.
    --
    --
    --
  p_id in number,
  p_mode      in varchar2 default 'CREATE',
  p_format    in varchar2 default '1',
  p_password  in varchar2 default 'oracle',
  p_app       in varchar2 default null,
  p_appurl    in varchar2 default null,
  p_start    out varchar2,
  p_end      out varchar2,
  p_loaded   out varchar2)
    ;

procedure create_user_coll_from_csv (
    p_users                     in varchar2,
    p_security_group_id         in number,
    p_strip_domain              in varchar2 default 'Y')
    ;

procedure create_user_from_collection (
    p_security_group_id         in number,
    p_web_password              in varchar2,
    p_allow_access_to_schemas   in varchar2,
    p_default_schema            in varchar2,
    p_developer                 in varchar2,
    p_admin                     in varchar2,
    p_allow_app_building_yn     in varchar2,
    p_allow_sql_workshop_yn     in varchar2,
    p_allow_websheet_dev_yn     in varchar2,
    p_allow_team_development_yn in varchar2)
    ;

procedure remove_fnd_user (
    -- Description
    --   This procedure allows for programatic removal of users.
    --   This procedure is overloaded.
    --
    p_user_id         in number)
    ;

procedure remove_fnd_user (
    -- Description:
    --   This procedure allows for programatic removal of users.
    --   This procedure is overloaded.
    --
    -- Example:
    --    begin wwv_flow_security.g_security_group_id := 20; end;
    --    /
    --
    --    begin
    --       for i in 1..10 loop
    --          wwv_flow_fnd_user_api.remove_fnd_user(
    --             p_user_name => 'USER_'||i);
    --       end loop;
    --       commit;
    --    end;
    --    /
    --
    p_user_name       in varchar2)
    ;

procedure change_current_user_pw (
    --
    -- This procedure changes the current users password.
    --
    p_new_password    in varchar2)
    ;

procedure reset_pw (
    --
    -- This procedure resets the current users password.
    --
    p_user                  in varchar2,
    p_security_group_id     in varchar2,
    p_msg                   in varchar2)
    ;

function user_in_group (
    --
    -- obsolete
    --
    p_group_name in varchar2)
    return boolean
    ;

function get_user_roles (
    --
    -- Return the colon-delimited list of developer roles
    -- for the specified user in the current company
    --
    p_username              in varchar2)
    return varchar2
    ;

function find_security_group_id (
     --
     -- given a company short name return the security group id
     -- p_company = short name of company
     --
     p_company  in varchar2 default null)
     return number;


function find_company (
     --
     -- given a security_group_id, return the company short name
     -- p_company = short name of company
     --
     p_security_group_id  in varchar2 default null)
     return varchar2;

procedure fetch_fnd_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id       in number,
     p_company       out varchar2,
     p_user_name     out varchar2,
     p_first_name    out varchar2,
     p_last_name     out varchar2,
     p_web_password  out varchar2,
     p_email_address out varchar2,
     p_start_date    out varchar2,
     p_end_date      out varchar2,
     p_employee_id   out varchar2,
     p_allow_access_to_schemas out varchar2,
     p_person_type     out varchar2,
     p_default_schema  out varchar2,
     p_groups          out varchar2,
     p_developer_role  out varchar2,
     p_description     out varchar2
     );

procedure fetch_fnd_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id         in number,
     p_user_name       out varchar2,
     p_first_name      out varchar2,
     p_last_name       out varchar2,
     p_email_address   out varchar2,
     p_groups          out varchar2,
     p_developer_role  out varchar2,
     p_description     out varchar2
     );

procedure fetch_fnd_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id                      in number,
     p_company                      out varchar2,
     p_user_name                    out varchar2,
     p_first_name                   out varchar2,
     p_last_name                    out varchar2,
     p_web_password                 out varchar2,
     p_email_address                out varchar2,
     p_start_date                   out varchar2,
     p_end_date                     out varchar2,
     p_employee_id                  out varchar2,
     p_allow_access_to_schemas      out varchar2,
     p_person_type                  out varchar2,
     p_default_schema               out varchar2,
     p_groups                       out varchar2,
     p_developer_role               out varchar2,
     p_description                  out varchar2,
     p_account_expiry               out date,
     p_account_locked               out varchar2,
     p_failed_access_attempts       out number,
     p_change_password_on_first_use out varchar2,
     p_first_password_use_occurred  out varchar2
     );

procedure edit_fnd_user (
     --
     -- Edit user information to
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     --
     p_user_id                      in number,
     p_user_name                    in varchar2,
     p_first_name                   in varchar2 default null,
     p_last_name                    in varchar2 default null,
     p_web_password                 in varchar2 default null,
     p_new_password                 in varchar2 default null,
     p_email_address                in varchar2 default null,
     p_start_date                   in varchar2 default null,
     p_end_date                     in varchar2 default null,
     p_employee_id                  in varchar2 default null,
     p_allow_access_to_schemas      in varchar2 default null,
     p_person_type                  in varchar2 default null,
     p_default_schema               in varchar2 default null,
     p_default_date_format          in varchar2 default null,
     p_group_ids                    in varchar2 default null,
     p_developer_roles              in varchar2 default null,
     p_description                  in varchar2 default null,
     p_account_expiry               in date     default null,
     p_account_locked               in varchar2 default 'N',
     p_failed_access_attempts       in number   default 0,
     p_change_password_on_first_use in varchar2 default 'Y',
     p_first_password_use_occurred  in varchar2 default 'N'
     );

procedure lock_account (
     p_user_name     in varchar2
     );

procedure unlock_account(
     p_user_name     in varchar2
     );

function get_account_locked_status(
     p_user_name in varchar2
     ) return boolean
     ;

procedure expire_workspace_account(
    p_user_name in varchar2
    );

procedure unexpire_workspace_account(
    p_user_name in varchar2
    );

procedure expire_end_user_account(
    p_user_name in varchar2
    );

procedure unexpire_end_user_account(
    p_user_name in varchar2
    );

function workspace_account_days_left (
    p_user_name           in varchar2,
    p_check_user_is_admin in boolean default true )
    return number
    ;

function end_user_account_days_left(
    p_user_name in varchar2)
    return number
    ;

procedure set_custom_auth_status(
    p_status in varchar2
    );

procedure set_authentication_result(
    p_code in number
    );

function get_authentication_result
    return number
    ;

function change_password_on_first_use(
    p_user_name in varchar2
    ) return boolean
    ;

function password_first_use_occurred(
    p_user_name in varchar2
    ) return boolean
    ;

--==============================================================================
-- change password of p_user_name in the current workspace to p_new_password.
-- If p_change_password_on_first_use is true, then the user is has to change
-- the password on the next login.
--
-- requires that the caller has APEX_ADMINISTRATOR_ROLE
--==============================================================================
procedure reset_password (
    p_user_name                    in varchar2,
    p_new_password                 in varchar2,
    p_change_password_on_first_use in boolean default true );

end wwv_flow_fnd_user_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_API"
as

g_canonical_date_format varchar2(100) := 'RRRR-MM-DD"T"hh24:mi:ss';
g_canonical_ts_format   varchar2(100) := 'RRRR-MM-DD"T"hh24:mi:ss.xff';
g_dml_date_format       varchar2(100) := 'YYYYMMDDHH24MISS';

g_edit_row_collection_name  varchar2(255) := 'APEX$_WS_ROWS_EDIT_ROW';

empty_vc_arr wwv_flow_global.vc_arr2;
type col_val_arr_t is table of varchar2(32767) index by varchar2(32767);
type col_arr is table of col_val_arr_t index by binary_integer;

type clob_val_arr_t is table of clob index by varchar2(32767);
type clob_arr is table of clob_val_arr_t index by binary_integer;

g_column_change_in_progress  boolean := false;

function get_data_grid_alias (
    p_ws_app_id     in number,
    p_data_grid_id  in number) return varchar2;

function get_page_alias (
    p_ws_app_id    in number,
    p_page_id      in number) return varchar2;

function ws_error_handling (
    p_error in wwv_flow_error_api.t_error )
    return wwv_flow_error_api.t_error_result;

function is_alphanumeric (
    p_str        in varchar2)
    return boolean;

function check_section_lost_update (
    p_ws_app_id             in number,
    p_page_id               in number,
    p_section_id            in number,
    p_change_count          in number,
    --
    p_section_type          in varchar2 default null,
    p_display_seq           in number default null,
    p_title                 in varchar2 default null,
    p_content               in varchar2 default null,
    p_nav_start_webpage_id  in number default null,
    p_nav_max_level         in number default null,
    p_nav_order_by          in varchar2 default null,
    p_nav_order_by_dir      in varchar2 default null,
    p_nav_include_link      in varchar2 default null,
    --
    p_clob_item_name        in varchar2 default null,
    --
    p_data_grid_id          in number default null,
    p_report_id             in number default null,
    p_data_section_style    in number default null,
    --
    p_chart_type            in varchar2 default null,
    p_chart_3d              in varchar2 default null,
    p_chart_label           in varchar2 default null,
    p_label_axis_title      in varchar2 default null,
    p_chart_value           in varchar2 default null,
    p_value_axis_title      in varchar2 default null,
    p_chart_aggregate       in varchar2 default null,
    p_chart_sorting         in varchar2 default null
    ) return varchar2;

function get_section_clob (
    p_item_name        in varchar2,
    p_section_id       in number default null)
    return clob;

function show_reset_password (
    p_ws_app_id    in number)
    return boolean;

function get_home_page_id (
    p_ws_app_id    in number) return number;

function is_app_home_page (
    p_ws_app_id    in number,
    p_webpage_id   in number)
    return boolean;

function get_logo (
	p_ws_app_id         in number,
	p_security_group_id in number)
	return varchar2;

function get_dbms_sql_cursor(
    p_query  in varchar2,
    p_values in wwv_flow_global.vc_arr2 default empty_vc_arr)
    return integer;

function alias_exists (
    p_ws_app_id    in number,
    p_alias        in varchar2,
    p_alias_type   in varchar2,
    p_worksheet_id in number default null,
    p_page_id      in number default null) return boolean;

function annotation_exists (
    p_ws_app_id      in number) return boolean;

function page_annotation_exists (
    p_ws_app_id       in number,
    p_webpage_id      in number,
    p_annotation_type in varchar2) return boolean;

function get_next_webpg_section_seq (
    p_webpage_id       in number)  return number;

function get_utilization_num (
    p_workspace_id     in number default null,
    p_type             in varchar2 default null) return number;

function duplicate_found_in_array (
    p_array in wwv_flow_global.vc_arr2) return boolean;

function get_data_grid_id (
    p_worksheet_id     in number) return number;

function get_ws_app_id (
    p_worksheet_id      in number) return number;

function get_websheet_name (
    p_worksheet_id     in number) return varchar2;

function websheet_name_exists (
    p_ws_app_id     in number,
    p_name          in varchar2,
    p_type          in varchar2 default 'DATA',
    p_worksheet_id  in number default null) return boolean;

function get_item_value (
    p_item_name in varchar2
    ) return varchar2;

function max_col_limit_reached (
    p_worksheet_id   in number,
    p_column_type    in varchar2) return boolean;

function get_condition_display (
    p_column_name       in varchar2 default null,
    p_column_label      in varchar2 default null,
    p_operator          in varchar2 default null,
    p_expr              in varchar2 default null,
    p_expr2             in varchar2 default null,
    p_condition_display in varchar2 default null) return varchar2;

procedure update_page_timestamp (
    p_page_id   in number,
    p_ws_app_id in number);

procedure run_block (
    p_sql        in varchar2);

function check_plsql (
    p_sql               in varchar2
    ) return varchar2;

procedure run_query (
    p_sql        in varchar2,
    p_values     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_max_row    in number default null,
    p_col_vals   out col_arr);

procedure save_checked (
        p_worksheet_id   in number);

procedure delete_rows (
    p_websheet_id      in number,
    p_rows             in varchar2 default 'SELECTED',
    p_selected_rows    in varchar2 default null,
    p_confirm          in varchar2 default null,
    p_validation_error out varchar2);

procedure delete_row (
    p_websheet_id   in number,
    p_row_id        in number);

procedure process_row (
        p_ws_app_id         in  number,
        p_worksheet_id      in  number,
        p_websheet_id       in  number,
        p_row_id            in  number,
        f01                 in  wwv_flow_global.vc_arr2 default empty_vc_arr,
        f02                 in  wwv_flow_global.vc_arr2 default empty_vc_arr,
        p_validation_error  out varchar2,
        p_validation_count  out number,
        p_ajax_mode         in  boolean                 default false );

----------
-- Sharing
--
procedure share_ws_with_individuals (
        p_worksheet_id in number,
        p_person_list in varchar2,
        p_allow_select in varchar2,
        p_allow_insert in varchar2,
        p_allow_update in varchar2,
        p_allow_delete in varchar2);

--
-- inline updates
--
procedure update_cell (
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_row_id           in number,
    p_column_name      in varchar2,
    p_new_value        in varchar2 default null,
    p_change_count     in number default null,
    p_validation_error out varchar2);

procedure save_websheet_properties (
    p_ws_app_id        in number,
    p_worksheet_id     in number,
    p_name             in varchar2 default null,
    p_alias            in varchar2 default null,
    p_description      in varchar2 default null,
    p_row_pk1          in varchar2 default null,
    p_row_pk2          in varchar2 default null,
    p_row_pk3          in varchar2 default null,
    p_publish          in varchar2 default null,
    p_validation_error out varchar2
    );

procedure save_column_properties (
    p_worksheet_id      in number,
    p_websheet_id       in number,
    p_app_user          in varchar2 default null,
    p_db_column_name    in varchar2 default null,
    p_display_order     in varchar2 default null,
    p_group_id          in number default null,
    p_display_as        in varchar2 default null,
    p_lov_id            in varchar2 default null,
    p_lov_name          in varchar2 default null,
    p_lov_entries       in varchar2 default null,
    p_label             in varchar2 default null,
    p_format_mask       in varchar2 default null,
    p_value_required    in varchar2 default null,
    p_heading_alignment in varchar2 default null,
    p_column_alignment  in varchar2 default null,
    p_default_type      in varchar2 default null,
    p_default_text      in varchar2 default null,
    p_width             in number default null,
    p_max_width         in number default null,
    p_height            in number default null,
    p_help_text         in varchar2 default null,
    p_validation_error  out varchar2
    );

procedure add_column (
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_app_user         in varchar2 default null,
    p_report_id        in number default null,
    p_column_name      in varchar2 default null,
    p_group_id         in number default null,
    p_column_type      in varchar2 default null,
    p_display_as       in varchar2 default null,
    p_lov_id           in varchar2 default null,
    p_lov_name         in varchar2 default null,
    p_lov_entries      in varchar2 default null,
    p_value_required   in varchar2 default null,
    p_default_type     in varchar2 default null,
    p_default_text     in varchar2 default null,
    p_validation_error out varchar2
    );

procedure remove_column (
    p_worksheet_id     in number,
    p_columns          in varchar2 default null,
    p_confirm          in varchar2 default null,
    p_validation_error out varchar2
    );

procedure delete_lov (
    p_worksheet_id     in number,
    p_lov_id           in number default null,
    p_validation_error out varchar2
    );

procedure save_lov (
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_lov_id           in number default null,
    p_lov_name         in varchar2 default null,
    p_lov_entries      in varchar2 default null,
    p_validation_error out varchar2
    );

procedure save_column_group (
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_group_id         in number default null,
    p_seq              in number default null,
    p_group_name       in varchar2 default null,
    p_description      in varchar2 default null,
    p_columns          in varchar2 default null,
    p_validation_error out varchar2
    );

procedure delete_column_group (
    p_worksheet_id     in number,
    p_group_id         in number);

procedure copy_page (
    p_ws_app_id        in number,
    p_webpage_id       in number,
    p_new_name         in varchar2 default null,
    --
    p_new_page_id      out number);

procedure copy_websheet (
    p_ws_app_id        in number,
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_new_name         in varchar2 default null,
    p_validation_error out varchar2
    );

procedure delete_websheet (
    p_worksheet_id     in number,
    p_websheet_id      in number,
    p_websheet_type    in varchar2 default 'DATA',
    p_confirm          in varchar2 default null,
    p_validation_error out varchar2);

procedure set_column_value (
    p_websheet_id      in number,
    p_db_column_name   in varchar2 default null,
    p_new_value        in varchar2 default null,
    p_rows             in varchar2 default 'SELECTED',
    p_selected_rows    in varchar2 default null,
    p_validation_error out varchar2);

procedure replace_column_value (
    p_websheet_id       in number,
    p_rows              in varchar2 default null,
    p_db_column_names   in varchar2 default null,
    p_find_what         in varchar2 default null,
    p_replace_with      in varchar2 default null,
    p_selected_rows     in varchar2 default null,
    p_validation_error  out varchar2);

procedure fill_column_value (
    p_websheet_id        in number,
    p_db_column_name     in varchar2 default null,
    p_validation_error   out varchar2);

procedure add_note (
    p_ws_app_id        in number default null,
    p_note_id          in number default null,
    p_websheet_id      in number default null,
    p_row_id           in number default null,
    p_webpage_id       in number default null,
    p_component_level  in varchar2 default null,
    p_content          in varchar2 default null);

procedure add_link (
    p_link_id          in number default null,
    p_ws_app_id        in number default null,
    p_websheet_id      in number default null,
    p_row_id           in number default null,
    p_component_level  in varchar2 default null,
    p_link_name        in varchar2 default null,
    p_url              in varchar2 default null,
    p_link_description in varchar2 default null,
    p_display_sequence in number default null,
    p_validation_error out varchar2);

procedure add_tags (
    p_ws_app_id       in number default null,
    p_webpage_id      in number default null,
    p_websheet_id     in number default null,
    p_row_id          in number default null,
    p_component_level in varchar2 default null,
    p_tag             in varchar2 default null);

procedure add_acl_entry (
    p_ws_app_id       in number default null,
    p_acl_id          in number default null,
    p_username        in varchar2 default null,
    p_priv            in varchar2 default null);

procedure delete_note (
    p_note_id   in number);

procedure delete_link (
    p_link_id in number);

procedure delete_tag (
    p_tag_id         in number,
    p_websheet_id    in number default null,
    p_row_id         in number default null
    );

procedure delete_acl_entry (
    p_acl_id         in number);

procedure get_websheet_attr (
    p_worksheet_id        in number,
    p_app_user            in varchar2 default null,
    p_base_report_id      in number default null,
    p_status              out varchar2,
    p_view_only_columns   out varchar2,
    p_username_in_columns out varchar2,
    p_parent_column       out varchar2,
    p_child_column        out varchar2);

procedure save_column_validation (
    p_ws_app_id        in number,
    p_worksheet_id     in number,
    p_websheet_id      in number default null,
    p_validation_id    in number default null,
    p_validation_level in varchar2 default null,
    p_name             in varchar2 default null,
    p_seq              in number default null,
    p_type             in varchar2 default null,
    p_expr1            in varchar2 default null,
    p_expr2            in varchar2 default null,
    p_error_message    in varchar2 default null,
    p_validation_error out varchar2
    );

procedure delete_column_validation (
    p_worksheet_id     in number,
    p_validation_id    in number default null
    );

procedure change_column_type (
    p_worksheet_id         in number,
    p_websheet_id          in number,
    p_old_db_column_name   in varchar2,
    p_new_column_type      in varchar2,
    p_format_mask_to_use   in varchar2 default null);

procedure create_history_collection (
    p_worksheet_id  in number,
    p_websheet_id   in number,
    p_max_row_count in number default null
    );

procedure create_link_collection (
    p_ws_app_id    in number,
    p_max_row_count in number default null
    );

procedure get_link_info (
    p_ws_app_id       in number,
    p_id              in number,
    p_component_level out varchar2,
    p_webpage_id      out number,
    p_worksheet_id    out number,
    p_websheet_id     out number,
    p_row_id          out number,
    p_link_name       out varchar2,
    p_url             out varchar2,
    p_created_on      out date,
    p_created_by      out varchar2,
    p_updated_on      out date,
    p_updated_by      out varchar2
    );

procedure create_acl_collection (
    p_ws_app_id     in number,
    p_max_row_count in number default null
    );

procedure create_attachment_collection (
    p_ws_app_id     in number,
    p_max_row_count in number default null
    );

procedure create_sec_history_collection (
    p_ws_app_id     in number,
    p_webpage_id    in number default null,
    p_max_row_count in number default null
    );

procedure create_search_collection (
    p_search                in varchar2 default null,
    p_security_group_id     in number   default null,
    p_ws_app_id             in number   default null,
    p_max_row_count         in number   default null,
    p_searchable_components in varchar2 default null,
    p_app_session           in varchar2 default '0'
    );

procedure create_pg_sec_collection (
    p_security_group_id     in number   default null,
    p_ws_app_id             in number   default null,
    p_page_id               in number   default null,
    p_app_session           in varchar2 default '0'
    );

procedure create_section_collection (
    p_security_group_id     in number   default null,
    p_ws_app_id             in number   default null,
    p_page_id               in number   default null
    );

procedure get_attachment_info (
    p_ws_app_id        in number,
    p_id               in number,
    p_component_level  out varchar2,
    p_webpage_id       out number,
    p_worksheet_id     out number,
    p_websheet_id      out number,
    p_row_id           out number,
    p_name             out varchar2,
    p_image_alias      out varchar2,
    p_image_attributes out varchar2,
    p_description      out varchar2,
    p_created_on       out date,
    p_created_by       out varchar2,
    p_updated_on       out date,
    p_updated_by       out varchar2
    );

procedure create_note_collection (
    p_ws_app_id     in number,
    p_max_row_count in number default null
    );

procedure get_note_info (
    p_ws_app_id       in number,
    p_id              in number,
    p_component_level out varchar2,
    p_webpage_id      out number,
    p_worksheet_id    out number,
    p_websheet_id     out number,
    p_row_id          out number,
    p_note            out varchar2,
    p_created_on      out date,
    p_created_by      out varchar2,
    p_updated_on      out date,
    p_updated_by      out varchar2
    );

procedure create_tag_collection (
    p_ws_app_id     in number,
    p_max_row_count in number default null
    );

procedure get_tag_info (
    p_ws_app_id       in number,
    p_id              in number,
    p_component_level out varchar2,
    p_webpage_id      out number,
    p_worksheet_id    out number,
    p_websheet_id     out number,
    p_row_id          out number,
    p_tag             out varchar2,
    p_created_on      out date,
    p_created_by      out varchar2,
    p_updated_on      out date,
    p_updated_by      out varchar2
    );

procedure create_webpage (
    p_webpage_id      in number default null,
    p_ws_app_id       in number default null,
    p_name            in varchar2 default null,
    p_page_alias      in varchar2 default null,
    p_description     in varchar2 default null,
    p_parent_page_id  in number default null,
    p_section_title   in varchar2 default null,
    p_section_content in varchar2 default null);

procedure fetch_note (
    p_note_id     in  number,
    -- out
    p_content     out varchar2);

procedure fetch_tag (
    p_webpage_id  in number,
    --
    p_tags        out varchar2);

procedure fetch_data_section (
    p_section_id           in number,
    p_section_type         in varchar2,
    -- out
    p_display_seq          out number,
    p_title                out varchar2,
    --
    p_worksheet_id         out number,
    p_websheet_type        out varchar2,
    p_websheet_id          out number,
    p_websheet_name        out varchar2,
    p_report_id            out number,
    p_data_section_style   out number,
    p_change_count         out number,
    p_max_row_count        out number,
    p_show_option          out varchar2
    );

procedure fetch_chart_section (
    p_section_id           in number,
    p_section_type         in varchar2,
    -- out
    p_display_seq          out number,
    p_title                out varchar2,
    --
    p_worksheet_id         out number,
    p_websheet_type        out varchar2,
    p_websheet_id          out number,
    p_websheet_name        out varchar2,
    p_report_id            out number,
    p_report_columns       out varchar2,
    --
    p_chart_type           out varchar2,
    p_chart_3d             out varchar2,
    p_chart_label          out varchar2,
    p_label_axis_title     out varchar2,
    p_chart_value          out varchar2,
    p_value_axis_title     out varchar2,
    p_chart_aggregate      out varchar2,
    p_chart_sorting        out varchar2,
    p_change_count         out number
    );

procedure fetch_section_info (
    p_section_id       in number,
    -- out
    p_display_seq      out number,
    p_title            out varchar2,
    p_change_count     out number
    );

function fetch_section_content (
    p_section_id       in number
    ) return clob;

procedure fetch_nav_section (
    p_section_id           in number,
    p_section_type         in varchar2,
    -- out
    p_display_seq          out number,
    p_title                out varchar2,
    p_nav_start_webpage_id out number,
    p_nav_max_level        out number,
    p_nav_order_by         out varchar2,
    p_nav_order_by_dir     out varchar2,
    p_nav_include_link     out varchar2,
    p_change_count         out number);

procedure save_webpage_section (
    p_section_id            in number default null,
    p_ws_app_id             in number default null,
    p_webpage_id            in number default null,
    p_section_type          in varchar2 default null,
    p_display_seq           in number default null,
    p_title                 in varchar2 default null,
    p_content               in varchar2 default null,
    p_nav_start_webpage_id  in number default null,
    p_nav_max_level         in number default null,
    p_nav_order_by          in varchar2 default null,
    p_nav_order_by_dir      in varchar2 default null,
    p_nav_include_link      in varchar2 default null,
    --
    p_clob_item_name        in varchar2 default null,
    --
    p_data_grid_id          in number default null,
    p_report_id             in number default null,
    p_data_section_style    in number default null,
    p_max_row_count         in number default null,
    p_show_option           in varchar2 default null,
    --
    p_chart_type            in varchar2 default null,
    p_chart_3d              in varchar2 default null,
    p_chart_label           in varchar2 default null,
    p_label_axis_title      in varchar2 default null,
    p_chart_value           in varchar2 default null,
    p_value_axis_title      in varchar2 default null,
    p_chart_aggregate       in varchar2 default null,
    p_chart_sorting         in varchar2 default null
    );

procedure save_section_seq_title (
    p_section_id            in number default null,
    p_ws_app_id             in number default null,
    p_webpage_id            in number default null,
    p_display_seq           in number default null,
    p_title                 in varchar2 default null
    );

procedure delete_webpage_section (
    p_section_id       in number default null,
    p_section_type     in varchar2 default null,
    p_ws_app_id        in number default null,
    p_webpage_id       in number default null);

procedure move_section_to_new_page (
    p_ws_app_id             in number,
    p_section_id            in number,
    p_old_page_id           in number,
    p_new_page_name         in varchar2,
    p_new_page_alias        in varchar2 default null,
    p_new_parent_page_id    in number default null,
    p_new_section_sequence  in number default null
    );

procedure move_section_to_existing_page (
    p_ws_app_id             in number,
    p_section_id            in number,
    p_old_page_id           in number,
    p_new_page_id           in number,
    p_new_section_sequence  in number default null
    );

procedure display_create_ws_app_confirm(
    p_ws_app_id      in number,
    p_name           in varchar2,
    p_description    in varchar2 default null,
    p_section_title  in varchar2 default null
    );

procedure create_ws_app (
    p_ws_app_id       in number default null,
    p_name            in varchar2 default null,
    p_description     in varchar2 default null,
    p_acl_type        in varchar2 default 'DEFAULT',
    p_section_title   in varchar2 default null,
    p_section_content in varchar2 default null,
    --
    p_flow_id        in number default null
    );

function admin_exists (
    p_ws_app_id   in number) return boolean;

procedure create_acl_user (
    p_ws_app_id     in number,
    p_method        in varchar2 default null,
    p_username      in varchar2 default null,
    p_email         in varchar2 default null,
    p_password      in varchar2 default null
    );

procedure create_cloud_websheet (
    p_ws_app_id        in number default null,
    p_websheet_name    in varchar2 default null,
    p_authentication   in varchar2 default null,
    p_owner            in varchar2 default null,
    p_allow_sql_yn     in varchar2 default 'N',
    p_include_gs       in varchar2 default 'Y'
    );

procedure add_ws_page (
    p_page_type       in varchar2,
    p_page_name       in varchar2,
    p_parent_page_id  in number default null,
    p_ws_report_owner in varchar2 default null,
    p_ws_report_table in varchar2 default null);

procedure delete_webpage (
    p_ws_app_id   in number,
    p_webpage_id  in number);

procedure delete_ws_app (
    p_ws_app_id   in number);

procedure create_ws_report (
    p_report_id    in  number   default null,
    p_ws_app_id    in  number   default null,
    p_flow_id      in  number   default null,
    p_schema       in  varchar2 default null,
    p_source_type  in  varchar2 default null,
    p_report_name  in  varchar2 default null,
    p_report_alias in  varchar2 default null,
    p_table_name   in  varchar2 default null,
    p_query        in  varchar2 default null,
    p_worksheet_id out number,
    p_websheet_id  out number);

procedure split_ws_rpt_link_url (
    p_url               in varchar2,
    --
    p_websheet_id       out number,
    p_reset_ir          out varchar2,
    p_clear_ir          out varchar2,
    p_column1           out varchar2,
    p_operator1         out varchar2,
    p_value1            out varchar2,
    p_column2           out varchar2,
    p_operator2         out varchar2,
    p_value2            out varchar2,
    p_column3           out varchar2,
    p_operator3         out varchar2,
    p_value3            out varchar2
    );

function build_ws_rpt_link_url (
    p_ws_app_id         in number,
    p_websheet_id       in number,
    p_reset_ir          in varchar2 default null,
    p_clear_ir          in varchar2 default null,
    p_column1           in varchar2 default null,
    p_operator1         in varchar2 default null,
    p_value1            in varchar2 default null,
    p_column2           in varchar2 default null,
    p_operator2         in varchar2 default null,
    p_value2            in varchar2 default null,
    p_column3           in varchar2 default null,
    p_operator3         in varchar2 default null,
    p_value3            in varchar2 default null
    ) return varchar2;

procedure edit_ws_report_attr (
    p_worksheet_id              in number,
    p_websheet_id               in number,
    p_websheet_name             in varchar2,
    p_websheet_alias            in varchar2,
    p_max_row_count             in number default null,
    p_max_row_count_message     in varchar2 default null,
    p_no_data_found_message     in varchar2 default null,
    p_base_pk1                  in varchar2 default null,
    p_show_nulls_as             in varchar2 default null,
    p_pagination_type           in varchar2 default null,
    p_show_detail_link          in varchar2 default null,
    p_detail_link               in varchar2 default null,
    p_detail_link_text          in varchar2 default null,
    p_detail_link_attr          in varchar2 default null,
    p_allow_exclude_null_values in varchar2 default null,
    p_allow_hide_extra_columns  in varchar2 default null
    );

procedure edit_ws_rpt_column_attr (
    p_worksheet_id           in number,
    p_column_id              in number,
    p_display_text_as        in varchar2 default null,
    p_column_label           in varchar2 default null,
    p_report_label           in varchar2 default null,
    p_sync_form_label        in varchar2 default null,
    p_format_mask            in varchar2 default null,
    p_heading_alignment      in varchar2 default null,
    p_column_alignment       in varchar2 default null,
    p_allow_sorting          in varchar2 default null,
    p_allow_filtering        in varchar2 default null,
    p_allow_ctrl_breaks      in varchar2 default null,
    p_allow_aggregations     in varchar2 default null,
    p_allow_computations     in varchar2 default null,
    p_allow_charting         in varchar2 default null,
    p_allow_group_by         in varchar2 default null,
    p_allow_hide             in varchar2 default null,
    p_allow_filters          in varchar2 default null,
    p_allow_highlighting     in varchar2 default null,
    p_rpt_show_filter_lov    in varchar2 default null,
    p_rpt_lov                in varchar2 default null,
    p_column_link            in varchar2 default null,
    p_column_linktext        in varchar2 default null,
    p_column_link_attr       in varchar2 default null);

function ws_rpt_src_changed (
    p_worksheet_id    in number,
    p_websheet_id     in number,
    p_new_owner       in varchar2,
    p_new_source      in varchar2
    ) return boolean;

procedure change_ws_rpt_query (
    p_worksheet_id    in number,
    p_websheet_id     in number,
    p_new_owner       in varchar2,
    p_new_source      in varchar2 default null
    );

procedure save_ws_rpt_query (
    p_flow_id        in number,
    p_worksheet_id   in number,
    p_websheet_id    in number,
    p_owner          in varchar2 default null,
    p_query          in varchar2 default null
    );

function get_item_help (
    p_db_column_name    in varchar2,
    p_workspace_id      in number,
    p_worksheet_id      in number
    ) return varchar2;

procedure get_ws_report_attr (
    p_websheet_id  in number,
    p_name         out varchar2,
    p_alias        out varchar2);

function inline_date_picker_options(
    p_worksheet_id      in varchar,
    p_date              in varchar,
    p_column            in varchar )
return varchar2;

function get_section_name (
	p_section_id   in number)
	return varchar2
	;

function get_page_count (
    p_ws_app_id    in number)
    return number;

function get_report_count (
    p_ws_app_id    in number)
    return number;

function get_datagrid_count (
    p_ws_app_id    in number)
    return number;

function get_file_count (
	p_ws_app_id    in number)
	return number
	;
function get_file_size (
	p_ws_app_id   in number)
	return number
	;

function get_section_count (
	p_ws_app_id   in number)
	return number;

function get_note_count (
	p_ws_app_id   in number)
	return number;

function get_tag_count (
	p_ws_app_id   in number)
	return number;

function get_datagrid_row_count (
	p_ws_app_id   in number)
	return number;

function get_acl_table
    return clob;

procedure send_page_email (
    p_ws_app_id   in number,
    p_webpage_id  in number,
    p_to          in varchar2 default null,
    p_subject     in varchar2 default null,
    p_body        in varchar2 default null
    );

procedure create_data_grid_from_cp_paste (
    p_app_id            in number,
    p_ws_app_id         in number,
    p_name              in varchar2,
    p_alias             in varchar2 default null,
    p_headings_included in varchar2 default null,
    p_collection_name   in varchar2 default null,
    p_worksheet_id      out number,
    p_websheet_id       out number
    );

procedure create_data_grid_from_scratch (
    p_ws_app_id     in number,
    p_name          in varchar2,
    p_alias         in varchar2 default null,
    p_column_order  in varchar2 default null,
    p_worksheet_id  out number,
    p_websheet_id   out number
    );

procedure p33_fetch_blob_format (
    p_format_mask         in varchar2,
    --
    p_type                out varchar2,
    p_blob_table          out varchar2,
    p_blob_column         out varchar2,
    p_pk1_column          out varchar2,
    p_pk2_column          out varchar2,
    p_mimetype_column     out varchar2,
    p_filename_column     out varchar2,
    p_last_upd_column     out varchar2,
    p_charset_column      out varchar2,
    p_content_disposition out varchar2,
    p_download_text       out varchar2
    );

end  wwv_flow_ws_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLATFORM" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_platform.sql
--
--    DESCRIPTION
--      Low-level interface to instance parameters.
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      mhichwa  03/04/2001 - Created
--      mhichwa  03/26/2001 - changes pres to pref
--      mhichwa  04/18/2001 - Changed platform pref to platform prefs
--      jkallman 05/17/2005 - Added set_preference
--      nagkrish 11/12/2007 - If workspace creation via email notification is re-enabled, corresponding system message is deleted.
--      jkallman 02/23/2011 - Added support for application activity logging
--      pawolf   02/23/2011 - Fixed a bug in application activity logging and changed the order execution
--      jkallman 04/01/2011 - Added result_cache hint to get_preference
--      jkallman 11/29/2012 - Added support for application_activity_logging = 'O', and update of packaged applications (Bug 15918165)
--      cneumuel 03/05/2013 - Added internal caching. moved from platform.sql to wwv_flow_platform.{sql,plb} (bug #15893138)
--      cneumuel 05/06/2013 - In get_preference: use pl/sql function result cache (bug #15893138)
--      cneumuel 05/12/2013 - In get_preference: no relies_on clause in spec on 11.1
--
--------------------------------------------------------------------------------

--==============================================================================
-- G E T   P R E F E R E N C E
-- preference names include:
--    EXP_COMMAND_PATH = command path used to execute the export and import utilities
--==============================================================================
function get_preference (
   p_preference_name in varchar2)
   return varchar2
$if sys.dbms_db_version.version < 11 $then
   /* no result_cache */
$else
   result_cache
$end
   ;

--==============================================================================
procedure set_preference (
   p_preference_name  in varchar2,
   p_preference_value in varchar2 );

end wwv_flow_platform;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_UI_TYPE" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_ui_type.sql
--
--    DESCRIPTION
--      Internal utility package for UI types.
--
--    SEE ALSO
--      Package wwv_flow_user_interface
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    06/26/2012 - Created
--    cneumuel    06/27/2012 - detect: extend server-side device detection (feature #791)
--    cneumuel    12/04/2012 - added detect(p_user_agent), to support device analysis on aria
--
--------------------------------------------------------------------------------

subtype t_name is wwv_flow_ui_types.name%type;
c_desktop                 constant t_name := 'DESKTOP';
c_jqm_smartphone          constant t_name := 'JQM_SMARTPHONE';
c_jqm_tablet              constant t_name := 'JQM_TABLET';
c_phonegap_jqm_smartphone constant t_name := 'PHONEGAP_JQM_SMARTPHONE';
c_phonegap_jqm_tablet     constant t_name := 'PHONEGAP_JQM_TABLET';

--==============================================================================
-- Try to detect the ui type for a given user agent value
--==============================================================================
function detect (
    p_user_agent in varchar2 )
    return t_name;
--==============================================================================
-- Try to detect the ui type, based on the user agent http header value.
--==============================================================================
function detect
    return t_name;

end wwv_flow_ui_type;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_USER_INTERFACE" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_user_interface.sql
--
--    DESCRIPTION
--      This package is responsible for handling user interfaces by the
--      runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/09/2012 - Created
--      pawolf    03/15/2012 - Added new APIs
--      pawolf    04/19/2012 - Added new APIs
--      pawolf    06/20/2012 - Added global page support (feature #987)
--      cneumuel  06/26/2012 - Use wwv_flow_ui_type constants instead of strings for ui types (feature #791)
--      cneumuel  07/03/2012 - Added detect_user_interface (feature #791)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Result of detect_user_interface
--==============================================================================
type t_ui_detection_result is record (
    user_interface_id     wwv_flow_user_interfaces.id%type,
    login_url             wwv_flow_user_interfaces.login_url%type,
    home_url              wwv_flow_user_interfaces.home_url%type,
    client_detection_html varchar2(32767) );

--
--==============================================================================
-- Returns the name of the UI type for which the specified user interface has
-- been designed for. If p_user_interface_id is not specified then the
-- user interface of the current page will be used.
--==============================================================================
function get_ui_type (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return wwv_flow_ui_type.t_name;
--
--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- Desktop browsers. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function is_desktop_ui (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile (Smartphone, Tablet or Phonegap) browsers. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function is_jqm_ui (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile Smartphone browsers. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function is_jqm_smartphone_ui (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile Tablet browsers. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function is_jqm_tablet_ui (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;
--
--==============================================================================
-- Returns the home URL of the specified user interface. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function get_home_url (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return varchar2;
--
--==============================================================================
-- Returns the login URL of the specified user interface. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function get_login_url (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return varchar2;
--
--==============================================================================
-- Returns the theme id of the specified user interface. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function get_theme_id (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;
--
--==============================================================================
-- Returns the global page id of the specified user interface. If p_user_interface_id
-- is not specified then the user interface of the current page will be used.
--==============================================================================
function get_global_page_id (
    p_user_interface_id in number default wwv_flow.g_step_user_interface_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;
--
--==============================================================================
-- Determine the user interface for the given application.
--
-- Returns a user_interface_id if the UI could be detected on the server (either
-- because there is only one UI or because server-side detection succeeded) or
-- a html code to do client-side detection.
--==============================================================================
function detect_user_interface (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return t_ui_detection_result;

end wwv_flow_user_interface;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEMPLATE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_template.sql
--
--    DESCRIPTION
--      This package is responsible for handling templates in the runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    05/04/2012 - Created
--      pawolf    05/18/2012 - Added split
--      pawolf    05/19/2012 - Added get_grid_template
--      pawolf    05/21/2012 - More changes for grid templates (feature #936)
--      pawolf    05/21/2012 - More changes for grid templates (feature #936)
--      pawolf    05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--      pawolf    05/31/2012 - Continued work on grid layout (feature #936)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_iterator is record (
    placeholder            varchar2(32),
    is_finished            boolean      := false,
    is_unknown_placeholder boolean      := false,
    start_pos              pls_integer  := 1 );

type t_grid_template is record (
    type                     wwv_flow_templates.grid_type%type,
    max_columns              number,
    always_use_max_columns   boolean,
    is_always_rendered       boolean,
    has_column_span          boolean,
    emit_empty_leading_cols  boolean,
    emit_empty_trailing_cols boolean,
    template                 wwv_flow_global.vc_arr2,
    row_template             wwv_flow_global.vc_arr2,
    column_template          wwv_flow_global.vc_arr2,
    first_column_attributes  wwv_flow_templates.grid_first_column_attributes%type,
    last_column_attributes   wwv_flow_templates.grid_last_column_attributes%type,
    javascript_debug_code    wwv_flow_templates.grid_javascript_debug_code%type,
    default_column_attr      varchar2(15) );

--==============================================================================
-- Global constants
--==============================================================================
c_grid_type_table    constant varchar2(10) := 'TABLE';
c_grid_type_fixed    constant varchar2(10) := 'FIXED';
c_grid_type_variable constant varchar2(10) := 'VARIABLE';

c_null_iterator      t_iterator;
--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Emits the template up until the next #PLACEHOLDER# and returns the found
-- placeholder in p_iterator.placeholder. If the template has completely been
-- emitted, p_iterator.is_finished will be TRUE.
--
-- p_iterator.placeholder includes the starting and ending #. If the returned
-- placeholder can't be processed by the caller because it's unknown, you can
-- set p_iterator.is_unknown_placeholder = TRUE to handle it differently in
-- tokenize_and_emit with the next call.
--
-- Example:
--
-- declare
--     l_iterator wwv_flow_template.t_iterator;
-- begin
--     loop
--         wwv_flow_template.tokenize_and_emit (
--             p_template => l_template,
--             p_iterator => l_iterator );
--
--         exit when l_iterator.is_finished;
--
--         case l_iterator.placeholder
--           when '#BODY#'       then ...
--           when '#SUB_REGION#' then ...
--           else l_iterator.is_unknown_placeholder := true;
--         end case;
--     end loop;
-- end;
--
--==============================================================================
procedure tokenize_and_emit (
    p_template in            varchar2,
    p_iterator in out nocopy t_iterator );
--
--==============================================================================
-- Parses the template and splits the template into template pieces and
-- placeholders provided in the p_placeholders array.
--
-- Use this function if you want to parse a template once and then use
-- it multiple times in a loop for better performance.
-- An example use case would be to emit the entries of a list.
--
-- Example:
--
-- declare
--     l_pieces wwv_flow_global.vc_arr2;
-- begin
--     l_pieces := wwv_flow_template.tokenize (
--                     p_template     => l_template,
--                     p_placeholders => vc4000Array('#BODY#', '#SUB_REGION#')
--                     );
--
--     for l_entries in ( select ... from entries )
--     loop
--         for i in 1 .. l_pieces.count loop
--             case l_pieces(i)
--               when '#BODY#'       then ...
--               when '#SUB_REGION#' then ...
--               else sys.htp.prn(wwv_flow.do_substitutions(l_pieces(i), 'ESC'));
--             end case;
--         end loop;
--     end loop;
-- end;
--
--==============================================================================
function tokenize (
    p_template     in varchar2,
    p_placeholders in vc4000Array )
    return wwv_flow_global.vc_arr2;
--
--==============================================================================
-- Splits the template into two parts and stores the result in an array
-- which always contains two entries.
--
-- The first array entry contains everything up to p_placeholder and the
-- second array entry contains everything after p_placeholder.
-- If p_template is NULL or p_placeholder is not found, this function will
-- still return two array entries so that the caller can safely reference
-- this two array positions. If p_placeholder is not found, the first array
-- entry will contain p_template and the second will be NULL.
--
-- Use this function if you have a template which contains a main placeholder
-- (eg. #CONTENT#) where some other content should be emitted, but where
-- REPLACE can't use because the output is to big or the component itself is
-- using sys.HTP.P
--
-- Example:
--
-- declare
--     l_pieces wwv_flow_global.vc_arr2;
-- begin
--     l_pieces := wwv_flow_template.split (
--                     p_template    => l_template,
--                     p_placeholder => '#BODY#' );
--
--     -- Emit everything before the #BODY# placeholder
--     sys.htp.prn(wwv_flow.do_substitutions(l_pieces(1), 'ESC'));
--
--     -- Emit the body
--     ... some code comes here ...
--
--     -- Emit everything after the #BODY# placeholder
--     sys.htp.prn(wwv_flow.do_substitutions(l_pieces(2), 'ESC'));
-- end;
--
--==============================================================================
function split (
    p_template    in varchar2,
    p_placeholder in varchar2 )
    return wwv_flow_global.vc_arr2;
--
--==============================================================================
-- Returns the grid data of the passed p_page_template_id.
--==============================================================================
function get_grid_template (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id,
    p_page_template_id  in number )
    return t_grid_template;
--
end wwv_flow_template;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_THEME"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_theme.sql
--
--    DESCRIPTION
--      This package is responsible for handling themes by the
--      runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/16/2012 - Created
--      pawolf    04/05/2012 - Added support for page and popup transitions (feature #826)
--      pawolf    05/31/2012 - Continued work on grid layout (feature #936)
--      pawolf    06/05/2012 - Added grid support for sub regions (feature #936)
--      pawolf    06/18/2012 - Added region display points support (feature# #936)
--      pawolf    10/12/2012 - Added get_calendar (bug# 14328746)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_display_point is record (
    placeholder      wwv_flow_theme_display_points.placeholder%type,
    has_grid_support boolean,
    max_columns      pls_integer );

type t_calendar is record (
    icon            wwv_flow_themes.calendar_icon%type,
    icon_attributes wwv_flow_themes.calendar_icon_attr%type );

--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the id of the default page template of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
--==============================================================================
function get_page_template_id (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;
--
--==============================================================================
-- Returns the id of the error page template of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
--==============================================================================
function get_error_page_template_id (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;
--
--==============================================================================
-- Returns the id of the printer friendly page template of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
--==============================================================================
function get_printer_friendly_templ_id (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;
--
--==============================================================================
-- Returns the default page transition of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
--==============================================================================
function get_page_transition (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return varchar2;
--
--==============================================================================
-- Returns the default popup transition of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
--==============================================================================
function get_popup_transition (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return varchar2;
--
--==============================================================================
-- Returns the meta data of the passed display point stored for the theme.
-- If that display point is not defined, default values will be used.
-- p_max_fixed_grid_columns should be set to the available maximum columns of the
-- parent container.
--==============================================================================
function get_display_point (
    p_theme_id               in number default wwv_flow.g_flow_theme_id,
    p_application_id         in number default wwv_flow_security.g_flow_id,
    p_security_group_id      in number default wwv_flow_security.g_curr_flow_security_group_id,
    p_grid_template          in wwv_flow_template.t_grid_template,
    p_page_template_id       in number,
    p_region_template_id     in number      default null,
    p_placeholder            in varchar2,
    p_has_grid_support       in boolean,
    p_max_fixed_grid_columns in pls_integer default null )
    return t_display_point;
--
--==============================================================================
-- Returns the calendar attributes of the specified theme.
-- If p_theme_id is not specified then the theme of the current user interface
-- will be used.
-- Note: For all returned attributes, do_substitutions has already been called,
--       and icon contains the default /i/asfdcldr.gif if no icon has been set for
--       the theme.
--==============================================================================
function get_calendar (
    p_theme_id          in number default wwv_flow.g_flow_theme_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return t_calendar;
--
end wwv_flow_theme;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_NATIVE_ITEM"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_native_item.sql
--
--    DESCRIPTION
--      This package is resonsible for handling native item types.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      09/11/2009 - Created
--    pawolf      09/14/2009 - Continue
--    pawolf      09/29/2009 - Added Rich Text Editor
--    pawolf      10/05/2009 - Added new Textarea
--    pawolf      11/03/2009 - Replaced apex_plugin references with wwv_flow_plugin
--    sathikum    12/11/2009 - Added new DatePicker
--    pawolf      12/18/2009 - Added new item type "Number Field"
--    pawolf      12/29/2009 - Modified calling interface for validations
--    pawolf      12/29/2009 - Added new item type "Password"
--    pawolf      01/12/2010 - Added item type date picker classic
--    pawolf      01/14/2010 - Added item type select list
--    pawolf      01/15/2010 - Added constants for native item types
--    pawolf      01/18/2010 - Added item type "Popup LOV"
--    pawolf      01/26/2010 - Added cascading support for Select List
--    pawolf      01/27/2010 - Added item type "Shuttle"
--    pawolf      02/02/2010 - Added item type "Checkbox" and "Radiogroup"
--    pawolf      02/05/2010 - Changed to new plug-in interface
--    pawolf      02/16/2010 - Don't support OUT of p_value in validation API anymore
--    pawolf      03/05/2010 - Added file handling item type
--    pawolf      03/09/2010 - Added new item type "Display Image"
--    pawolf      03/16/2010 - Added item type "List Manager"
--    pawolf      03/17/2010 - Added cascading LOV support for popup LOVs and List Manager
--    pawolf      04/13/2010 - Added merged text, hidden and color picker item types
--    pawolf      12/22/2010 - Added render_popup_lov_dialog as public
--    cneumuel    05/23/2011 - Added add_ckeditor_javascript helper procedure
--    pawolf      06/24/2011 - Added p_multiple_values to render_popup_lov_dialog
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      02/29/2012 - Added HTML5 date picker (feature# 840)
--    pawolf      02/29/2012 - Changed package to use dispatcher functions
--    pawolf      03/22/2012 - Added new item type "Yes/No" (feature# 882)
--    pawolf      03/22/2012 - Added new item type "Slider" (feature# 883)
--    pawolf      04/02/2012 - Added p_plugin to APIs
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------
c_hidden                    constant varchar2(40) := 'NATIVE_HIDDEN';
c_text_field                constant varchar2(40) := 'NATIVE_TEXT_FIELD';
c_number_field              constant varchar2(40) := 'NATIVE_NUMBER_FIELD';
c_select_list               constant varchar2(40) := 'NATIVE_SELECT_LIST';
c_date_picker               constant varchar2(40) := 'NATIVE_DATE_PICKER';
c_date_picker_html5         constant varchar2(40) := 'NATIVE_DATE_PICKER_HTML5';
c_auto_complete             constant varchar2(40) := 'NATIVE_AUTO_COMPLETE';
c_textarea                  constant varchar2(40) := 'NATIVE_TEXTAREA';
c_rich_text_editor          constant varchar2(40) := 'NATIVE_RICH_TEXT_EDITOR';
c_password                  constant varchar2(40) := 'NATIVE_PASSWORD';
c_popup_lov                 constant varchar2(40) := 'NATIVE_POPUP_LOV';
c_date_picker_classic       constant varchar2(40) := 'NATIVE_DATE_PICKER_CLASSIC';
c_stop_and_start_html_table constant varchar2(40) := 'NATIVE_STOP_AND_START_HTML_TABLE';
c_display_only              constant varchar2(40) := 'NATIVE_DISPLAY_ONLY';
c_shuttle                   constant varchar2(40) := 'NATIVE_SHUTTLE';
c_checkbox                  constant varchar2(40) := 'NATIVE_CHECKBOX';
c_radiogroup                constant varchar2(40) := 'NATIVE_RADIOGROUP';
c_file                      constant varchar2(40) := 'NATIVE_FILE';
c_display_image             constant varchar2(40) := 'NATIVE_DISPLAY_IMAGE';
c_list_manager              constant varchar2(40) := 'NATIVE_LIST_MANAGER';
c_text_with_calculator      constant varchar2(40) := 'NATIVE_TEXT_WITH_CALCULATOR';
c_color_picker              constant varchar2(40) := 'NATIVE_COLOR_PICKER';
c_yes_no                    constant varchar2(40) := 'NATIVE_YES_NO';
c_slider                    constant varchar2(40) := 'NATIVE_SLIDER';

-- Used by HTML5 date picker
c_browser_date_format_mask     constant varchar2(30) := 'YYYY-MM-DD';
c_browser_datetime_format_mask constant varchar2(30) := 'YYYY-MM-DD"T"HH24:MI:SS';
--
--==============================================================================
-- Renders the HTML code for popup LOV dialog.
--==============================================================================
procedure render_popup_lov_dialog (
    p_item_name        in varchar2,
    p_fetch            in varchar2,
    p_lov_definition   in varchar2,
    p_lov_display_null in boolean,
    p_lov_null_text    in varchar2 default null,
    p_lov_null_value   in varchar2 default null,
    p_has_hidden_item  in boolean  default false,
    p_allow_multiple   in boolean  default false );
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin to run the render function.
--==============================================================================
function render (
    p_type                in varchar2,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin to run the validate function.
--==============================================================================
function validate (
    p_type   in varchar2,
    p_plugin in wwv_flow_plugin_api.t_plugin,
    p_item   in wwv_flow_plugin_api.t_page_item,
    p_value  in varchar2 )
    return wwv_flow_plugin_api.t_page_item_validation_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin to run the ajax function.
--==============================================================================
function ajax (
    p_type   in varchar2,
    p_plugin in wwv_flow_plugin_api.t_plugin,
    p_item   in wwv_flow_plugin_api.t_page_item )
    return wwv_flow_plugin_api.t_page_item_ajax_result;
--
--==============================================================================
-- Helper procedure to add javascript code for the ckeditor (referenced by
-- native item and f4000 clob textarea
--==============================================================================
procedure add_ckeditor_javascript (
    p_item_name           in varchar2,
    p_toolbar             in varchar2, -- e.g. "Full"
    p_toolbar_expanded    in boolean,
    p_skin                in varchar2 );
--
--
end wwv_flow_native_item;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SESSION_STATE" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_session_state.sql
--
--    DESCRIPTION
--      This package encapsulates all access to session state (wwv_flow_data)
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    04/05/2012 - Created
--    cneumuel    04/10/2012 - Added get_deferred_session_val_id for wwv_flow_item (feature #897)
--    cneumuel    04/12/2012 - Added clear_state_for_id,clear_all_state_for_id
--    cneumuel    04/12/2012 - Added initialize_all_page_items, clear_all_state_for_name
--    cneumuel    05/24/2012 - Renamed save to save_by_id, added save, save_by_name,
--                             has_component_value, set_component_values, get_component_values, clear_component_values,
--                             set_substitution_cache_byname, set_substitution_cache, replace_substitution_names, v,
--                             renamed fetch_flow_item to get_item_value (feature #940)
--    cneumuel    06/01/2012 - Added get_global_item_id, added p_item_scope to save_nocache (feature #897)
--    cneumuel    08/01/2012 - Added do_hash_substitutions: #xxx# substitution for wwv_flow.do_substitutions (bug #14399765)
--    cneumuel    08/06/2012 - In do_hash_substitutions: add p_start_pos. replace #MIN#, #APP_VERSION#, #APEX_VERSION#
--
--------------------------------------------------------------------------------

c_deep_link_item_name constant varchar2(4000) := 'FSP_AFTER_LOGIN_URL';

--==============================================================================
-- helper for wwv_flow.clear_page_cache
--
-- Reset all cached items for a given page to null
--==============================================================================
procedure clear_state_for_page (
    p_page_id in number default null);

--==============================================================================
-- For the current session remove session state for the given flow.  Requires
-- wwv_flow_security.g_instance to be set to the current session.
--==============================================================================
procedure clear_state_for_application (
    p_application_id in varchar2 );

--==============================================================================
-- ...
--==============================================================================
procedure clear_state_for_user;

--==============================================================================
-- remove session state by item id in the current session
--==============================================================================
procedure clear_state_for_id (
    p_item_id        in number );

--==============================================================================
-- remove session state by item id, for all sessions
--==============================================================================
procedure clear_all_state_for_id (
    p_item_id        in number,
    p_application_id in number default wwv_flow_security.g_flow_id );

--==============================================================================
-- remove session state by item name, for all sessions
--==============================================================================
procedure clear_all_state_for_name (
    p_item_name      in varchar2,
    p_application_id in number default wwv_flow_security.g_flow_id );

--==============================================================================
-- wwv_flow_process: INITIALIZE_ALL_PAGE_ITEMS (possibly obsolete)
--==============================================================================
procedure initialize_all_page_items;

--==============================================================================
-- ...
--==============================================================================
procedure save_deferred_session_vals;
--==============================================================================
-- ...
--==============================================================================
function get_deferred_session_val_id (
    p_string in varchar2 )
    return number;

--==============================================================================
-- return if p_item_name is the name of a global item
--==============================================================================
function is_builtin_global_item_name (
    p_item_name in varchar2 )
    return boolean;

--==============================================================================
-- Set global session state (i.e. independent of application, e.g. deep link)
--==============================================================================
procedure set_builtin_global_item_value (
    p_item_name in varchar2,
    p_value     in varchar2,
    p_do_update in boolean default false );

--==============================================================================
-- Get "id" for global session state item
--==============================================================================
function get_global_item_id (
    p_item_name in varchar2 )
    return number;

--==============================================================================
-- Get global session state (i.e. independent of application, e.g. deep link)
--==============================================================================
function get_builtin_global_item_value (
    p_item_name         in varchar2,
    p_session_id        in number default wwv_flow_security.g_instance )
    return varchar2;

--==============================================================================
-- Save item to session state (ignoring the substitution cache) and commit
--==============================================================================
procedure save_nocache (
    p_item_id        in number,
    p_item_scope     in wwv_flow_meta_data.t_item_scope,
    p_item_name      in varchar2,
    p_item_value     in varchar2,
    p_item_filter    in varchar2 default 'N',
    p_is_encrypted   in varchar2 default 'N',
    p_application_id in number   default wwv_flow_security.g_flow_id,
    p_do_update      in boolean  default false );

--==============================================================================
-- Save session state to plsql memory cache and database.
--
-- item             = application or page item
-- item_value       = value of item to be stored as session state
-- p_external_input = if true, escape input
--==============================================================================
procedure save (
    p_item              in wwv_flow_meta_data.t_item_properties,
    p_item_value        in varchar2,
    p_external_input    in boolean );

--==============================================================================
-- Save session state to plsql memory cache and database.
--
-- item_id    = id of application or page item
-- item_value = value of item to be stored as session state
--==============================================================================
procedure save_by_id (
    p_item_id           in number,
    p_item_value        in varchar2 );

--==============================================================================
-- Save session state to plsql memory cache and database.
--
-- item_name  = name of application or page item
-- item_value = value of item to be stored as session state
--==============================================================================
procedure save_by_name (
    p_item_name         in varchar2,
    p_item_value        in varchar2 );

--==============================================================================
-- Return if p_name is part of the component value map
--==============================================================================
function has_component_value (
    p_name in varchar2 )
    return boolean;

--==============================================================================
-- Sets the component specific values which can then be used as bind variables,
-- substitution values, ...
-- p_value_map is index by the uppercase column names of the component.
--
-- Note: Always call clear_component_values after a row of your component has
--       been processed to make sure that these values are not accidentially
--       used outside your component. Don't forget about the exception handler!!
--==============================================================================
procedure set_component_values (
    p_value_map in wwv_flow_global.vc_map );

--==============================================================================
-- Returns the component specific values. These values can change if the bind
-- variable was used as an assignment target.
-- p_value_map is index by the uppercase column names of the component.
--==============================================================================
function get_component_values
    return wwv_flow_global.vc_map;

--==============================================================================
-- Clears the component specific values which can then be used as bind variables,
-- substitution values, ...
--
-- This procedure should always be called after a row of your component has
-- been processed to make sure that these values are not accidentially
-- used outside your component. Don't forget about the exception handler to call
-- this procedure there as well!!
--==============================================================================
procedure clear_component_values;

--==============================================================================
-- Update the cache of session state maintained in a pl/sql table.
--
-- p_name      = name of the application or page item
-- p_value     = Session state value for the item
--==============================================================================
procedure set_substitution_cache_byname (
    p_name       in varchar2,
    p_value      in varchar2 );

--==============================================================================
-- Update the cache of session state maintained in a pl/sql table.
-- This procedure does not write the change to disk.
--
-- p_id        = ID of the application or page item
-- p_value     = Session state value for the item
-- p_name      = name of the application or page item
-- p_filter    = filter value of the item (escape on http output)
-- p_encrypted = encrypted (Y/N) flag of the item
--==============================================================================
procedure set_substitution_cache (
    p_id         in number,
    p_value      in varchar2,
    p_name       in varchar2 default null,
    p_filter     in varchar2 default null,
    p_encrypted  in varchar2 default null );

--==============================================================================
-- fetch all of the application's session state into the substitution cache,
-- i.e. the wwv_flow.g_substitution_item% variables.
--==============================================================================
procedure fetch_into_substitution_cache (
    p_exact_substitutions_only in boolean );

--==============================================================================
-- replace substitution names in p_str
--
-- part of do_substitutions
--==============================================================================
procedure do_cache_substitutions (
    p_str    in out nocopy varchar2,
    p_escape in boolean );

--==============================================================================
-- replace generic #xxx# values in p_str
--
-- part of do_substitutions, but can also be used to replace the xxxIMAGExxx
-- and xxxOWNERxxx values.
--==============================================================================
procedure do_hash_substitutions (
    p_str       in out nocopy varchar2,
    p_start_pos in binary_integer default null );

--==============================================================================
-- return flow value (formerly stand-alone v function)
--
-- This program allows you to reference flow variables using
-- v('FLOW_VAR') syntax.  This prevents the shared pool from
-- filling up and running out of enqueues when running with
-- large numbers of concurrent users.
--
-- p_item_id  = Case insensitive name of the item for which you
--              wish to have the session state fetched.
-- p_flow     = Identifies the flow ID
-- p_scope    = Valid values are "SESSION_AND_USER" and "SESSION"
--              SESSION_AND_USER will look in session state in both
--              the session cache and in the user cache.
--              SESSION will look only in the session cache and will
--              omit looking for this value in the user cache.
--              SESSION caching is caching of session state of an
--              item value for a flows session.  User caching is
--              the caching of an item value for a user over all
--              sessions for that user.
--==============================================================================
function v (
    p_item   in varchar2,
    p_flow   in number   default null,
    p_scope  in varchar2 default 'SESSION_AND_USER',
    p_escape in varchar2 default 'N')
    return varchar2;

--==============================================================================
-- Given a flow-level item name, locate item in current or specified
-- application and current or specified session and return item value.
--
--
-- Security:
--    Caller must be a package,procedure, or function whose
--    owner can be identified by owa_util.who_called_me.
--    This owner will be used to find the security_group_id
--    associated with that schema.
--==============================================================================
function get_item_value (
    p_item         in varchar2,
    p_flow         in number default wwv_flow_security.g_flow_id,
    p_instance     in number default wwv_flow_security.g_instance )
    return varchar2;

--==============================================================================
-- internal helper routine to get an item value by item_id
--==============================================================================
function fetch_value_by_id (
    p_item_id     in number )
    return varchar2;

--==============================================================================
-- internal helper routine to get a numeric item value by item_id
--==============================================================================
function fetch_num_value_by_id (
    p_item_id in number )
    return number;

--==============================================================================
-- internal helper routine to return the changed status
-- (wwv_flow_data.session_state_status)
--==============================================================================
function get_status (
    p_item_properties in wwv_flow_meta_data.t_item_properties )
    return wwv_flow_data.session_state_status%type;

--==============================================================================
-- internal helper routine to return if any session_state_status is 'U'
-- if p_application_id is null, the application id is ignored
--==============================================================================
function is_status_changed (
    p_application_id in number )
    return boolean;

end wwv_flow_session_state;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CGI" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_cgi.sql
--
--    DESCRIPTION
--      Provide easy access to CGI variables
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    06/14/2012 - Created
--    cneumuel    06/15/2012 - Added g_x_forwarded_for, init (feature #899)
--    cneumuel    08/09/2012 - Changed access to wwv_flow_cgi from globals to functions
--    pawolf      01/10/2013 - Added get_http_accept (bug #16097364)
--    cneumuel    03/27/2013 - Added get_http_referer, create_session_cookie_value, get_session_cookie_value, get_builder_login_cookie_name, get_builder_login_cookie_value (bug #16506634)
--    cneumuel    03/28/2013 - Added get_cookie (bug #15831333)
--    cneumuel    04/02/2013 - Added does_cookie_exist_for_value (bug #16506634)
--
--------------------------------------------------------------------------------

--##############################################################################
--
-- H T T P   H E A D E R   V A L U E S
--
-- These values automatically get initialized when the package gets accessed.
-- Use them instead of owa_util.get_cgi_env, to avoid looping through the header
-- array.
--
--##############################################################################
subtype t_cgi_header is varchar2(32767);

function get_apex_listener_version  return t_cgi_header;
function get_cookie                 return t_cgi_header;
function get_dad_name               return t_cgi_header;
function get_http_accept            return t_cgi_header;
function get_http_accept_language   return t_cgi_header;
function get_http_host              return t_cgi_header;
function get_http_if_modified_since return t_cgi_header;
function get_http_if_none_match     return t_cgi_header;
function get_http_referer           return t_cgi_header;
function get_http_user_agent        return t_cgi_header;
function get_path_info              return t_cgi_header;
function get_query_string           return t_cgi_header;
function get_remote_addr            return t_cgi_header;
function get_remote_user            return t_cgi_header;
function get_request_iana_charset   return t_cgi_header;
function get_request_method         return t_cgi_header;
function get_request_protocol       return t_cgi_header;
function get_script_name            return t_cgi_header;
function get_script_prefix          return t_cgi_header;
function get_server_name            return t_cgi_header;
function get_server_port            return t_cgi_header;
function get_server_software        return t_cgi_header;
function get_x_forwarded_for        return t_cgi_header;

--##############################################################################
--
-- S E S S I O N   C O O K I E   H A N D L I N G
--
--##############################################################################

subtype t_cookie_value is varchar2(32);

--==============================================================================
-- return a new random session cookie value
--==============================================================================
function create_session_cookie_value
    return t_cookie_value;

--==============================================================================
-- return the CGI value for the given session cookie name
--==============================================================================
function get_session_cookie_value (
    p_name in varchar2 )
    return t_cookie_value;

--==============================================================================
-- return whether a session cookie with the given value exists
-- this function should only be used in wwv_flow_custom_auth_std.ws_login, for
-- sso authentication.
--==============================================================================
function does_cookie_exist_for_value (
    p_value in t_cookie_value )
    return boolean;

--==============================================================================
-- return builder remember me cookie name (ORA_WWV_REMEMBER_UN)
--==============================================================================
function get_builder_login_cookie_name
    return varchar2;

--==============================================================================
-- return builder remember me cookie value (ORA_WWV_REMEMBER_UN)
--==============================================================================
function get_builder_login_cookie_value
    return varchar2;

--##############################################################################
--
-- U T I L I T Y   F U N C T I O N S
--
--##############################################################################

--==============================================================================
-- Initialize the global variables.
--
-- The package calls init on startup, but there may be occasions where a
-- re-initialization is necessary.
--==============================================================================
procedure init;

end wwv_flow_cgi;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_SECURITY" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2010. All Rights Reserved.
--
--    NAME
--      wwv_flow_ws_security.sql
--
--    DESCRIPTION
--      Security related functions for Websheets
--
--    MODIFIED (MM/DD/YYYY)
--     jkallman 01/21/2010 - Created
--     jstraub  01/21/2010 - Added current_user_is_devenv
--     jstraub  01/21/2010 - Added current_user_is_admin
--     sspadafo 01/25/2010 - Added f4900_create_auth_setup, ws_auth_type
--     jstraub  01/27/2010 - Added ws_acl_type and get_current_user_role
--     jstraub  02/04/2010 - Added admin_exists
--     sbkenned 02/12/2010 - Added admin_exists_sbk and create_auth_setup to pass in ws_app_id
--                           (will remove old and rename next week)
--     sbkenned 02/19/2010 - Removed f4900_create_auth_setup
--                         - Edited admin_exists (to match admin_exists_sbk), removed admin_exists_sbk
--     jstraub  03/11/2010 - Added ws_allow_public function returning boolean
--     cbcho    03/17/2010 - Added validate_sql,is_valid_sql
--     sspadafo 03/17/2010 - Added update_auth_setup procedure
--     cbcho    03/18/2010 - Added str_contains_valid_sql
--     cbcho    03/19/2010 - Changed is_valid_sql to pass table, schema parameter
--     cbcho    03/24/2010 - Added sql_enabled
--     jstraub  03/24/2010 - Removed remove_sql_val_cache, set_sql_val_cache, added is_valid_ws_query, sql_enabled_inst
--     jstraub  04/09/2010 - Added sql_enabled_yn and sql_enabled_inst_yn
--     jstraub  05/20/2010 - Added authenticate
--     mhichwa  06/11/2010 - added p_websheet_page_id to authenticate bug 9797007
--     cbcho    02/23/2011 - Changed str_contains_valid_sql to accept p_string as clob
--     cneumuel 03/30/2011 - Moved builder code into unauthenticate_on_auth_change
--     cneumuel 05/17/2011 - Removed obsolete current_user_is_devenv
--     cbcho    05/20/2011 - Changed str_contains_valid_sql to accept additional parameters p_page_id, p_section_id
--     cneumuel 11/29/2011 - Added set_role, get_authentication, exec_websheet_auth (from wwv_flow_security), removed authenticate (bug #13360987)
--     cneumuel 05/09/2012 - Removed obsolete code: unauthenticate_on_auth_change
--     cneumuel 05/10/2012 - Added ldap_username_escaping, owner to t_ws_authentication bug #14047270)
--     cneumuel 05/16/2012 - Removed create_auth_setup, update_auth_setup, added update_ws_properties (feature #808)
--
--------------------------------------------------------------------------------

--==============================================================================
subtype t_authent_scheme is varchar2(30);
c_authent_scheme_apex      constant t_authent_scheme := 'APEX';
c_authent_scheme_ldap      constant t_authent_scheme := 'LDAP';
c_authent_scheme_database  constant t_authent_scheme := 'DATABASE';
c_authent_scheme_dbaccount constant t_authent_scheme := 'DB_ACCOUNT';
c_authent_scheme_osso      constant t_authent_scheme := 'OSSO';
c_authent_scheme_cloud_idm constant t_authent_scheme := 'CLOUD_IDM';
c_authent_scheme_custom    constant t_authent_scheme := 'CUSTOM';

type t_ws_authentication is record (
    websheet_application_id   wwv_flow_ws_custom_auth_setups.websheet_application_id%type,
    acl_type                  wwv_flow_ws_applications.acl_type%type,
    allow_public_access_yn    wwv_flow_ws_applications.allow_public_access_yn%type,
    owner                     wwv_flow_ws_applications.owner%type,
    scheme_type               t_authent_scheme,
    page_sentry_function      wwv_flow_ws_custom_auth_setups.page_sentry_function%type,
    sess_verify_function      wwv_flow_ws_custom_auth_setups.sess_verify_function%type,
    invalid_session_page      wwv_flow_ws_custom_auth_setups.invalid_session_page%type,
    invalid_session_url       wwv_flow_ws_custom_auth_setups.invalid_session_url%type,
    pre_auth_process          wwv_flow_ws_custom_auth_setups.pre_auth_process%type,
    auth_function             wwv_flow_ws_custom_auth_setups.auth_function%type,
    post_auth_process         wwv_flow_ws_custom_auth_setups.post_auth_process%type,
    cookie_name               wwv_flow_ws_custom_auth_setups.cookie_name%type,
    cookie_path               wwv_flow_ws_custom_auth_setups.cookie_path%type,
    cookie_domain             wwv_flow_ws_custom_auth_setups.cookie_domain%type,
    use_secure_cookie_yn      wwv_flow_ws_custom_auth_setups.use_secure_cookie_yn%type,
    ldap_host                 wwv_flow_ws_custom_auth_setups.ldap_host%type,
    ldap_port                 wwv_flow_ws_custom_auth_setups.ldap_port%type,
    ldap_string               wwv_flow_ws_custom_auth_setups.ldap_string%type,
    ldap_search_filter        wwv_flow_ws_custom_auth_setups.ldap_search_filter%type,
    ldap_edit_function        wwv_flow_ws_custom_auth_setups.ldap_edit_function%type,
    ldap_username_escaping    wwv_flow_ws_custom_auth_setups.ldap_username_escaping%type,
    ldap_use_ssl              wwv_flow_ws_custom_auth_setups.ldap_use_ssl%type,
    ldap_use_exact_dn         wwv_flow_ws_custom_auth_setups.ldap_use_exact_dn%type,
    logout_url                wwv_flow_ws_custom_auth_setups.logout_url%type,
    security_group_id         wwv_flow_ws_custom_auth_setups.security_group_id%type );

--==============================================================================
-- set role for the current request. p_role must be one of
--   - (R)eader
--   - (C)ontributor
--   - (A)dmin
--   - (0) not authorized
--   - null
-- setting it to null activates the default role processing (i.e. lookup of
-- workspace or acl roles).
--==============================================================================
procedure set_role (
    p_role in varchar2 default null );

--==============================================================================
function get_current_user_role
    return varchar2;

--==============================================================================
function current_user_is_not_reader
    return boolean;

--==============================================================================
function current_user_is_reader
    return boolean;

--==============================================================================
function current_user_is_admin
    return boolean;

--==============================================================================
function admin_exists(
    p_username         in varchar2 default null,
    p_websheet_app_id  in number)
    return boolean;

--==============================================================================
procedure exec_websheet_auth(
    p_websheet_app_id in varchar2);

--==============================================================================
function get_authentication (
    p_websheet_app_id in number)
    return t_ws_authentication;

--==============================================================================
procedure update_ws_properties (
    p_ws in wwv_flow_ws_app_and_auth%rowtype );

--==============================================================================
function ws_auth_type(
    p_websheet_application_id in number)
    return varchar2;

--==============================================================================
function ws_acl_type(
    p_websheet_application_id in number)
    return varchar2;

--==============================================================================
function ws_allow_public(
    p_websheet_application_id in number)
    return boolean;

--==============================================================================
function sql_enabled (
    p_ws_app_id  in number) return boolean;

--==============================================================================
function sql_enabled_yn (
    p_ws_app_id  in number) return varchar2;

--==============================================================================
function sql_enabled_inst return boolean;

--==============================================================================
function sql_enabled_inst_yn return varchar2;

--==============================================================================
function is_valid_sql (
    p_ws_app_id  in number,
    p_type       in varchar2,
    p_sql        in varchar2 default null,
    p_schema     in varchar2 default null,
    p_table_name in varchar2 default null) return varchar2;

--==============================================================================
function is_valid_ws_query (
    p_ws_app_id     in number,
    p_sql           in varchar2) return varchar2;

--==============================================================================
function str_contains_valid_sql (
    p_ws_app_id    in number,
    p_page_id      in number,
    p_section_id   in out number,
    p_string       in clob default null) return varchar2;
end wwv_flow_ws_security;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SESSION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_session.sql
--
--    DESCRIPTION
--      This package is resonsible for session management
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    04/14/2011 - Created
--    cneumuel    05/18/2011 - Added get_builder_cookie_name, get_by_cookie_name, builtin_cookie_sentry, removed get_by_hashed_id
--    cneumuel    10/25/2011 - Added update_security_group_id (bug #13101596)
--    cneumuel    12/22/2011 - Added global item state handling (bug #13528522)
--    cneumuel    02/10/2012 - Added generate_unique_hashed_id,update_hashed_id (bug #13707875)
--    cneumuel    04/05/2012 - Moved is_global_item_name,set_global_item_value,get_global_item_value to wwv_flow_session_state (feature #897)
--    cneumuel    04/05/2012 - Moved wwv_flow_data handling code to wwv_flow_session_state (feature #897)
--    cneumuel    05/09/2012 - Removed dead code: update_cookie_session_id
--    cneumuel    05/31/2012 - Added get_builder_session_id
--    cneumuel    06/04/2012 - Moved c_session_time_item_name to spec
--
--------------------------------------------------------------------------------
--
subtype t_session_record is wwv_flow_sessions$%rowtype;
--
x_session_does_not_exist exception;

--==============================================================================
-- name for global session item that contains session meta-information
c_session_time_item_name constant varchar2(30) := 'FSP_SESSION_TIME';
--
--
--==============================================================================
-- return the cookie name used for builder authentication
--==============================================================================
function get_builder_cookie_name
    return varchar2;
--
--==============================================================================
-- return the session id of the builder session if the user is logged in to
-- the builder with the same workspace
--==============================================================================
function get_builder_session_id
    return number;
--
--==============================================================================
-- return if a session record exists for the current g_instance. If
-- p_check_sgid is true then the returned session has to have the current
-- security group id set.
--==============================================================================
function is_existing (
    p_check_sgid in boolean default false )
    return boolean;
--
--==============================================================================
-- return the current session's session_id_hashed
--==============================================================================
function get_hashed_id
    return varchar2;
--
--==============================================================================
-- return the current session by g_instance or an empty record if g_instance is
-- not a valid session id. If p_check_sgid is true then the returned session
-- has to have the current security group id set.
--==============================================================================
function get_current (
    p_check_sgid in boolean default false )
    return t_session_record;
--
--==============================================================================
-- return the session by reading the cookie or an empty record.
--==============================================================================
function get_by_cookie_name (
    p_cookie_name          in varchar2 )
    return t_session_record;
--
--==============================================================================
-- try to establish a valid session and user by comparing the given cookie's
-- values with the current session id. if that fails, compare with the builder
-- cookie's values.
--
-- this is the core of the default session sentry if nothing else is specified
-- in the authentication scheme.
--
-- on success, this sets
--   - wwv_flow.g_instance
--   - wwv_flow_security.g_instance
--   - wwv_flow.g_user
--==============================================================================
function builtin_cookie_sentry (
    p_cookie_name          in varchar2 )
    return boolean;
--
--
--
--==============================================================================
-- generate a new unique session id
--==============================================================================
function generate_unique_session_id
    return number;
--
--==============================================================================
-- generate a new unique value for the session cookie
--==============================================================================
function generate_unique_hashed_id
    return varchar2;
--
--==============================================================================
-- create a new session
--==============================================================================
procedure create_new (
    p_generate_id             in boolean  default true,
    p_save_new_instance_fired in boolean  default false,
    p_cookie_session_id       in varchar2 default null );
--
--==============================================================================
-- try to attach to the current session/g_instance, if security group id and
-- user match.
--
-- returns:
--   - true if session can be used
--   - false if session can not be used
--==============================================================================
--function can_reuse_session
--    return boolean;
procedure create_or_reuse_session (
    p_raise_error_if_not_exists in boolean default false );
--
--
--
--==============================================================================
-- deletes session with id p_id
--==============================================================================
procedure delete_session (
    p_id in number default wwv_flow_security.g_instance);
--
--
--
--==============================================================================
-- saves p_username into wwv_flow_sessions$.cookie for the current session id.
-- raises x_session_does_not_exist if session record for current g_instance and
-- g_security_group_id does not exit.
--==============================================================================
procedure update_user (
    p_new_username in varchar2 );
--
--==============================================================================
-- saves p_new_security_group_id into wwv_flow_sessions$.security_group_id for
-- the current session id. raises x_session_does_not_exist if session record
-- for current g_instance and g_security_group_id does not exit.
--==============================================================================
procedure update_security_group_id (
    p_new_security_group_id in number );
--
--==============================================================================
-- creates a new session_id_hashed and saves it in the current session.
-- a new hashed id is required after login, to avoid session fixation problems.
--==============================================================================
function update_hashed_id
    return varchar2;
--
--==============================================================================
-- overwrites user, workspace and cookie_session_id in current session. to be
-- used in wwv_flow_login (builder login).
-- raises x_session_does_not_exist if session record for current g_instance does not exist.
--==============================================================================
procedure reuse_for_different_workspace (
    p_new_username          in varchar2,
    p_new_security_group_id in number,
    p_new_cookie_session_id in varchar2,
    p_old_security_group_id in number default wwv_flow_security.g_security_group_id );
--
--==============================================================================
-- add current application to on_new_instance_fired_for of current session
--==============================================================================
procedure set_session_fired_for_flow;
--
--==============================================================================
-- remove current application to on_new_instance_fired_for of current session
--==============================================================================
procedure unset_session_fired_for_flow (
    p_flow_id in varchar2 default null );

--==============================================================================
-- see apex_util.set_session_lifetime_seconds
--==============================================================================
procedure set_session_lifetime_seconds(
    p_seconds in number );

--==============================================================================
-- see apex_util.set_session_max_idle_seconds
--==============================================================================
procedure set_session_max_idle_seconds(
    p_seconds  in number );
--
--==============================================================================
-- Check for session timeout if application gets executed via "show", based on
-- 1. maximum allowed session life
-- 2. maximum allowed session idle time
--==============================================================================
procedure check_session_timeout_show;
--
--==============================================================================
-- Check for session timeout if application gets executed via "accept", based on
-- 1. maximum allowed session life
-- 2. maximum allowed session idle time
--==============================================================================
procedure check_session_timeout_accept;

end wwv_flow_session;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COLLECTION_INT" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_collection_int.sql
--
--    DESCRIPTION
--      Internal utility package for wwv_flow_collection
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    11/06/2013 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Support Apex Listener excel upload for collection names that start with
-- p_file_upload_item_names(i).
--
-- This procedure is meant to be executed by the engine at the end of a
-- wwv_flow.show() FSP_SHOW_POPUPLOV request, to allow the manipulation of
-- collections that are named like file upload items.
--
-- ARGUMENTS
-- * p_security_group_id the SGID that will be used for collection manipulation
-- * p_collection_names  a table of item names
--==============================================================================
procedure enable_file_upload (
    p_security_group_id      in number,
    p_file_upload_item_names in wwv_flow_global.vc_arr2 );

--==============================================================================
-- Return the security group id for collection manipulation. The collection code
-- that is used for Apex Listener excel file upload can not simply use
-- wwv_flow_security.g_security_group_id, because that will be null. Instead,
-- it can use this function, which returns the p_security_group_id that was set
-- with enable_file_upload (see above).
--==============================================================================
function get_security_group_id
    return number;

--==============================================================================
-- Return the collection id for a given name. This function uses the SGID that
-- was set with enable_file_upload for lookup, if the collection name matches a
-- file upload item name. The function also serves as a security guard, because
-- in the case of excel upload (where wwv_flow_security.g_security_group_id is
-- null) it only accepts a collection name that starts with a valid file upload
-- item name and raises an error if it gets another collection name.
--
-- ARGUMENTS
-- * p_collection_name the collection name
--==============================================================================
function get_collection_id (
    p_collection_name in varchar2 )
    return number;

end wwv_flow_collection_int;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FND_FUNCTION"
is
function TEST (
    function_name IN varchar2) return boolean;
end wwv_flow_fnd_function;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FND_GLOBAL"
is
    user_id number;
end wwv_flow_fnd_global;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FND_DEVELOPER_API"
as
--  Copyright (c) Oracle Corporation 2001 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_fnd_developer_api.sql
--
--    DESCRIPTION
--      API to manage cookie based users.
--
--     NOTES
--       This package supports developer privileges with multiple application IDs.
--


empty_vc_arr wwv_flow_global.vc_arr2;


procedure set_component_privs (
    p_user_id                      in number,
    p_ALLOW_APP_BUILDING_YN        in varchar2 default 'N',
    p_ALLOW_SQL_WORKSHOP_YN        in varchar2 default 'N',
    p_ALLOW_WEBSHEET_DEV_YN        in varchar2 default 'N',
    p_ALLOW_TEAM_DEVELOPMENT_YN      in varchar2 default 'N')
    ;

procedure edit_fnd_user (
     --
     -- Edit user information to
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users table.
     --
     p_user_id                      in number,
     p_user_name                    in varchar2,
     p_first_name                   in varchar2 default null,
     p_last_name                    in varchar2 default null,
     p_web_password                 in varchar2 default null,
     p_new_password                 in varchar2 default null,
     p_email_address                in varchar2 default null,
     p_start_date                   in varchar2 default null,
     p_end_date                     in varchar2 default null,
     p_employee_id                  in varchar2 default null,
     p_allow_access_to_schemas      in varchar2 default null,
     p_person_type                  in varchar2 default null,
     p_default_schema               in varchar2 default null,
     p_default_date_format          in varchar2 default null,
     p_group_ids                    in varchar2 default null,
     p_description                  in varchar2 default null,
     p_account_expiry               in date default null,
     p_account_locked               in varchar2 default null,
     p_failed_access_attempts       in number   default null,
     p_change_password_on_first_use in varchar2 default null,
     p_first_password_use_occurred  in varchar2 default null,
     --
     p_ALLOW_APP_BUILDING_YN        in varchar2 default 'Y',
     p_ALLOW_SQL_WORKSHOP_YN        in varchar2 default 'Y',
     p_ALLOW_WEBSHEET_DEV_YN        in varchar2 default 'Y',
     p_ALLOW_TEAM_DEVELOPMENT_YN    in varchar2 default 'Y'
     );

procedure edit_developer_role (
    --
    -- Edit user developer roles in wwv_flow_developers.
    --
    p_id               in number,
    p_user_id          in number,
    p_user_name        in varchar2,
    p_flow_id          in number default null,
    p_developer_roles  in varchar2 default null
    );

procedure edit_developer_roles (
    --
    -- This procedure expects array values.
    -- Edit user developer roles in wwv_flow_developers.
    --
    p_ids              in wwv_flow_global.vc_arr2,
    p_user_id          in number,
    p_user_name        in varchar2,
    p_flow_ids         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_developer_roles  in wwv_flow_global.vc_arr2 default empty_vc_arr
    );

procedure delete_developer_role (
    p_id        in number,
    p_user_name in varchar2
    );

--
-- reset passwords
--

procedure f4550_send_workspace (
   p_email_address      in varchar2 );

procedure f4550_reset_password (
   p_email_address      in varchar2,
   p_workspace_name     in varchar2 default null );

procedure f4900_reset_password (
  p_ws_app_id           in number   default null,
  p_user_name           in varchar2 default null,
  p_email_address       in varchar2 default null,
  p_workspace_name      in varchar2 default null );


--
--
--

procedure f4050_55_provision_workspace (
   p_provision_id       in number,
   p_approval_message   in varchar2,
   p_acceptance_message in varchar2 );

procedure f4700_73_provision_workspace (
   p_provision_id       in number,
   p_msg                out varchar2);


procedure admin_notify_new_request (
    p_workspace_name in varchar2,
    p_schema_name    in varchar2,
    p_admin_userid   in varchar2,
    p_admin_email    in varchar2 );

procedure admin_notify_change_request (
    p_workspace_id   in number,
    p_admin_userid   in varchar2 );


end wwv_flow_fnd_developer_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CHAR_READER" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_char_reader.sql
--
--    DESCRIPTION
--      This is the basis for doing lexical analysis in PL/SQL
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    02/07/2013 - Created
--    cneumuel    03/22/2013 - In read, read_printable: do not raise no_data_found, but set p_char to null
--
--------------------------------------------------------------------------------

--==============================================================================
-- utility types and constants
--==============================================================================
subtype t_char is char(1 char);                     -- a single character

LF constant t_char := unistr('\000a');              -- line separator character

type t_pos is record (
    line              binary_integer not null := 0, -- currrent line number
    col               binary_integer not null := 0  -- current column number
);

--==============================================================================
-- char_reader state
--==============================================================================
type t is record (
    --
    -- public fields (read/write)
    --
    input             wwv_flow_global.vc_arr2,      -- input text
    is_line_separated boolean not null := true,     -- true if the char_reader should assume chr(10) between input(n) and input(n+1)
    --
    -- read-only fields
    --
    pos               t_pos,                        -- current line/column position
    --
    -- private fields
    --
    putback           t_char,                       -- contains a value after unread
    cur_input         varchar2(32767),              -- copy of input(cur_input_idx) for performance
    cur_input_pos     binary_integer not null := 1, -- cursor position in cur_input
    cur_input_length  binary_integer not null := 0, -- length(cur_input)
    cur_input_idx     binary_integer not null := 0, -- index of cur_input within input. if 0 -> not initialized
    input_count       binary_integer not null := 0  -- input.count
);

--==============================================================================
-- read next character
--
-- ARGUMENTS
-- * p_this: char_reader state
-- * p_char: read character
--
-- RETURNS
--   next character
--==============================================================================
procedure read (
    p_this in out nocopy t,
    p_char in out nocopy t_char );

--==============================================================================
-- read next character that is printable ( i.e. ascii(char) > ascii(' ') )
--
-- ARGUMENTS
-- * p_this: char_reader state
-- * p_char: read character
--==============================================================================
procedure read_printable (
    p_this in out nocopy t,
    p_char in out nocopy t_char );

--==============================================================================
-- put character back
--
-- ARGUMENTS
-- * p_this: char_reader state
-- * p_char: character to put back
--
-- RAISES
-- * program_error: there already is a char in the putback buffer or p_char is null
--==============================================================================
procedure unread (
    p_this in out nocopy t,
    p_char in t_char );

end wwv_flow_char_reader;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLSQL_LEXER" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_plsql_lexer.sql
--
--    DESCRIPTION
--      Lexer for PL/SQL
--
--    EXAMPLE 1
--      wwv_flow_plsql_lexer.init('begin dbms_output.put_line(3); end;');
--      if     wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_begin
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_identifier
--         and wwv_flow_plsql_lexer.g_lexer.val = 'DBMS_OUTPUT'
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_dot
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_identifier
--         and wwv_flow_plsql_lexer.g_lexer.val = 'PUT_LINE'
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_open_brace
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_number
--         and wwv_flow_plsql_lexer.g_lexer.val = '3'
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_closed_brace
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_semicolon
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_end
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_semicolon
--         and wwv_flow_plsql_lexer.get         = wwv_flow_plsql_lexer.c_sy_eof
--      then
--          dbms_output.put_line('parsed statement');
--      else
--          dbms_output.put_line('parse error');
--      end if;
--
--    EXAMPLE 2
--      declare
--          l_sy wwv_flow_plsql_lexer.t_symbol;
--          l_execute boolean := false;
--      begin
--          wwv_flow_plsql_lexer.init('begin execute/*foo*/Immediate ''drop table x''; end;');
--          loop
--              l_sy := wwv_flow_plsql_lexer.get;
--              exit when l_sy = wwv_flow_plsql_lexer.c_sy_eof;
--              if l_execute and l_sy = wwv_flow_plsql_lexer.c_sy_immediate then
--                  raise_application_error(-20001, 'no execute immediate allowed');
--              else
--                  l_execute := l_sy = wwv_flow_plsql_lexer.c_sy_execute;
--              end if;
--          end loop;
--      end;
--
--    RNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    03/22/2013 - Created
--    cneumuel    04/02/2013 - In get: return c_sy_invalid_char for unexpected characters
--    cneumuel    04/03/2013 - Added c_sy_autonomous_transaction, is_identifier
--
--------------------------------------------------------------------------------

type t_lexer is record (
    reader           wwv_flow_char_reader.t,     -- input reader state
    pos              wwv_flow_char_reader.t_pos, -- position of current token
    val              varchar2(32767)             -- string representation of lex value
);
-- keywords are reserved pl/sql words, only they can be overridden by local
-- declarations, e.g.
--
--   declare
--     package number;
--   begin
--     package := 42;
--   end;
subtype t_symbol is binary_integer range 0 .. 500;
c_sy_eof             constant t_symbol := 0;
c_sy_invalid_char    constant t_symbol := 1;
c_sy_dot             constant t_symbol := 2; -- .
c_sy_comma           constant t_symbol := 3; -- ,
c_sy_semicolon       constant t_symbol := 4; -- ;
c_sy_percent         constant t_symbol := 5; -- %
c_sy_open_brace      constant t_symbol := 6; -- (
c_sy_closed_brace    constant t_symbol := 7; -- )
c_sy_equal           constant t_symbol := 8; -- =
c_sy_not_equal       constant t_symbol := 9; -- <> or !=
c_sy_plus            constant t_symbol := 10; -- +
c_sy_minus           constant t_symbol := 11; -- -
c_sy_times           constant t_symbol := 12; -- *
c_sy_divide          constant t_symbol := 13; -- /
c_sy_less            constant t_symbol := 14; -- <
c_sy_greater         constant t_symbol := 15; -- >
c_sy_less_eq         constant t_symbol := 16; -- <=
c_sy_greater_eq      constant t_symbol := 17; -- >=
c_sy_arrow           constant t_symbol := 18; -- =>
c_sy_concat          constant t_symbol := 19; -- ||
c_sy_dotdot          constant t_symbol := 20; -- ..
c_sy_label_start     constant t_symbol := 21; -- <<
c_sy_label_end       constant t_symbol := 22; -- >>
c_sy_assign          constant t_symbol := 23; -- :=
c_sy_colon           constant t_symbol := 24; -- :

c_sy_string          constant t_symbol := 97;
c_sy_number          constant t_symbol := 98;
c_sy_identifier      constant t_symbol := 99;
-- reserved words ----------------------------
c_sy_all             constant t_symbol := 100;
c_sy_alter           constant t_symbol := 101;
c_sy_and             constant t_symbol := 102;
c_sy_any             constant t_symbol := 103;
c_sy_as              constant t_symbol := 104;
c_sy_asc             constant t_symbol := 105;
c_sy_at              constant t_symbol := 106;
c_sy_begin           constant t_symbol := 107;
c_sy_between         constant t_symbol := 108;
c_sy_by              constant t_symbol := 109;
c_sy_case            constant t_symbol := 110;
c_sy_check           constant t_symbol := 111;
c_sy_clusters        constant t_symbol := 112;
c_sy_cluster         constant t_symbol := 113;
c_sy_colauth         constant t_symbol := 114;
c_sy_columns         constant t_symbol := 115;
c_sy_compress        constant t_symbol := 116;
c_sy_connect         constant t_symbol := 117;
c_sy_crash           constant t_symbol := 118;
c_sy_create          constant t_symbol := 119;
c_sy_cursor          constant t_symbol := 120;
c_sy_declare         constant t_symbol := 121;
c_sy_default         constant t_symbol := 122;
c_sy_desc            constant t_symbol := 123;
c_sy_distinct        constant t_symbol := 124;
c_sy_drop            constant t_symbol := 125;
c_sy_else            constant t_symbol := 126;
c_sy_end             constant t_symbol := 127;
c_sy_exception       constant t_symbol := 128;
c_sy_exclusive       constant t_symbol := 129;
c_sy_fetch           constant t_symbol := 130;
c_sy_for             constant t_symbol := 131;
c_sy_from            constant t_symbol := 132;
c_sy_function        constant t_symbol := 133;
c_sy_goto            constant t_symbol := 134;
c_sy_grant           constant t_symbol := 135;
c_sy_group           constant t_symbol := 136;
c_sy_having          constant t_symbol := 137;
c_sy_identified      constant t_symbol := 138;
c_sy_if              constant t_symbol := 139;
c_sy_in              constant t_symbol := 140;
c_sy_index           constant t_symbol := 141;
c_sy_indexes         constant t_symbol := 142;
c_sy_insert          constant t_symbol := 143;
c_sy_intersect       constant t_symbol := 144;
c_sy_into            constant t_symbol := 145;
c_sy_is              constant t_symbol := 146;
c_sy_like            constant t_symbol := 147;
c_sy_lock            constant t_symbol := 148;
c_sy_minus_ident     constant t_symbol := 149;
c_sy_mode            constant t_symbol := 150;
c_sy_nocompress      constant t_symbol := 151;
c_sy_not             constant t_symbol := 152;
c_sy_nowait          constant t_symbol := 153;
c_sy_null            constant t_symbol := 154;
c_sy_of              constant t_symbol := 155;
c_sy_on              constant t_symbol := 156;
c_sy_option          constant t_symbol := 157;
c_sy_or              constant t_symbol := 158;
c_sy_order           constant t_symbol := 159;
c_sy_overlaps        constant t_symbol := 160;
c_sy_procedure       constant t_symbol := 161;
c_sy_public          constant t_symbol := 162;
c_sy_resource        constant t_symbol := 163;
c_sy_revoke          constant t_symbol := 164;
c_sy_select          constant t_symbol := 165;
c_sy_share           constant t_symbol := 166;
c_sy_size            constant t_symbol := 167;
c_sy_sql             constant t_symbol := 168;
c_sy_start           constant t_symbol := 169;
c_sy_subtype         constant t_symbol := 170;
c_sy_tabauth         constant t_symbol := 171;
c_sy_table           constant t_symbol := 172;
c_sy_then            constant t_symbol := 173;
c_sy_to              constant t_symbol := 174;
c_sy_type            constant t_symbol := 175;
c_sy_union           constant t_symbol := 176;
c_sy_unique          constant t_symbol := 177;
c_sy_update          constant t_symbol := 178;
c_sy_values          constant t_symbol := 179;
c_sy_view            constant t_symbol := 180;
c_sy_views           constant t_symbol := 181;
c_sy_when            constant t_symbol := 182;
c_sy_where           constant t_symbol := 183;
c_sy_with            constant t_symbol := 184;
-- keywords ----------------------------------
c_sy_first_keyword   constant t_symbol := 200;
c_sy_a               constant t_symbol := 200;
c_sy_add             constant t_symbol := 201;
c_sy_agent           constant t_symbol := 202;
c_sy_aggregate       constant t_symbol := 203;
c_sy_array           constant t_symbol := 204;
c_sy_attribute       constant t_symbol := 205;
c_sy_authid          constant t_symbol := 206;
c_sy_avg             constant t_symbol := 207;
c_sy_bfile_base      constant t_symbol := 208;
c_sy_binary          constant t_symbol := 209;
c_sy_blob_base       constant t_symbol := 210;
c_sy_block           constant t_symbol := 211;
c_sy_body            constant t_symbol := 212;
c_sy_both            constant t_symbol := 213;
c_sy_bound           constant t_symbol := 214;
c_sy_bulk            constant t_symbol := 215;
c_sy_byte            constant t_symbol := 216;
c_sy_c               constant t_symbol := 217;
c_sy_call            constant t_symbol := 218;
c_sy_calling         constant t_symbol := 219;
c_sy_cascade         constant t_symbol := 220;
c_sy_char            constant t_symbol := 221;
c_sy_char_base       constant t_symbol := 222;
c_sy_character       constant t_symbol := 223;
c_sy_charset         constant t_symbol := 224;
c_sy_charsetform     constant t_symbol := 225;
c_sy_charsetid       constant t_symbol := 226;
c_sy_clob_base       constant t_symbol := 227;
c_sy_close           constant t_symbol := 228;
c_sy_collect         constant t_symbol := 229;
c_sy_comment         constant t_symbol := 230;
c_sy_commit          constant t_symbol := 231;
c_sy_committed       constant t_symbol := 232;
c_sy_compiled        constant t_symbol := 233;
c_sy_constant        constant t_symbol := 234;
c_sy_constructor     constant t_symbol := 235;
c_sy_context         constant t_symbol := 236;
c_sy_continue        constant t_symbol := 237;
c_sy_convert         constant t_symbol := 238;
c_sy_count           constant t_symbol := 239;
c_sy_current         constant t_symbol := 240;
c_sy_customdatum     constant t_symbol := 241;
c_sy_dangling        constant t_symbol := 242;
c_sy_data            constant t_symbol := 243;
c_sy_date            constant t_symbol := 244;
c_sy_date_base       constant t_symbol := 245;
c_sy_day             constant t_symbol := 246;
c_sy_define          constant t_symbol := 247;
c_sy_delete          constant t_symbol := 248;
c_sy_deterministic   constant t_symbol := 249;
c_sy_double          constant t_symbol := 250;
c_sy_duration        constant t_symbol := 251;
c_sy_element         constant t_symbol := 252;
c_sy_elsif           constant t_symbol := 253;
c_sy_empty           constant t_symbol := 254;
c_sy_escape          constant t_symbol := 255;
c_sy_except          constant t_symbol := 256;
c_sy_exceptions      constant t_symbol := 257;
c_sy_execute         constant t_symbol := 258;
c_sy_exists          constant t_symbol := 259;
c_sy_exit            constant t_symbol := 260;
c_sy_external        constant t_symbol := 261;
c_sy_final           constant t_symbol := 262;
c_sy_fixed           constant t_symbol := 263;
c_sy_float           constant t_symbol := 264;
c_sy_forall          constant t_symbol := 265;
c_sy_force           constant t_symbol := 266;
c_sy_general         constant t_symbol := 267;
c_sy_hash            constant t_symbol := 268;
c_sy_heap            constant t_symbol := 269;
c_sy_hidden          constant t_symbol := 270;
c_sy_hour            constant t_symbol := 271;
c_sy_immediate       constant t_symbol := 272;
c_sy_including       constant t_symbol := 273;
c_sy_indicator       constant t_symbol := 274;
c_sy_indices         constant t_symbol := 275;
c_sy_infinite        constant t_symbol := 276;
c_sy_instantiable    constant t_symbol := 277;
c_sy_int             constant t_symbol := 278;
c_sy_interface       constant t_symbol := 279;
c_sy_interval        constant t_symbol := 280;
c_sy_invalidate      constant t_symbol := 281;
c_sy_isolation       constant t_symbol := 282;
c_sy_java            constant t_symbol := 283;
c_sy_language        constant t_symbol := 284;
c_sy_large           constant t_symbol := 285;
c_sy_leading         constant t_symbol := 286;
c_sy_length          constant t_symbol := 287;
c_sy_level           constant t_symbol := 288;
c_sy_library         constant t_symbol := 289;
c_sy_like2           constant t_symbol := 290;
c_sy_like4           constant t_symbol := 291;
c_sy_likec           constant t_symbol := 292;
c_sy_limit           constant t_symbol := 293;
c_sy_limited         constant t_symbol := 294;
c_sy_local           constant t_symbol := 295;
c_sy_long            constant t_symbol := 296;
c_sy_loop            constant t_symbol := 297;
c_sy_map             constant t_symbol := 298;
c_sy_max             constant t_symbol := 299;
c_sy_maxlen          constant t_symbol := 300;
c_sy_member          constant t_symbol := 301;
c_sy_merge           constant t_symbol := 302;
c_sy_min             constant t_symbol := 303;
c_sy_minute          constant t_symbol := 304;
c_sy_mod             constant t_symbol := 305;
c_sy_modify          constant t_symbol := 306;
c_sy_month           constant t_symbol := 307;
c_sy_multiset        constant t_symbol := 308;
c_sy_name            constant t_symbol := 309;
c_sy_nan             constant t_symbol := 310;
c_sy_national        constant t_symbol := 311;
c_sy_native          constant t_symbol := 312;
c_sy_nchar           constant t_symbol := 313;
c_sy_new             constant t_symbol := 314;
c_sy_nocopy          constant t_symbol := 315;
c_sy_number_base     constant t_symbol := 316;
c_sy_object          constant t_symbol := 317;
c_sy_ocicoll         constant t_symbol := 318;
c_sy_ocidate         constant t_symbol := 319;
c_sy_ocidatetime     constant t_symbol := 320;
c_sy_ociduration     constant t_symbol := 321;
c_sy_ociinterval     constant t_symbol := 322;
c_sy_ociloblocator   constant t_symbol := 323;
c_sy_ocinumber       constant t_symbol := 324;
c_sy_ociraw          constant t_symbol := 325;
c_sy_ociref          constant t_symbol := 326;
c_sy_ocirefcursor    constant t_symbol := 327;
c_sy_ocirowid        constant t_symbol := 328;
c_sy_ocistring       constant t_symbol := 329;
c_sy_ocitype         constant t_symbol := 330;
c_sy_old             constant t_symbol := 331;
c_sy_only            constant t_symbol := 332;
c_sy_opaque          constant t_symbol := 333;
c_sy_open            constant t_symbol := 334;
c_sy_operator        constant t_symbol := 335;
c_sy_oracle          constant t_symbol := 336;
c_sy_oradata         constant t_symbol := 337;
c_sy_organization    constant t_symbol := 338;
c_sy_orlany          constant t_symbol := 339;
c_sy_orlvary         constant t_symbol := 340;
c_sy_others          constant t_symbol := 341;
c_sy_out             constant t_symbol := 342;
c_sy_overriding      constant t_symbol := 343;
c_sy_package         constant t_symbol := 344;
c_sy_parallel_enable constant t_symbol := 345;
c_sy_parameter       constant t_symbol := 346;
c_sy_parameters      constant t_symbol := 347;
c_sy_parent          constant t_symbol := 348;
c_sy_partition       constant t_symbol := 349;
c_sy_pascal          constant t_symbol := 350;
c_sy_pipe            constant t_symbol := 351;
c_sy_pipelined       constant t_symbol := 352;
c_sy_pragma          constant t_symbol := 353;
c_sy_precision       constant t_symbol := 354;
c_sy_prior           constant t_symbol := 355;
c_sy_private         constant t_symbol := 356;
c_sy_raise           constant t_symbol := 357;
c_sy_range           constant t_symbol := 358;
c_sy_raw             constant t_symbol := 359;
c_sy_read            constant t_symbol := 360;
c_sy_record          constant t_symbol := 361;
c_sy_ref             constant t_symbol := 362;
c_sy_reference       constant t_symbol := 363;
c_sy_relies_on       constant t_symbol := 364;
c_sy_rem             constant t_symbol := 365;
c_sy_remainder       constant t_symbol := 366;
c_sy_rename          constant t_symbol := 367;
c_sy_result          constant t_symbol := 368;
c_sy_result_cache    constant t_symbol := 369;
c_sy_return          constant t_symbol := 370;
c_sy_returning       constant t_symbol := 371;
c_sy_reverse         constant t_symbol := 372;
c_sy_rollback        constant t_symbol := 373;
c_sy_row             constant t_symbol := 374;
c_sy_sample          constant t_symbol := 375;
c_sy_save            constant t_symbol := 376;
c_sy_savepoint       constant t_symbol := 377;
c_sy_sb1             constant t_symbol := 378;
c_sy_sb2             constant t_symbol := 379;
c_sy_sb4             constant t_symbol := 380;
c_sy_second          constant t_symbol := 381;
c_sy_segment         constant t_symbol := 382;
c_sy_self            constant t_symbol := 383;
c_sy_separate        constant t_symbol := 384;
c_sy_sequence        constant t_symbol := 385;
c_sy_serializable    constant t_symbol := 386;
c_sy_set             constant t_symbol := 387;
c_sy_short           constant t_symbol := 388;
c_sy_size_t          constant t_symbol := 389;
c_sy_some            constant t_symbol := 390;
c_sy_sparse          constant t_symbol := 391;
c_sy_sqlcode         constant t_symbol := 392;
c_sy_sqldata         constant t_symbol := 393;
c_sy_sqlname         constant t_symbol := 394;
c_sy_sqlstate        constant t_symbol := 395;
c_sy_standard        constant t_symbol := 396;
c_sy_static          constant t_symbol := 397;
c_sy_stddev          constant t_symbol := 398;
c_sy_stored          constant t_symbol := 399;
c_sy_string_ident    constant t_symbol := 400;
c_sy_struct          constant t_symbol := 401;
c_sy_style           constant t_symbol := 402;
c_sy_submultiset     constant t_symbol := 403;
c_sy_subpartition    constant t_symbol := 404;
c_sy_substitutable   constant t_symbol := 405;
c_sy_sum             constant t_symbol := 406;
c_sy_synonym         constant t_symbol := 407;
c_sy_tdo             constant t_symbol := 408;
c_sy_the             constant t_symbol := 409;
c_sy_time            constant t_symbol := 410;
c_sy_timestamp       constant t_symbol := 411;
c_sy_timezone_abbr   constant t_symbol := 412;
c_sy_timezone_hour   constant t_symbol := 413;
c_sy_timezone_minute constant t_symbol := 414;
c_sy_timezone_region constant t_symbol := 415;
c_sy_trailing        constant t_symbol := 416;
c_sy_transaction     constant t_symbol := 417;
c_sy_transactional   constant t_symbol := 418;
c_sy_trusted         constant t_symbol := 419;
c_sy_ub1             constant t_symbol := 420;
c_sy_ub2             constant t_symbol := 421;
c_sy_ub4             constant t_symbol := 422;
c_sy_under           constant t_symbol := 423;
c_sy_unsigned        constant t_symbol := 424;
c_sy_untrusted       constant t_symbol := 425;
c_sy_use             constant t_symbol := 426;
c_sy_using           constant t_symbol := 427;
c_sy_valist          constant t_symbol := 428;
c_sy_value           constant t_symbol := 429;
c_sy_variable        constant t_symbol := 430;
c_sy_variance        constant t_symbol := 431;
c_sy_varray          constant t_symbol := 432;
c_sy_varying         constant t_symbol := 433;
c_sy_void            constant t_symbol := 434;
c_sy_while           constant t_symbol := 435;
c_sy_work            constant t_symbol := 436;
c_sy_wrapped         constant t_symbol := 437;
c_sy_write           constant t_symbol := 438;
c_sy_year            constant t_symbol := 439;
c_sy_zone            constant t_symbol := 440;
-- "not really" keywords
c_sy_autonomous_transaction constant t_symbol := 500;

--==============================================================================
-- lexer state
--==============================================================================
g_lexer t_lexer;

--==============================================================================
-- initialize the lexer
--==============================================================================
procedure init (
    p_code in varchar2 );

--==============================================================================
-- get next symbol
--==============================================================================
function get
    return t_symbol;

--==============================================================================
-- return whether a given symbol can be used as an identifier. keywords can be
-- overloaded, as in
--
-- declare
--     subtype immediate is number;
--     execute immediate;
-- begin
--     execute := 42;
-- end;
--==============================================================================
function is_identifier (
    p_symbol in t_symbol )
    return boolean;

end wwv_flow_plsql_lexer;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LOG" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Flow activity logging
--
--    SECURITY
--
--    NOTES:
--      This program logs flow activity
--      p_elap:     Elapsed time in seconds
--      p_verbose:  Log all information not just most critical
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--      mhichwa   08/04/1999 - Created
--      mhichwa   09/18/2001 - Exposed current log number function
--      mhichwa   12/05/2002 - Moved log interval to spec from body
--      mhichwa   06/20/2003 - added g_total_rows_fetched to improve log accuracy, bug 3018094
--      mhichwa   11/14/2008 - improved comments
--      mhichwa   05/12/2009 - added websheet_id, worksheet_id, ir_search columns
--      cbcho     05/12/2009 - Added g_worksheet_id, g_websheet_id
--      cbcho     09/09/2009 - Added g_ir_search, g_webpage_id, g_datagrid_id
--      cbcho     11/17/2009 - Added g_ir_report_id
--      mhichwa   11/23/2009 - log content length
--      jkallman  02/22/2010 - Add p_content_length to log()
--      cneumuel  05/24/2012 - Removed wwv_flow_log.log's p_num_rows parameter
--      jkallman  06/04/2012 - Added evaluate_current_log_number (Feature 966)
--      jkallman  06/04/2012 - Exposed initialize_log
--
--------------------------------------------------------------------------------

g_log_interval_in_days  constant number := 14;
g_total_rows_fetched pls_integer := 0;
g_content_length pls_integer := 0;

-- for IR logging
g_worksheet_id          number := null;
g_ir_report_id          number := null;
g_ir_search             varchar2(4000) := null;

-- for Websheet logging
g_websheet_id           number := null;
g_webpage_id            number := null;
g_datagrid_id           number := null;




--
-- For the specified log (ACCESS, ACTIVITY, CLICKTHRU, DEBUG), determine if a log switch is necessary
-- If not, return the current log number.  Otherwise, switch the logs and return the updated log number
--
function evaluate_current_log_number(
    p_log in varchar2 )
return number;

procedure initialize_log(
    p_log in varchar2,
    p_log_switch_after_days in number default null );


procedure log (
    p_elap                in number  default null,
    p_content_length      in number  default null,
    p_verbose             in boolean default true)
    ;


end wwv_flow_log;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DML" is

--  Copyright (c) Oracle Corporation 1999 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      APEX table access (DML)
--      Page DML processes call this package.
--      Fetch processes are typically called on page show.
--      DML Process is typically called on page accept.
--      Based on the request accept processing is directed to an insert, update, or delete procedure
--      BLOB fetches are also performed
--
type t_dml_process is record (
    table_owner varchar2(30),
    table_name  varchar2(30),
    pk_column1  varchar2(30),
    pk_item1    varchar2(255),
    pk_column2  varchar2(30),
    pk_item2    varchar2(255) );

g_checksum_text       varchar2(32767) := null;
g_rowversion_text     varchar2(32767) := null;
g_md5_checksum        varchar2(255) := null;
g_download_text       varchar2(255) := null;

empty_vc_arr          wwv_flow_global.vc_arr2;
g_sqlerrm             varchar2(5000) := null;

g_support_file_item_type boolean := true;
g_support_blob_col_type  boolean := true;

--------
-- FETCH
--
-- Procedures called from DML Page Process Types
--

procedure fetch_row (
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_rowid              in varchar2 default null,
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_compute_checksum   in varchar2 default 'YES',
    p_dml_fetch_mode     in varchar2 default null,
    p_lock               in varchar2 default 'NO',
    p_runtime_where_clause   in varchar2 default null,
    p_error_display_location in varchar2 default null );

function fetch_row_md5_checksum (
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_rowid              in varchar2 default null,
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_lock               in varchar2 default 'NO')
    return varchar2
    ;

function get_column (
    p_column_name in varchar2 default null)
    return varchar2
    ;


-------------------------
-- UPDATE, INSERT, DELETE
--
-- Procedures called from DML Page Process Types
--

function update_row (
    p_table_owner        in varchar2 default null,    -- table owner, #OWNER# defaults to owner of application
    p_table_name         in varchar2 default null,    -- table name
    p_rowid              in varchar2 default null,    --
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_runtime_where_clause   in varchar2 default null,
    p_error_display_location in varchar2 default null )
    return boolean;

procedure insert_row (
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_alt_rowid          in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_return_item1_name  in varchar2 default null,
    p_return_item2_name  in varchar2 default null,
    p_error_display_location in varchar2 default null );

procedure delete_row (
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_rowid              in varchar2 default null,
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_runtime_where_clause   in varchar2 default null,
    p_error_display_location in varchar2 default null );

function process (
    p_action             in varchar2 default null,
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_rowid              in varchar2 default null,
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_allowed_actions    in varchar2 default 'IUD',
    p_return_item1_name  in varchar2 default null,
    p_return_item2_name  in varchar2 default null,
    p_runtime_where_clause   in varchar2 default null,
    p_error_display_location in varchar2 default null )
    return boolean;

-- old procedural interface for backward compatibility
procedure process (
    p_action             in varchar2 default null,
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_rowid              in varchar2 default null,
    p_alt_rowid          in varchar2 default 'ROWID',
    p_rowid2             in varchar2 default null,
    p_alt_rowid2         in varchar2 default null,
    p_row_version        in varchar2 default null,
    p_allowed_actions    in varchar2 default 'IUD',
    p_return_item1_name  in varchar2 default null,
    p_return_item2_name  in varchar2 default null,
    p_runtime_where_clause   in varchar2 default null,
    p_error_display_location in varchar2 default null );

------------------
-- BLOB Management
--
function parse_dml_process_source (
    p_source            in varchar2,
    p_application_owner in varchar2 )
    return t_dml_process;

procedure read_blob_and_download (
    p_table_owner         in varchar2,
    p_table_name          in varchar2,
    p_blob_column         in varchar2,
    p_mime_type_column    in varchar2,
    p_filename_column     in varchar2,
    p_last_updated_column in varchar2,
    p_charset_column      in varchar2,
    p_pk_column1          in varchar2,
    p_pk_column2          in varchar2,
    p_pk_value1           in varchar2,
    p_pk_value2           in varchar2,
    p_checksum_old        in varchar2,
    p_checksum_new        in varchar2,
    p_content_disposition in varchar2,
    p_mime_type           in varchar2 default null,
    p_show_last_modified  in boolean  default true );

procedure get_blob_file (
    -- Fetches BLOB content, called from APEX form pages with items of type FILE
    -- Used to download BLOB from database to Browser
    -- NOT designed to be called by application logic
    --
    p_sid                 in number,                -- Session ID
    p_aid                 in number,                -- Application ID
    p_pid                 in number,                -- Page ID
    p_dml_proc_id         in number,                -- DML Page Process ID from APEX meta data
    p_bcol                in number,                -- Item ID from APEX meta data of BLOB column
    p_pk1                 in varchar2,              -- value of primary key column
    p_ck                  in varchar2,              -- checksum to prevent url tampering
    p_pk2                 in varchar2 default null, -- optional value of second primary key column
    p_mimetype            in varchar2 default null, --
    p_content_disposition in varchar2 default null, --
    p_show_last_mod       in varchar2 default 'Y')  --
    ;

function get_blob_file_src (
    -- Reference apex_util.get_blob_file_src for additional documentation
    --
    -- Relies on an item with source that uses the following syntax
    -- DB_COLUMN:MIMETYPE_COLUMN:FILENAME_COLUMN:BLOB_LAST_UPDATED_COLUMN:CHARSET_COLUMN:DOWNLOAD_LINK_TEXT
    --
    p_item_name in varchar2 default null,  -- name of apex page item of type FILE
    p_v1        in varchar2 default null,  -- value of primary key column
    p_v2        in varchar2 default null,  -- optional value of optional secondary primary key column
    p_content_disposition in varchar2 default null) -- optional value of "inline" or "attachment"
    return varchar2
    ;

function get_pk1_from_blob_fmt_mask (
    -- Parse format mask and return name of primary key 1 column
    -- Form format masks are null or 'FORM'
    -- Report format masks 'IR','CR','REPORT' are all the same
    -- This routine will parse out the "pk 1 column" argument and return the value
    --
    -- Form format mask
    --    DOWNLOAD:<page item name>:<pk 1 column>:<pk 2 column>:<content disposition>:<download text>
    --    position 1: Identifies the name of an APEX page item that contains the value of the primary key
    --                Required
    --    position 2: Identifies the name of the primary key column
    --                Required
    --    position 3: Identifies the name of the secondary key column
    --                Optional
    --    position 4: Content disposition, valid values are "inline" and "attachment"
    --                Optional
    --    position 5: Text of download link
    --                Default is "Download" and is automatically translated
    --                You can specify your own download link which is not translatable
    --                Supports item substitutions
    --                Optional
    --
    -- Report format masks
    --    DOWNLOAD:<blob_tab>:<blob_col>:<pk1_col>:<pk2_col>:<mimetype_col>:<filename_col>:<charset_col>:<content disposition>:<download text>
    --
    p_format_mask in varchar2 default null,    -- Format mask described above, format masks are different for Forms and Reports
    p_mask_type   in varchar2 default 'FORM')  -- valid values include FORM, IR, CR, and REPORT
    return varchar2
    ;

function get_pk2_from_blob_fmt_mask (
    -- Same as get_pk1_from_blob_fmt_mask, but gets optional secondary primary key item name
    -- Reference get_pk1_from_blob_fmt_mask
    --
    p_format_mask in varchar2 default null,
    p_mask_type   in varchar2 default 'FORM')
    return varchar2
    ;

function get_blob_rpt_img (
    -- This function returns an img tag with a src link to get_blob
    -- Called by reporting engine with format mask of IMAGE:
    --
    p_pk_column_1_value    in varchar2 default null,
    p_pk_column_2_value    in varchar2 default null,
    p_blob_length          in number   default 0,
    p_column_meta_data_id  in number   default null,
    p_report_type          in varchar2 default 'IR',
    p_cattributes          in varchar2 default  null)
    return varchar2
    ;

function get_blob_rpt_link (
    -- This function returns a hyper text link to get_blob
    -- Used to generate links to apex_util.get_blob
    -- NOT designed to be called by applications
    -- Length of BLOB column obtained using syntax such as sys.dbms_lob.getlength(my_blob_column)
    -- Both interactive reports and classic reports have the same format masks
    --
    -- Example:
    --
    -- wwv_flow_dml.get_blob_rpt_link (
    --    p_blob_length=> bl,
    --    p_pk_column_1_value=>col_val(wwv_flow_dml.get_pk1_from_blob_fmt_mask(fm,'REPORT')),
    --    p_pk_column_2_value=>col_val(wwv_flow_dml.get_pk2_from_blob_fmt_mask(fm,'REPORT')),
    --    p_column_meta_data_id=> id );
    --
    -- bl = length of blob column
    -- fm = acutal format mask for report column
    -- id = apex meta data row that contains the format mask for the report column
    -- col_val = a function which returns the value of the report column name / alias
    --
    p_pk_column_1_value    in varchar2 default null, -- required value of primary key
    p_pk_column_2_value    in varchar2 default null, -- optional value of secondary key
    p_blob_length          in number   default 0,    -- required length of blob column (use dbms_lob.getlength)
    p_column_meta_data_id  in number   default null, -- APEX meta data ID column of report column
    p_report_type          in varchar2 default 'IR', -- IR or CR, Interactive Report or Classic Report
    p_format_mask          in varchar2 default null) -- Format mask described in apex_util.get_blob procedure
    return varchar2
    ;

procedure get_blob (
    -- This procedure will download a blob column given proper inputs
    -- This get_blob function is designed to be called from APEX reports automatically
    -- Classic and Interactive Reports given a format mask will generate a link to this procedure
    -- Report that uses  "select ... dbms_lob.getlength(myblob_column) ..." syntax
    --
    -- The report column format mask has the following format
    -- DOWNLOAD|IMAGE:<blob_tab>:<blob_col>:<pk1_col>:<pk2_col>:<mimetype_col>:<filename_col>:<charset_col>:<content disposition>:<download text>
    -- All arguments are delimited by colons
    --
    -- This procedure is NOT designed to be called directly, it is intended to be called by APEX reporting engines
    --
    -- position 1: "DOWNLOAD" or "IMAGE"
    --             Download will result in the generation a "a href=" tag
    --             Image will result in the generation of an inline "img src=" tag
    --             Use image when your files are images
    --             Using image for non image based files will result in broken image links
    --             Required
    -- position 2: Name of the table containing the blob column in question
    --             Required and case sensitive
    -- position 3: Name of the BLOB column name
    --             Required and case sensitive
    -- position 4: Name of the primary key column in the table identified in position 2
    --             Required and case sensitive
    -- position 5: Name of a secondary key column to uniquely identify the row that contains the BLOB column
    --             Optional and case sensitive
    -- position 6: Name of a column that is used to store the mime type that corresponds to the BLOB column
    --             Managing the mimetype allows the mimetype to be encoded in the file download
    --             If a mimetype is not specified download will use "application/octet-stream"
    --             A proper mimetype allows the browser to pick an approparte application to display the file
    --             Optional and case sensitive
    -- position 7: Name of a column that is used to store the filename of the BLOB column identified in position 3
    --             Managing the filename allows downloads to default the file name to a usefull value
    --             Optional and case sensitive
    -- position 8: Name of the character set that is used to store the character set of the file in the BLOB column
    --             Most useful for applications that have files in multiple character sets
    --             Optional and case sensitive
    -- position 9: For DOWNLOAD format masks, identifies the content disposition
    --             Defaults to inline
    --             Valid values are "inline" and "attachment"
    --             A value of inline will cause the browser to render the file inline if it can
    --             A value of attachment will prompt the user to download the file
    --             Optional, use lower case
    -- position 10: For DOWNLOAD format masks, identifies the text used to indicate a download link text
    --             Default to "Download"
    --             Translated into 10 languages
    --             Specify if you wish to over-ride the default text
    --             Standard APEX substitutions are performed
    --             Only used for DOWNLOAD format masks
    --             Optional
    --
    -- Example Report format masks:
    --
    -- DOWNLOAD:EMP:RESUME:EMPNO::MIMETYPE:FILENAME
    -- DOWNLOAD:EMP:RESUME:EMPNO::MIMETYPE:FILENAME:::Photo
    -- IMAGE:EMP:RESUME:EMPNO::MIMETYPE:FILENAME
    --
    --
    s                 in number,                -- APEX session ID
    a                 in number,                -- APEX application ID
    c                 in number,                -- APEX id of the report column
    p                 in number,                -- APEX page ID
    k1                in varchar2,              -- Primary key 1 value
    ck                in varchar2,              -- Checksum used to prevent URL tampering
    rt                in varchar2 default 'IR', -- Report type IR or CR
    k2                in varchar2 default null, -- Primary key 2 value
    lm                in varchar2 default 'Y'   -- Show last modified
    );

end wwv_flow_dml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PREFERENCES"
--  Copyright (c) Oracle Corporation 1999 - 2007. All Rights Reserved.
--
--    DESCRIPTION
--      Flow Preferences utility functions
--
--    SECURITY
--
--    NOTES
--      Use to save information specific to a user.
--
--    RUNTIME DEPLOYMENT: YES
--
as
    empty_vc_arr wwv_flow_global.vc_arr2;

procedure set_preference (
    p_preference   in varchar2 default null,
    p_value        in varchar2 default null,
    p_user         in varchar2 default null,
    p_force_upper  in boolean  default false)
    ;
procedure set_preferences (
    p_preferences  in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_values       in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_user         in varchar2 default null)
    ;
function get_preference (
    p_preference   in varchar2 default null,
    p_user         in varchar2 default v('USER'))
    return varchar2
    ;
procedure remove_preferences (
    p_user         in varchar2 default v('USER'))
    ;
procedure remove_preference(
    p_preference   in varchar2 default null,
    p_user         in varchar2 default v('USER'))
    ;
procedure remove_fsp_sort (
    --
    -- This procedure removes user's column head sorting preference value.
    --
    p_user         in varchar2 default v('USER'))
    ;
procedure reset_sort_preference (
    -- delete the current users report sorting preferences for a given application and region
    p_region_id      in number)
    ;

procedure reset_sort_preference (
    -- delete the current users report sorting preferences for all report regions on a page within an application
    p_page_id        in number)
    ;

procedure reset_sort_preference (
    -- delete the current users report sorting preferences for all region on a page within an application
    p_page_id        in number,
    p_region_name    in varchar2)
    ;
end wwv_flow_preferences;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling an application in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/16/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the run URL for the specified application.
--==============================================================================
function get_run_url (
    p_application_id in number )
    return varchar2;
--
end wwv_flow_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CACHE"
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--    DESCRIPTION
--      Flow cache management package.
--
--    NOTES
--      This package contains procedures and functions that
--      maintain and manipulate the flow session cache.
--
--    SECURITY
--      Requires Oracle user executing procedure be granted WWV_FLOW_BUILDER role.
--
--    RUNTIME DEPLOYMENT: YES
--
as
g_purged_sessions number :=0;

procedure purge_oldest_sessions (
    --
    -- Purge flow session state tables to avoid keeping session
    -- state no longer needed.  To avoid too much activity this
    -- procedure allows you to set a maximum number of sessions
    -- you would like to purge.
    --
    p_num_sessions_to_purge     in number default 1000,
    p_purge_sess_older_then_hrs in number default 12,
    p_security_group_id         in number default null)
    ;
procedure purge_sessions (
    --
    -- Purge flow session state tables to avoid keeping session
    -- state no longer needed.  Purge all sessions older then a certain
    -- age.  May result in a very large number of delete transactions.
    -- Commit is performed between delete commands.
    --
    p_purge_sess_older_then_hrs in number default 12,
    p_security_group_id         in number default null,
    p_report_results            in varchar2 default 'NO')
    ;
procedure purge_duplicate_sessions (
    --
    -- Purge flow session state tables to avoid keeping session
    -- state no longer needed.  Remove oldest session for users with
    -- multiple sessions.
    --
    p_security_group_id in number default null,
    p_report_results            in varchar2 default 'NO')
    ;
procedure show_session_state (
    --
    --
    --
    p_session in number)
    ;

procedure rebuild_indexes
    --
    -- Rebuilds the indexes associated with the caching tables.
    -- This is important since the session # is sequential,
    -- therefore the index will continually get skewed to the
    -- right.
    ;


procedure compute_stats
    --
    -- Computes statistics for all tables, indexes
    -- and indexed columns (Histograms) for all flows session
    -- related tables.
    ;

procedure purge_n_rebuild(
    --
    -- Runs purge sessions, rebuild_indexes, and compute_stats.
    p_purge_sess_older_then_hrs in number default 12,
    p_security_group_id         in number default null,
    p_report_results            in varchar2 default 'NO')
    ;

procedure set_flow_builder_state
    ;
procedure set_fb_flow_page_id
    ;

end wwv_flow_cache;



/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GEN_API2"
is

g_id_offset            number  := 0;
g_mime_shown           boolean := false;
g_exp_region_col_width boolean := true;


procedure export (
    -- This procedure exports flows
    --
    -- p_flow_id...................Unique ID number of your flow
    -- p_page_id...................Optional Page ID number
    -- p_format....................Output format UNIX, DOS, DB, XML
    -- p_commit....................Generate a commit statement at end of script (YES or NO)
    -- p_owner_override............Set the application owner to this USER and not the current flows owner attribute
    -- p_flashback_min_ago.........Set the export procedure to use flashback mode
    -- p_file_id...................Use optionally when exporting into DB format
    -- p_export_comments...........Export comments in with the file
    -- p_export_ir_public_reports..Export Public Interactive Reports
    -- p_export_ir_private_reports.Export Private Interactive Reports
    -- p_export_ir_notifications...Export Interactive Report Notification Settings
    -- p_debugging_override........Set the application debugging status to this value (1 = Yes, 0 = No)
    --
    p_flow_id                     in number,
    p_page_id                     in number   default null,
    p_format                      in varchar2 default 'UNIX',
    p_commit                      in varchar2 default 'YES',
    p_owner_override              in varchar2 default null,
    p_build_status_override       in varchar2 default 'NO',
    p_flashback_min_ago           in number   default null,
    p_file_id                     in number   default null,
    p_export_comments             in varchar2 default 'N',
    p_export_ir_public_reports    in varchar2 default 'N',
    p_export_ir_private_reports   in varchar2 default 'N',
    p_export_ir_notifications     in varchar2 default 'N',
    p_export_translations         in varchar2 default 'N',
    p_debugging_override          in number   default null,
    p_component                   in varchar2 default null,
    p_component_id                in number   default null
    )
    ;


procedure export_theme (
    -- p_flow_id........Unique ID number of your flow
    -- p_page_id........Optional Page ID number
    -- p_format.........Output format UNIX, DOS, DB, XML
    -- p_commit.........Generate a commit statement at end of script (YES or NO)
    --
    p_flow_id               in number,
    p_theme_id              in number,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_tabset (
    p_flow_id               in number,
    p_tabset                in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;



--------------------------------------------------------
-- Flow Component Export
--


procedure export_parent_tabset (
    p_flow_id               in number,
    p_tabset                in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_flow_image_repository (
    p_flow_id               in number,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_comp_image_repository (
    p_flow_id               in number,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure create_image_script(
    p_flow_id                 in number,
    p_image_id                in number)
    ;

function create_image_script_clob (
    p_flow_id                 in number,
    p_image_id                in number)
return clob;

procedure create_css_script(
    p_flow_id                  in number,
    p_css_id                   in number)
    ;

function create_css_script_clob (
    p_flow_id                 in number,
    p_css_id                  in number)
return clob;

procedure create_html_script(
    p_flow_id                  in number,
    p_html_id                  in number)
    ;

function create_html_script_clob (
    p_flow_id                 in number,
    p_html_id                 in number)
return clob;

procedure export_plugin (
    p_flow_id   in number,
    p_plugin_id in number,
    p_format    in varchar2 default 'UNIX',
    p_commit    in varchar2 default 'YES' );

procedure export_restful_services (
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES',
    p_include_script_header in boolean  default true,
    p_include_groups        in boolean  default true );


procedure export_restful_service (
    p_module_id in number,
    p_format    in varchar2 default 'UNIX',
    p_commit    in varchar2 default 'YES' );


--------------------------------------------------------
-- File Component Export
--

procedure export_css_repository (
    p_flow_id               in number,
    p_css_ids               in wwv_flow_global.vc_arr2,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_css_repository (
    p_flow_id               in number,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_html_repository (
    p_flow_id               in number,
    p_html_ids              in wwv_flow_global.vc_arr2,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

procedure export_html_repository (
    p_flow_id               in number,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

--------------------------------------------------------
-- Other Exports
--

procedure export_script (
    p_format           in varchar2 default 'UNIX',
    p_commit           in varchar2 default 'YES')
    ;

procedure export_feedback_to_development (
    p_id     in number   default null,
    p_since  in date     default null,
    p_format in varchar2 default 'UNIX',
    p_commit in varchar2 default 'YES' );

procedure export_feedback_to_deployment (
    p_deployment_system in varchar2,
    p_id                in number   default null,
    p_since             in date     default null,
    p_format            in varchar2 default 'UNIX',
    p_commit            in varchar2 default 'YES' );

--------------------------------------------------------
-- Other Functions
--
procedure file_open (
    p_format in varchar2 );

procedure file_close (
    p_commit in boolean );

-- obsolete
procedure export_image_repository (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

-- OBSOLETE
procedure export_page_template (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

-- OBSOLETE
procedure export_region_template (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

-- OBSOLETE
procedure export_list_template (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

-- OBSOLETE
procedure export_row_template (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

-- OBSOLETE
procedure export_field_template (
    p_flow_id               in number,
    p_name                  in varchar2 default null,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES')
    ;

end wwv_flow_gen_api2;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DISP_PAGE_PLUGS"

--  Copyright (c) Oracle Corporation 2001 - 2007. All Rights Reserved.
--
--    DESCRIPTION
--      Render page plugs.
--
--    SECURITY
--      RESTRICTED, NO GRANTS, NOT A PUBLIC PACKAGE
--
--    NOTES
--      The flow ID and flow page ID's are obtained from global variables
--      (wwv_flow.g_flow_id and wwv_flow.g_flow_step_id)
--
--      The display_plug procedure displays a single plug (i.e. a portion
--      of a page.
--
--      The display_page_plugs procedure shows all plugs for the current
--      page by calling the display_plug procedure.
--

as

g_region_id        number;
g_region_static_id varchar2(255);

procedure get_pagination_data (
    p_region_id  in number,
    p_min_row    out number,
    p_max_row    out number,
    p_total_rows out number,
    p_add_rows   out number,
    p_has_state  out boolean
);

procedure set_pagination_data (
    p_region_id  in number,
    p_min_row    in number default null,
    p_max_row    in number default null,
    p_total_rows in number default null,
    p_add_rows   in number default null,
    p_total_diff in number default null
);

procedure set_region_pagination (
    p_region_pagination_type in varchar2,
    p_region_id in number,
    p_min_row   in out number,
    p_max_row   in out number
);

procedure reset_region_pagination
    ;

procedure reset_region_pagination (
    p_region_id in number)
    ;
procedure reset_pagination_by_page (
    p_flow_id in number,
    p_page_id in number)
    ;

procedure display_page_plugs (
    p_process_point     in varchar2,
    p_page_template_id  in number,
    p_grid_template     in wwv_flow_template.t_grid_template,
    p_page_is_read_only in boolean );


procedure display_report (
    p_region_id     in number   default null,
    p_output_format in varchar2 default 'CSV'
);

end wwv_flow_disp_page_plugs;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CUSTOMIZE"
as

g_notification varchar2(32767) := null;
g_regions_counted boolean := false;
g_region_count pls_integer := 0;

function  get_link (
    p_text in varchar2 default null)
    -- Returns a URL for the current page
    return varchar2
    ;
procedure show(
    p_flow              in varchar2 default null,
    p_page              in varchar2 default null,
    p_session           in varchar2 default null,
    p_lang              in varchar2 default 'en')
    ;
procedure accept(
    p_request           in varchar2 default null,
    p_flow              in varchar2 default null,
    p_page              in varchar2 default null,
    p_session           in varchar2 default null,
    p_check             in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_lang              in varchar2 default 'en')
    ;
end wwv_flow_customize;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GENERIC_ATTR"
is

g_attribute_value wwv_flow_global.vc_arr2;

function fetch_attribute (
    p_region_id     in number,
    p_attribute_id  in number)
    return varchar2
    ;

procedure fetch_attributes (
    --
    -- populates wwv_flow_generic.g_attribute_value array
    --
    p_region_id     in number,
    p_value_count   in number default 100)
    ;

procedure set_attribute (
    p_region_id     in number,
    p_attribute_id  in number,
    p_value         in varchar2 default null)
    ;

procedure set_attributes (
    p_region_id     in number,
    p_value_01      in varchar2 default null,
    p_value_02      in varchar2 default null,
    p_value_03      in varchar2 default null,
    p_value_04      in varchar2 default null,
    p_value_05      in varchar2 default null,
    p_value_06      in varchar2 default null,
    p_value_07      in varchar2 default null,
    p_value_08      in varchar2 default null,
    p_value_09      in varchar2 default null,
    p_value_10      in varchar2 default null,
    p_value_11      in varchar2 default null,
    p_value_12      in varchar2 default null,
    p_value_13      in varchar2 default null,
    p_value_14      in varchar2 default null,
    p_value_15      in varchar2 default null,
    p_value_16      in varchar2 default null,
    p_value_17      in varchar2 default null,
    p_value_18      in varchar2 default null,
    p_value_19      in varchar2 default null,
    p_value_20      in varchar2 default null,
    p_value_21      in varchar2 default null,
    p_value_22      in varchar2 default null,
    p_value_23      in varchar2 default null,
    p_value_24      in varchar2 default null,
    p_value_25      in varchar2 default null,
    p_value_26      in varchar2 default null,
    p_value_27      in varchar2 default null,
    p_value_28      in varchar2 default null,
    p_value_29      in varchar2 default null,
    p_value_30      in varchar2 default null,
    p_value_31      in varchar2 default null,
    p_value_32      in varchar2 default null,
    p_value_33      in varchar2 default null,
    p_value_34      in varchar2 default null,
    p_value_35      in varchar2 default null,
    p_value_36      in varchar2 default null,
    p_value_37      in varchar2 default null,
    p_value_38      in varchar2 default null,
    p_value_39      in varchar2 default null,
    p_value_40      in varchar2 default null,
    p_value_41      in varchar2 default null,
    p_value_42      in varchar2 default null,
    p_value_43      in varchar2 default null,
    p_value_44      in varchar2 default null,
    p_value_45      in varchar2 default null,
    p_value_46      in varchar2 default null,
    p_value_47      in varchar2 default null,
    p_value_48      in varchar2 default null,
    p_value_49      in varchar2 default null,
    p_value_50      in varchar2 default null,
    p_value_51      in varchar2 default null,
    p_value_52      in varchar2 default null,
    p_value_53      in varchar2 default null,
    p_value_54      in varchar2 default null,
    p_value_55      in varchar2 default null,
    p_value_56      in varchar2 default null,
    p_value_57      in varchar2 default null,
    p_value_58      in varchar2 default null,
    p_value_59      in varchar2 default null,
    p_value_60      in varchar2 default null,
    p_value_61      in varchar2 default null,
    p_value_62      in varchar2 default null,
    p_value_63      in varchar2 default null,
    p_value_64      in varchar2 default null,
    p_value_65      in varchar2 default null,
    p_value_66      in varchar2 default null,
    p_value_67      in varchar2 default null,
    p_value_68      in varchar2 default null,
    p_value_69      in varchar2 default null,
    p_value_70      in varchar2 default null,
    p_value_71      in varchar2 default null,
    p_value_72      in varchar2 default null,
    p_value_73      in varchar2 default null,
    p_value_74      in varchar2 default null,
    p_value_75      in varchar2 default null,
    p_value_76      in varchar2 default null,
    p_value_77      in varchar2 default null,
    p_value_78      in varchar2 default null,
    p_value_79      in varchar2 default null,
    p_value_80      in varchar2 default null,
    p_value_81      in varchar2 default null,
    p_value_82      in varchar2 default null,
    p_value_83      in varchar2 default null,
    p_value_84      in varchar2 default null,
    p_value_85      in varchar2 default null,
    p_value_86      in varchar2 default null,
    p_value_87      in varchar2 default null,
    p_value_88      in varchar2 default null,
    p_value_89      in varchar2 default null,
    p_value_90      in varchar2 default null,
    p_value_91      in varchar2 default null,
    p_value_92      in varchar2 default null,
    p_value_93      in varchar2 default null,
    p_value_94      in varchar2 default null,
    p_value_95      in varchar2 default null,
    p_value_96      in varchar2 default null,
    p_value_97      in varchar2 default null,
    p_value_98      in varchar2 default null,
    p_value_99      in varchar2 default null,
    p_value_100     in varchar2 default null,
    p_value_count   in number   default 100)
    ;

end wwv_flow_generic_attr;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FORMS" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--    DESCRIPTION
--      Flow form rendering engine package specification.
--
--    SECURITY
--
--    INTERNATIONALIZATION
--
--    NOTES
--      This program generates HTML form fields, this package is a utility package to wwv_flow.
--
--    RUNTIME DEPLOYMENT: YES
--
--    SCRIPT ARGUMENTS
--      none
--
--    MODIFIED   (MM/DD/YYYY)
--      mhichwa   01/26/2000 - Created
--      mhichwa   05/14/2000 - Added g_current_item_sequence function increment_item_sequence
--      mhichwa   12/05/2001 - Added g_i
--      mhichwa   02/20/2002 - Added g_current_form_element
--      tmuth     10/14/2002 - Added g_current_x
--      sspadafo  08/31/2006 - Increased size of g_current_form_element to 256 (Bug 5503306)
--      pawolf    04/02/2009 - Added get_element as public function
--      pawolf    08/17/2009 - Added parameter p_plug_form_tab_attr
--      msewtz    04/08/2011 - Added p_render_form_items_in_table to display_positional_form  (feature 586)
--      pawolf    04/27/2011 - Added current_subs as public API (feature 679)
--      pawolf    06/01/2011 - Added get_default_value (feature 629)
--      pawolf    04/10/2012 - Added read only on page and region level (feature# 570)
--      cneumuel  05/24/2012 - Removed display_template_form (dead code)
--      pawolf    05/31/2012 - Continued work on grid layout (feature #936)
--      pawolf    06/05/2012 - Continued work on grid layout (feature #936)
--      pawolf    06/15/2012 - Added region display points support (feature# #936)
--      pawolf    06/27/2012 - Added page display points support (feature #936)
--      cneumuel  08/08/2012 - Moved g_current_form_element to package body
--
--------------------------------------------------------------------------------

g_i                     int := 0; -- index of wwv_flow.g_item_cattributes

--------------------------------------------------------------------------------
-- Returns the name attribute which has to be used for the HTML input element if
-- you want that the value of the element is stored in session state when the
-- page is submitted. If you use a HTML input element which returns multiple
-- values (eg. select list with multiple="multiple") you have
-- to set p_is_multi_value.
--------------------------------------------------------------------------------
function get_html_page_item_name (
    p_is_multi_value in boolean := false )
    return varchar2;

procedure init_form (
    p_region_id in number );

procedure emit_form (
    p_region_id              in number,
    p_page_template_id       in number,
    p_region_template_id     in number,
    p_max_fixed_grid_columns in pls_integer,
    p_grid_template          in wwv_flow_template.t_grid_template,
    p_grid_attributes        in varchar2,
    p_region_is_read_only    in boolean );

function current_subs (
    p_text in varchar2,
    p_i    in number default wwv_flow_forms.g_i )
    return varchar2;

function get_display_value (
    p_item_idx in pls_integer )
    return varchar2;

end wwv_flow_forms;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ASFCOOKIE" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
9
19d 124
8fGqTOX+/7UgbdGQlJaucfXf1sgwgxBKmMsVfHTpWDoYX0s1lTz6FEgmqwaFG/VfL+G9N3f7
9PkiQ8wcxRUerf6SI1BsXU3si9P+sEX0E04/urHGakjnZeS/8kN/58LWbOXBOzeB4VeILkm3
UiPqesLI1VmwU0tu7yR1y0dfBtqS+sJwzXL8kTxcuri+G+vqya7u37tzOpgP3VGR26ssYNBD
Wa/+MXmCzrFdu3b80HcTDVCC3iE3LUzemR3Vfnn3rHFts4hcXB51k+VmWuj0l+Hrr5QeUYcx

/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_CALCULATOR"
as
--  Copyright (c) Oracle Corporation 2000. All Rights Reserved.
--
--    DESCRIPTION
--      Display a javascript based calculator passing a value back to a flow field.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--
   procedure draw(p_field varchar2);
   procedure show(p_field varchar2);
end wwv_calculator;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_BUILDER"
--  Copyright (c) Oracle Corporation 1999 - 2006. All Rights Reserved.
--
--    DESCRIPTION
--      Flow Builder Reports.
--
--    SECURITY
--
--    NOTES
--      Page processes of flow 4000 call these reports.
--
is
procedure unreserve_flow_page (
    p_flow_id       in number,
    p_page_id       in number,
    p_flow_session  in number)
    ;
procedure report_header (
    p_flow_id                  in varchar2 default null,
    p_flow_page_id             in varchar2 default null,
    p_instance                 in varchar2 default null,
    p_header_html_suffix       in varchar2 default '<br>')
    ;
function generate_header (
    p_flow_id                  in varchar2 default null,
    p_flow_page_id             in varchar2 default null,
    p_instance                 in varchar2 default null,
    p_header_html_suffix       in varchar2 default '<br>')
    return varchar2
    ;

procedure list_plsql_source (
    p_name                     in varchar2 default null,
    p_type                     in varchar2 default null,
    p_flow_id                  in varchar2 default null,
    p_flow_page_id             in varchar2 default null,
    p_instance                 in varchar2 default null,
    p_min_row                  in number   default 1,
    p_max_rows                 in number   default 5000)
    ;

procedure simple_page_list (
    p_flow_id     in number)
    ;

procedure simple_items_list (
    p_flow_id     in number,
    p_page_id     in number)
    ;

procedure populate_updateable_col (
    p_flow_id            in number,
    p_region_id          in number,
    p_region_source      in varchar2,
    p_security_group_id  in number
    );

procedure set_upd_column_display_attr (
    p_flow_id             in number,
    p_region_id           in number,
    p_owner               in varchar2,
    p_table               in varchar2,
    p_query_column_name   in varchar2,
    p_column_default_type in varchar2,
    p_column_default      in varchar2,
    p_column_width        in number,
    p_column_heading      in varchar2,
    p_lov                 in varchar2,
    p_pk_col_source_type  in varchar2,
    p_pk_col_source       in varchar2,
    p_display_as          in varchar2,
    p_security_group_id   in number
    );

procedure show_page_list
    ;
function get_current_page_id_and_name return varchar2
    ;
function get_current_flow_id_and_name return varchar2
    ;

function get_current_flow_language return varchar2
    ;

procedure split_url (
    p_url               in varchar2,
    p_flow             out varchar2,
    p_page             out varchar2,
    p_session          out varchar2,
    p_request          out varchar2,
    p_debug            out varchar2,
    p_clear_cache      out varchar2,
    p_arg_names        out varchar2,
    p_arg_values       out varchar2,
    p_success_msg      out varchar2,
    p_report_column     in boolean default false
    );

function is_valid_dblink_name(
    p_name              in varchar2) return boolean
    ;

function is_valid_identifier(
    p_identifier        in varchar2) return boolean
    ;

function is_valid_column_name(
    p_column_name       in varchar2) return boolean
    ;


function is_valid_table_or_view(
    p_owner             in varchar2,
    p_object_name       in varchar2 ) return varchar2
    ;

function is_valid_item_name (
    p_name              in varchar2 )
    return boolean;

function is_item_name_used (
    p_flow              in varchar2,
    p_name              in varchar2 )
    return boolean;

function is_item_name_duplicate (
    p_flow              in varchar2,
    p_id                in number,
    p_name              in varchar2 )
    return boolean;

function get_valid_item_name (
    p_name in varchar2 )
    return varchar2;

function is_valid_button_name (
    p_name in varchar2 )
    return boolean;

function get_valid_button_name (
    p_name in varchar2 )
    return varchar2;

function region_source_type_lov (
    p_current_value in varchar2)
    return varchar2;

end wwv_flow_builder;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_RENDER_SHORTCUT" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2000 - 2012. All Rights Reserved.
--
--    NAME
--      shortcut.sql
--
--    DESCRIPTION
--      Substitucte shortcuts in HTML text
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    SCRIPT ARGUMENTS
--      1:
--      2:
--      3:  Flow Schema Owner
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED  (MM/DD/YYYY)
--      mhichwa  09/04/2000 - Created
--      mhichwa  03/02/2001 - Added grant to public as well as public syn
--      jkallman 12/16/2009 - Change wwv_flow_render_shortcut.do_sortcuts_exist to wwv_flow_render_shortcut.do_shortcuts_exist
--      cneumuel 08/08/2012 - Moved package global l_shortcut to body of expand_shortcuts
--
--------------------------------------------------------------------------------

function do_shortcuts_exist (
    p_string       in varchar2)
    return boolean
    ;

function expand_shortcuts (
    p_string       in varchar2)
    return varchar2
    ;
end wwv_flow_render_shortcut;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_POPUP_LOV" as

--  Copyright (c) Oracle Corporation 2003. All Rights Reserved.
--
--    DESCRIPTION
--      Flow POPUP lov rendering engine package specification.
--
--    SECURITY
--      Only executable by flows owner
--
--    RUNTIME DEPLOYMENT: YES
--

procedure show (
    p_request             in varchar2   default null,
    p_instance            in varchar2   default null,
    p_flow_id             in varchar2   default null,
    p_flow_page_id        in varchar2   default null,
    p_debug               in varchar2   default 'NO',
    p_arg_names           in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_arg_values          in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr)
    ;

end wwv_flow_popup_lov;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CALENDAR"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2004 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_calendar.sql
--
--    DESCRIPTION
--      This package is responsible for handling the calendar component
--      in the runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      klrice    04/22/2004 - Created
--      klrice    05/27/2004 - Checkpoint for compilations
--      klrice    06/04/2004 - Formatting
--      klrice    06/04/2004 - added display_type to cals
--      klrice    06/21/2004 - Changed to start_date/end_date and addeed start_of_week
--      klrice    07/01/2004 - Added display_item to wiz call
--      klrice    08/25/2004 - added flag to link all days or not, bug # 3855299
--      klrice    08/31/2004 - added separator for use when display is a Column
--      sspadafo  02/19/2005 - Added day_link, item_link references
--      klrice    05/09/2005 - Added is_Valid_query
--      Sathikum  01/02/2007 - Added printMonthCal, printWeekCal, printDayCal
--      Sathikum  01/12/2007 - Added support for Start Time, End Time , Time format for Weekly & Daily Calendar also start day & end day feature for weekly calendar.
--      jstraub   01/16/2007 - Added new columns for wwv_flow_cals to set_Attributes
--      sathikum  01/19/2997 - Added parameter to store calender type field.
--      sathikum  10/30/2007 - added process_calendar_date for ajax calendar
--      sathikum  10/31/2007 - added functionality to support both ajax and classic calendar
--      jstraub   11/21/2007 - added p_calendar_type to set_Attributes
--      jkallman  09/19/2008 - Added missing p_source_table to printMonthCal
--      sathikum  02/19/2009 - Added parameter p_source_table to printWeekCal & PrintDayCal for AJAX based data adding.
--      sathikum  05/08/2009 - Added parameter p_end_date_item_name to create_wizard_elements
--      sathikum  05/19/2009 - Added code for Custom Calendar feature.
--      sathikum  07/14/2009 - added code for supporting AJAX based Transaction.
--      sathikum  08/18/2009 - Added code for supporting Drag & Drop Feature
--      sathikum  04/02/2010 - Allow choice of including Custom Calendar with Date Picker
--      sathikum  01/03/2011 - Added p_enable_drag_drop and p_enable_ajax_data_add to create_wizard_elements,set_Attributes (feature #520)
--      sathikum  01/10/2011 - Added code to include parameneter  p_enable_drag_drop and p_enable_ajax_data_add to all types of calendar (feature #520)
--      sathikum  01/14/2011 - added data_background_color and data_text_color(feature #520)
--      sathikum  01/21/2011 - Added column enable_ajax_data_edit (feature #520)
--      sathikum  02/15/2011 - Added column enable_ajax_data_delete (feature #520)
--      sathikum  04/11/2011 - Added primary_key_column, drag_drop_required_role, drag_drop_process_id and removed some parameteres from set_Attributes (feature #520)
--      sathikum  04/14/2011 - Added item_link_primary_key_item, item_link_date_item (feature #520)
--      sathikum  04/18/2011 - Added item_link_open_in to set_Attributes (feature #520)
--      sathikum  04/22/2011 - Added function create_on_demand_process for Drag & Drop (feature #520)
--      sathikum  05/18/2011 - Fixed issues and Cleaned up code which was used by previous version of Drag & Drop
--      sathikum  06/02/2011 - Added p_include_time_with_date to set_attributes and modified create_wizard_elements (feature #520)
--      sathikum  06/27/2011 - Fixed bug #12691760, added code to support creation of calendar data using keyboard
--      sathikum  03/15/2012 - Added Agenda Calendar Feature #812
--      sathikum  03/20/2012 - Fixed bug #13706809 modified set_attributes to include p_end_date_item
--
--------------------------------------------------------------------------------

procedure show(p_plug_id number,p_cal_type varchar2 default 'M',p_cal_action varchar2 default null,p_date_value varchar2 default null,
               p_end_date_value varchar2 default null);

procedure widget;

end wwv_flow_calendar;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_MAIL_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_mail_api.sql
--
--    DESCRIPTION
--      This package is the public API for handling mails in Application Express.
--
--      Note: In order to call the APEX_MAIL package from outside the context of
--            an Application Express application, you must call
--            apex_util.set_security_group_id as in the following example:
--
--            declare
--                l_workspace_id number;
--            begin
--                select workspace_id
--                  into l_workspace_id
--                  from apex_applications
--                 where application_id = p_app_id;
--
--                apex_util.set_security_group_id (
--                    p_security_group_id => l_workspace_id );
--
--                apex_mail.send ( ... );
--                commit;
--            end;
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    04/19/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Procedure to add a mail to the mail queue of Application Express.
--==============================================================================
procedure send (
    p_to        in varchar2,
    p_from      in varchar2,
    p_body      in varchar2,
    p_body_html in varchar2 default null,
    p_subj      in varchar2 default null,
    p_cc        in varchar2 default null,
    p_bcc       in varchar2 default null,
    p_replyto   in varchar2 default null );

procedure send (
    p_to        in varchar2,
    p_from      in varchar2,
    p_body      in clob,
    p_body_html in clob     default null,
    p_subj      in varchar2 default null,
    p_cc        in varchar2 default null,
    p_bcc       in varchar2 default null,
    p_replyto   in varchar2 default null );

--==============================================================================
-- Function which returns a mail id after adding the mail to the mail queue of
-- Application Express. The mail id can be used in a call to add_attachment to
-- add atachments to an existing mail.
--==============================================================================
function send (
    p_to        in varchar2,
    p_from      in varchar2,
    p_body      in varchar2,
    p_body_html in varchar2 default null,
    p_subj      in varchar2 default null,
    p_cc        in varchar2 default null,
    p_bcc       in varchar2 default null,
    p_replyto   in varchar2 default null )
    return number;

function send (
    p_to        in varchar2,
    p_from      in varchar2,
    p_body      in clob,
    p_body_html in clob     default null,
    p_subj      in varchar2 default null,
    p_cc        in varchar2 default null,
    p_bcc       in varchar2 default null,
    p_replyto   in varchar2 default null )
    return number;

--==============================================================================
-- Procedure which adds an attachment to a mail.
--==============================================================================
procedure add_attachment (
    p_mail_id    in number,
    p_attachment in blob,
    p_filename   in varchar2,
    p_mime_type  in varchar2 );

--==============================================================================
-- If email includes link to APEX instance, use this function to get the
-- instance URL.
--
-- Note: This function requires that the instance setting
--       "Application Express Instance URL" for emails is set!
--==============================================================================
function get_instance_url return varchar2;

--==============================================================================
-- If email includes APEX instance images, use this function to get the
-- image prefixed URL.
--
-- Note: This function requires that the instance setting
--       "Application Express Images URL" for emails is set!
--==============================================================================
function get_images_url return varchar2;

--==============================================================================
-- Parameters p_smtp_hostname and p_smtp_portno remain for backward
-- compatibility.  But they are ignored.  The SMTP host name and
-- parameter are exclusively derived from system preferences
-- when sending mail.
--==============================================================================
procedure push_queue (
    p_smtp_hostname in varchar2 default null,
    p_smtp_portno   in varchar2 default null );
--
end wwv_flow_mail_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_MAIL"
as

--  Copyright (c) Oracle Corporation 2000 - 2012. All Rights Reserved.
--
--    DESCRIPTION
--      Flows generic mail routines
--
--    SECURITY
--
--    NOTES
--

--==============================================================================
procedure send( p_to            in varchar2,
                p_from          in varchar2,
                p_body          in varchar2,
                p_body_html     in varchar2 default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL);

--==============================================================================
procedure send( p_to            in varchar2,
                p_from          in varchar2,
                p_body          in clob,
                p_body_html     in clob     default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL);

--==============================================================================
procedure send( p_to            in varchar2,
                p_from          in varchar2,
                p_body          in varchar2,
                p_body_html     in varchar2 default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL,
                p_replyto       in varchar2 );

--==============================================================================
procedure send( p_to            in varchar2,
                p_from          in varchar2,
                p_body          in clob,
                p_body_html     in clob     default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL,
                p_replyto       in varchar2 );

--==============================================================================
function  send( p_to            in varchar2,
                p_from          in varchar2,
                p_body          in varchar2,
                p_body_html     in varchar2 default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL)
                return number;

--==============================================================================
function send(  p_to            in varchar2,
                p_from          in varchar2,
                p_body          in clob,
                p_body_html     in clob     default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL)
                return number;

--==============================================================================
function send(  p_to            in varchar2,
                p_from          in varchar2,
                p_body          in varchar2,
                p_body_html     in varchar2 default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL,
                p_replyto       in varchar2 )
                return number;

--==============================================================================
function send(  p_to            in varchar2,
                p_from          in varchar2,
                p_body          in clob,
                p_body_html     in clob     default NULL,
                p_subj          in varchar2 default NULL,
                p_cc            in varchar2 default NULL,
                p_bcc           in varchar2 default NULL,
                p_replyto       in varchar2 )
                return number;

--==============================================================================
procedure add_attachment( p_mail_id    in number,
                          p_attachment in blob,
                          p_filename   in varchar2,
                          p_mime_type  in varchar2 );


--==============================================================================
--
-- Parameters p_smtp_hostname and p_smtp_portno remain for backward
-- compatibility.  But they are ignored.  The SMTP host name and
-- parameter are exclusively derived from system preferences
-- when sending mail.
--
--==============================================================================
procedure background( p_id in number,
                      p_smtp_hostname in varchar2 default null,
                      p_smtp_portno   in varchar2 default null );

--==============================================================================
--
-- Parameters p_smtp_hostname and p_smtp_portno remain for backward
-- compatibility.  But they are ignored.  The SMTP host name and
-- parameter are exclusively derived from system preferences
-- when sending mail.
--
--==============================================================================
procedure push_queue( p_smtp_hostname in varchar2 default null,
                      p_smtp_portno   in varchar2 default null );

--==============================================================================
--
-- Will submit a one-time database job to push the mail queue
--
--==============================================================================
procedure push_queue_background;

--==============================================================================
procedure push_queue_immediate( p_force_yn in varchar2 default 'N');

--==============================================================================
--
-- If email includes link to APEX instance, use this function to get the instance URL
--
--==============================================================================
function get_instance_url (
    p_security_group_id in number default null )
    return varchar2;

--==============================================================================
--
-- If email includes APEX instance images, use this function to get the image prefixed URL
--
--==============================================================================
function get_images_url (
    p_security_group_id in number default null )
    return varchar2;

--==============================================================================
--
-- Converts plain-text URLs (e.g. http://www.oracle.com) to HTML hyperlinks (e.g.
-- <a href="http://www.oracle.com">http://www.oracle.com</a>).
--
--==============================================================================
function convert_urls_to_links (
    p_string in varchar2 )
    return varchar2;

--==============================================================================
--
-- Converts plain-text input into basic HTML, while adding APEX logo and converting
-- URLs to HTML hyperlinks.
--
--==============================================================================
function convert_txt_to_html (
    p_txt_message       in varchar2,
    p_security_group_id in number default null )
    return varchar2;


end wwv_flow_mail;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PROVISION"
as

/* ------------- PROVISIONING API -------------------- */

/*
 * creates a user account, creates a tablespace for the user, and
 * grants the user privileges to create objects and such.
 *
 * p_quota:  the size in MBytes the company is allocated
 *
 * rules for p_company:
 * - Must be from 1 to 30 bytes long
 * - Cannot contain quotation marks
 * - Must begin with an alphabetic character from THIS database set
 * - Can only contain alphanumeric characters, with the exception of
 *   (_) underscore, ($) dollar, and (#) pound signs.
 * - Cannot be an oracle reserved word
 * - Cannot be DUAL
 */

procedure provision_company(
    p_company            in varchar2,
    p_password           in varchar2,
    p_quota              in number    default 20,
    p_initial_size       in number    default null)
    ;


/*
 * removes the company's tablespace(s) (including contents cascade
 * constraints); drops the company's flows schema user
 */
procedure remove_provisioned_company(
    p_company         in varchar2)
    ;


/*
 * this adds more space to the company's storage capacity.  We will
 * extend the tablespace to allow for more data.
 *
 * p_add: the size (in MB) you are extending the tablespace
 */
-- deprecated
procedure change_provisioned_storage(
    p_sgid            in number,
    p_newsize         in number)
    ;

-- preferred
procedure change_provisioned_storage(
    p_sgid            in number,
    p_add_size_mb     in number );


/*
 * returns the number of bytes which have been provisioned to this company
 */
function get_provisioned_space(
    p_sgid            in number)
    return number
    ;

/*
 * returns the number of bytes being used by this company
 */
function get_space_consumption(
    p_sgid            in number)
    return number
    ;


/*
 * function which returns a password of varying length
 *
 *   p_length indicates the length of the password you wish to be
 *    randomly generated
 */
function get_random_password(
    p_length          in number)
    return varchar2
    ;

/*
 * When provisioning companies, use this function to verify the
 * words you are passing are NOT reserved.
 *
 */
function is_reserved(
    p_word            in varchar2)
    return boolean
    ;


 /*
 * When provisioning companies, use this function to verify the
 * schema name is valid.
 *
 */
function schema_name_valid(
    p_schema            in varchar2,
    p_workspace_name    in varchar2)
    return boolean
    ;

/*
 *
 */
procedure create_user(
    p_username        in varchar2,
    p_password        in varchar2)
    ;

/*
 *
 */
procedure drop_user(
    p_username        in varchar2,
    p_cascade         in boolean default TRUE,
    p_drop_ts         in boolean default FALSE)
    ;

/*
 *
 */
procedure set_user_tablespace(
    p_username        in varchar2,
    p_default_ts      in varchar2,
    p_temp_ts         in varchar2 )
    ;


/*
 *
 */
procedure grant_initial_privs(
    p_username        in varchar2)
    ;

procedure setup_company_tablespace(
    p_company in varchar2,
    p_size    in number,
    p_initial_size in number default null)
    ;

end wwv_flow_provision;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PROVISIONING"
as
--  Copyright (c) Oracle Corporation 1999-2011. All Rights Reserved.
--
--    DESCRIPTION
--      This package provides provisioning and account management services.
--
--    SECURITY
--      Only available to the internal super user
--
--    NOTES
--      Oracle platform requires the following for a properly provisioned env.
--
--
--                                  +----------------------+                    +--------------------------+
--                                  |                      | pcid         sgid /|                          |
--                                  |                      |--------------------| wwv_flow_company_schemas |
--                             pcid |  wwv_flow_companies  | pcid              \|                          |
--                      +-----------|                      |------+             +--------------------------+
--                      |           |                      |      |                 | schema
--                      |           +----------------------+      |                 |
--                      |                                         |                 |
--                      |                                         |                 |
--                sgid /|\                                       /|\sgid           /|\ schema
--          +----------------------+                 +----------------------+  +-----------+
--          |                      |                 |                      |  |           |
--          | wwv_flow_developers  |                 | wwv_flow_fnd_user    |  | wwv_flows |
--          |     (privs)          |                 | or wwv_flow_db_auth  |  |           |
--          |                      |                 |       (users)        |  |           |
--          +----------------------+                 +----------------------+  +-----------+
--

------------------------------------
-- U T I L I T Y   F U N C T I O N S
--

procedure set_commit( p_commit_transactions in boolean default TRUE );

procedure create_flow_super_user (
    p_user_id in number,
    p_user_adminid in varchar2,
    p_security_group_id in number)
    ;

procedure create_cookie_based_user (
    p_provision_id in number,
    p_password     in varchar2)
    ;

function site_admin_is_restricted
    return boolean
    ;

function site_admin_is_restricted_i
    return integer
    ;

function restricted_schema(
    p_schema         in varchar2,
    p_workspace_name in varchar2)
    return boolean
    ;

function restricted_schema(
    p_schema            in varchar2,
    p_security_group_id in number)
    return boolean
    ;


function restricted_schema_i(
    p_schema         in varchar2,
    p_workspace_name in varchar2)
    return integer
    ;

function reserved_schema(
    p_schema in varchar2)
    return boolean
    ;

function reserved_schema_i(
    p_schema in varchar2)
    return integer
    ;

function validate_schema_name(
    p_schema         in varchar2,
    p_workspace_name in varchar2)
    return varchar2
    ;

function total_service_requests
    return number
    ;

function total_open_service_requests
    return number
    ;

function total_change_requests
    return number
    ;

function total_open_change_requests
    return number
    ;


-----------------------------
-- D E M O   R E Q U E S T S
--

procedure install_demo_tables(
    p_security_group_id in number,
    p_schema            in varchar2 default null)
    ;

procedure remove_demo_tables(
    p_security_group_id in varchar2,
    p_schema            in varchar2 default null)
    ;

procedure install_demo_restful_service(
    p_security_group_id in number,
    p_schema            in varchar2 default null)
    ;

----------------------------------------------
-- A U T O   P R O V I S I O N   C O M P A N Y
--
procedure auto_provision_company (
    p_company_name              in varchar2 default null,
    p_schema_name               in varchar2 default null,
    p_schema_password           in varchar2 default null,
    p_database_size             in varchar2 default 'SMALL',
    p_database_initial_size     in varchar2 default null,
    p_admin_userid              in varchar2 default null,
    p_admin_password            in varchar2 default null,
    p_admin_first_name          in varchar2 default null,
    p_admin_last_name           in varchar2 default null,
    p_admin_title               in varchar2 default null,
    p_admin_email               in varchar2 default null,
    p_project_description       in varchar2 default null,
    p_security_group_id         in varchar2 default null,
    p_install_sample_app        in varchar2 default null,
    p_install_sample_ws         in varchar2 default null    );


----------------------------
-- M A K E   R E Q U E S T S
--
procedure make_request (
    p_company_name              in varchar2 default null,
    p_admin_first_name          in varchar2 default null,
    p_admin_last_name           in varchar2 default null,
    p_admin_title               in varchar2 default null,
    p_admin_email               in varchar2 default null,
    p_admin_phone               in varchar2 default null,
    p_admin_userid              in varchar2 default null,
    p_company_address           in varchar2 default null,
    p_city                      in varchar2 default null,
    p_state                     in varchar2 default null,
    p_zip                       in varchar2 default null,
    p_country                   in varchar2 default null,
    p_company_type              in varchar2 default null,
    p_company_web_site          in varchar2 default null,
    p_number_of_employees       in varchar2 default null,
    p_company_phone             in varchar2 default null,
    p_company_fax               in varchar2 default null,
    p_oracle_partner            in varchar2 default null,
    p_how_did_you_hear_about_us in varchar2 default null,
    p_service_use_status        in varchar2 default null,
    p_database_size             in varchar2 default null,
    p_database_initial_size     in varchar2 default null,
    p_service_start_date        in varchar2 default null,
    p_service_termination_date  in varchar2 default null,
    p_schema_name               in varchar2 default null,
    p_estimated_end_users       in varchar2 default null,
    p_page_views_per_day        in varchar2 default null,
    p_project_description       in varchar2 default null,
    p_project_justification     in varchar2 default null,
    p_security_group_id         in varchar2 default null,
    --
    p_question_1                in varchar2 default null,
    p_answer_1                  in varchar2 default null,
    p_question_2                in varchar2 default null,
    p_answer_2                  in varchar2 default null,
    p_question_3                in varchar2 default null,
    p_answer_3                  in varchar2 default null,
    p_question_4                in varchar2 default null,
    p_answer_4                  in varchar2 default null,
    p_question_5                in varchar2 default null,
    p_answer_5                  in varchar2 default null,
    p_question_6                in varchar2 default null,
    p_answer_6                  in varchar2 default null,
    p_question_7                in varchar2 default null,
    p_answer_7                  in varchar2 default null,
    p_question_8                in varchar2 default null,
    p_answer_8                  in varchar2 default null,
    p_question_9                in varchar2 default null,
    p_answer_9                  in varchar2 default null,
    p_question_10               in varchar2 default null,
    p_answer_10                 in varchar2 default null
    );

-----------------------------------------
-- P R E   P R O C E S S   R E Q U E S T
--
procedure pre_process_request (
    p_id                        in number)
    ;


------------------------------------
-- P R O V I S I O N   R E Q U E S T
--
procedure provision_request (
    p_id                        in number,
    p_password                  in varchar2,
    p_admin_password            in varchar2,
    p_install_sample_app        in varchar2 default null,
    p_install_sample_ws         in varchar2 default null
    )
    ;

------------------------------------
-- A C C E P T   R E Q U E S T
--
procedure accept_request (
    p_id                        in number)
    ;


-----------------------------------------------------
-- P R O V I S I O N   A C C E P T E D  R E Q U E S T
--
procedure provision_accept_request (
    p_id                        in number,
    email_id                    in varchar2,
    p_password                  in varchar2,
    p_admin_password            in varchar2)
    ;


-------------------------------------------------
-- D E L E T E  A C C E P T E D   R E Q U E S T
--
procedure delete_accepted_request (
    p_id  in number)
    ;


------------------------------------
-- D E N Y   R E Q U E S T
--
procedure deny_request (
    p_id                        in number)
    ;

------------------------------------
-- T E R M I N A T E   S E R V I C E
--
procedure terminate_service (
    p_id                        in number)
    ;
procedure terminate_service_by_sgid (
    p_security_group_id  in number,
    p_drop_users         in varchar2 default 'N',
    p_drop_tablespaces   in varchar2 default 'N',
    p_remove_request     in varchar2 default 'N')
    ;

-------------------------------------------------
-- D E L E T E  P R O V I S I O N   R E Q U E S T
--
procedure delete_provision_request (
    p_id  in number)
    ;


----------------------------------------------------
-- M A K E   M O D I F I C A T I O N   R E Q U E S T
--
procedure make_modification_request (
    p_security_group_id     in number   default wwv_flow_security.g_security_group_id,
    p_service_name          in varchar2,
    p_service_attribute_1   in varchar2 default null,
    p_service_attribute_2   in varchar2 default null,
    p_service_attribute_3   in varchar2 default null,
    p_service_attribute_4   in varchar2 default null,
    p_service_attribute_5   in varchar2 default null,
    p_service_attribute_6   in varchar2 default null,
    p_service_attribute_7   in varchar2 default null,
    p_service_attribute_8   in varchar2 default null)
    ;

procedure reject_modification_request (
    p_request_id in number)
    ;


procedure delete_modification_request (
    p_request_id in number)
    ;

-------------------------------------
-- S C H E M A   M O D I F I C A T I O N S
--
-- p_security_group_id = identifies company
-- p_schema_name       = identifies the new schema to be created
-- p_db_size           = megabytes
--

procedure add_schema_by_request (
    p_request_id      in number,
    p_use_existing    in boolean default false)
    ;

procedure add_schema (
    p_request_id            in number,
    p_security_group_id     in number,
    p_schema_name           in varchar2,
    p_default_ts            in varchar2,
    p_temporary_ts          in varchar2,
    p_use_existing          in boolean default false)
    ;

procedure remove_schema (
    p_security_group_id     in number,
    p_schema_name           in varchar2)
    ;

procedure update_user_default_schema (
    p_security_group_id     in number,
    p_new_schema            in varchar2,
    p_old_schema            in varchar2)
    ;

procedure remove_schema_by_request (
    p_request_id               in number)
    ;

procedure provision_storage_by_request (
    p_request_id      in number)
    ;

function reset_password (
    p_company                  in varchar2,
    p_username                 in varchar2,
    p_size                     in number default 6)
    return varchar2
    ;

--
-- For a given security_group_id, return a delimited list of workspace schemas
--
function get_schemas_by_sgid (
    p_security_group_id in number,
    p_separator         in varchar2 default null )
    return varchar2
    ;
--
-- For a given security_group_id, return a delimited list of default tablespaces
-- associated with the workspace schemas
--
function get_tablespaces_by_sgid (
    p_security_group_id in number,
    p_separator         in varchar2 default null )
    return varchar2
    ;




end wwv_flow_provisioning;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_JOB"
as

/*
 * For internal use.  DO NOT call this package as it's only
 * meaningful to the body of this application.
 */
procedure run_internal_job(
    p_job                 in number,
    p_language            in varchar2 default null)
    ;


/*
 * Used to update the SYSTEM_STATUS of a wwv_flow_job.
 */
procedure update_system_status(
    p_job                 in number,
    p_system_status       in varchar2)
    ;


/*
 * For removing jobs.  We need to ensure that sloppy flows
 * developers do not cause an extraneous amount of completed
 * jobs which have not been cleaned out.
 */
procedure remove_job(
    p_job                 in number)
    ;


/*
 * For internal use.  We need to ensure that sloppy flows
 * developers do not cause an extraneous amount of completed
 * jobs which have not been cleaned out.
 */
procedure cleanup_completed_jobs(
    p_completed_before        in date)
    ;

end wwv_flow_job;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ITEM" as

--  Copyright (c) Oracle Corporation 2001 - 2007. All Rights Reserved.
--
--    DESCRIPTION
--      API to generate flow f01... items for use with multi row forms and
--      other purposes.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--

g_md5_checksum        varchar2(255) := null;
g_mru_count           number := 0;
g_mri_count           number := 0;
g_mrd_count           number := 0;
g_where_clause        varchar2(4000) := null;

function get_first_rownum
    --
    --
    --
    return number
    ;

function checkbox (
    --
    -- Return an HTML form checkbox.  Allows you to select a checkbox form element from a query.
    --
    -- Arguments:
    --     p_idx                      = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                                  Typically the p_idx argument is constant for a given column.
    --     p_value                    = When checked return this value
    --     p_attributes               = Custom HTML arguments added to the HTML input type of checkbox.
    --     p_checked_values           = Colon (by default delimted list of values
    --     p_checked_values_delimiter = Defaults to a colon ":" and is used to pass multiple values in one string.
    --     p_item_id                  = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label               = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template           = Optional label template to be used instead of built-in one
    --     p_before_item              = HTML to be printed before the item lable and field
    --     p_after_item               = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.checkbox(1,empno) c from emp
    --     select wwv_flow_item.checkbox(1,empno,null,empno) c from emp
    --
    p_idx                      in number,
    p_value                    in varchar2 default null,
    p_attributes               in varchar2 default null,
    p_checked_values           in varchar2 default null,
    p_checked_values_delimiter in varchar2 default ':',
    p_item_id                  in varchar2 default null,
    p_item_label               in varchar2 default null,
    p_label_template           in varchar2 default null,
    p_before_item              in varchar2 default null,
    p_after_item               in varchar2 default null
) return varchar2;

function simple_checkbox (
    --
    -- Return an HTML form checkbox.  Allows to select a simplified checkbox element from a query.
    --
    -- Arguments:
    --     p_idx                      = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                                  Typically the p_idx argument is constant for a given column.
    --     p_value                    = The current value
    --     p_checked_value            = Value returned if checkbox checked
    --     p_checked_value            = Value returned if checkbox unchecked
    --     p_attributes               = Custom HTML arguments added to the HTML input type of checkbox.
    --     p_item_id                  = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label               = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template           = Optional label template to be used instead of built-in one
    --     p_before_item              = HTML to be printed before the item lable and field
    --     p_after_item               = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.checkbox(1,[column name], 'Y') c from [table name]
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_checked_value   in varchar2 default null,
    p_unchecked_value in varchar2 default null,
    p_attributes      in varchar2 default null,
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function radiogroup (
    --
    -- Return an HTML form radiogroup.  Allows you to select a radiogroup form element from a query.
    --
    -- Arguments:
    --     p_idx                      = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                                  Typically the p_idx argument is constant for a given column.
    --     p_value                    = When selected return this value
    --     p_selected_value           = Default selected value
    --     p_display                  = Display text
    --     p_attributes               = Custom HTML arguments added to the HTML input type of radiogroup.
    --     p_item_id                  = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label               = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template           = Optional label template to be used instead of built-in one
    --     p_before_item              = HTML to be printed before the item lable and field
    --     p_after_item               = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.radiogroup(1,empno,'7839',ename) c from emp
    --
    p_idx            in number,
    p_value          in varchar2 default null,
    p_selected_value in varchar2 default null,
    p_display        in varchar2 default null,
    p_attributes     in varchar2 default null,
    p_onBlur         in varchar2 default null,
    p_onChange       in varchar2 default null,
    p_onFocus        in varchar2 default null,
    p_item_id        in varchar2 default null,
    p_item_label     in varchar2 default null,
    p_label_template in varchar2 default null,
    p_before_item    in varchar2 default null,
    p_after_item     in varchar2 default null
) return varchar2;


function radio_group_from_static_lov (
    -- Generates an HTML radio group from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_list_values= A list of static values seperated by commas.
    --                    Display values and return values are
    --                    seperated by semicolons.
    --                    to write back the selected date into the proper row.
    --                    format: display1;Return1,Display2;Return2...
    --     p_rows         number of rows for radio groups, default 1, i.e. all options shown on same row
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template           = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --     p_show_extra = show current value even if not part of LOV
    --
    -- example(s):
    --   select wwv_flow_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_list_values     in varchar2 default null,
    p_rows            in number   default 1,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'NO',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function radio_group_from_query (
    -- Generates an HTML radio group with hidden fields from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_query      = A SQL SELECT statement in the format:
    --                    select display_value, return_value from ...
    --                    or
    --                    select display_and_return_value from ...
    --     p_rows         number of rows for radio groups, default 1, i.e. all options shown on same row
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe. --
    --     p_label_template           = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --     p_show_extra = show current value even if not part of LOV
    -- Example(s):
    --   select wwv_flow_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_query           in varchar2,
    p_rows            in number   default 1,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function radio_group_from_lov (
    -- Generates an HTML radio group from a named LOV
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_lov        = named LOV used for this radio group
    --                    select display_and_return_value from ...
    --     p_rows         number of rows for radio groups, default 1, i.e. all options shown on same row
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --     p_show_extra = show current value even if not part of LOV
    --
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_lov             in varchar2,
    p_rows            in number   default 1,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function hidden (
    --
    -- Return an HTML form hidden value.  Hidden values will not show up on your dynamically
    -- generated HTML page however they will be passed to the wwv_flow.accept procedure.
    -- example: select wwv_flow_item.hidden(2,empno) from emp
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Value of the hidden HTML form element.
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --
    --
    -- example(s):
    --     select wwv_flow_item.hidden(10,empno) c from emp
    --
    p_idx        in number,
    p_value      in varchar2 default null,
    p_attributes in varchar2 default null,
    p_item_id    in varchar2 default null,
    p_item_label in varchar2 default null
) return varchar2;


function display_and_save (
    --
    -- Return an HTML form hidden value and display the text.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Value of the hidden HTML form element.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.display_and_save(10,empno) c from emp
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function text (
    -- Generates an HTML input type of text.  Basically a single hight form field.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Text displayed in HTML input type equals text.
    --     p_size       = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength  = Maximum width that your brower will let you type into the field
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.text(1,ename) from emp
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_size            in number   default 20,
    p_maxLength       in number   default 2000,
    p_attributes      in varchar2 default null,
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function textarea (
    -- Generates an HTML input type of text.  Basically a single hight form field.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Text displayed in HTML textarea.
    --     p_rows       = Height of the textarea (HTML rows attribute)
    --     p_cols       = Width of text displayed on screen (HTML cols attribute)
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.textarea(1,ename) from emp
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_rows            in number   default 4,
    p_cols            in number   default 40,
    p_attributes      in varchar2 default null,
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function date_popup (
    -- Generates an HTML input type of text with an image that pops up date picker.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_row        = depricated
    --     p_value      = Oracle date datatype.
    --     p_date_format= Oracle date format mask for alternate date displays, defaults to 'DD-MON-YYYY'.
    --     p_size       = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength  = Maximum width that your brower will let you type into the field
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe. --
    --     p_validaiton_date = date value to be used in case of failed validations to re-render that value for the user to change
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --     select wwv_flow_item.date_popup(4, null,HIREDATE) "Date hired" from emp
    --
    p_idx             in number,
    p_row             in number default null,-- depricated
    p_value           in date default null,
    p_date_format     in varchar2 default 'DD-MON-YYYY',
    p_size            in number default 20,
    p_maxLength       in number default 2000,
    p_attributes      in varchar2 default null,
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_display_as      in varchar2 default null,
    p_validation_date in varchar2 default null,
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function date_popup2 (
    -- Generates an HTML input type of text with an image that pops up date picker.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = Oracle date datatype.
    --     p_date_format= Oracle date format mask for alternate date displays, defaults to 'DD-MON-YYYY'.
    --     p_size       = Width of text displayed on screen (HTML width attribute)
    --     p_maxLength  = Maximum width that your brower will let you type into the field
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe. --
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --
    -- example(s):
    --     select wwv_flow_item.date_popup(4, null,HIREDATE) "Date hired" from emp
    --
    p_idx                   in number,
    p_value                 in date     default null,
    p_date_format           in varchar2 default null,--'DD-MON-YYYY', not sure why earlier date_popup the format is defaulted
    p_size                  in number   default 20,
    p_maxLength             in number   default 2000,
    p_attributes            in varchar2 default null,
    p_item_id               in varchar2 default null,
    p_item_label            in varchar2 default null,
    p_default_value         in varchar2 default null,
    p_max_value             in varchar2 default null,
    p_min_value             in varchar2 default null,
    p_show_on               in varchar2 default 'button',
    p_number_of_months      in varchar2 default null,
    p_navigation_list_for   in varchar2 default 'NONE',
    p_year_range            in varchar2 default null,
    p_validation_date       in varchar2 default null,
    p_label_template        in varchar2 default null,
    p_before_item           in varchar2 default null,
    p_after_item            in varchar2 default null
) return varchar2;


function select_list (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_list_values= A list of static values seperated by commas.
    --                    Display values and return values are
    --                    seperated by semicolons.
    --                    to write back the selected date into the proper row.
    --                    format: display1;Return1,Display2;Return2...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_show_extra = show current value even if not part of LOV
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --   select wwv_flow_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_list_values     in varchar2 default null,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'NO',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function select_list_from_query (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_query      = A SQL SELECT statement in the format:
    --                    select display_value, return_value from ...
    --                    or
    --                    select display_and_return_value from ...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe. --
    --     p_show_extra = show current value even if not part of LOV
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- Example(s):
    --   select wwv_flow_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_query           in varchar2,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2;


function select_list_from_query_xl (
    --
    -- Same as select_list_from_query but returns clob
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_query           in varchar2,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return clob;


function popup_from_lov (
    --
    --  popup LOV from a named LOV
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_name argument.
    --     p_lov_name   = named DYNAMIC LOV used for this popup
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_column_id  = tabular form column ID
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --     select wwv_flow_item.popup_from_lov (1,deptno,'DEPT') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_name          in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'NO',
    p_show_null         in varchar2 default 'NO',
    p_null_value        in varchar2 default '%null%',
    p_null_text         in varchar2 default '%',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null,
    p_column_id         in number   default null,
    p_label_template    in varchar2 default null,
    p_before_item       in varchar2 default null,
    p_after_item        in varchar2 default null
) return varchar2;


function popup_from_query (
    --
    --  popup LOV from a query
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_query argument.
    --     p_lov_query  = LOV query used for this popup
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_column_id  = tabular form column ID
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --     select wwv_flow_item.popup_from_query (1,deptno,'select dname, deptno from dept') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_query         in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'NO',
    p_show_null         in varchar2 default 'NO',
    p_null_value        in varchar2 default '%null%',
    p_null_text         in varchar2 default '%',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null,
    p_column_id         in number   default null,
    p_label_template    in varchar2 default null,
    p_before_item       in varchar2 default null,
    p_after_item        in varchar2 default null
) return varchar2;


function popupkey_from_lov (
    --
    --  popupkey LOV from a named LOV
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --                    Due to the behavior of popupkey the next index value should be p_idx + 1.
    -- example:
    --     select wwv_flow_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt,
    --            wwv_flow_item.hidden(3,empno) eno
    --     from emp
    --
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_name argument.
    --     p_lov_name   = named LOV used for this popup
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_column_id  = tabular form column ID
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --     select wwv_flow_item.popupkey_from_lov (1,deptno,'DEPT') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_name          in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'YES',
    p_show_null         in varchar2 default 'NO',
    p_null_value        in varchar2 default '%null%',
    p_null_text         in varchar2 default '%',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null,
    p_column_id         in number   default null,
    p_label_template    in varchar2 default null,
    p_before_item       in varchar2 default null,
    p_after_item        in varchar2 default null
) return varchar2;


function popupkey_from_query (
    --
    --  popupkey LOV from a query
    --
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --                    Due to the behavior of popupkey the next index value should be p_idx + 1.
    -- example:
    --     select wwv_flow_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt,
    --            wwv_flow_item.hidden(3,empno) eno
    --     from emp
    --
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_lov_query argument.
    --     p_lov_query  = LOV query used for this popup
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_column_id  = tabular form column ID
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    -- example(s):
    --     select wwv_flow_item.popupkey_from_query (1,deptno,'select dname, deptno from dept') dt from emp
    --
    p_idx               in number,
    p_value             in varchar2 default null,
    p_lov_query         in varchar2,
    p_width             in varchar2 default null,
    p_max_length        in varchar2 default null,
    p_form_index        in varchar2 default '0',
    p_element_index     in varchar2 default null,
    p_escape_html       in varchar2 default null,
    p_max_elements      in varchar2 default null,
    p_attributes        in varchar2 default null,
    p_eval_value        in varchar2 default null,
    p_ok_to_query       in varchar2 default 'YES',
    p_translation       in varchar2 default 'NO',
    p_return_key        in varchar2 default 'YES',
    p_show_null         in varchar2 default 'NO',
    p_null_value        in varchar2 default '%null%',
    p_null_text         in varchar2 default '%',
    p_item_id           in varchar2 default null,
    p_item_label        in varchar2 default null,
    p_column_id         in number   default null,
    p_label_template    in varchar2 default null,
    p_before_item       in varchar2 default null,
    p_after_item        in varchar2 default null
) return varchar2;


function select_list_from_lov (
    -- Generates an HTML select list from static inputs.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_value      = The current value, the value should be one of the values in
    --                    the p_list_values aregument.
    --     p_query      = A SQL SELECT statement in the format:
    --                    select display_value, return_value from ...
    --                    or
    --                    select display_and_return_value from ...
    --     p_attributes = Extra HTML arguments you wish to add
    --     p_show_null  = Include an extra select option to allow the "null" selection.
    --                    Range of values is YES and NO
    --     p_null_value = The value to be returned when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_null_text  = The value to be displayed when a user selects the null option.
    --                    Only relevant when p_show_null is YES.
    --     p_item_id    = Will set the ID of the item to this value (id="...").  Must be unique!  Try concatenating some string with rownum.  Required for 508 compliance
    --     p_item_label = Creates an invisible label for an item.  Used for Section 508 Compliance.  Class is hideMeButHearMe.
    --     p_show_extra = show current value even if not part of LOV
    --     p_label_template = Optional label template to be used instead of built-in one
    --     p_before_item= HTML to be printed before the item lable and field
    --     p_after_item = HTML to be printed after the item lable and field
    --
    -- example(s):
    --   select wwv_flow_item.select_list(1,'Y','Yes;Y,No;N') from emp
    --
    -- Notes:
    --   This procedure requires a flows environment thus is designed to
    --   be called from within a page region or page process.
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_lov             in varchar2,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return varchar2
    ;

function select_list_from_lov_xl (
    --
    -- Same as select_list_from_lov but returns clob
    --
    p_idx             in number,
    p_value           in varchar2 default null,
    p_lov             in varchar2,
    p_attributes      in varchar2 default null,
    p_show_null       in varchar2 default 'YES',
    p_null_value      in varchar2 default '%null%',
    p_null_text       in varchar2 default '%',
    p_item_id         in varchar2 default null,
    p_item_label      in varchar2 default null,
    p_show_extra      in varchar2 default 'YES',
    p_label_template  in varchar2 default null,
    p_before_item     in varchar2 default null,
    p_after_item      in varchar2 default null
) return clob
    ;

function text_from_lov_query (
    p_value       in varchar2 default null,
    p_query       in varchar2,
    p_null_text   in varchar2 default '%')
    return varchar2;


function text_from_lov (
    --
    -- Display only based upon LOV
    --
    p_value       in varchar2 default null,
    p_lov         in varchar2,
    p_null_text   in varchar2 default '%')
    return varchar2;

function md5 (
    --
    -- example:
    --   select wwv_flow_item.md5(ename,job) from emp
    --
    p_value01    in varchar2 default null,
    p_value02    in varchar2 default null,
    p_value03    in varchar2 default null,
    p_value04    in varchar2 default null,
    p_value05    in varchar2 default null,
    p_value06    in varchar2 default null,
    p_value07    in varchar2 default null,
    p_value08    in varchar2 default null,
    p_value09    in varchar2 default null,
    p_value10    in varchar2 default null,
    p_value11    in varchar2 default null,
    p_value12    in varchar2 default null,
    p_value13    in varchar2 default null,
    p_value14    in varchar2 default null,
    p_value15    in varchar2 default null,
    p_value16    in varchar2 default null,
    p_value17    in varchar2 default null,
    p_value18    in varchar2 default null,
    p_value19    in varchar2 default null,
    p_value20    in varchar2 default null,
    p_value21    in varchar2 default null,
    p_value22    in varchar2 default null,
    p_value23    in varchar2 default null,
    p_value24    in varchar2 default null,
    p_value25    in varchar2 default null,
    p_value26    in varchar2 default null,
    p_value27    in varchar2 default null,
    p_value28    in varchar2 default null,
    p_value29    in varchar2 default null,
    p_value30    in varchar2 default null,
    p_value31    in varchar2 default null,
    p_value32    in varchar2 default null,
    p_value33    in varchar2 default null,
    p_value34    in varchar2 default null,
    p_value35    in varchar2 default null,
    p_value36    in varchar2 default null,
    p_value37    in varchar2 default null,
    p_value38    in varchar2 default null,
    p_value39    in varchar2 default null,
    p_value40    in varchar2 default null,
    p_value41    in varchar2 default null,
    p_value42    in varchar2 default null,
    p_value43    in varchar2 default null,
    p_value44    in varchar2 default null,
    p_value45    in varchar2 default null,
    p_value46    in varchar2 default null,
    p_value47    in varchar2 default null,
    p_value48    in varchar2 default null,
    p_value49    in varchar2 default null,
    p_value50    in varchar2 default null,
    p_col_sep    in varchar2 default '|')
    return varchar2
    ;


function md5_checksum (
    p_value01    in varchar2 default null,
    p_value02    in varchar2 default null,
    p_value03    in varchar2 default null,
    p_value04    in varchar2 default null,
    p_value05    in varchar2 default null,
    p_value06    in varchar2 default null,
    p_value07    in varchar2 default null,
    p_value08    in varchar2 default null,
    p_value09    in varchar2 default null,
    p_value10    in varchar2 default null,
    p_value11    in varchar2 default null,
    p_value12    in varchar2 default null,
    p_value13    in varchar2 default null,
    p_value14    in varchar2 default null,
    p_value15    in varchar2 default null,
    p_value16    in varchar2 default null,
    p_value17    in varchar2 default null,
    p_value18    in varchar2 default null,
    p_value19    in varchar2 default null,
    p_value20    in varchar2 default null,
    p_value21    in varchar2 default null,
    p_value22    in varchar2 default null,
    p_value23    in varchar2 default null,
    p_value24    in varchar2 default null,
    p_value25    in varchar2 default null,
    p_value26    in varchar2 default null,
    p_value27    in varchar2 default null,
    p_value28    in varchar2 default null,
    p_value29    in varchar2 default null,
    p_value30    in varchar2 default null,
    p_value31    in varchar2 default null,
    p_value32    in varchar2 default null,
    p_value33    in varchar2 default null,
    p_value34    in varchar2 default null,
    p_value35    in varchar2 default null,
    p_value36    in varchar2 default null,
    p_value37    in varchar2 default null,
    p_value38    in varchar2 default null,
    p_value39    in varchar2 default null,
    p_value40    in varchar2 default null,
    p_value41    in varchar2 default null,
    p_value42    in varchar2 default null,
    p_value43    in varchar2 default null,
    p_value44    in varchar2 default null,
    p_value45    in varchar2 default null,
    p_value46    in varchar2 default null,
    p_value47    in varchar2 default null,
    p_value48    in varchar2 default null,
    p_value49    in varchar2 default null,
    p_value50    in varchar2 default null,
    p_col_sep    in varchar2 default '|',
    p_item_id    in varchar2 default null)
    return varchar2;


function md5_hidden (
    --
    -- Return an HTML form hidden value.  Hidden values will not show up on your dynamically
    -- generated HTML page however they will be passed to the wwv_flow.accept procedure.
    --
    -- Arguments:
    --     p_idx        = The form element name, e.g. 1 equals f01, 2 equals f02, etc.
    --                    Typically the p_idx argument is constant for a given column.
    --     p_valueXX    = Value of the hidden HTML form element which will be md5 checksum encoded.
    --     p_item_id    = ID of the HTML form item
    --
    -- example(s):
    --     select wwv_flow_item.md5_hidden(10,empno,ename) c from emp
    --     select wwv_flow_item.md5_hidden(10,empno,ename,job,sal) c from emp
    --
    --
    p_idx        in number,
    p_value01    in varchar2 default null,
    p_value02    in varchar2 default null,
    p_value03    in varchar2 default null,
    p_value04    in varchar2 default null,
    p_value05    in varchar2 default null,
    p_value06    in varchar2 default null,
    p_value07    in varchar2 default null,
    p_value08    in varchar2 default null,
    p_value09    in varchar2 default null,
    p_value10    in varchar2 default null,
    p_value11    in varchar2 default null,
    p_value12    in varchar2 default null,
    p_value13    in varchar2 default null,
    p_value14    in varchar2 default null,
    p_value15    in varchar2 default null,
    p_value16    in varchar2 default null,
    p_value17    in varchar2 default null,
    p_value18    in varchar2 default null,
    p_value19    in varchar2 default null,
    p_value20    in varchar2 default null,
    p_value21    in varchar2 default null,
    p_value22    in varchar2 default null,
    p_value23    in varchar2 default null,
    p_value24    in varchar2 default null,
    p_value25    in varchar2 default null,
    p_value26    in varchar2 default null,
    p_value27    in varchar2 default null,
    p_value28    in varchar2 default null,
    p_value29    in varchar2 default null,
    p_value30    in varchar2 default null,
    p_value31    in varchar2 default null,
    p_value32    in varchar2 default null,
    p_value33    in varchar2 default null,
    p_value34    in varchar2 default null,
    p_value35    in varchar2 default null,
    p_value36    in varchar2 default null,
    p_value37    in varchar2 default null,
    p_value38    in varchar2 default null,
    p_value39    in varchar2 default null,
    p_value40    in varchar2 default null,
    p_value41    in varchar2 default null,
    p_value42    in varchar2 default null,
    p_value43    in varchar2 default null,
    p_value44    in varchar2 default null,
    p_value45    in varchar2 default null,
    p_value46    in varchar2 default null,
    p_value47    in varchar2 default null,
    p_value48    in varchar2 default null,
    p_value49    in varchar2 default null,
    p_value50    in varchar2 default null,
    p_col_sep    in varchar2 default '|',
    p_item_id    in varchar2 default null)
    return varchar2
    ;

procedure mru (
    --Multi Row Update (MRU)
    --  Perform updates to multiple rows of a single table given a primary key
    --  comprised of one or two columns.  Perform lost update detection via an
    --  md5 checksum.
    --
    --Arguments:
    --  p_table_owner      = The owner of the table.
    --  p_table_name       = The name of the table.
    --  p_pk_col           = The primary key column name.
    --                       e.g. p_pk_col=>'empno'
    --  p_pk_col_src_type  = type of pk default (PL/SQL expression or function, NULL)
    --  p_pk_col_src       = pk default source
    --  p_pk_vals          = Array of primary key values.
    --  p_pk_col2          = The secondary key column name.
    --                       e.g. p_pk_col2=>'deptno'
    --  p_pk_col2_src_type = type of pk source (PL/SQL expression or function, NULL)
    --  p_pk_col2_src      = pk default source
    --  p_pk_vals2         = Array of secondary key values.
    --  p_col_name01..50   = Column names you are trying to update.
    --                       e.g. p_col_name01=>'ename', p_col_name01=>'sal'
    --  p_col_vals01..50   = Array of column values for the corresponding column names.
    --                       For example, p_col_vals01 should have value of p_col_name01 column.
    --  p_md5_row_checksum = The current checksum of updating rows in array.
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_pk_col             in varchar2 default null,
    p_pk_col_src_type    in varchar2 default null,
    p_pk_col_src         in varchar2 default null,
    p_pk_vals            in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_pk_col2            in varchar2 default null,
    p_pk_col2_src_type   in varchar2 default null,
    p_pk_col2_src        in varchar2 default null,
    p_pk_vals2           in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_name01         in varchar2 default null,
    p_col_name02         in varchar2 default null,
    p_col_name03         in varchar2 default null,
    p_col_name04         in varchar2 default null,
    p_col_name05         in varchar2 default null,
    p_col_name06         in varchar2 default null,
    p_col_name07         in varchar2 default null,
    p_col_name08         in varchar2 default null,
    p_col_name09         in varchar2 default null,
    p_col_name10         in varchar2 default null,
    p_col_name11         in varchar2 default null,
    p_col_name12         in varchar2 default null,
    p_col_name13         in varchar2 default null,
    p_col_name14         in varchar2 default null,
    p_col_name15         in varchar2 default null,
    p_col_name16         in varchar2 default null,
    p_col_name17         in varchar2 default null,
    p_col_name18         in varchar2 default null,
    p_col_name19         in varchar2 default null,
    p_col_name20         in varchar2 default null,
    p_col_name21         in varchar2 default null,
    p_col_name22         in varchar2 default null,
    p_col_name23         in varchar2 default null,
    p_col_name24         in varchar2 default null,
    p_col_name25         in varchar2 default null,
    p_col_name26         in varchar2 default null,
    p_col_name27         in varchar2 default null,
    p_col_name28         in varchar2 default null,
    p_col_name29         in varchar2 default null,
    p_col_name30         in varchar2 default null,
    p_col_name31         in varchar2 default null,
    p_col_name32         in varchar2 default null,
    p_col_name33         in varchar2 default null,
    p_col_name34         in varchar2 default null,
    p_col_name35         in varchar2 default null,
    p_col_name36         in varchar2 default null,
    p_col_name37         in varchar2 default null,
    p_col_name38         in varchar2 default null,
    p_col_name39         in varchar2 default null,
    p_col_name40         in varchar2 default null,
    p_col_name41         in varchar2 default null,
    p_col_name42         in varchar2 default null,
    p_col_name43         in varchar2 default null,
    p_col_name44         in varchar2 default null,
    p_col_name45         in varchar2 default null,
    p_col_name46         in varchar2 default null,
    p_col_name47         in varchar2 default null,
    p_col_name48         in varchar2 default null,
    p_col_name49         in varchar2 default null,
    p_col_name50         in varchar2 default null,
    p_col_mask01         in varchar2 default null,
    p_col_mask02         in varchar2 default null,
    p_col_mask03         in varchar2 default null,
    p_col_mask04         in varchar2 default null,
    p_col_mask05         in varchar2 default null,
    p_col_mask06         in varchar2 default null,
    p_col_mask07         in varchar2 default null,
    p_col_mask08         in varchar2 default null,
    p_col_mask09         in varchar2 default null,
    p_col_mask10         in varchar2 default null,
    p_col_mask11         in varchar2 default null,
    p_col_mask12         in varchar2 default null,
    p_col_mask13         in varchar2 default null,
    p_col_mask14         in varchar2 default null,
    p_col_mask15         in varchar2 default null,
    p_col_mask16         in varchar2 default null,
    p_col_mask17         in varchar2 default null,
    p_col_mask18         in varchar2 default null,
    p_col_mask19         in varchar2 default null,
    p_col_mask20         in varchar2 default null,
    p_col_mask21         in varchar2 default null,
    p_col_mask22         in varchar2 default null,
    p_col_mask23         in varchar2 default null,
    p_col_mask24         in varchar2 default null,
    p_col_mask25         in varchar2 default null,
    p_col_mask26         in varchar2 default null,
    p_col_mask27         in varchar2 default null,
    p_col_mask28         in varchar2 default null,
    p_col_mask29         in varchar2 default null,
    p_col_mask30         in varchar2 default null,
    p_col_mask31         in varchar2 default null,
    p_col_mask32         in varchar2 default null,
    p_col_mask33         in varchar2 default null,
    p_col_mask34         in varchar2 default null,
    p_col_mask35         in varchar2 default null,
    p_col_mask36         in varchar2 default null,
    p_col_mask37         in varchar2 default null,
    p_col_mask38         in varchar2 default null,
    p_col_mask39         in varchar2 default null,
    p_col_mask40         in varchar2 default null,
    p_col_mask41         in varchar2 default null,
    p_col_mask42         in varchar2 default null,
    p_col_mask43         in varchar2 default null,
    p_col_mask44         in varchar2 default null,
    p_col_mask45         in varchar2 default null,
    p_col_mask46         in varchar2 default null,
    p_col_mask47         in varchar2 default null,
    p_col_mask48         in varchar2 default null,
    p_col_mask49         in varchar2 default null,
    p_col_mask50         in varchar2 default null,
    p_col_vals01         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals02         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals03         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals04         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals05         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals06         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals07         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals08         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals09         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals10         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals11         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals12         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals13         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals14         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals15         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals16         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals17         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals18         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals19         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals20         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals21         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals22         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals23         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals24         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals25         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals26         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals27         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals28         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals29         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals30         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals31         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals32         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals33         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals34         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals35         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals36         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals37         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals38         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals39         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals40         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals41         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals42         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals43         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals44         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals45         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals46         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals47         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals48         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals49         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_col_vals50         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_md5_row_checksum   in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_row_status         in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_error_display_location in varchar2 default null,
    p_error_region_id        in number   default null,
    p_process_error          in varchar2 default null
    );


-- ------------------------------------------------------------------------------------------------------------

procedure multi_row_delete (
    --
    -- This procedure performs a multi row delete of a table or view.
    -- This procedure can be called using the following method:
    --
    --   Supply the ID of the region with the short MRU string
    --   OWNER:TABLE:PK_COLUMN1:PK_COLUMN2
    --
    p_mru_string             in varchar2 default null,
    p_region_id              in number   default null,
    p_error_display_location in varchar2 default null,
    p_process_error          in varchar2 default null
);



-- ------------------------------------------------------------------------------------------------------------

procedure multi_row_update (
    --
    -- This procedure performs a multi row update of a table or view.
    -- This procedure can be called using two methods:
    --
    -- Method 1: (Complete P_MRU_STRING no region ID)
    --   Supply only a complete mru string.
    --   OWNER:TABLE:PK_COLUMN1,PK_IDX:PK_COLUMN2,PK_IDX2|COL,IDX:COL,IDX...
    --
    -- Method 2: (Short P_MRU_STRING and region ID)
    --   Supply the ID of the region with the short MRU string
    --   OWNER:TABLE:PK_COLUMN1:PK_COLUMN2
    --
    p_mru_string             in varchar2 default null,
    p_region_id              in number   default null,
    p_error_display_location in varchar2 default null,
    p_process_error          in varchar2 default null
);

function fetch_g_build_options_included return varchar2
;

function fetch_g_build_options_excluded return varchar2
;

end wwv_flow_item;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REGION_TREE" as

--  Copyright (c) Oracle Corporation 2001. All Rights Reserved.
--
--    DESCRIPTION
--      Display a tree structure
--
--    SECURITY
--
--    NOTES
--      show_tree.p_id   = the globally unique ID of the tree identifies a tree to paint in the wwv_flow_trees table
--

procedure show_tree (
    p_id          in number,
    p_expand_id   in varchar2 default null,
    p_contract_id in varchar2 default null)
    ;

end wwv_flow_region_tree;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TREE_GLOBAL_VARS"
as
  g_subs          wwv_flow_tree_subs;
  g_max_level     number;
  g_error         varchar2(32767);
  g_expand_all    boolean := false;
  g_contract_all  boolean := false;
end wwv_flow_tree_global_vars;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TREE"
as

--  Copyright (c) Oracle Corporation 2001. All Rights Reserved.
--
--    DESCRIPTION
--      Tree control
--
--    SECURITY
--      Private to flows
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--

  function build (
    p_tree_id                  in number,
    p_query                    in varchar2,
    p_top_id                   in varchar2,
    p_max_level                in integer default 5,
    p_order_by                 in varchar2 default null,
    p_unexpanded_parent        in varchar2 default '|+-',
    p_unexpanded_parent_last   in varchar2 default '`+-',
    p_expanded_parent          in varchar2 default '|=-',
    p_expanded_parent_last     in varchar2 default '`=-',
    p_leaf_node                in varchar2 default '|--',
    p_leaf_node_last           in varchar2 default '`--',
    p_indent_vertical_line     in varchar2 default '|  ',
    p_indent_space             in varchar2 default '   ')
    return wwv_flow_tree_subs;

  procedure expand(
    p_tree_id     in number,
    p_id          in varchar2);

  procedure contract(
    p_tree_id       in number,
    p_id            in varchar2);

  procedure reset(
    p_tree_id  in number);
end wwv_flow_tree;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_BUTTON"
as

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================
c_action_submit         constant varchar2(15) := 'SUBMIT';
c_action_redirect_url   constant varchar2(15) := 'REDIRECT_URL';
c_action_redirect_page  constant varchar2(15) := 'REDIRECT_PAGE';
c_action_defined_by_da  constant varchar2(15) := 'DEFINED_BY_DA';
c_action_javascript     constant varchar2(15) := 'JAVASCRIPT';
c_action_report         constant varchar2(15) := 'REPORT';


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Function returning the HTML for an APEX page button
--==============================================================================
function render_native_button (
    p_style                     in varchar2,
    p_action                    in varchar2,
    p_redirect_url              in varchar2 default null,
    p_button_id                 in varchar2 default null,
    p_button_name               in varchar2,
    p_button_label              in varchar2 default null,
    p_button_css_classes        in varchar2 default null,
    p_button_attributes         in varchar2 default null,
    --
    p_button_image              in varchar2 default null,
    p_button_image_attributes   in varchar2 default null,
    p_template                  in varchar2 default null )
    return varchar2;

--==============================================================================
-- Procedure to print the HTML for an APEX page button to the buffer
--==============================================================================
procedure render_native_button (
    p_style                     in varchar2,
    p_action                    in varchar2,
    p_redirect_url              in varchar2 default null,
    p_button_id                 in varchar2 default null,
    p_button_name               in varchar2,
    p_button_label              in varchar2 default null,
    p_button_css_classes        in varchar2 default null,
    p_button_attributes         in varchar2 default null,
    --
    p_button_image              in varchar2 default null,
    p_button_image_attributes   in varchar2 default null,
    p_template                  in varchar2 default null );

--==============================================================================
-- Function that returns the button redirect_url, based on button attributes
--==============================================================================
function get_button_redirect_url (
    p_button_action in varchar2,
    p_clear_page    in varchar2,
    p_clear_cache   in varchar2,
    p_page_id       in varchar2,
    p_request       in varchar2,
    p_arg_names     in varchar2,
    p_arg_values    in varchar2,
    p_url_target    in varchar2 )
    return varchar2;


end wwv_flow_button;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WIZARD_API"
as

empty_vc_arr wwv_flow_global.vc_arr2;

function array_element(
       p_vcarr in wwv_flow_global.vc_arr2,
       p_index in number )
       return varchar2;

function get_pk (
       p_table_owner  in varchar2,
       p_table_name   in varchar2
       ) return varchar2;

function get_column_data_type (
      p_table_owner in varchar2,
      p_table_name  in varchar2,
      p_column_name in varchar2
      ) return varchar2;

function table_view_exists (
      p_name in varchar2,
      p_owner in varchar2
      ) return boolean;

function updateable_query_exists (
      p_flow_id in number,
      p_page_id in number)
   return boolean;

function ir_report_exists (
      p_flow_id   in number,
      p_page_id   in number,
      p_region_id in number default null)
   return boolean;

function map_exists (
      p_flow_id   in number,
      p_page_id   in number,
      p_region_id in number default null)
   return boolean;

function flash_chart_exists (
      p_flow_id   in number,
      p_page_id   in number,
      p_region_id in number default null)
   return boolean;

function jstree_exists (
      p_flow_id   in number,
      p_page_id   in number,
      p_region_id in number default null)
   return boolean;

function tabular_form_exists (
      p_flow_id   in number,
      p_page_id   in number,
      p_region_id in number default null)
   return boolean;

function page_exists (p_flow_id in number, p_page_id in number) return boolean;

function get_owner (
   -- If the owner user chose is equal to flows' owner,
   -- return #OWNER#.
   --
      p_flow_id    in number,
      p_owner      in varchar2 )
   return varchar2;

function get_flow_owner (
   -- Get the owner of current flow.
   --
       p_flow_id   in number)
   return varchar2;

function shortcut_exist(
   --
   -- check whether TEXT_ESCAPE_JS shortcut type exists or not
   --
   p_flow_id in number,
   p_shortcut_name in varchar2)
   return boolean;

function shortcut_name_exist(
   --
   -- check whether shortcut name exists or not
   --
   p_flow_id in number,
   p_shortcut_name in varchar2)
   return boolean;


function get_shortcut_name(
   --
   -- check whether shortcut name exists or not
   --
   p_flow_id in number,
   p_shortcut_name in varchar2)
   return varchar2;

-- -----------------------------------------------------------------------------------
-- get valid item name
-- p_column_name
-- returns valid item name for given column name

function get_valid_item_name (
    p_column_name varchar2,
    p_page_id     number default null
) return varchar2;

--==============================================================================
-- Returns the page item in substitution syntax &ITEM.
-- In case if the page item is a multibyte page item it will return &"ITEM".
--==============================================================================
function get_item_substitution_value (
    p_item_name in varchar2 )
    return varchar2;

--==============================================================================
-- Returns the page item as a bind variable :ITEM
-- In case if the page item is a multibyte page item it will return :"ITEM"
--==============================================================================
function get_item_bind_variable (
    p_item_name in varchar2 )
    return varchar2;

--
-- get group region id
-- returns valid region id for given region name, page id, app id and sequence
-- as part of UI Defaults groupings
function get_group_region_id (
    p_flow_id     number,
    p_page_id     number,
    p_group_seq   number,
    p_group_name  varchar2
) return number;

--
-- Check for UI Default Groups
--
 function ui_def_groups_exist(
      p_table_owner   in varchar2,
      p_table_name    in varchar2
  )return boolean;

--
-- Check for Column Group on Interactive Report
--
 function ir_col_group_exists(
      p_flow_id      in number,
      p_worksheet_id in number,
      p_group_name   in varchar2
 )return boolean;

-- -----------------------------------------------------------------------------------
-- get query columns
-- p_owner: parse-as schema name
-- p_query: sql query

procedure get_query_columns (
      p_owner        in varchar2,
      p_query        in varchar2,
      p_include_blob in varchar2 default 'N',
      p_include_tz   in varchar2 default 'N',
      p_columns      out wwv_flow_global.vc_arr2,
      p_types        out wwv_flow_global.vc_arr2,
      p_col_max_len  out wwv_flow_global.vc_arr2
);

 procedure get_varchar_query_columns (
      p_owner         in varchar2,
     p_query          in varchar2,
      p_columns     out wwv_flow_global.vc_arr2
  );

 function is_old_ppr_template (
    p_flow_id            in number,
    p_report_template_id in number
 ) return boolean;

procedure create_page (
    p_flow_id              in number,
    p_page_id              in number,
    p_name                 in varchar2,
    p_user_interface_id    in number,
    p_alias                in varchar2 default null,
    p_title                in varchar2 default null,
    --
    p_tab_set              in varchar2 default null,
    p_tab_name             in varchar2 default null,
    p_tab_label            in varchar2 default null,
    --
    p_html_page_header     in varchar2 default null,
    p_javascript_code      in varchar2 default null,
    --
    p_breadcrumb_id        in number   default null,
    p_breadcrumb_name      in varchar2 default null,
    p_parent_breadcrumb_id in number   default null );

procedure create_global_page (
    p_application_id    in number,
    p_page_id           in number,
    p_user_interface_id in number );

procedure create_updateable_report (
   p_flow_id            in number,
   p_page_id            in number,
   p_page_name          in varchar2,
   p_user_interface_id  in number,
   p_use_ui_default     in varchar2 default 'Y',
   --
   p_tabset             in varchar2 default null,
   p_tab_name           in varchar2 default null, -- current tab name
   p_tab_text           in varchar2 default null,
   p_select_columns     in varchar2 default null,
   p_updatable_columns  in varchar2 default null,
   p_table_pk1          in varchar2 default null,
   p_table_pk1_src_type in varchar2 default null,
   p_table_pk1_src      in varchar2 default null,
   p_table_pk2          in varchar2 default null,
   p_table_pk2_src_type in varchar2 default null,
   p_table_pk2_src      in varchar2 default null,
   p_table_pk3          in varchar2 default null,
   p_table_pk3_src_type in varchar2 default null,
   p_table_pk3_src      in varchar2 default null,
   p_table_fk           in varchar2 default null,
   p_table_fk_src_type  in varchar2 default null,
   p_table_fk_src       in varchar2 default null,
   p_implement_type     in number   default null,
   p_security_group_id  in number   default null,
   --
   p_query              in varchar2,
   p_region_title       in varchar2,
   p_region_template    in number,
   p_report_template    in number,
   p_cancel_branch      in number,
   p_submit_branch      in number,
   p_process            in varchar2,
   p_cancel_button_name in varchar2 default null,
   p_delete_button_name in varchar2 default null,
   p_add_button_name    in varchar2 default null,
   p_submit_button_name in varchar2 default null,
   p_is_master_detail   in boolean default false)
   ;

procedure create_form_on_sp (
   p_flow_id            in number,
   p_page_id            in number,
   p_page_name          in varchar2,
   p_user_interface_id  in number,
   p_tab_set            in varchar2 default null,
   p_tab_name           in varchar2 default null, -- current tab name
   p_tab_text           in varchar2 default null,
   p_region_title       in varchar2 default null,
   p_region_template    in number,
   p_schema             in varchar2,
   p_procedure          in varchar2,
   p_collection_name    in varchar2 default 'SP_WIZARD',
   p_cancel_branch      in number,
   p_submit_branch      in number,
   p_cancel_button_name in varchar2 default 'Cancel',
   p_submit_button_name in varchar2 default 'Submit',
   --
   p_button_label       in varchar2 default 'RUN',
   p_invoking_page_id   in varchar2 default null,
   p_invoking_region_id in varchar2 default null,
   p_invoking_button_p  in varchar2 default null)
   ;

procedure create_form_on_table (
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_page_name               in varchar2 default 'form',
    p_user_interface_id       in number,
    p_use_ui_default          in varchar2 default 'Y',
    --
    p_tab_set                 in varchar2 default null,
    p_tab_name                in varchar2 default null, -- current tab name
    p_tab_text                in varchar2 default null,
    --
    p_region_title            in varchar2 default null,
    p_region_template         in number default null,
    p_table_owner             in varchar2 default null,
    p_table_name              in varchar2 default null,
    p_table_pk_column_name    in varchar2 default null,
    p_table_pk_src_type       in varchar2 default null,
    p_table_pk_src            in varchar2 default null,
    p_table_pk2_column_name   in varchar2 default null,
    p_table_pk2_src_type       in varchar2 default null,
    p_table_pk2_src            in varchar2 default null,
    p_table_rv_column_name    in varchar2 default null,
    p_display_column_list     in varchar2 default null,
    --
    p_create_button_name      in varchar2 default 'Create',
    p_save_button_name        in varchar2 default 'Apply Changes',
    p_delete_button_name      in varchar2 default 'Delete',
    p_cancel_button_name      in varchar2 default 'Cancel',
    p_branch                  in number default null,
    p_cancel_branch           in number default null,
    --
    p_insert                  in varchar2 default 'Y',
    p_update                  in varchar2 default 'Y',
    p_delete                  in varchar2 default 'Y'
    );

procedure create_form_on_ws (
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_ws_id                   in number,
    p_operation_id            in number,
    p_page_name               in varchar2 default 'form',
    p_user_interface_id       in number,
    --
    p_tab_set                 in varchar2 default null,
    p_tab_name                in varchar2 default null, -- current tab name
    p_tab_text                in varchar2 default null,
    --
    p_region_title            in varchar2 default null,
    p_region_template         in number default null,
    p_inputs_collection       in varchar2,
    p_outputs_collection      in varchar2,
    p_auth_collection         in varchar2,
    p_report_collection_name  in varchar2 default null
    );

procedure create_form_on_ws_rpt (
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_ws_id                   in number,
    p_operation_id            in number,
    p_page_name               in varchar2 default 'form',
    p_user_interface_id       in number,
    --
    p_tab_set                 in varchar2 default null,
    p_tab_name                in varchar2 default null, -- current tab name
    p_tab_text                in varchar2 default null,
    --
    p_result_node             in varchar2 default null,
    p_soap_style              in varchar2 default null,
    p_message_format          in varchar2 default null,
    p_namespace               in varchar2 default null,
    --
    p_region_title            in varchar2 default null,
    p_region_template         in number default null,
    p_region_title2           in varchar2 default null,
    p_region_template2        in number default null,
    p_report_template         in varchar2,
    p_inputs_collection       in varchar2,
    p_auth_collection         in varchar2,
    p_array_parm              in number,
    p_report_collection_name  in varchar2,
    p_array_parms_collection  in varchar2
    );


procedure create_form_and_list_view_page (
   p_flow_id                  in number   default null,
   p_form_page_id             in number   default null,
   p_report_page_id           in varchar2 default null,
   p_form_page_name           in varchar2 default 'form',
   p_report_page_name         in varchar2 default 'report',
   p_user_interface_id        in number,
   p_use_ui_default           in varchar2 default 'Y',
   --
   p_table_owner              in varchar2 default null,
   p_table_name               in varchar2 default null,
   p_table_pk_column_name     in varchar2 default null,
   p_table_pk_src_type        in varchar2 default null,
   p_table_pk_src             in varchar2 default null,
   p_table_pk2_column_name    in varchar2 default null,
   p_table_pk2_src_type       in varchar2 default null,
   p_table_pk2_src            in varchar2 default null,
   p_table_rv_column_name     in varchar2 default null,
   p_display_column_list      in varchar2 default null,
   p_report_select_list       in varchar2 default null,
   p_where_clause             in varchar2 default null,
   p_pagination_size          in varchar2 default '10',
   --
   p_form_region_template     in number   default null,
   p_form_region_name         in varchar2 default null,
   p_form_insert              in varchar2 default 'Y',
   p_form_update              in varchar2 default 'Y',
   p_form_delete              in varchar2 default 'Y',
   --
   p_rpt_region_template      in number   default null,
   p_rpt_region_name          in varchar2 default null,
   p_rpt_text_column          in varchar2,
   p_rpt_enable_search        in boolean  default false,
   p_rpt_is_inset             in boolean  default false,
   p_rpt_page_items_to_submit in varchar2 default null,
   p_rpt_info_column          in varchar2 default null,
   p_rpt_counter_column       in varchar2 default null,
   p_rpt_list_divider         in varchar2 default null
);


procedure create_query_and_update_page (
    p_flow_id                 in number   default null,
    p_form_page_id            in number   default null,
    p_report_page_id          in varchar2 default null,
    p_form_page_name          in varchar2 default 'form',
    p_report_page_name        in varchar2 default 'report',
    p_user_interface_id       in number,
    p_use_ui_default          in varchar2 default 'Y',
    --
    p_tab_set                 in varchar2 default null,
    p_tab_name                in varchar2 default null, -- current tab name
    p_tab_text                in varchar2 default null,
    --
    p_report_type             in varchar2 default null,
    --
    p_table_owner             in varchar2 default null,
    p_table_name              in varchar2 default null,
    p_table_pk_column_name    in varchar2 default null,
    p_table_pk_src_type       in varchar2 default null,
    p_table_pk_src            in varchar2 default null,
    p_table_pk2_column_name   in varchar2 default null,
    p_table_pk2_src_type       in varchar2 default null,
    p_table_pk2_src            in varchar2 default null,
    p_table_rv_column_name    in varchar2 default null,
    --
    p_display_column_list     in varchar2 default null,
    p_report_select_list      in varchar2 default null,
    --
    p_rpt_region_template     in number default null,
    p_rpt_template            in number default null,
    p_rpt_region_name         in varchar2 default null,
    p_form_region_template    in number default null,
    p_form_region_name         in varchar2 default null,
    --
    p_where_clause            in varchar2 default null,
    p_pagination_size         in varchar2 default '10',
    p_edit_link               in varchar2 default 'Edit',
    --
    p_form_insert             in varchar2 default 'Y',
    p_form_update             in varchar2 default 'Y',
    p_form_delete             in varchar2 default 'Y'
    );

procedure create_chart_page (
    p_flow_id                  in number   default null,
    p_flow_step_id             in number   default null,
    p_page_name                in varchar2 default null,
    p_user_interface_id        in number,
    p_chart_sql                in varchar2 default null,
    p_tab_set                  in varchar2 default null,
    p_tab_name                 in varchar2 default null, -- current tab name
    p_tab_text                 in varchar2 default null,
    p_scale                    in varchar2 default '400',
    p_axis                     in varchar2 default 'ZERO',
    p_num_mask                 in varchar2 default '999,999,999,990',
    p_plug_chart_show_summary  in varchar2 default null,
    p_region_template          in number   default null,
    p_region_name              in varchar2 default null,
    p_region_display_column    in varchar2 default null );

procedure create_report_page (
    p_flow_id                   in number   default null,
    p_page_id                   in number   default null,
    p_page_name                 in varchar2 default null,
    p_user_interface_id         in number,
    p_report_sql                in varchar2 default null,
    p_report_template           in varchar2 default null,
    p_tab_set                   in varchar2 default null,
    p_tab_name                  in varchar2 default null, -- current tab name
    p_tab_text                  in varchar2 default null,
    p_plug_template             in varchar2 default null,
    p_plug_name                 in varchar2 default null,
    p_plug_display_column       in varchar2 default null,
    p_max_rows                  in varchar2 default '15',
    p_report_type               in varchar2 default null,
    p_plug_query_options        in varchar2 default null,
    p_plug_query_max_columns    in varchar2 default null,
    p_plug_query_break_cols     in varchar2 default null,
    p_csv_output                in varchar2 default null,
    p_csv_link_text             in varchar2 default null,
    p_prn_output                in varchar2 default null,
    p_prn_format                in varchar2 default null,
    p_prn_label                 in varchar2 default null,
    p_column_heading_sort       in varchar2 default null,
    p_enable_search             in varchar2 default null,
    p_search_list               in varchar2 default null,
    p_use_ui_defaults           in varchar2 default null
    );

procedure create_report_page_structured (
    p_flow_id             in number   default null,
    p_page_id             in number   default null,
    p_page_name           in varchar2 default null,
    p_user_interface_id   in number,
    p_report_template     in varchar2 default null,
    p_tab_set             in varchar2 default null,
    p_tab_name            in varchar2 default null, -- current tab name
    p_tab_text            in varchar2 default null,
    p_plug_template       in varchar2 default null,
    p_plug_name           in varchar2 default null,
    p_use_ui_default      in varchar2 default 'Y',
    p_plug_display_column in varchar2 default null,
    p_max_rows            in varchar2 default '15',
    p_column_heading_sort in varchar2 default 'N')
    ;


procedure create_calendar_page (
   p_flow_id                    in number,
   p_page_id                    in number,
   p_page_name                  in varchar2,
   p_user_interface_id          in number,
   p_region_template            in number,
   p_region_name                in varchar2 default null,
   p_tab_set                    in varchar2 default null,
   p_tab_name                   in varchar2 default null, -- current tab name
   p_tab_text                   in varchar2 default null,
   p_owner                      in varchar2 default null,
   p_table                      in varchar2 default 'EMP',
   --
   p_sql                        in varchar2 default null,
   p_calendar_type              in varchar2 default 'CALENDAR',
   --
   p_date_column                in varchar2 default 'HIREDATE',
   p_end_date_column            in varchar2 default null,
   p_display_column             in varchar2 default null,
   p_display_type               in varchar2 default null,
   p_include_custom_cal         in varchar2 default null,
   p_primary_key_column         in varchar2 default null,
   p_drag_drop_required_role    in varchar2 default null,
   p_drag_drop_process_id       in number   default null,
   p_item_link_primary_key_item in varchar2 default null,
   p_item_link_date_item        in varchar2 default null,
   p_item_link_open_in          in varchar2 default null,
   p_include_time_with_date     in varchar2 default 'N',
   p_data_background_color      in varchar2 default null,
   p_data_text_color            in varchar2 default null,
   p_item_link                  in varchar2 default null,
   p_enable_drag_and_drop       in varchar2 default 'N',
   p_enable_monthly             in varchar2 default 'Y',
   p_enable_weekly              in varchar2 default 'Y',
   p_enable_daily               in varchar2 default 'Y',
   p_enable_agenda              in varchar2 default 'Y',
   p_add_create_button          in varchar2 default 'N',
   p_create_url                 in varchar2 default null,
   p_is_jqm_user_interface      in boolean  default false,
   p_button_region_id           in number   default null)
   ;

procedure create_report_query (
    p_flow_id             in number,
    p_report_query_name   in varchar2,
    p_report_layout_id    in number,
    p_source_queries      in wwv_flow_global.vc_arr2,
    p_output_format       in varchar2,
    p_format_item         in varchar2,
    p_file_name           in varchar2,
    p_xml_structure       in varchar2,
    p_items               in varchar2
);

procedure update_report_query_sql_stmts (
    p_flow_id             in number,
    p_report_query_id     in number,
    p_source_queries      in wwv_flow_global.vc_arr2
);

function generate_updatable_rpt_query (
   --
   -- arguments:
   --   p_select_columns       c1:c2:c3  (all columns in query)
   --   p_updatable_columns    c2:c3     (columns that are updateable)
   --   p_table_owner          SCOTT
   --   ...
   --
   p_select_columns     in varchar2 default null,
   p_updatable_columns  in varchar2 default null,
   p_where              in varchar2 default null,
   p_table_owner        in varchar2 default null,
   p_table_name         in varchar2 default null,
   p_table_pk1          in varchar2 default null,
   p_table_pk2          in varchar2 default null,
   p_table_pk3          in varchar2 default null,
   p_table_fk           in varchar2 default null,
   p_table_fk_src_type  in varchar2 default null,
   p_table_fk_src       in varchar2 default null,
   p_implement_type     in number   default null )
   return varchar2
   ;

procedure create_form_on_equijoin (
   p_flow_id            in number,
   p_page_id            in number,
   p_page_name          in varchar2,
   p_user_interface_id  in number,
   p_tab_set            in varchar2 default null,
   p_tab_name           in varchar2 default null, -- current tab name
   p_tab_text           in varchar2 default null,
   p_region_title       in varchar2 default null,
   p_region_template    in number,
   p_statement          in varchar2,
   p_cancel_branch      in number,
   p_branch             in number,
   p_cancel_button_name in varchar2 default 'Cancel',
   p_create_button_name in varchar2 default 'Create',
   p_save_button_name   in varchar2 default 'Save',
   p_delete_button_name in varchar2 default 'Delete',
   p_use_ui_defaults    in varchar2 default null)
   ;

procedure create_wizard (
   p_flow_id                in number,
   p_steps                  in number,
   p_user_interface_id      in number,
   --
   p_tab_type               in varchar2 default null,
   --
   p_tab_set                in varchar2 default null,
   p_tab_name               in varchar2 default null,
   p_tab_text               in varchar2 default null,
   p_region_template        in number,
   --
   p_info_region            in varchar2 default null,
   p_info_region_template   in number default null,
   p_info_default_text      in varchar2 default null,
   --
   p_cancel_branch          in number default null,
   p_finish_branch          in number default null,
   p_cancel_button_name     in varchar2 default 'Cancel',
   p_finish_button_name     in varchar2 default 'Finish',
   p_previous_button_name   in varchar2 default '< Previous',
   p_next_button_name       in varchar2 default 'Next >')
   ;

procedure create_tree (
   p_flow_id                 in number,
   p_page_id                 in number,
   p_page_name               in varchar2,
   p_user_interface_id       in number,
   --
   p_tabset                  in varchar2 default null,
   p_tab_name                in varchar2 default null, -- current tab name
   p_tab_text                in varchar2 default null,
   --
   p_start_option            in varchar2,
   p_tree_name               in varchar2,
   p_tree_type               in varchar2,
   p_tree_template           in varchar2,
   p_tree_query              in varchar2,
   p_max_levels              in number,
   p_named_lov               in number default null,
   p_lov                     in varchar2 default null,
   p_sql                     in varchar2 default null,
   p_static                  in varchar2 default null,
   --
   p_region_title            in varchar2,
   p_region_template         in number,
   p_go_branch               in number,
   p_go_button_name          in varchar2 default 'GO',
   --
   p_tree_button_option      in varchar2 default null
   );

function generate_tree_query (
         p_flow_id     in number,
         p_owner       in varchar2,
         p_table_name  in varchar2,
         p_id          in varchar2,
         p_pid         in varchar2,
         p_name        in varchar2,
         p_link_option in varchar2,
         p_link_page_id in varchar2 default null,
         p_link_item    in varchar2 default null,
         p_where       in varchar2 default null,
         p_order_by    in varchar2 default null)
return varchar2;

procedure create_jstree (
   p_flow_id                 in number   default null,
   p_page_id                 in number   default null,
   p_page_name               in varchar2 default null,
   p_user_interface_id       in number,
   p_tab_set                 in varchar2 default null,
   p_tab_name                in varchar2 default null,
   p_tab_text                in varchar2 default null,
   p_region_template         in number   default null,
   p_region_name             in varchar2 default null,
   p_breadcrumb_id           in number   default null,
   p_breadcrumb_name         in varchar2 default null,
   p_parent_bc_id            in number   default null,
   --
   p_tree_template           in varchar2,
   p_tree_source             in varchar2 default null,   -- Table Name
   p_tree_query              in varchar2,                -- SQL query
   p_tree_node_title         in varchar2,                -- Table Column for Node name
   p_tree_node_value         in varchar2,                -- Table Column for Node value
   p_tree_node_icon          in varchar2,                -- String/Table Column for Node icon
   p_tree_node_link          in varchar2,                -- Node Link/URL
   p_tree_node_hints         in varchar2,                -- String/Table Column holding Node Tooltip
   p_tree_start_item         in varchar2,                -- Table Column for 'Starting With' Parent Node
   p_tree_start_value        in varchar2 default null,   -- String value for Parent Node
   p_tree_button_option      in varchar2 default null,
   p_show_hints              in varchar2 default null,
   p_tree_has_focus          in varchar2 default null,
   p_tree_hint_text          in varchar2 default null,
   p_tree_click_action       in varchar2 default null,
   p_selected_node           in varchar2 default null
   );

procedure create_jstree_region (
   p_flow_id                 in number   default null,
   p_page_id                 in number   default null,
   p_region_template         in number   default null,
   p_region_name             in varchar2 default null,
   p_parent_plug_id          in number   default null,
   p_display_seq             in number   default null,
   p_display_col             in number   default null,
   p_display_point           in varchar2 default null,
   p_region_source_type      in varchar2 default null,
   p_display_cond            in varchar2 default null,
   p_display_cond2           in varchar2 default null,
   p_display_cond_type       in varchar2 default null,
   p_auth_scheme             in varchar2 default null,
   --
   p_tree_template           in varchar2,
   p_tree_source             in varchar2 default null,
   p_tree_query              in varchar2,
   p_tree_node_title         in varchar2,
   p_tree_node_value         in varchar2,
   p_tree_node_icon          in varchar2,
   p_tree_node_link          in varchar2,
   p_tree_node_hints         in varchar2,
   p_tree_start_item         in varchar2,
   p_tree_start_value        in varchar2 default null,
   p_tree_button_option      in varchar2 default null,
   p_show_hints              in varchar2 default null,
   p_tree_has_focus          in varchar2 default null,
   p_tree_hint_text          in varchar2 default null,
   p_tree_click_action       in varchar2 default null,
   p_selected_node           in varchar2 default null
   );

function generate_tree_region_query(
         p_flow_id      in number,
         p_owner        in varchar2,
         p_table_name   in varchar2,
         p_id           in varchar2,
         p_pid          in varchar2,
         p_name         in varchar2,
         p_start_item   in varchar2,
         p_start_value  in varchar2,
         p_link_option  in varchar2,
         p_link_page_id in varchar2 default null,
         p_link_item    in varchar2 default null,
         p_where        in varchar2 default null,
         p_order_by     in varchar2 default null,
         p_tooltip      in varchar2 default null,
         p_icon         in varchar2 default null
)
return varchar2;

procedure create_summary_page (
    p_flow_id                 in number   default null,
    p_page_id                 in number   default null,
    p_page_name               in varchar2 default 'Summary',
    p_user_interface_id       in number,
    --
    p_tab_set                 in varchar2 default null,
    p_tab_name                in varchar2 default null, -- current tab name
    p_tab_text                in varchar2 default null,
    --
    p_region_id               in number   default null,
    p_region_title            in varchar2 default null,
    p_region_template         in number   default null,
    --
    p_field_template          in number   default null,
    p_label_align             in varchar2 default null,
    p_tag_attr                in varchar2 default null,
    p_field_align             in varchar2 default null
);

procedure create_home_page (
    p_flow_id                 in varchar2,
    p_page_id                 in varchar2 default 1,
    p_name                    in varchar2 default null,
    p_user_interface_id       in number,
    p_template                in number   default null);

procedure create_login_page (
    p_flow_id                 in varchar2,
    p_page_id                 in varchar2 default 101,
    p_name                    in varchar2 default null,
    p_user_interface_id       in number,
    p_template                in number   default null,
    p_username                in varchar2 default null,
    p_password                in varchar2 default null,
    p_save_username_cookie    in boolean  default true );

procedure create_svg_chart (
    p_flow_id           in number   default null,
    p_flow_step_id      in number   default null,
    p_page_name         in varchar2 default null,
    p_user_interface_id in number,
    p_tab_set           in varchar2 default null,
    p_tab_name          in varchar2 default null, -- current tab name
    p_tab_text          in varchar2 default null,
    p_region_template   in number   default null,
    p_region_name       in varchar2 default null,
    --
    p_chart_type        in varchar2 default null,
    p_chart_sql         in varchar2 default null,
    p_max_rows          in number   default null,
    p_no_data_found     in varchar2 default null,
    p_chart_color_theme in varchar2 default null
    );

procedure create_flash_chart (
    p_flow_id            in number   default null,
    p_page_id            in number   default null,
    p_page_name          in varchar2 default null,
    p_user_interface_id  in number,
    p_tab_set            in varchar2 default null,
    p_tab_name           in varchar2 default null,
    p_tab_text           in varchar2 default null,
    p_region_template    in number   default null,
    p_region_name        in varchar2 default null,
    --
    p_breadcrumb_id      in number   default null,
    p_bc_region_template in number   default null,
    p_breadcrumb_name    in varchar2 default null,
    p_bc_display_point   in varchar2 default null,
    p_breadcrumb_template in number  default null,
    p_parent_bc_id       in  number  default null,
    --
    p_chart_query        in varchar2 default null,
    p_max_rows           in number   default null,
    p_no_data_found      in varchar2 default null,
    --
    p_default_chart_type in varchar2 default null,
    p_chart_title        in varchar2 default null,
    p_chart_animation    in varchar2 default null,
    --
    p_bgtype             in varchar2 default null,
    p_bgcolor1           in varchar2 default null,
    p_bgcolor2           in varchar2 default null,
    p_gradient_rotation  in varchar2 default null,
    p_color_scheme       in varchar2 default null,
    p_custom_colors      in varchar2 default null,
    --
    p_x_axis_title       in varchar2 default null,
    p_y_axis_title       in varchar2 default null,
    --
    p_show_hints         in varchar2 default null,
    p_show_names         in varchar2 default null,
    p_show_values        in varchar2 default null,
    p_show_legend        in varchar2 default null,
    p_show_grid          in varchar2 default null
    );

procedure create_flash_chart5 (
   p_flow_id                 in number   default null,
   p_page_id                 in number   default null,
   p_page_name               in varchar2 default null,
   p_user_interface_id       in number,
   p_tab_set                 in varchar2 default null,
   p_tab_name                in varchar2 default null,
   p_tab_text                in varchar2 default null,
   p_region_template         in number   default null,
   p_region_name             in varchar2 default null,
   --
   p_breadcrumb_id           in number   default null,
   p_breadcrumb_name         in varchar2 default null,
   p_parent_bc_id            in number   default null,
   --
   p_chart_query             in varchar2 default null,
   p_ajax_items_to_submit    in varchar2 default null,
   p_max_rows                in number   default null,
   p_no_data_found           in varchar2 default null,
   --
   p_chart_rendering         in varchar2 default null,
   p_default_chart_type      in varchar2 default null,
   p_chart_title             in varchar2 default null,
   p_chart_animation         in varchar2 default null,
   p_enable_3d_mode          in varchar2 default null,
   --
   p_bgtype                  in varchar2 default null,
   p_bgcolor1                in varchar2 default null,
   p_bgcolor2                in varchar2 default null,
   p_gradient_rotation       in varchar2 default null,
   p_grid_bgtype             in varchar2 default null,
   p_grid_bgcolor1           in varchar2 default null,
   p_grid_bgcolor2           in varchar2 default null,
   p_grid_gradient_rotation  in varchar2 default null,
   p_color_scheme            in varchar2 default null,
   p_custom_colors           in varchar2 default null,
   p_map_undef_color_scheme  in varchar2 default null,
   p_map_undef_custom_colors in varchar2 default null,
   --
   p_x_axis_title            in varchar2 default null,
   p_y_axis_title            in varchar2 default null,
   --
   p_map_source              in varchar2 default null,
   p_map_projection          in varchar2 default null,
   p_show_hints              in varchar2 default null,
   p_show_names              in varchar2 default null,
   p_show_values             in varchar2 default null,
   p_show_scrollbar          in varchar2 default null,
   p_show_legend             in varchar2 default null,
   p_show_grid               in varchar2 default null
   );

procedure create_flash_chart_region (
    p_flow_id            in number   default null,
    p_page_id            in number   default null,
    p_region_template    in number   default null,
    p_region_name        in varchar2 default null,
    p_parent_plug_id     in number   default null,
    p_display_seq        in number   default null,
    p_display_col        in number   default null,
    p_display_point      in varchar2 default null,
    p_region_source_type in varchar2 default null,
    p_display_cond       in varchar2 default null,
    p_display_cond2      in varchar2 default null,
    p_display_cond_type  in varchar2 default null,
    p_auth_scheme        in varchar2 default null,
    --
    p_default_chart_type in varchar2 default null,
    p_chart_title        in varchar2 default null,
    p_chart_query        in varchar2 default null,
    p_chart_animation    in varchar2 default null,
    --
    p_bgtype             in varchar2 default null,
    p_bgcolor1           in varchar2 default null,
    p_bgcolor2           in varchar2 default null,
    p_gradient_rotation  in varchar2 default null,
    p_color_scheme       in varchar2 default null,
    p_custom_colors      in varchar2 default null,
    --
    p_x_axis_title       in varchar2 default null,
    p_y_axis_title       in varchar2 default null,
    p_max_rows           in number   default null,
    p_no_data_found      in varchar2 default null,
    --
    p_show_hints         in varchar2 default null,
    p_show_names         in varchar2 default null,
    p_show_values        in varchar2 default null,
    p_show_legend        in varchar2 default null,
    p_show_grid          in varchar2 default null
    );

procedure create_flash_chart5_region (
    p_flow_id            in number   default null,
    p_page_id            in number   default null,
    p_region_template    in number   default null,
    p_region_name        in varchar2 default null,
    p_parent_plug_id     in number   default null,
    p_display_seq        in number   default null,
    p_display_col        in number   default null,
    p_display_point      in varchar2 default null,
    p_region_source_type in varchar2 default null,
    p_display_cond       in varchar2 default null,
    p_display_cond2      in varchar2 default null,
    p_display_cond_type  in varchar2 default null,
    p_auth_scheme        in varchar2 default null,
    --
    p_chart_rendering      in varchar2 default null,
    p_default_chart_type   in varchar2 default null,
    p_chart_title          in varchar2 default null,
    p_chart_query          in varchar2 default null,
    p_ajax_items_to_submit in varchar2 default null,
    p_chart_animation      in varchar2 default null,
    --
    p_bgtype             in varchar2 default null,
    p_bgcolor1           in varchar2 default null,
    p_bgcolor2           in varchar2 default null,
    p_gradient_rotation  in varchar2 default null,
    p_grid_bgtype        in varchar2 default null,
    p_grid_bgcolor1      in varchar2 default null,
    p_grid_bgcolor2      in varchar2 default null,
    p_grid_gradient_rotation  in varchar2 default null,
    p_color_scheme       in varchar2 default null,
    p_custom_colors      in varchar2 default null,
    p_map_undef_color_scheme in varchar2 default null,
    p_map_undef_custom_colors in varchar2 default null,
    --
    p_x_axis_title       in varchar2 default null,
    p_y_axis_title       in varchar2 default null,
    p_max_rows           in number   default null,
    p_no_data_found      in varchar2 default null,
    --
    p_map_source         in varchar2 default null,
    p_map_projection     in varchar2 default null,
    p_show_hints         in varchar2 default null,
    p_show_names         in varchar2 default null,
    p_show_values        in varchar2 default null,
    p_show_legend        in varchar2 default null,
    p_show_grid          in varchar2 default null,
    p_show_scrollbar     in varchar2 default null
    );

procedure create_dynamic_query_region (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_migrate_from_region           in number   default null,
    p_plug_name                     in varchar2 default null,
    p_plug_template                 in varchar2 default null,
    p_parent_plug_id                in number   default null,
    p_plug_display_sequence         in varchar2 default null,
    p_plug_display_column           in varchar2 default null,
    p_plug_display_point            in varchar2 default null,
    p_plug_source                   in varchar2 default null,
    p_plug_source_type              in varchar2 default null,
    p_ajax_items_to_submit          in varchar2 default null,
    --
    p_plug_required_role            in varchar2 default null,
    p_plug_display_when_condition   in varchar2 default null,
    p_plug_display_when_cond2       in varchar2 default null,
    p_plug_display_condition_type   in varchar2 default null,
    p_plug_header                   in varchar2 default null,
    p_plug_footer                   in varchar2 default null,
    --
    p_plug_customized               in varchar2 default null,
    p_plug_customized_name          in varchar2 default null,
    --
    p_plug_query_num_rows           in number   default null,
    p_plug_query_show_nulls_as      in varchar2 default null,
    p_plug_query_no_data_found      in varchar2 default null,
    p_plug_query_row_count_max      in number   default null,
    --
    p_pagination_display_position   in varchar2 default null,
    --
    p_required_patch                in varchar2 default null,
    p_plug_comment                  in varchar2 default null,
    --
    p_show_detail_link              in varchar2 default null,
    p_use_ui_defaults               in varchar2 default null,
    p_base_pk1                      in varchar2 default null,
    p_base_pk2                      in varchar2 default null,
    p_base_pk3                      in varchar2 default null);

procedure create_ir_region_on_col_info (
    p_flow_id                 in number,
    p_page_id                 in number,
    p_region_id               in number,
    p_region_title            in varchar2 default null,
    p_sql                     in varchar2 default null,
    --
    p_show_detail_link        in varchar2 default null,
    p_detail_link             in varchar2 default null,
    p_detail_link_text        in varchar2 default null,
    --
    p_table_name              in varchar2 default null,
    p_pk1                     in varchar2 default null,
    p_pk2                     in varchar2 default null,
    --
    p_db_column_name          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_display_order           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_column_label            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_report_label            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_column_type             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_display_text_as         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_format_mask             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_column_alignment        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_help_text               in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_group                   in wwv_flow_global.vc_arr2 default empty_vc_arr);

procedure create_query_region (
    p_id                            in number   default null,
    p_flow_id                       in number   default null,
    p_page_id                       in number   default null,
    p_plug_name                     in varchar2 default null,
    p_plug_template                 in varchar2 default null,
    p_parent_plug_id                in number   default null,
    p_plug_display_sequence         in varchar2 default null,
    p_plug_display_column           in varchar2 default null,
    p_plug_display_point            in varchar2 default null,
    p_plug_source                   in varchar2 default null,
    p_plug_source_type              in varchar2 default null,
    p_ajax_items_to_submit          in varchar2 default null,
    p_plug_create_link_text         in varchar2 default null,
    p_plug_create_link_target       in varchar2 default null,
    p_plug_create_image             in varchar2 default null,
    p_plug_create_image_attributes  in varchar2 default null,
    p_plug_edit_link_text           in varchar2 default null,
    p_plug_edit_link_target         in varchar2 default null,
    p_plug_edit_image               in varchar2 default null,
    p_plug_edit_image_attributes    in varchar2 default null,
    p_plug_expand_link_text         in varchar2 default null,
    p_plug_expand_link_target       in varchar2 default null,
    p_plug_expand_image             in varchar2 default null,
    p_plug_expand_image_attributes  in varchar2 default null,
    p_plug_close_link_text          in varchar2 default null,
    p_plug_close_link_target        in varchar2 default null,
    p_plug_close_image              in varchar2 default null,
    p_plug_close_image_attributes   in varchar2 default null,
    p_plug_required_role            in varchar2 default null,
    p_plug_display_when_condition   in varchar2 default null,
    p_plug_display_when_cond2       in varchar2 default null,
    p_plug_display_condition_type   in varchar2 default null,
    p_plug_header                   in varchar2 default null,
    p_plug_footer                   in varchar2 default null,
    p_plug_override_reg_pos         in varchar2 default null,
    p_plug_customized               in varchar2 default null,
    p_plug_customized_name          in varchar2 default null,
    --
    p_plug_query_row_template       in number   default null,
    p_plug_query_headings           in varchar2 default null,
    p_plug_query_headings_type      in varchar2 default 'COLON_DELMITED_LIST',
    p_plug_query_num_rows           in number   default null,
    p_plug_query_options            in varchar2 default null,
    p_plug_query_format_out         in varchar2 default null, -- obsolte, msewtz 10/28/02
    p_plug_query_show_nulls_as      in varchar2 default null,
    p_plug_query_col_allignments    in varchar2 default null,
    p_plug_query_break_cols         in varchar2 default null,
    p_plug_query_sum_cols           in varchar2 default null,
    p_plug_query_number_formats     in varchar2 default null,
    p_plug_query_table_border       in varchar2 default null, -- obsolte, msewtz 10/28/02
    p_plug_column_width             in varchar2 default null,
    p_plug_query_no_data_found      in varchar2 default null,
    p_plug_query_more_data          in varchar2 default null,
    p_plug_ignore_pagination        in number   default null, -- obsolte, msewtz 10/28/02
    p_plug_query_num_rows_item      in varchar2 default null,
    p_plug_query_num_rows_type      in varchar2 default null,
    p_plug_query_row_count_max      in number   default null,
    --
    p_pagination_display_position   in varchar2 default null,
    p_report_total_text_format      in varchar2 default null,
    p_break_column_text_format      in varchar2 default null,
    p_break_before_row              in varchar2 default null,
    p_break_generic_column          in varchar2 default null,
    p_break_after_row               in varchar2 default null,
    p_break_type_flag               in varchar2 default null,
    p_break_repeat_heading_format   in varchar2 default null,
    p_csv_output                    in varchar2 default null,
    p_csv_output_link_text          in varchar2 default null,
    --
    p_plug_url_text_begin           in varchar2 default null,
    p_plug_url_text_end             in varchar2 default null,
    p_java_entry_point              in varchar2 default null,
    --
    p_plug_caching                  in varchar2 default null,
    p_plug_caching_session_state    in varchar2 default null,
    p_plug_caching_max_age_in_sec   in varchar2 default null,
    --
    p_plug_chart_font_size          in varchar2 default null,
    p_plug_chart_max_rows           in varchar2 default null,
    p_plug_chart_num_mask           in varchar2 default null,
    p_plug_chart_scale              in varchar2 default null,
    p_plug_chart_axis               in varchar2 default null,
    p_plug_chart_show_summary       in varchar2 default null,
    --
    p_menu_template_id              in number   default null,
    --
    p_required_patch                in varchar2 default null,
    p_plug_comment                  in varchar2 default null,
    --
    p_id_offset                     in number   default 0,
    p_target                        in varchar2 default 'PRIME',
    p_prn_output                    in varchar2 default null,
    p_prn_format                    in varchar2 default null,
    p_prn_label                     in varchar2 default null,
    p_column_heading_sort           in varchar2 default null,
    p_enable_search                 in varchar2 default null,
    p_search_list                   in varchar2 default null,
    p_use_ui_defaults               in varchar2 default null
    );

procedure create_next_prev_pk_process (
    p_flow_id          in number,
    p_page_id          in number,
    p_owner            in varchar2 default null,
    p_table            in varchar2 default null,
    p_nav_region       in varchar2 default null,
    p_pk_column        in varchar2 default null,
    p_pk_column2       in varchar2 default null,
    p_sort_column      in varchar2 default null,
    p_sort_column2     in varchar2 default null,
    p_item_pk          in varchar2 default null,
    p_item_pk2         in varchar2 default null,
    p_where            in varchar2 default null);


procedure create_master_detail (
    p_flow_id                   in number   default null,
    p_master_page_id            in number   default null,
    p_detail_page_id            in number   default null,
    p_detail2_page_id           in number   default null,
    p_layout                    in varchar2 default '2_PAGE',
    p_user_interface_id         in number,
    p_use_ui_default            in varchar2 default 'Y',
    --
    p_master_page_title         in varchar2 default null,
    p_detail_page_title         in varchar2 default null,
    p_detail2_page_title        in varchar2 default null,
    p_master_region_title       in varchar2 default null,
    p_detail_region_title       in varchar2 default null,
    p_detail_region_title2      in varchar2 default null,
    p_detail2_region_title      in varchar2 default null,
    --
    p_tab_set                   in varchar2 default null,
    p_tab_name                  in varchar2 default null,
    p_tab_text                  in varchar2 default null,
    --
    p_master_table_owner        in varchar2 default null,
    p_master_table_name         in varchar2 default null,
    p_master_sort_column        in varchar2 default null,
    p_master_sort_column2       in varchar2 default null,
    p_include_master_report     in varchar2 default 'Y',
    p_include_master_row_nav    in varchar2 default 'Y',
    --
    p_master_table_pk1          in varchar2 default null,
    p_master_table_pk1_src_type in varchar2 default null,
    p_master_table_pk1_src      in varchar2 default null,
    p_master_table_pk2          in varchar2 default null,
    p_master_table_pk2_src_type in varchar2 default null,
    p_master_table_pk2_src      in varchar2 default null,
    --
    p_detail_table_owner        in varchar2 default null,
    p_detail_table_name         in varchar2 default null,
    p_detail_table_pk1          in varchar2 default null,
    p_detail_table_pk1_src_type in varchar2 default null,
    p_detail_table_pk1_src      in varchar2 default null,
    p_detail_table_pk2          in varchar2 default null,
    p_detail_table_pk2_src_type in varchar2 default null,
    p_detail_table_pk2_src      in varchar2 default null,
    --
    p_breadcrumb_id              in number   default null,
    p_parent_breadcrumb_entry_id in number   default null,
    p_breadcrumb_name1           in varchar2 default null,
    p_breadcrumb_name2           in varchar2 default null,
    p_breadcrumb_name3           in varchar2 default null

    );

procedure update_js_code_w_shortcut (
    p_flow_id             in number,
    p_page_id             in number,
    p_shortcut_name       in varchar2,
    p_add_javascript_code in varchar2
    );

function create_acl_tab_priv (
    p_flow_id in number) return boolean;

procedure create_access_control (
    p_flow_id             in number   default null,
    p_page_id             in number   default null,
    p_page_name           in varchar2 default null,
    p_user_interface_id   in number,
    p_tab_set             in varchar2 default null,
    p_tab_name            in varchar2 default null, -- current tab name
    p_tab_text            in varchar2 default null
    );

procedure create_dynamic_query (
    p_flow_id            in number   default null,
    p_page_id            in number   default null,
    p_page_name          in varchar2 default null,
    p_user_interface_id  in number,
    p_region_name        in varchar2 default null,
    p_region_template    in varchar2 default null,
    p_tab_set            in varchar2 default null,
    p_tab_name           in varchar2 default null,
    p_tab_text           in varchar2 default null,
    --
    p_breadcrumb_id      in number   default null,
    p_breadcrumb_name    in varchar2 default null,
    p_parent_bc_id       in  number  default null,
    --
    p_query              in varchar2 default null,
    p_show_detail_link   in varchar2 default null,
    p_use_ui_defaults    in varchar2 default null,
    p_base_pk1           in varchar2 default null,
    p_base_pk2           in varchar2 default null,
    p_base_pk3           in varchar2 default null
    );

procedure create_report_on_ws (
    p_flow_id            in number   default null,
    p_page_id            in number   default null,
    p_page_name          in varchar2 default null,
    p_user_interface_id  in number,
    p_region_name        in varchar2 default null,
    p_region_template    in varchar2 default null,
    p_tab_set            in varchar2 default null,
    p_tab_name           in varchar2 default null,
    p_tab_text           in varchar2 default null,
    --
    p_report_template    in varchar2 default null,
    p_rows_per_page      in varchar2 default null,
    --
    p_breadcrumb_id      in number   default null,
    p_breadcrumb_name    in varchar2 default null,
    p_parent_bc_id       in  number  default null,
    --
    p_query              in varchar2 default null
    );

procedure create_page_dynamic_action (
    p_flow_id                       in number,
    p_page_id                       in number,
    p_event_name                    in varchar2,
    p_event_sequence                in number,
    p_event_triggering_elem_type    in varchar2 default null,
    p_event_triggering_region_id    in number   default null,
    p_event_triggering_button_id    in number   default null,
    p_event_triggering_element      in varchar2 default null,
    p_event_triggering_cond_type    in varchar2 default null,
    p_event_triggering_expression   in varchar2 default null,
    p_event_bind_type               in varchar2,
    p_event_bind_delegate_to        in varchar2 default null,
    p_event_bind_event_type         in varchar2,
    p_event_bind_event_type_custom  in varchar2 default null,
    p_event_display_when_type       in varchar2 default null,
    p_event_display_when_cond       in varchar2 default null,
    p_event_display_when_cond2      in varchar2 default null,
    p_event_required_patch          in varchar2 default null,
    p_event_security_scheme         in varchar2 default null,
    p_event_comment                 in varchar2 default null,
    -- true action
    p_action_true_id                in number   default null,
    p_action_true_action_sequence   in number,
    p_action_true_exec_on_init      in varchar2,
    p_action_true_stop_exec_error   in varchar2 default 'Y',
    p_action_true_wait_for_result   in varchar2 default null,
    p_action_true_action            in varchar2,
    p_action_true_aff_elems_type    in varchar2,
    p_action_true_aff_region_id     in number   default null,
    p_action_true_aff_button_id     in number   default null,
    p_action_true_aff_elements      in varchar2 default null,
    p_action_true_attribute_01      in varchar2 default null,
    p_action_true_attribute_02      in varchar2 default null,
    p_action_true_attribute_03      in varchar2 default null,
    p_action_true_attribute_04      in varchar2 default null,
    p_action_true_attribute_05      in varchar2 default null,
    p_action_true_attribute_06      in varchar2 default null,
    p_action_true_attribute_07      in varchar2 default null,
    p_action_true_attribute_08      in varchar2 default null,
    p_action_true_attribute_09      in varchar2 default null,
    p_action_true_attribute_10      in varchar2 default null,
    p_action_true_attribute_11      in varchar2 default null,
    p_action_true_attribute_12      in varchar2 default null,
    p_action_true_attribute_13      in varchar2 default null,
    p_action_true_attribute_14      in varchar2 default null,
    p_action_true_attribute_15      in varchar2 default null,
    p_action_true_comment           in varchar2 default null,
    -- false action (not always required)
    p_action_false_id               in number   default null,
    p_action_false_action_sequence  in number   default null,
    p_action_false_exec_on_init     in varchar2 default null,
    p_action_false_stop_exec_error  in varchar2 default 'Y',
    p_action_false_wait_for_result  in varchar2 default null,
    p_action_false_action           in varchar2 default null,
    p_action_false_aff_elems_type   in varchar2 default null,
    p_action_false_aff_region_id    in number   default null,
    p_action_false_aff_button_id    in number   default null,
    p_action_false_aff_elements     in varchar2 default null,
    p_action_false_attribute_01     in varchar2 default null,
    p_action_false_attribute_02     in varchar2 default null,
    p_action_false_attribute_03     in varchar2 default null,
    p_action_false_attribute_04     in varchar2 default null,
    p_action_false_attribute_05     in varchar2 default null,
    p_action_false_attribute_06     in varchar2 default null,
    p_action_false_attribute_07     in varchar2 default null,
    p_action_false_attribute_08     in varchar2 default null,
    p_action_false_attribute_09     in varchar2 default null,
    p_action_false_attribute_10     in varchar2 default null,
    p_action_false_attribute_11     in varchar2 default null,
    p_action_false_attribute_12     in varchar2 default null,
    p_action_false_attribute_13     in varchar2 default null,
    p_action_false_attribute_14     in varchar2 default null,
    p_action_false_attribute_15     in varchar2 default null,
    p_action_false_comment          in varchar2 default null )
    ;


--==============================================================================
-- Creates page buttons, both item and region based
--==============================================================================
procedure create_button (
    p_where                         varchar2,
    p_flow_id                       number,
    p_flow_step_id                  number,
    p_button_sequence               number      default null,
    p_button_plug_id                number,
    p_button_name                   varchar2,
    p_button_image                  varchar2,
    p_button_is_hot                 varchar2    default 'N',
    p_button_image_alt              varchar2,
    p_button_redirect_url           varchar2    default null,
    p_button_action                 varchar2    default wwv_flow_button.c_action_submit,
    p_button_execute_validations    varchar2    default 'Y',
    p_button_image_attributes       varchar2,
    p_button_attributes             varchar2,
    p_button_style                  varchar2,
    -- REPORT action only parameter
    p_report_query                  varchar2    default null,
    -- region button only parameters
    p_button_position               varchar2    default null,
    p_button_alignment              varchar2    default null,
    -- item button only parameters
    p_begins_on_new_line            varchar2    default null,
    p_begins_on_new_field           varchar2    default null,
    -- condition only parameters
    p_button_condition_type         varchar2    default null,
    p_button_condition              varchar2    default null,
    p_button_condition2             varchar2    default null )
    ;


--==============================================================================
-- Returns true if the specified region or one of its sub region has a button
--==============================================================================
function has_region_buttons (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region or one of its sub region has an item
--==============================================================================
function has_region_items (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region or one of its sub region has a validation.
--==============================================================================
function has_region_validations (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region or one of its sub region has a process.
--==============================================================================
function has_region_processes (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region has sub regions
--==============================================================================
function has_region_sub_regions (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region or one of its sub region has a list
-- which is just used once in the application.
--==============================================================================
function has_region_deletable_lists (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Returns true if the specified region or one of its sub regions has dynamic
-- actions
--==============================================================================
function has_region_dynamic_actions (
    p_region_id         in number,
    p_flow_id           in number,
    p_page_id           in number,
    p_security_group_id in number )
    return boolean;

--==============================================================================
-- Deletes a region and depending on the flags sub regions, buttons, items, ...
-- which belong to the region. If the flags are false then the region relation
-- is set to null in the effected components.
--==============================================================================
procedure delete_region (
    p_region_id          in number,
    p_flow_id            in number,
    p_page_id            in number,
    p_security_group_id  in number,
    p_delete_buttons     in boolean,
    p_delete_items       in boolean,
    p_delete_sub_regions in boolean,
    p_delete_lists       in boolean,
    p_delete_dyn_actions in boolean );

--===============================================================================
-- Creates 4 pages for the data upload wizard
--===============================================================================
procedure create_data_load_wizard(
    p_flow_id               in number,
    --
    p_name                  in varchar2,
    p_owner                 in varchar2,
    p_table_name            in varchar2,
    p_exists                in varchar2 default 'no',
    --
    p_user_interface_id     in number,
    --
    p_tab_set               in varchar2,
    p_tab_name              in varchar2,
    p_tab_label             in varchar2,
    --
    p_breadcrumb_id         in number,
    p_breadcrumb_name       in varchar2,
    p_parent_breadcrumb_id  in number,
    --
    p_page_step_1           in number,
    p_page_step_2           in number,
    p_page_step_3           in number,
    p_page_step_4           in number,
    --
    p_page_label_step_1     in varchar2,
    p_page_label_step_2     in varchar2,
    p_page_label_step_3     in varchar2,
    p_page_label_step_4     in varchar2,
    --
    p_region_name_step_1    in varchar2,
    p_region_name_step_2    in varchar2,
    p_region_name_step_3    in varchar2,
    p_region_name_step_4    in varchar2,
    --
    p_page_next_label       in varchar2 default 'NEXT',
    p_page_previous_label   in varchar2 default 'PREVIOUS',
    p_page_cancel_label     in varchar2 default 'CANCEL',
    p_page_cancel_branch    in varchar2 default '1',
    p_page_finish_label     in varchar2 default 'SUBMIT',
    p_page_finish_branch    in varchar2 default '1' );

--===============================================================================
-- Creates a page and a region based on a plug-in.
--===============================================================================
procedure create_region_plugin_page (
    p_flow_id              in number,
    --
    p_page_id              in number,
    p_page_name            in varchar2,
    p_user_interface_id    in number,
    --
    p_tab_set              in varchar2,
    p_tab_name             in varchar2,
    p_tab_label            in varchar2,
    --
    p_breadcrumb_id        in number,
    p_breadcrumb_name      in varchar2,
    p_parent_breadcrumb_id in number,
    --
    p_region_name          in varchar2,
    p_region_type          in varchar2,
    p_region_source        in varchar2 default null,
    p_attribute_01         in varchar2 default null,
    p_attribute_02         in varchar2 default null,
    p_attribute_03         in varchar2 default null,
    p_attribute_04         in varchar2 default null,
    p_attribute_05         in varchar2 default null,
    p_attribute_06         in varchar2 default null,
    p_attribute_07         in varchar2 default null,
    p_attribute_08         in varchar2 default null,
    p_attribute_09         in varchar2 default null,
    p_attribute_10         in varchar2 default null,
    p_attribute_11         in varchar2 default null,
    p_attribute_12         in varchar2 default null,
    p_attribute_13         in varchar2 default null,
    p_attribute_14         in varchar2 default null,
    p_attribute_15         in varchar2 default null,
    p_attribute_16         in varchar2 default null,
    p_attribute_17         in varchar2 default null,
    p_attribute_18         in varchar2 default null,
    p_attribute_19         in varchar2 default null,
    p_attribute_20         in varchar2 default null,
    p_attribute_21         in varchar2 default null,
    p_attribute_22         in varchar2 default null,
    p_attribute_23         in varchar2 default null,
    p_attribute_24         in varchar2 default null,
    p_attribute_25         in varchar2 default null );

procedure create_named_lov (
    p_id      in out number,
    p_flow_id in     number,
    p_name    in     varchar2,
    p_query   in     varchar2 );

procedure create_breadcrumb_region (
    p_application_id             in number,
    p_page_id                    in number,
    p_seq                        in number,
    p_breadcrumb_id              in number,
    p_breadcrumb_entry_id        in number default null,
    p_breadcrumb_entry_name      in varchar2,
    p_parent_breadcrumb_entry_id in number );

procedure create_jqm_list_view_region (
    p_id                     in number   default null,
    p_flow_id                in number,
    p_page_id                in number,
    p_name                   in varchar2,
    p_seq                    in number,
    p_template_id            in number,
    p_display_point          in varchar2 default 'BODY_3',
    --
    p_sql_statement          in varchar2,
    p_page_items_to_submit   in varchar2 default null,
    p_text_column            in varchar2,
    p_supplement_info_column in varchar2 default null,
    p_counter_column         in varchar2 default null,
    p_list_divider           in varchar2 default null,
    p_link_target            in varchar2 default null,
    p_enable_search          in boolean  default false,
    p_is_inset               in boolean  default false );

procedure copy_named_lov (
    p_lov_id_from         in number,
    p_lov_name_to         in varchar2,
    p_copy_from_flow_id   in number default null,
    p_flow_id             in number default null,
    p_lov_id_to           in number default null);

procedure copy_button (
    p_button_id_from         in number,
    p_button_name_to         in varchar2,
    p_button_text_to         in varchar2,
    p_button_page_id_to      in number default null,
    p_button_region_to       in number default null,
    p_button_sequence_to     in number default null);

procedure copy_page_item (
    p_copy_from_item_id     in number,
    p_copy_to_item_name     in varchar2,
    p_copy_to_item_sequence in varchar2,
    p_copy_to_page_id       in number default null,
    p_copy_to_item_plug     in varchar2 default null,
    p_copy_to_prompt        in varchar2 default null,
    p_copy_to_source_type   in varchar2 default null,
    p_copy_to_source        in varchar2 default null);

function get_header_toolbar_region_id (
   p_application_id         in number,
   p_user_interface_id      in number )
   return number;

function get_footer_toolbar_region_id (
   p_application_id         in number,
   p_user_interface_id      in number )
   return number;

function get_footer_default_template_id (
    p_flow_id                   in number,
    p_user_interface_id         in number )
    return number;

function get_header_default_template_id (
    p_flow_id                   in number,
    p_user_interface_id         in number )
    return number;

procedure create_user_interface (
    p_flow_id         in number,
    p_ui_type_name    in varchar2,
    p_display_name    in varchar2,
    p_display_seq     in number,
    p_use_auto_detect in varchar2,
    p_is_default      in varchar2,
    p_theme_id        in number,
    p_home_url        in varchar2,
    p_login_url       in varchar2,
    p_global_page_id  in number
);

end wwv_flow_wizard_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ISC"
as
   function vc return boolean;
   function current_flow_restricted return boolean;
   function deployment_environment return boolean;
end wwv_flow_isc;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_IMAGE_API_PRIVATE"
as

procedure get_image_details(
    p_id                        in number,
    p_file_object_id           out number,
    p_file_path                out varchar2,
    p_file_name                out varchar2)
    ;

/*
 * create record in wwv_flow_image_repository, and find the associated
 *  record in wwv_flow_file_object$ (key off of p_new_image_name) and
 *  write that blob to the file system
 */
procedure process_new_image(
    p_flow_id                   in number,
    p_image_id                  in number,
    p_image_name                in varchar2,
    p_new_image_name            in varchar2,
    p_nlang                     in varchar2,
    p_height                    in number,
    p_width                     in number,
    p_notes                     in varchar2)
    ;

--
-- F I L E S Y S T E M   I N T E G R A T I O N
--
/*
 * pass in the image id of the wwv_flow_image_repository record representing
 *  the image you want to drop. If this image does not exist according to the
 *  wwv_flow_image_repository table, this will not work.
 */
procedure remove_image(
    p_id                        in number)
    ;

end wwv_flow_image_api_private;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_IMAGE_API" as
    g_varchar2_table sys.dbms_sql.varchar2_table; -- used by wwv_flow_gen_api2.create_flow_image_repository

/*
 * Create a new image_repository entry, returns unique id for
 *  wwv_flow_image_repository table.
 */


function new_image_repository_record(
    p_name                  in out varchar2,
    p_varchar2_table            in sys.dbms_sql.varchar2_table,
    p_mimetype                  in varchar2,
    p_flow_id                   in number,
    p_nlang                     in varchar2,
    p_height                    in number default null,
    p_width                     in number default null,
    p_notes                     in varchar2)
    return number
    ;

--
-- F I L E S Y S T E M   I N T E G R A T I O N
--

/*
 * pass in the image name and flow id of the wwv_flow_image_repository record
 *  representing the image you want to drop. If this image does not exist
 *  according to the wwv_flow_image_repository table, this will not work.
 */
procedure remove_image(
    p_image_name                in varchar2,
    p_flow_id                   in number)
    ;

end wwv_flow_image_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CSS_API_PRIVATE"
as

/*
 * create record in wwv_flow_css_repository, and find the associated
 *  record in wwv_flow_file_object$ (key off of p_new_css_name) and
 *  write that blob to the file system
 */
procedure process_new_css(
    p_flow_id                   in number,
    p_css_name                  in varchar2,
    p_notes                     in varchar2,
    p_file_charset              in varchar2 default null)
    ;


/*
 * update existing record in wwv_flow_css_repository, and find the
 *  record in wwv_flow_file_object$ and update the blob with
 *  p_css_contents
 */
procedure update_css(
    p_css_id                    in number,
    p_css_name                  in varchar2,
    p_css_contents              in varchar2,
    p_css_notes                 in varchar2)
    ;


/*
 * Create a new css_repository entry, returns unique id for
 *  wwv_flow_css_repository table.
 */
function new_css_repository_record(
    p_name                  in out varchar2,
    p_varchar2_table            in sys.dbms_sql.varchar2_table,
    p_mimetype                  in varchar2,
    p_flow_id                   in number,
    p_notes                     in varchar2)
    return number
    ;


--
-- F I L E S Y S T E M   I N T E G R A T I O N
--

/*
 * pass in the css id of the wwv_flow_css_repository record representing
 *  the css file you want to drop. If this css does not exist according to the
 *  wwv_flow_css_repository table, this will fail.
 */
procedure remove_css(
    p_id                        in number)
    ;
--
-- remove by name
--
procedure remove_css(
    p_css_name                  in varchar2)
    ;

end wwv_flow_css_api_private;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_HTML_API_PRIVATE"
as

/*
 * create record in wwv_flow_html_repository, and find the associated
 *  record in wwv_flow_file_object$ (key off of p_html_name) and
 *  write that blob to the file system
 *
 * if the file id is known (fm table wwv_flow_file_object$), pass it.
 *  otherwise, it will be found based on p_html_name
 */
procedure new_html(
    p_flow_id                   in number,
    p_html_id                   in number default null,
    p_html_name                 in varchar2,
    p_notes                     in varchar2,
    p_file_charset              in varchar2 default null)
    ;

/*
 * Update an existing record in wwv_flow_html_repository, and find
 *  the associated record in wwv_flow_file_object$ and re-write that
 *  blob to the file system.
 */
procedure update_html(
    p_flow_id                   in number,
    p_html_id                   in number,
    p_html_name                 in varchar2,
    p_html_contents             in varchar2,
    p_notes                     in varchar2)
    ;


--
-- F I L E S Y S T E M   I N T E G R A T I O N
--
/*
 * pass in the html id of the wwv_flow_html_repository record representing
 *  the html you want to drop. If this html does not exist according to the
 *  wwv_flow_html_repository table, this will not work.
 */
procedure remove_html(
    p_id                        in number)
    ;

end wwv_flow_html_api_private;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_HTML_API"
as

/*
 * Create a new html_repository entry, returns unique id for
 *  wwv_flow_html_repository table.
 */
function new_html_repository_record(
    p_name                  in out varchar2,
    p_varchar2_table            in sys.dbms_sql.varchar2_table,
    p_mimetype                  in varchar2,
    p_flow_id                   in number,
    p_notes                     in varchar2)
    return number
    ;

--
-- remove by name
--
procedure remove_html(
    p_html_name in varchar2,
    p_flow_id   in number   default null)
    ;
end wwv_flow_html_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COLLECTION" as
--  Copyright (c) Oracle Corporation 2001 - 2005. All Rights Reserved.
--
--    DESCRIPTION
--      Flow collection session state management package.
--
--    SECURITY
--      Publicly executable.
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--



empty_vc_arr wwv_flow_global.vc_arr2;
empty_n_arr  wwv_flow_global.n_arr;
empty_d_arr  wwv_flow_global.d_arr;



procedure create_collection(
    --
    -- Create a named collection.  If a collection exists with the same name
    -- for the current user in the same session for the current Application ID, an application
    -- error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     apex_collection.create_collection( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    ;


procedure create_or_truncate_collection(
    --
    -- Create a named collection.  If a collection exists with the same name
    -- for the same user in the same session for the current Flow ID, all members
    -- of this collection will be removed (i.e., the named collection will be truncated).
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     apex_collection.create_or_truncate_collection( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    ;


procedure create_collection_from_query(
    --
    -- Create a named collection from the supplied query.  The query will be parsed as the
    -- application owner.  If a collection exists with the same name for the current user in the
    -- same session for the current Flow ID, an application error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    --     p_generate_md5      =  Flag to compute MD5 checksum for member data (default is 'NO')
    --
    -- example(s):
    --     l_query := 'select make, model, caliber from firearms';
    --     apex_collection.create_collection_from_query( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_generate_md5    in varchar2 default 'NO' )
    ;

procedure create_collection_from_query2(
    --
    -- Create a named collection from the supplied query.  The query will be parsed as the
    -- application owner.  If a collection exists with the same name for the current user in the
    -- same session for the current Flow ID, an application error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    --     p_generate_md5      =  Flag to compute MD5 checksum for member data (default is 'NO')
    --
    -- example(s):
    --     l_query := 'select make, model, caliber from firearms';
    --     apex_collection.create_collection_from_query( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_generate_md5    in varchar2 default 'NO' )
    ;

procedure create_collection_from_query_b(
    --
    -- Create a named collection from the supplied query using bulk operations.  The query will
    -- be parsed as the application owner.  If a collection exists with the same name for the current
    -- user in the same session for the current Flow ID, an application error will be raised.
    --
    -- This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named
    -- collection.  Two limitations are imposed by this procedure:
    --
    --   1) The MD5 checksum for the member data will not be computed
    --   2) No column value in query p_query can exceed 2,000 bytes
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    -- example(s):
    --     l_query := 'select make, model, caliber from firearms';
    --     apex_collection.create_collection_from_query_b( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_max_row_count   in number default null )
    ;

procedure create_collection_from_query_b(
    --
    -- Create a named collection from the supplied query using bulk operations.  The query will
    -- be parsed as the application owner.  If a collection exists with the same name for the current
    -- user in the same session for the current Flow ID, an application error will be raised.
    --
    -- This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named
    -- collection.  Two limitations are imposed by this procedure:
    --
    --   1) The MD5 checksum for the member data will not be computed
    --   2) No column value in query p_query can exceed 2,000 bytes
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    -- example(s):
    --     l_query := 'select make, model, caliber from firearms';
    --     apex_collection.create_collection_from_query_b( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_names           in wwv_flow_global.vc_arr2,
    p_values          in wwv_flow_global.vc_arr2,
    p_max_row_count   in number default null)
    ;



procedure create_collection_from_queryb2(
    --
    -- Create a named collection from the supplied query using bulk operations.  The query will
    -- be parsed as the application owner.  If a collection exists with the same name for the current
    -- user in the same session for the current Flow ID, an application error will be raised.
    --
    -- This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named
    -- collection.  Two limitations are imposed by this procedure:
    --
    --   1) The MD5 checksum for the member data will not be computed
    --   2) No varchar2 column value in query p_query can exceed 2,000 bytes
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    -- example(s):
    --     l_query := 'select price, null, null, null, null, make, model, caliber from firearms';
    --     apex_collection.create_collection_from_queryb2( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_max_row_count   in number default null )
    ;


procedure create_collection_from_queryb2(
    --
    -- Create a named collection from the supplied query using bulk operations.  The query will
    -- be parsed as the application owner.  If a collection exists with the same name for the current
    -- user in the same session for the current Flow ID, an application error will be raised.
    --
    -- This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named
    -- collection.  Two limitations are imposed by this procedure:
    --
    --   1) The MD5 checksum for the member data will not be computed
    --   2) No varchar2 column value in query p_query can exceed 2,000 bytes
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_query             =  Query to be executed which will populate the members of the
    --                            collection.  If p_query is numeric, it is assumed to be
    --                            a sys.DBMS_SQL cursor.
    -- example(s):
    --     l_query := 'select price, null, null, null, null, make, model, caliber from firearms';
    --     apex_collection.create_collection_from_queryb2( p_collection_name => 'Firearm', p_query => l_query );
    --
    p_collection_name in varchar2,
    p_query           in varchar2,
    p_names           in wwv_flow_global.vc_arr2,
    p_values          in wwv_flow_global.vc_arr2,
    p_max_row_count   in number default null );


procedure truncate_collection(
    --
    -- Truncate a named collection, thereby removing all members.
    -- If a collection does not exist with the specified name for the current
    -- user in the same session for the current Flow ID, an application error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     apex_collection.truncate_collection( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    ;


procedure delete_collection(
    --
    -- Delete/Drop a named collection, removing all members and dropping
    -- the named collection.  If a collection does not exist with the specified
    -- name for the current user in the same session for the current Flow ID, an application
    -- error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     apex_collection.delete_collection( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    ;

procedure delete_all_collections
    --
    -- Delete all of the collections belonging to the
    -- current user in the current Flow session in the
    -- current Flow
    --
    ;

procedure delete_all_app_collections(
    p_application_id in number )
    --
    -- Delete all of the collections belonging to the
    -- current user in the current APEX session for the
    -- specified application
    --
    ;


procedure delete_all_collections_session
    --
    -- Delete all of the collections belonging to the
    -- current user in the current Flow session, regardless of Flow number
    --
    ;


function collection_member_count(
    --
    -- Return the total number of members of the named collection.  Note that this
    -- returns the total member count, which may not be equal to the highest sequence id
    -- in the collection, as gaps could exist.  Note that if the named collection does
    -- not exists for the current user in the current Flow session and for the current
    -- Flow ID, an application error will NOT be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     l_count := apex_collection.collection_member_count( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    return number
    ;


procedure resequence_collection(
    --
    -- For the given named collection, update the seq_id value of each member such
    -- that no "gaps" will exist in the sequencing.  So a collection with a set of
    -- seq_id's (1,2,3,5,8,9) would become (1,2,3,4,5,6).  If a collection does not exist
    -- with the specified name for the current user in the same session for the current
    -- Flow ID, an application error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     apex_collection.resequence_collection( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    ;


function collection_exists(
    --
    -- Return TRUE or FALSE if the specified named collection exists for the
    -- current user in the current session for the current Flow ID
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    -- example(s):
    --     l_exists := apex_collection.collection_exists( p_collection_name => 'Firearm' );
    --
    p_collection_name in varchar2 )
    return boolean
    ;


procedure add_member(
    --
    -- Add a member to the given named collection.  If a collection does not exist
    -- with the specified name for the current user in the same session for the current
    -- Flow ID, an application error will be raised.  Any attribute value exceeding 4,000 bytes will be truncated
    -- to 4,000 bytes.  Gaps are not used when adding a member, so an existing collection with members
    -- of sequence id's (1,2,5,8) will add the new member with a sequence ID of 9.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_c001              =  Attribute value 1 of the member to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_c0XX              =  Attribute value XX of the member to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_generate_md5      =  Flag to compute MD5 checksum for member data (default is 'NO')
    --
    -- example(s):
    --     apex_collection.add_member( p_collection_name => 'Firearm', p_c001 => 'Colt', p_c002 => 'AR-15' );
    --
    p_collection_name in varchar2,
    p_c001          in varchar2 default null,
    p_c002          in varchar2 default null,
    p_c003          in varchar2 default null,
    p_c004          in varchar2 default null,
    p_c005          in varchar2 default null,
    p_c006          in varchar2 default null,
    p_c007          in varchar2 default null,
    p_c008          in varchar2 default null,
    p_c009          in varchar2 default null,
    p_c010          in varchar2 default null,
    p_c011          in varchar2 default null,
    p_c012          in varchar2 default null,
    p_c013          in varchar2 default null,
    p_c014          in varchar2 default null,
    p_c015          in varchar2 default null,
    p_c016          in varchar2 default null,
    p_c017          in varchar2 default null,
    p_c018          in varchar2 default null,
    p_c019          in varchar2 default null,
    p_c020          in varchar2 default null,
    p_c021          in varchar2 default null,
    p_c022          in varchar2 default null,
    p_c023          in varchar2 default null,
    p_c024          in varchar2 default null,
    p_c025          in varchar2 default null,
    p_c026          in varchar2 default null,
    p_c027          in varchar2 default null,
    p_c028          in varchar2 default null,
    p_c029          in varchar2 default null,
    p_c030          in varchar2 default null,
    p_c031          in varchar2 default null,
    p_c032          in varchar2 default null,
    p_c033          in varchar2 default null,
    p_c034          in varchar2 default null,
    p_c035          in varchar2 default null,
    p_c036          in varchar2 default null,
    p_c037          in varchar2 default null,
    p_c038          in varchar2 default null,
    p_c039          in varchar2 default null,
    p_c040          in varchar2 default null,
    p_c041          in varchar2 default null,
    p_c042          in varchar2 default null,
    p_c043          in varchar2 default null,
    p_c044          in varchar2 default null,
    p_c045          in varchar2 default null,
    p_c046          in varchar2 default null,
    p_c047          in varchar2 default null,
    p_c048          in varchar2 default null,
    p_c049          in varchar2 default null,
    p_c050          in varchar2 default null,
    p_n001          in number   default null,
    p_n002          in number   default null,
    p_n003          in number   default null,
    p_n004          in number   default null,
    p_n005          in number   default null,
    p_d001          in date     default null,
    p_d002          in date     default null,
    p_d003          in date     default null,
    p_d004          in date     default null,
    p_d005          in date     default null,
    p_clob001       in clob     default empty_clob(),
    p_blob001       in blob     default empty_blob(),
    p_xmltype001    in sys.xmltype  default null,
    p_generate_md5  in varchar2 default 'NO' )
    ;


function add_member(
    --
    -- Add a member to the given named collection.  If a collection does not exist
    -- with the specified name for the current user in the same session for the current
    -- Flow ID, an application error will be raised.  Any attribute value exceeding 4,000 bytes will
    -- be truncated to 4,000 bytes.  The sequence ID of the newly added member is returned.  Gaps
    -- are not used when adding a member, so an existing collection with members
    -- of sequence id's (1,2,5,8) will return a sequence ID of 9 for the newly added member.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --
    --     p_c001              =  Attribute value 1 of the member to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_c0XX              =  Attribute value XX of the member to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_generate_md5      =  Flag to compute MD5 checksum for member data (default is 'NO')
    --
    -- Returns:                   sequence ID of the newly added member
    --
    -- example(s):
    --     l_new_id := apex_collection.add_member( p_collection_name => 'Firearm', p_c001 => 'Colt', p_c002 => 'AR-15' );
    --
    p_collection_name in varchar2,
    p_c001          in varchar2 default null,
    p_c002          in varchar2 default null,
    p_c003          in varchar2 default null,
    p_c004          in varchar2 default null,
    p_c005          in varchar2 default null,
    p_c006          in varchar2 default null,
    p_c007          in varchar2 default null,
    p_c008          in varchar2 default null,
    p_c009          in varchar2 default null,
    p_c010          in varchar2 default null,
    p_c011          in varchar2 default null,
    p_c012          in varchar2 default null,
    p_c013          in varchar2 default null,
    p_c014          in varchar2 default null,
    p_c015          in varchar2 default null,
    p_c016          in varchar2 default null,
    p_c017          in varchar2 default null,
    p_c018          in varchar2 default null,
    p_c019          in varchar2 default null,
    p_c020          in varchar2 default null,
    p_c021          in varchar2 default null,
    p_c022          in varchar2 default null,
    p_c023          in varchar2 default null,
    p_c024          in varchar2 default null,
    p_c025          in varchar2 default null,
    p_c026          in varchar2 default null,
    p_c027          in varchar2 default null,
    p_c028          in varchar2 default null,
    p_c029          in varchar2 default null,
    p_c030          in varchar2 default null,
    p_c031          in varchar2 default null,
    p_c032          in varchar2 default null,
    p_c033          in varchar2 default null,
    p_c034          in varchar2 default null,
    p_c035          in varchar2 default null,
    p_c036          in varchar2 default null,
    p_c037          in varchar2 default null,
    p_c038          in varchar2 default null,
    p_c039          in varchar2 default null,
    p_c040          in varchar2 default null,
    p_c041          in varchar2 default null,
    p_c042          in varchar2 default null,
    p_c043          in varchar2 default null,
    p_c044          in varchar2 default null,
    p_c045          in varchar2 default null,
    p_c046          in varchar2 default null,
    p_c047          in varchar2 default null,
    p_c048          in varchar2 default null,
    p_c049          in varchar2 default null,
    p_c050          in varchar2 default null,
    p_n001          in number   default null,
    p_n002          in number   default null,
    p_n003          in number   default null,
    p_n004          in number   default null,
    p_n005          in number   default null,
    p_d001          in date     default null,
    p_d002          in date     default null,
    p_d003          in date     default null,
    p_d004          in date     default null,
    p_d005          in date     default null,
    p_clob001       in clob     default empty_clob(),
    p_blob001       in blob     default empty_blob(),
    p_xmltype001    in sys.xmltype  default null,
    p_generate_md5  in varchar2 default 'NO' )
    return number
    ;


procedure update_member(
    --
    -- Update the specified member in the given named collection.  If a collection
    -- does not exist with the specified name for the current user in the same session
    -- for the current Flow ID, an application error will be raised.  If the member specified
    -- by sequence ID p_seq does not exist, an application error will be raised.  Any attribute
    -- value exceeding 4,000 bytes will be truncated to 4,000 bytes.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_c001              =  Attribute value 1 of the member to be updated.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_c0XX              =  Attribute value XX of the member to be updated.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --
    --
    -- example(s):
    --     apex_collection.update_member( p_collection_name => 'Firearm', p_seq => '2', p_c001 => 'Colt', p_c002 => 'M-16' );
    --
    p_collection_name in varchar2,
    p_seq           in varchar2,
    p_c001          in varchar2 default null,
    p_c002          in varchar2 default null,
    p_c003          in varchar2 default null,
    p_c004          in varchar2 default null,
    p_c005          in varchar2 default null,
    p_c006          in varchar2 default null,
    p_c007          in varchar2 default null,
    p_c008          in varchar2 default null,
    p_c009          in varchar2 default null,
    p_c010          in varchar2 default null,
    p_c011          in varchar2 default null,
    p_c012          in varchar2 default null,
    p_c013          in varchar2 default null,
    p_c014          in varchar2 default null,
    p_c015          in varchar2 default null,
    p_c016          in varchar2 default null,
    p_c017          in varchar2 default null,
    p_c018          in varchar2 default null,
    p_c019          in varchar2 default null,
    p_c020          in varchar2 default null,
    p_c021          in varchar2 default null,
    p_c022          in varchar2 default null,
    p_c023          in varchar2 default null,
    p_c024          in varchar2 default null,
    p_c025          in varchar2 default null,
    p_c026          in varchar2 default null,
    p_c027          in varchar2 default null,
    p_c028          in varchar2 default null,
    p_c029          in varchar2 default null,
    p_c030          in varchar2 default null,
    p_c031          in varchar2 default null,
    p_c032          in varchar2 default null,
    p_c033          in varchar2 default null,
    p_c034          in varchar2 default null,
    p_c035          in varchar2 default null,
    p_c036          in varchar2 default null,
    p_c037          in varchar2 default null,
    p_c038          in varchar2 default null,
    p_c039          in varchar2 default null,
    p_c040          in varchar2 default null,
    p_c041          in varchar2 default null,
    p_c042          in varchar2 default null,
    p_c043          in varchar2 default null,
    p_c044          in varchar2 default null,
    p_c045          in varchar2 default null,
    p_c046          in varchar2 default null,
    p_c047          in varchar2 default null,
    p_c048          in varchar2 default null,
    p_c049          in varchar2 default null,
    p_c050          in varchar2 default null,
    p_n001          in number   default null,
    p_n002          in number   default null,
    p_n003          in number   default null,
    p_n004          in number   default null,
    p_n005          in number   default null,
    p_d001          in date     default null,
    p_d002          in date     default null,
    p_d003          in date     default null,
    p_d004          in date     default null,
    p_d005          in date     default null,
    p_clob001       in clob     default empty_clob(),
    p_blob001       in blob     default empty_blob(),
    p_xmltype001    in sys.xmltype  default null )
    ;


procedure update_member_attribute(
    --
    -- Update the specified member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Flow ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range 1-50, and error will
    -- be raised.  Any attribute value exceeding 4,000 bytes will be truncated to 4,000 bytes.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_attr_number       =  Attribute number of the member attribute to be updated.
    --                            Valid values are 1 through 50.  Any number outside of this
    --                            range will be ignored.
    --     p_attr_value        =  Attribute value of the member attribute to be updated.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_attr_number => '1', p_attr_value => 'Colt' );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_attr_number     in varchar2,
    p_attr_value      in varchar2)
    ;


procedure update_member_attribute(
    --
    -- Update the specified CLOB member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Flow ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range (currently only 1 for CLOB), an error will
    -- be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_clob_number       =  Attribute number of the CLOB member attribute to be updated.
    --                            Valid values are 1.  Any number outside of this
    --                            range will be ignored.
    --     p_clob_value        =  Attribute value of the CLOB member attribute to be updated.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_clob_number => '1', p_clob_value => 'Colt' );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_clob_number     in varchar2,
    p_clob_value      in clob)
    ;

procedure update_member_attribute(
    --
    -- Update the specified BLOB member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Application ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range (currently only 1 for BLOB), an error will
    -- be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_blob_number       =  Attribute number of the BLOB member attribute to be updated.
    --                            Valid values are 1.  Any number outside of this
    --                            range will be ignored.
    --     p_blob_value        =  Attribute value of the BLOB member attribute to be updated.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_blob_number => '1', p_blob_value => l_blob_content );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_blob_number     in number,
    p_blob_value      in blob)
    ;

procedure update_member_attribute(
    --
    -- Update the specified sys.XMLTYPE member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Application ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range (currently only 1 for sys.XMLTYPE), an error will
    -- be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_xmltype_number    =  Attribute number of the sys.XMLTYPE member attribute to be updated.
    --                            Valid values are 1.  Any number outside of this
    --                            range will be ignored.
    --     p_xmltype_value     =  Attribute value of the sys.XMLTYPE member attribute to be updated.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_xmltype_number => 1, p_blob_value => l_xmltype );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_xmltype_number  in number,
    p_xmltype_value   in sys.xmltype)
    ;



procedure update_member_attribute(
    --
    -- Update the specified NUMBER member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Application ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range (currently only 1 through 5 for NUMBER),
    -- an error will be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_attr_number       =  Attribute number of the NUMBER member attribute to be updated.
    --                            Valid values are 1 through 5.  Any number outside of this
    --                            range will be ignored.
    --     p_number_value      =  Attribute value of the NUMBER member attribute to be updated.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_attr_number => 1, p_number_value =>  );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_attr_number     in number,
    p_number_value    in number)
    ;


procedure update_member_attribute(
    --
    -- Update the specified DATE member attribute in the given named collection.  If a
    -- collection does not exist with the specified name for the current user in the same
    -- session for the current Application ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.  If the
    -- attribute number specified is invalid or outside the range (currently only 1 through 5 for DATE),
    -- an error will be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be updated.
    --     p_attr_number       =  Attribute number of the DATE member attribute to be updated.
    --                            Valid values are 1 through 5.  Any number outside of this
    --                            range will be ignored.
    --     p_date_value        =  Attribute value of the DATE member attribute to be updated.
    --
    --
    -- example(s):
    --     apex_collection.update_member_attribute( p_collection_name => 'Firearm', p_seq => '2', p_attr_number => 1, p_date_value => sysdate  );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2,
    p_attr_number     in number,
    p_date_value      in date)
    ;

procedure add_members (
    --
    -- Add the array of members to the given named collection.  If a collection does not exist
    -- with the specified name for the current user in the same session for the current application ID,
    -- an application error will be raised.  Any character attribute value exceeding 4,000 bytes will be truncated
    -- to 4,000 bytes.  The count of elements in the p_c001 PL/SQL table will be used as
    -- the total number of items across all PL/SQL tables.  Thus, if p_c001.count = 2 and
    -- p_c002.count = 10, only 2 members will be added.  If p_c001 is null, an application
    -- error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_c001              =  Array of first attribute values to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.  The count of
    --                            the p_c001 array will be used across all arrays.
    --     p_c0XX              =  Attribute of NN attributes values to be added.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --
    -- example(s):
    --     apex_collection.add_members( p_collection_name => 'Firearm', p_c001 => l_arr1, p_c002 => l_arr2 );
    --
    p_collection_name in varchar2,
    p_c001            in wwv_flow_global.vc_arr2,
    p_c002            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c003            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c004            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c005            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c006            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c007            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c008            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c009            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c010            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c011            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c012            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c013            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c014            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c015            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c016            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c017            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c018            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c019            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c020            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c021            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c022            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c023            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c024            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c025            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c026            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c027            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c028            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c029            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c030            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c031            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c032            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c033            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c034            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c035            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c036            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c037            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c038            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c039            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c040            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c041            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c042            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c043            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c044            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c045            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c046            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c047            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c048            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c049            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c050            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_n001            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n002            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n003            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n004            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n005            in wwv_flow_global.n_arr   default empty_n_arr,
    p_d001            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d002            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d003            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d004            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d005            in wwv_flow_global.d_arr   default empty_d_arr,
    p_generate_md5    in varchar2 default 'NO')
    ;

procedure merge_members (
    -- Merge members of the given named collection with the values passed in the arrays.
    -- If no collection exists one will be created.  If a p_init_query is provided the collection
    -- will be created from the supplied SQL query.  If the collection exists then the following
    -- will occur:
    -- 1. rows in the collection not in the arrays will be deleted
    -- 2. rows in the collection and in the arrays will be updated
    -- 3. rows in the arrays and not in the collection will be inserted
    --
    -- Any attribute value exceeding 4,000 bytes will be truncated to 4,000 bytes.
    -- The count of elements in the p_c001 PL/SQL table will be used as
    -- the total number of items across all PL/SQL tables.  Thus, if p_c001.count = 2 and
    -- p_c002.count = 10, only 2 members will be merged.  If p_c001 is null, an application
    -- error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_c001              =  Array of first attribute values to be merged.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.  The count of
    --                            the p_c001 array will be used across all arrays.  If no values
    --                            are provided then no actions will be performed.
    --     p_c0XX              =  Attribute of NN attributes values to be merged.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_seq               =  Identifies the sequence number of the collection to be merged.
    --     p_null_index        =  If the element identified by this value, for example 3 would be
    --                            p_c003, is null then treat this row as a null row.  In other
    --                            words tell the merge function to ignore this row.  This will result
    --                            in the null rows being removed from the collection.  The null
    --                            index works in conjunction with the null value.  If the value
    --                            of the p_cXXX argument is equal to the p_null_value then the
    --                            row will be treated as null.
    --     p_null_value        =  Used in conjunction with the p_null_index argument.  Identifies
    --                            the null value.  If used this value must not be null.  A typical
    --                            value for this argument is "0".
    --     p_init_query        =  If the collection does not exist then create the collection using
    --                            this query.
    --
    p_collection_name in varchar2,
    p_seq             in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c001            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c002            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c003            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c004            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c005            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c006            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c007            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c008            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c009            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c010            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c011            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c012            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c013            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c014            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c015            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c016            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c017            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c018            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c019            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c020            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c021            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c022            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c023            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c024            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c025            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c026            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c027            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c028            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c029            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c030            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c031            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c032            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c033            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c034            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c035            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c036            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c037            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c038            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c039            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c040            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c041            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c042            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c043            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c044            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c045            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c046            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c047            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c048            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c049            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c050            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_null_index      in number   default 1,
    p_null_value      in varchar2 default null,
    p_init_query      in varchar2 default null)
    ;


procedure update_members (
    --
    -- Update the array of members for the given named collection.  If a collection does not exist
    -- with the specified name for the current user in the same session for the current Flow ID,
    -- an application error will be raised.  Any attribute value exceeding 4,000 bytes will be truncated
    -- to 4,000 bytes.  The count of elements in the p_seq PL/SQL table will be used as
    -- the total number of items across all PL/SQL tables.  Thus, if p_seq.count = 2 and
    -- p_c001.count = 10, only 2 members will be updated.  If p_seq is null, an application
    -- error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Array of member sequence ID's to be updated.  The count
    --                            of the p_seq array will be used across all arrays.
    --     p_c001              =  Array of first attribute values to be updated.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --     p_c0XX              =  Attribute of NN attributes values to be updated.  Maximum length
    --                            can be 4,000 bytes.  The attribute value will be truncated
    --                            to 4,000 bytes if greater than this amount.
    --
    -- example(s):
    --     apex_collection.update_members( p_collection_name => 'Firearm', p_seq => l_seq_arr, p_c001 => l_arr1, p_c002 => l_arr2 );
    --
    p_collection_name in varchar2,
    p_seq             in wwv_flow_global.vc_arr2,
    p_c001            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c002            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c003            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c004            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c005            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c006            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c007            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c008            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c009            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c010            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c011            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c012            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c013            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c014            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c015            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c016            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c017            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c018            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c019            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c020            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c021            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c022            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c023            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c024            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c025            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c026            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c027            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c028            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c029            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c030            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c031            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c032            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c033            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c034            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c035            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c036            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c037            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c038            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c039            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c040            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c041            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c042            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c043            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c044            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c045            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c046            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c047            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c048            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c049            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_c050            in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_n001            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n002            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n003            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n004            in wwv_flow_global.n_arr   default empty_n_arr,
    p_n005            in wwv_flow_global.n_arr   default empty_n_arr,
    p_d001            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d002            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d003            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d004            in wwv_flow_global.d_arr   default empty_d_arr,
    p_d005            in wwv_flow_global.d_arr   default empty_d_arr )
    ;



procedure delete_member(
    --
    -- Delete the specified member in the given named collection.  If a collection
    -- does not exist with the specified name for the current user in the same session
    -- and for the current Flow ID, an application error will be raised.  If the member specified
    -- by sequence ID p_seq does not exist, an application error will be raised.
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be deleted.
    --
    -- example(s):
    --     apex_collection.delete_member( p_collection_name => 'Firearm', p_seq => '2' );
    --
    p_collection_name in varchar2,
    p_seq             in varchar2 )
    ;



procedure delete_members(
    --
    -- For a given collection, delete all members in the collection where the attribute
    -- specified by the attribute number equal the supplied value.  If a collection does not
    -- exist with the specified name for the current user in the same session for the
    -- current Flow ID, an application error will be raised.  If the attribute number specified
    -- is invalid or outside the range 1-50, and error will be raised.
    --
    -- Note...if the supplied value for p_attr_value is null, then all members of the named
    -- collection will be deleted where the attribute (specified by p_attr_number) is null
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_attr_number       =  Attribute number of the member attribute used to match
    --                            for the specified attribute value for deletion.  Valid values are
    --                            1 through 50.  Any number outside of this range will raise an error.
    --     p_attr_value        =  Attribute value of the member attribute used to match for deletion.
    --                            Maximum length can be 4,000 bytes.  The attribute value will be
    --                            truncated to 4,000 bytes if greater than this amount.
    --
    --
    -- example(s):
    --     apex_collection.delete_members( p_collection_name => 'Firearm', p_attr_number => '1', p_attr_value => 'Colt' );
    --
    --       will delete ALL members in the collection named 'Firearm' where attribute number 1 has a value of 'Colt'
    --
    p_collection_name in varchar2,
    p_attr_number     in varchar2,
    p_attr_value      in varchar2)
    ;


procedure move_member_up(
    --
    -- Adjust the sequence ID of specified member in the given named collection up by one,
    -- swapping sequence ID with the one it's replacing (2 becomes 3, 3 becomes 2).  If a collection
    -- does not exist with the specified name for the current user in the same session and for
    -- the current Flow ID, an application error will be raised.  If the member specified by
    -- sequence ID p_seq does not exist, an application error will be raised.  If the specified member
    -- is the highest sequence in the collection, an application error will NOT be returned.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be moved up by one.
    --
    -- example(s):
    --     apex_collection.move_member_up( p_collection_name => 'Firearm', p_seq => '2' );
    --
    p_collection_name in varchar2,
    p_seq             in number )
    ;


procedure move_member_down(
    --
    -- Adjust the sequence ID of specified member in the given named collection down by one,
    -- swapping sequence ID with the one it's replacing (3 becomes 2, 2 becomes 3).  If a collection
    -- does not exist with the specified name for the current user in the same session and
    -- for the current Flow ID, an application error will be raised.  If the member specified by
    -- sequence ID p_seq does not exist, an application error will be raised.  If the specified member
    -- is the lowest sequence in the collection, an application error will NOT be returned.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member to be moved down by one.
    --
    -- example(s):
    --     apex_collection.move_member_down( p_collection_name => 'Firearm', p_seq => '2' );
    --
    p_collection_name in varchar2,
    p_seq             in number )
    ;


procedure sort_members(
    --
    -- For given named collection, reorder the members by the column number specified by
    -- p_sort_on_column_number.  This will not only sort the collection by a particular column/attribute
    -- in the collection, but it will also reassign the sequence ID's of each member such
    -- that no gaps will exist.
    --
    p_collection_name       in varchar2,
    p_sort_on_column_number in number )
    ;


function collection_has_changed(
    --
    -- For given named collection, determine if the collection has changed since it was
    -- created or since the collection changed flag was reset
    --
    p_collection_name in varchar2 )
    return boolean
    ;


procedure reset_collection_changed(
    --
    -- For given named collection, reset the collection changed flag
    -- (mark it as not changed)
    --
    p_collection_name in varchar2 )
    ;


procedure reset_collection_changed_all
    --
    -- Reset the collection changed flag (mark as not changed)
    -- for all collections in the user's current session
    --
    ;

function get_member_md5(
    --
    -- Compute and return the message digest of the attributes for the member specified by
    -- the sequence ID.  This computation of message digest is equal to the computation
    -- performed natively by collections.  Thus, the result of this function could be
    -- compared to the MD5_ORIGINAL column of the view apex_collections.
    --
    -- If a collection does not exist with the specified name for the current user in the same
    -- session and for the current Flow ID, an application error will be raised.  If the member
    -- specified by sequence ID p_seq does not exist, an application error will be raised.
    --
    --
    -- Arguments:
    --     p_collection_name   =  Name of collection.  Maximum length can be
    --                            255 bytes.  Note that collection_names are case-insensitive,
    --                            as the collection name will be converted to upper case
    --     p_seq               =  Sequence ID of the collection member.
    --
    -- example(s):
    --     l_md5 := apex_collection.get_member_md5( p_collection_name => 'Firearm', p_seq => '2' );
    --
    p_collection_name in varchar2,
    p_seq             in number )
    return varchar2
    ;

end wwv_flow_collection;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CUSTOM_AUTH"
as
--  Copyright (c) Oracle Corporation 2001-2002. All Rights Reserved.
--
--     DESCRIPTION
--       API package for flow developers using custom authentication.
--
--       These functions and procedures provide access to flow
--       metadata and flow session state and provide wrappers
--       for commonly used security-related modules.
--
--       Some of these modules are intended for use only within
--       the flow engine runtime context, and others may be
--       called from within any context, if so indicated.
--
--    SECURITY
--       Executable via public synonym and grant
--
--    NOTES
--
--    EXAMPLE
--
--
function get_next_session_id
    --
    -- Context: flows runtime
    -- Purpose: Generate next session id from sequence generator
    --
    return number;

function get_security_group_id
    --
    -- Context: flows runtime
    -- Purpose: Return the wwv_flow_security.g_security_group_id global
    --
    return number;

function flow_page_item_exists(
    --
    -- Context: flows runtime
    -- Purpose: Return boolean as to existence within the current
    --          flow page's metadata of a named page-level item.
    --
    p_item_name in varchar2)
    return boolean;

function current_page_is_public
    --
    -- Context: flows runtime
    -- Purpose: Return boolean corresponding to current flow
    --          page attribute PAGE_IS_PUBLIC_Y_N setting.
    --
    return boolean;

function session_id_exists
    --
    -- Context: flows runtime
    -- Purpose: Return boolean if wwv_flow.g_instance is set/not set
    --
    return boolean;

function get_user
    --
    -- Context: flows runtime
    -- Purpose: Return wwv_flow.g_user global
    --
    return varchar2;

function get_session_id
    --
    -- Context: flows runtime
    -- Purpose: Return wwv_flow.g_instance global
    --
    return number;

procedure set_user(
    --
    -- Context: flows runtime
    -- Purpose: Set wwv_flow.g_user global
    --
    p_user in varchar2);

procedure set_session_id(
    --
    -- Context: flows runtime
    -- Purpose: Set wwv_flow.g_instance global
    --
    p_session_id in number);

procedure set_session_id_to_next_value
    --
    -- Context: flows runtime
    -- Purpose: Set wwv_flow.g_instance to next
    --          session id from sequence generator.
    --
    ;

procedure define_user_session(
    --
    -- Context: flows runtime
    -- Purpose: Combine the functions of set_user and
    --          set_session_id to provide a concise API call
    --
    p_user in varchar2,
    p_session_id in number);

procedure remember_deep_link(
    --
    -- Context: flows runtime
    -- Purpose: Check if the item we use to hold
    -- the deep linking url used by scheme authentication
    -- exists in the current flow. If not, it creates the flow
    -- item and updates the disk cache with the new value,
    -- after creating the flows session if it doesn't exist.
    --
    p_url in varchar2);

end wwv_flow_custom_auth;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CUSTOM_AUTH_STD" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2001-2012. All Rights Reserved.
--
--     NAME
--       custom_auth_std.sql
--
--     DESCRIPTION
--       API package for flow developers using custom authentication
--       setups.
--
--       These functions and procedures allow flow developers to
--       invoke built-in entry points to the flow engine's custom
--       authentication code path and to interrogate environmental
--       and table values related to custom authentication.
--
--       Some of these modules may be intended for use only within
--       the flow engine runtime context, and others may be
--       called from within any context, as the comments indicate.
--
--    SECURITY
--       Executable via public synonym and grant
--
--     RUNTIME DEPLOYMENT: YES
--
--     MODIFIED    (MM/DD/YYYY)
--     sspadafo     09/24/2002 - Created
--     sspadafo     10/29/2002 - Added flowchart proc
--     sspadafo     11/05/2002 - Remove grant statement after code
--     sspadafo     11/15/2002 - Rename function get_session_id to get_session_id_from_cookie
--     sspadafo     11/16/2002 - Change params and extended function of logout procedure
--     sspadafo     11/16/2002 - Added moc_page_sentry_v1 and moc_logout_v1 functions/procedures
--     sspadafo     11/26/2002 - Removed params from get_username, is_session_valid
--     sspadafo     11/26/2002 - Added Portal SSO support
--     sspadafo     11/27/2002 - Moved Portal SSO support to wwv_flow_custom_auth_sso package
--     sspadafo     11/28/2002 - Moved portal_sso_sentry_v1 back into this package
--     sspadafo     05/30/2003 - Exposed ldap_authenticate function
--     sspadafo     11/04/2003 - Add get_ldap_props procedure (Bug 3236319)
--     sspadafo     06/25/2004 - Add p_preserve_case param to login,post_login procedures (Bug 3121711)
--     sspadafo     01/30/2005 - Add portal_sso_sentry_v0 (Bug 4152406)
--     cbcho        03/31/2006 - Added procedure authentication_status
--     sspadafo     08/31/2007 - Added procedure remove_session (Bug 6146451)
--     sspadafo     04/23/2008 - Added p_use_secure_cookie parameter to login, post_login, and logout (Bug 6991519)
--     sspadafo     01/03/2009 - Added support for declarative secure cookie property
--     sspadafo     11/01/2009 - Added ws_login, ws_post_login, ws_logout procedures
--     jstraub      03/18/2010 - Added p_use_ssl to get_ldap_props and ldap_authenticate
--     jstraub      03/26/2010 - Added p_use_exact_dn, p_search_filter to get_ldap_props and ldap_authenticate
--     jkallman     05/13/2010 - Remove all references to MOC authentication (Bug 9708928)
--     jkallman     06/14/2010 - Added missing parameter p_websheet_page_id to ws_login
--     cneumuel     04/11/2011 - Added internal proc builder_logout for builder sso
--     cneumuel     05/20/2011 - Added plugin_logout for plugin authentication logout (feature #581)
--     cneumuel     05/26/2011 - Moved plugin_logout to wwv_flow_authentication.logout (feature #581)
--     cneumuel     05/30/2011 - In ldap_authenticate(): made p_ldap_edit_function and p_owner optional
--     cneumuel     06/06/2011 - Removed flowchart_perpage,flowchart_login
--     cneumuel     07/27/2011 - Removed builder_logout since it is obsolete because of authentication plugins
--     cneumuel     03/18/2013 - In logout, logout_then_go_to_page, logout_then_go_to_url: added deprecation warning (bug #16506797)
--
--------------------------------------------------------------------------------

function get_username
    --
    -- Context: flows runtime
    -- Purpose: get username from wwv_flow_session$ for current session
    --
    return varchar2
    ;

function get_session_id_from_cookie
    --
    -- Context: flows runtime with cookie in cgi environment
    -- Purpose: get session id of current user based on cookie
    --
    return number
    ;

function is_session_valid
    --
    -- Context: flows runtime
    -- Purpose: determine if session exists and is valid
    --
    return boolean
    ;

procedure ws_logout(
    --
    -- Context: Use as redirect URL from navbar logout item and similar places
    -- Purpose: determine cookie for given websheet app, unset cookie, then redirect to url
    --
    p_websheet_app_id     in varchar2 default null,
    p_next_url            in varchar2 default null,
    p_use_secure_cookie   in boolean default false)
    ;

procedure remove_session
    ;

function portal_sso_sentry_v0
    return boolean
    ;

function portal_sso_sentry_v1
    return boolean
    ;

procedure login(
    --
    -- Context: any
    -- Purpose: Do after login page submit processing
    --          starting at the pre-authentication step.
    --
    p_uname             in varchar2 default null,
    p_password          in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_flow_page         in varchar2 default null,
    p_entry_point       in varchar2 default null,
    p_preserve_case     in boolean default false,
    p_use_secure_cookie in boolean default false)
    ;

procedure ws_login(
    --
    -- Purpose: Do websheet login page submit processing
    --          starting at the pre-authentication step.
    --
    p_uname             in varchar2 default null,
    p_password          in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_websheet_app_id   in varchar2 default null,
    p_entry_point       in varchar2 default null,
    p_preserve_case     in boolean default false,
    p_use_secure_cookie in boolean default false,
    p_websheet_page_id  in varchar2 default null )
    ;

procedure post_login(
    --
    -- Context: any
    -- Purpose: Do after login page submit processing
    --          starting at the post-authentication step.
    --
    p_uname             in varchar2 default null,
    p_password          in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_flow_page         in varchar2 default null,
    p_preserve_case     in boolean default false,
    p_use_secure_cookie in boolean default false)
    ;

procedure ws_post_login(
    --
    -- Context: any
    -- Purpose: Do websheet login page submit processing
    --          starting at the post-authentication step.
    --
    p_uname             in varchar2 default null,
    p_password          in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_websheet_app_id   in varchar2 default null,
    p_preserve_case     in boolean default false,
    p_use_secure_cookie in boolean default false)
    ;

procedure login_page(
    --
    -- Context: any
    -- Purpose: show flow 4155:1000 builtin login page
    --
   p_flow_page  in varchar2 default null)
   ;

procedure get_cookie_props(
    --
    -- Context: any
    -- Purpose: get cookie properties for specified flow
    --
    p_flow in number,
    p_cookie_name   out varchar2,
    p_cookie_path   out varchar2,
    p_cookie_domain out varchar2,
    p_secure        out boolean)
    ;

function ldap_dnprep(
    p_username in varchar2)
   return varchar2
   ;

procedure get_ldap_props(
    --
    -- Context: in application
    -- Purpose: get ldap config for current application's authentication scheme
    --
    p_ldap_host          out varchar2,
    p_ldap_port          out integer,
    p_use_ssl            out varchar2,
    p_use_exact_dn       out varchar2,
    p_ldap_dn            out varchar2,
    p_search_filter      out varchar2,
    p_ldap_edit_function out varchar2)
    ;

--##############################################################################
--#
--# DEPRECATED APIS - DO NOT USE
--#
--##############################################################################

--==============================================================================
function ldap_authenticate(
    p_username           in varchar2,
    p_password           in varchar2,
    p_ldap_host          in varchar2,
    p_ldap_port          in number,
    p_use_ssl            in varchar2 default 'N',
    p_use_exact_dn       in varchar2 default 'Y',
    p_ldap_string        in varchar2,
    p_search_filter      in varchar2 default null,
    p_ldap_edit_function in varchar2 default null,
    p_owner              in varchar2 default null)
    return boolean;

--==============================================================================
-- use apex_authentication.logout instead
--==============================================================================
procedure logout (
    p_this_flow           in varchar2 default null,
    p_next_flow_page_sess in varchar2 default null,
    p_next_url            in varchar2 default null,
    p_use_secure_cookie   in boolean default false );

--==============================================================================
-- use apex_authentication.logout instead
--==============================================================================
procedure logout_then_go_to_page (
    p_args in varchar2 default null);

--==============================================================================
-- use apex_authentication.logout instead
--==============================================================================
procedure logout_then_go_to_url (
    p_args in varchar2 default null);

end wwv_flow_custom_auth_std;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_API"
as
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--
--    DESCRIPTION
--      SQL Workshop API
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

empty_vc_arr    wwv_flow_global.vc_arr2;

g_raise_errors  boolean := false;
g_error_msg     varchar2(32767) := null;
g_success_msg   varchar2(32767) := null;
g_dbms_output   sys.dbms_output.chararr;

--
-- gives how many rows got updated, deleted, and inserted
--
g_rowcnt        number := 0;

function array_element(
    p_vcarr in wwv_flow_global.vc_arr2,
    p_index in number )
    return varchar2;

function valid_workspace_schema (
    p_schema in varchar2
    ) return varchar2;

procedure check_priv (
    p_schema in varchar2
    );

procedure check_priv_object (
    p_application_id in number,
    p_schema         in varchar2,
    p_object         in varchar2
    );

procedure display_error_msg (
    p_command in varchar2 default null
    );

procedure create_plan_table (
    p_schema in varchar2
    );

procedure explain_plan (
    p_plan_id in number,
    p_sql     in varchar2,
    p_schema  in varchar2
    );

procedure save_history (
    p_security_group_id in number,
    p_user              in varchar2,
    p_sql_cmd           in varchar2,
    p_schema            in varchar2
    );


procedure run_sql_arr (
    p_sql             in sys.dbms_sql.varchar2a,
    p_schema          in varchar2,
    p_values          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_get_dbms_output in varchar2 default 'N'
    );

procedure run_sql (
    p_sql_cmd    in varchar2,
    p_schema     in varchar2,
    p_values     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_print_msg  in varchar2 default 'N'
    );

procedure create_sw_qbe_collection (
    p_object_owner     varchar2,
    p_object_name      varchar2,
    p_column_ids       wwv_flow_global.vc_arr2,
    p_column_names     wwv_flow_global.vc_arr2,
    p_query_conditions wwv_flow_global.vc_arr2,
    p_data_types       wwv_flow_global.vc_arr2,
    p_comments         wwv_flow_global.vc_arr2,
    p_checked          wwv_flow_global.vc_arr2
    );

procedure create_record (
    p_schema       in varchar2,
    p_table_owner  in varchar2,
    p_table_name   in varchar2,
    p_col_values   in wwv_flow_global.vc_arr2,
    p_synonym_name in varchar2 default null
    );

-----------------------------------------
-- UPDATE_RECORD with md5 check calls original
--
procedure update_record (
    p_schema       in varchar2,
    p_table_owner  in varchar2,
    p_table_name   in varchar2,
    p_rowid        in varchar2,
    p_col_values   in wwv_flow_global.vc_arr2,
    p_synonym_name in varchar2 default null,
    p_md5_checksum   in varchar2
    );

-----------------------------------------
-- Original UPDATE_RECORD without md5 check
--
procedure update_record (
    p_schema       in varchar2,
    p_table_owner  in varchar2,
    p_table_name   in varchar2,
    p_rowid        in varchar2,
    p_col_values   in wwv_flow_global.vc_arr2,
    p_synonym_name in varchar2 default null
    );

procedure delete_record (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_rowid        in varchar2,
    p_synonym_name in varchar2 default null,
    p_md5_checksum in varchar2
    );

procedure delete_record (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_rowid        in varchar2,
    p_synonym_name in varchar2 default null
    );

function get_binds(
    p_stmt   in varchar2
    ) return varchar2;

procedure perform_binds(
    p_cursor in number,
    p_stmt   in varchar2,
    p_values in wwv_flow_global.vc_arr2 default empty_vc_arr);

function gen_row_md5 ( p_table_name in varchar2,
                       p_owner in varchar2,
                       p_row_id in varchar2) return varchar2;

end wwv_flow_sw_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ITEM_HELP"
as

--==============================================================================
-- Shows the defined help text of an page item.
--==============================================================================
procedure show_help (
    p_item_id           in varchar2 default null,
    p_session           in varchar2 default null,
    p_close_button_name in varchar2 default 'Close',
    p_title_bgcolor     in varchar2 default '#cccccc;',
    p_page_bgcolor      in varchar2 default '#FFFFFF',
    p_output_format     in varchar2 default 'HTML' );

--==============================================================================
-- Shows the defined help text of a plug-in attribute.
--==============================================================================
procedure show_plugin_attribute_help (
    p_application_id     in number,
    p_builder_page_id    in number,
    p_session_id         in varchar2,
    p_plugin_type        in varchar2,
    p_plugin_name        in varchar2,
    p_attribute_scope    in varchar2,
    p_attribute_sequence in number,
    p_output_format      in varchar2 default 'JSON' );

--==============================================================================
-- Returns the help text of a page item.
-- Note: p_item_id has to be the language specific id of the page item.
--==============================================================================
function get_help_text (
    p_item_id in number )
    return varchar2;

end wwv_flow_item_help;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ADMIN_API"
as
--  Copyright (c) Oracle Corporation 2002 - 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_admin_api.sql
--
--    DESCRIPTION
--      API for Platform Administrators to manage cookie based users for all companies.
--      Workspace administration.
--


empty_vc_arr wwv_flow_global.vc_arr2;


--
-- archiving apis
--
function get_last_archived_date (
   p_workspace_id         in number)
   return date
   ;

procedure archive_activity_log (
   p_workspace_id         in number);



--
-- user apis
--

procedure remove_user (
    --
    -- Description
    --   This procedure allows for programatic removal of users with given security_group_id.
    --
    -- Example
    --
    p_user_id            in number,
    p_security_group_id  in number)
    ;

procedure fetch_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     --
     p_user_id                      in number,
     p_user_name                    out varchar2,
     p_first_name                   out varchar2,
     p_last_name                    out varchar2,
     p_email_address                out varchar2,
     p_groups                       out varchar2,
     p_developer_role               out varchar2,
     p_default_schema               out varchar2,
     p_description                  out varchar2,
     p_account_expiry               out date,
     p_account_locked               out varchar2,
     p_failed_access_attempts       out number,
     p_change_password_on_first_use out varchar2,
     p_first_password_use_occurred  out varchar2,
     p_security_group_id            out number
     );

procedure create_user (
    p_security_group_id            in number,
    p_user_name                    in varchar2,
    p_first_name                   in varchar2 default null,
    p_last_name                    in varchar2 default null,
    p_description                  in varchar2 default null,
    p_email_address                in varchar2 default null,
    p_web_password                 in varchar2,
    p_group_ids                    in varchar2 default null,
    p_default_schema               in varchar2 default null,
    p_default_date_format          in varchar2 default null,
    p_allow_access_to_schemas      in varchar2 default null,
    p_account_expiry               in date     default trunc(sysdate),
    p_account_locked               in varchar2 default 'N',
    p_failed_access_attempts       in number   default 0,
    p_change_password_on_first_use in varchar2 default 'Y',
    p_first_password_use_occurred  in varchar2 default 'N',
    p_attribute_01                 in varchar2 default null,
    p_attribute_02                 in varchar2 default null,
    p_attribute_03                 in varchar2 default null,
    p_attribute_04                 in varchar2 default null,
    p_attribute_05                 in varchar2 default null,
    p_attribute_06                 in varchar2 default null,
    p_attribute_07                 in varchar2 default null,
    p_attribute_08                 in varchar2 default null,
    p_attribute_09                 in varchar2 default null,
    p_attribute_10                 in varchar2 default null,
    --
    p_is_admin                     in varchar2 default 'Y',
    p_allow_app_building_yn        in varchar2 default 'Y',
    p_allow_sql_workshop_yn        in varchar2 default 'Y',
    p_allow_websheet_dev_yn        in varchar2 default 'Y',
    p_allow_team_development_yn    in varchar2 default 'Y' );

procedure edit_user (
     --
     -- Edit user information to
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     --
     p_user_id                      in number,
     p_security_group_id            in number,
     p_user_name                    in varchar2,
     p_first_name                   in varchar2 default null,
     p_last_name                    in varchar2 default null,
     p_web_password                 in varchar2 default null,
     p_new_password                 in varchar2 default null,
     p_email_address                in varchar2 default null,
     p_start_date                   in varchar2 default null,
     p_end_date                     in varchar2 default null,
     p_employee_id                  in varchar2 default null,
     p_allow_access_to_schemas      in varchar2 default null,
     p_person_type                  in varchar2 default null,
     p_default_schema               in varchar2 default null,
     p_default_date_format          in varchar2 default null,
     p_group_ids                    in varchar2 default null,
     p_developer_roles              in varchar2 default null,
     p_description                  in varchar2 default null,
     p_account_expiry               in date     default trunc(sysdate),
     p_account_locked               in varchar2 default 'N',
     p_failed_access_attempts       in number   default 0,
     p_change_password_on_first_use in varchar2 default 'Y',
     p_first_password_use_occurred  in varchar2 default 'N',
     --
     p_allow_app_building_yn        in varchar2 default 'Y',
     p_allow_sql_workshop_yn        in varchar2 default 'Y',
     p_allow_websheet_dev_yn        in varchar2 default 'Y',
     p_allow_team_development_yn    in varchar2 default 'Y'
     );

procedure edit_user_and_group (
     --
     -- Edit user information to
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users.
     -- This procedure does NOT edit wwv_flow_developers.
     --
     p_user_id                      in number,
     p_security_group_id            in number,
     p_user_name                    in varchar2,
     p_first_name                   in varchar2 default null,
     p_last_name                    in varchar2 default null,
     p_web_password                 in varchar2 default null,
     p_new_password                 in varchar2 default null,
     p_email_address                in varchar2 default null,
     p_start_date                   in varchar2 default null,
     p_end_date                     in varchar2 default null,
     p_employee_id                  in varchar2 default null,
     p_allow_access_to_schemas      in varchar2 default null,
     p_person_type                  in varchar2 default null,
     p_default_schema               in varchar2 default null,
     p_default_date_format          in varchar2 default null,
     p_group_ids                    in varchar2 default null,
     p_description                  in varchar2 default null,
     p_account_expiry               in date     default trunc(sysdate),
     p_account_locked               in varchar2 default 'N',
     p_failed_access_attempts       in number   default 0,
     p_change_password_on_first_use in varchar2 default 'Y',
     p_first_password_use_occurred  in varchar2 default null,
     --
     p_allow_app_building_yn        in varchar2 default 'Y',
     p_allow_sql_workshop_yn        in varchar2 default 'Y',
     p_allow_websheet_dev_yn        in varchar2 default 'Y',
     p_allow_team_development_yn    in varchar2 default 'Y'
     );

procedure edit_developer_role (
    --
    -- Edit user developer roles in wwv_flow_developers.
    --
    p_id                in number,
    p_security_group_id in number,
    p_user_id           in number,
    p_user_name         in varchar2,
    p_flow_id           in number default null,
    p_developer_roles   in varchar2 default null
    );

procedure edit_developer_roles (
    --
    -- This procedure expects array values.
    -- Edit user developer roles in wwv_flow_developers.
    --
    p_ids               in wwv_flow_global.vc_arr2,
    p_security_group_id in number,
    p_user_id           in number,
    p_user_name         in varchar2,
    p_flow_ids          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_developer_roles   in wwv_flow_global.vc_arr2 default empty_vc_arr
    );

procedure delete_developer_role (
    --
    -- This procedure removes user developer roles.
    --
    p_id                in number,
    p_security_group_id in number,
    p_user_name         in varchar2
    );

procedure lock_workspace (
    --
    -- Lock all workspace accounts and also
    -- change the status of all workspace applications
    -- to Unavailable.
    --
    p_security_group_id in number
    );

end wwv_flow_admin_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CONDITIONS" as

--  Copyright (c) Oracle Corporation 2002-2012. All Rights Reserved.
--
--    DESCRIPTION
--      Flow conditions
--
--    SECURITY
--      Internal function available only to the flows user.
--
--    RUNTIME DEPLOYMENT: YES
--

function standard_condition (
    p_condition_type    in varchar2 default null,
    p_condition         in varchar2 default null,
    p_condition2        in varchar2 default null)
    return boolean;

function is_read_only (
    p_condition_type      in varchar2,
    p_expression1         in varchar2,
    p_expression2         in varchar2,
    p_parent_is_read_only in boolean  default null )
    return boolean;

end wwv_flow_conditions;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SVG"
as
--  Copyright (c) Oracle Corporation 2002. All Rights Reserved.
--
--
--    DESCRIPTION
--      Flow SVG charting engine
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

d1 varchar2(255);
d2 varchar2(255);
d3 varchar2(255);
d4 varchar2(255);
d5 varchar2(255);

type values_table is table of wwv_flow_global.vc_arr2 index by binary_integer;


empty_vc_arr       wwv_flow_global.vc_arr2;

--
-- global constants
--
g_height_id                  pls_integer := 30;
g_width_id                   pls_integer := 31;
--
-- global variables
--
g_region_id                  number := 0;
--
g_max_rows                   number := 0;
g_overall_max_rows           number := 0;
g_more_data_exist            boolean := false;
--
g_link_init                  wwv_flow_global.vc_arr2;
g_link                       wwv_flow_global.vc_arr2;
g_label_init                 wwv_flow_global.vc_arr2;
g_label                      wwv_flow_global.vc_arr2;
g_value_init                 wwv_flow_global.vc_arr2;
g_value                      wwv_flow_global.vc_arr2;
g_prev_value                 wwv_flow_global.vc_arr2;
g_colors                     wwv_flow_global.vc_arr2;
g_row_cnt                    number := 0;

g_sValues                    values_table;
g_sLabels                    values_table;
g_sLinks                     values_table;

--
g_total_value                number := 0;
g_max_label_length           number := 0;
g_max_value                  number := 0;
g_min_value                  number := 0;
g_max_element                number := 0;
g_min_element                number := 0;
--
g_theme                      varchar2(4000) := null;
g_chart_type                 varchar2(4000) := null;
g_chart_title                varchar2(32767) := null;
g_x_axis_title               varchar2(32767) := null;
g_y_axis_title               varchar2(32767) := null;
g_graph_size                 number := 0;
g_chart_height               number := 0;
g_chart_width                number := 0;
--
-- original passed chart width and height value
--
g_chart_org_height           number := 0;
g_chart_org_width            number := 0;

--
-- chart width and height for view box
--
g_chart_viewbox_height       number := 0;
g_chart_viewbox_width        number := 0;
--
g_bar_width                  number := 0;
g_num_mask                   varchar2(250);
g_gap                        number := 0;
g_data_labels                varchar2(4000) := null;
g_3d                         boolean;
g_show_legend                boolean;
g_legend_bg_color            varchar2(4000) := null;
--
g_grid_visible               boolean;
g_axis_interval              number(30,5) := 0;
g_axis_major_unit            number := 0;
g_axis_min                   number := 0;
g_axis_max                   number := 0;
--
g_title_font_face            varchar2(4000) := null;
g_title_font_size            number := 0;
g_title_font_color           varchar2(4000) := null;
g_label_font_face            varchar2(4000) := null;
g_label_font_size            number := 0;
g_label_font_color           varchar2(4000) := null;
g_value_font_face            varchar2(4000) := null;
g_value_font_size            number := 0;
g_value_font_color           varchar2(4000) := null;
g_legend_font_face           varchar2(4000) := null;
g_legend_font_size           number := 0;
g_legend_font_color          varchar2(4000) := null;
g_x_axis_title_font_face     varchar2(4000) := null;
g_x_axis_title_font_size     number := 0;
g_x_axis_title_font_color    varchar2(4000) := null;
g_y_axis_title_font_face     varchar2(4000) := null;
g_y_axis_title_font_size     number := 0;
g_y_axis_title_font_color    varchar2(4000) := null;
--
g_series_queries             wwv_flow_global.vc_arr2;
g_series_max_rows            wwv_flow_global.vc_arr2;
g_series_no_data_found       wwv_flow_global.vc_arr2;
g_series_colors              wwv_flow_global.vc_arr2;
g_series_names               wwv_flow_global.vc_arr2;
g_series_labels              wwv_flow_global.vc_arr2;
g_series_formats             wwv_flow_global.vc_arr2;
g_series_orientations        wwv_flow_global.vc_arr2;
g_series_marker_styles       wwv_flow_global.vc_arr2;
g_series_marker_sizes        wwv_flow_global.vc_arr2;
g_series_line_styles         wwv_flow_global.vc_arr2;
g_series_line_weights        wwv_flow_global.vc_arr2;
--
g_series_name                varchar2(32767) := null;
g_series_color               varchar2(32767) := null;
g_data_format                varchar2(32767) := null;
g_data_orientation           varchar2(32767) := null;
g_series_marker_style        varchar2(32767) := null;
g_series_marker_size         varchar2(32767) := null;
g_series_line_style          varchar2(32767) := null;
--
g_x_axis_min_value           number := 0;
g_y_axis_min_value           number := 0;
g_x_axis_max_value           number := 0;
g_y_axis_max_value           number := 0;
g_x_axis_major_unit          number := 0;
g_y_axis_major_unit          number := 0;
g_x_axis_interval            number := 0;
g_y_axis_interval            number := 0;
g_x_axis_max                 number := 0;
g_y_axis_max                 number := 0;
g_x_axis_min                 number := 0;
g_y_axis_min                 number := 0;
g_x_axis_format              varchar2(4000) := null;
g_y_axis_format              varchar2(4000) := null;

g_series_prev_y              wwv_flow_global.vc_arr2;

g_negative_offset            number := 0;

procedure init_colors;

procedure set_attributes (
    p_region_id           in number,
    p_query               in varchar2,
    p_chart_type          in varchar2,
    p_no_data_found       in varchar2 default null
    );

procedure chart (
    p_region_id in number
    );

function get_shared_styles (
   p_type in varchar2,
   p_x_axis_title_font_face in varchar2 default null,
   p_x_axis_title_font_size in varchar2 default null,
   p_x_axis_title_font_color in varchar2 default null,

   p_y_axis_title_font_face in varchar2 default null,
   p_y_axis_title_font_size in varchar2 default null,
   p_y_axis_title_font_color in varchar2 default null,

   p_label_font_face in varchar2 default null,
   p_label_font_size in varchar2 default null,
   p_label_font_color in varchar2 default null,

   p_value_font_face in varchar2 default null,
   p_value_font_size in varchar2 default null,
   p_value_font_color in varchar2 default null
    ) return varchar2;

end wwv_flow_svg;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_UTIL" as

    function get_pk_position (
      p_table_owner in varchar2,
      p_table_name  in varchar2,
      p_column_name in varchar2
      )
    return number;

    function is_wrapped (
      p_owner  in varchar2,
      p_object in varchar2,
      p_type   in varchar2
      )
    return boolean;

    function is_reserved(
      p_word in varchar2)
    return boolean;

    function is_valid_name (
      p_name in varchar2
    ) return boolean;

    function is_database_reserved_word(
      p_word in varchar2)
    return boolean;

    function table_exists (
      p_name in varchar2,
      p_owner in varchar2
    ) return boolean;

    function is_available_name (
      p_name in varchar2,
      p_owner in varchar2
    ) return boolean;

    function is_available_name2 (
      p_name in varchar2,
      p_owner in varchar2,
      p_type in varchar2
    ) return boolean;

    function pick_pk (
      p_collection_name in varchar2
    ) return varchar2;

    function generate_pk_name (
      p_name in varchar2,
      p_cnt  in number default 0
    ) return varchar2;

    function generate_seq_name (
      p_name in varchar2,
      p_cnt  in number default 0
    ) return varchar2;

    procedure run_block(
      p_sql  in varchar2,
      p_user in varchar2 );

    procedure run_ddl(
      p_sql  in sys.dbms_sql.varchar2a,
      p_user in varchar2 );

    function get_altertable_ddl(
      p_table_name varchar2,
      p_action     varchar2,
      p_con_claus  varchar2,
      p_col_claus  varchar2
    ) return varchar2;

   --
   -- Returns the alter table statement to add/modify a column.
   -- Valid values for p_action are add and modify.
   --
   function get_altertable_column_ddl(
       p_owner       in varchar2,
	   p_table_name  in varchar2,
	   p_column_name in varchar2,
	   p_data_type   in varchar2,
	   p_length      in number,
	   p_precision   in number,
	   p_scale       in number,
	   p_null        in varchar2,
	   p_identity    in varchar2,
	   p_action      in varchar2
   ) return varchar2;

   function get_trigger2_ddl(
      p_table_name in varchar2,
      p_action     in varchar2,
      p_trigger_nm in varchar2,
      p_when       in varchar2,
      p_operations in varchar2,
      p_for_each   in varchar2,
      p_body       in varchar2,
      p_col        in varchar2,
      p_col_when   in varchar2
   ) return varchar2;

   function get_index_ddl(
      p_table_name in varchar2,
      p_index_name in varchar2,
      p_action     in varchar2,
      p_unique     in varchar2,
      p_col1       in varchar2,
      p_col2       in varchar2,
      p_col3       in varchar2,
      p_col4       in varchar2,
      p_indextype  in varchar2
   ) return varchar2;

   function get_copytbl_ddl(
      p_table_name in varchar2,
      p_cp_table   in varchar2,
      p_columns    in varchar2,
      p_where      in varchar2
   ) return varchar2;

   function get_row_cnt(
      p_schema     in varchar2,
      p_table_name in varchar2
   ) return varchar2;

   function get_analyze_ddl(
      p_table_name  in varchar2,
      p_action      in varchar2,
      p_est_claus   in varchar2
   ) return varchar2;

   function get_function_ddl(
      p_func_name   in varchar2,
      p_arguments   in varchar2,
      p_return      in varchar2,
      p_body        in varchar2
   ) return varchar2;

   function get_sequence_ddl(
      p_seq_name    in varchar2,
      p_start       in varchar2 default null,
      p_increment   in varchar2 default null,
      p_max         in varchar2 default null,
      p_min         in varchar2 default null,
      p_cache       in varchar2 default null,
      p_cycle       in varchar2 default null,
      p_order       in varchar2 default null
   ) return varchar2;

   function get_dblink_ddl(
      p_link_name   in varchar2,
      p_schema      in varchar2,
      p_password    in varchar2,
      p_host        in varchar2,
      p_host_port   in varchar2,
      p_sid_or_serv in varchar2,
      p_sid_name    in varchar2
   ) return varchar2;

   function get_synonym_ddl(
      p_syn_name    in varchar2,
      p_type        in varchar2,
      p_schema_to   in varchar2,
      p_object_to   in varchar2,
      p_link        in varchar2
   ) return varchar2;

   function get_drop_ddl(
      p_object_type in varchar2,
      p_object_name in varchar2,
      p_cascade     in varchar2 default null
   ) return varchar2;

   function get_view_ddl(
      p_view_name   in varchar2,
      p_body        in varchar2
   ) return varchar2;

   function get_package_ddl(
      p_pack_name   in varchar2,
      p_spec        in varchar2
   ) return varchar2;

   function get_packagebody_ddl(
      p_pack_name   in varchar2,
      p_body        in varchar2
   ) return varchar2;

   function run_other_sql (
      p_schema     in varchar2,
      p_sql        in varchar2
   ) return varchar2;

   function get_ddl(
     p_table_name varchar2,
     p_schema     varchar2,
     p_pk1        varchar2,
     p_pk1_name   varchar2,
     p_pk1_type   varchar2,
     p_seq_name   varchar2,
     p_run_ddl    varchar2 default 'NO',
     p_pk2        varchar2 default null,
     p_fk_name    varchar2 default null,
     p_fk_col     varchar2 default null,
     p_fk_ftable  varchar2 default null,
     p_fk_fcol    varchar2 default null,
     p_fk_type    varchar2 default null
   ) return varchar2;

    procedure run_sql (
      p_sql_cmd    in varchar2,
      p_schema     in varchar2,
      p_table_name in varchar2,
      p_seq_name   in varchar2
    );

    procedure create_package (
      p_source  in sys.dbms_sql.varchar2a,
      p_owner   in varchar2
    );

    procedure get_object_info (
      p_object_id in number,
      p_object_owner out varchar2,
      p_object_name  out varchar2,
      p_object_type  out varchar2
    );

  function get_foreign_key_ddl(
    p_table_name varchar2,
    p_schema     varchar2,
    p_seq_name   varchar2,
    p_run_ddl    boolean default false,
    p_fk_name    varchar2,
    p_fk_col     varchar2,
    p_fk_ftable  varchar2,
    p_fk_fcol    varchar2,
    p_fk_type    varchar2 default 'N'
  ) return varchar2;

  function get_const_ddl(
    p_table_name varchar2,
    p_schema     varchar2,
    p_con_name   varchar2,
    p_type       varchar2,
    p_check      varchar2,
    p_cols       varchar2,
    p_run_ddl    boolean default false
  ) return       varchar2;

    function show_plsql_edit(
        p_sgid  in  varchar2
    ) return boolean;

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_HINT" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_hint.sql
--
--    DESCRIPTION
--      This package is used to interact with the following tables:
--          wwv_flow_hnt_table_info
--          wwv_flow_hnt_column_info
--          wwv_flow_hnt_column_dict
--          wwv_flow_hnt_col_dict_syn
--      This package can be used to better create meaningful forms and reports and other flows contructs.
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED (MM/DD/YYYY)
--     cbcho    04/02/2003 - Bug 2882452: Created
--     cbcho    04/09/2003 - Bug 2882452: Added get_display_seq_report
--     cbcho    04/10/2003 - Bug 2882452: Added create_table_hint, create_column_hint, remove_table_hint
--     cbcho    04/11/2003 - Bug 2882452: Added more functions to get friendly names for forms
--     cbcho    04/11/2003 - Bug 2882452: Removed obsolete column and added new column reference in create_column_hint
--     cbcho    04/24/2003 - Added Sharons default_hints procedure
--     sbk      05/06/2003 - Changed default_hints to synch_hints
--     cbcho    05/06/2003 - Added table_hint_exists and column_hint_exists
--     sbk      06/02/2003 - Added mask_form column to create column, renamed column mask to mask_report
--     sbk                 - renamed get_mask to get_report_mask, added get_form_mask
--     cbcho    06/03/2003 - Added procedure create_normalize_hint
--     sbk      05/25/2004 - Changes to support version 1.6
--                         - removed get_region_title, replace with get_report_region_title and get_form_region_title
--                         - added get_display_as_tab_form, get_display_as_report
--                         - changed create_table_hint to remove region_title,
--                                   added report_region_title and form_region_title
--                         - changed create_column_hint to add display_as_tab_form and display_as_report
--                         - changed synch_hints to default group_by to N (rather than Y) - requested by CBCho
--                         - changed synch_hints to reflect updated create_table_hint procedure
--                         - added create_lov_data
--     sbk      05/28/2004 - put back in get_region_title for backward compatibility
--     sbk      06/02/2004 - added get_lov to retrieve either query or column_id if static lov
--     sbk      06/04/2004 - added get_aggregate_by, modified create_column_hint to add aggregate_by
--     sbk      06/07/2004 - added display_cons_columns
--                         - added gen_lov_name
--     sbk      06/10/2004 - added get_table_ui_defaults and get_col_ui_defaults
--     sbk      06/11/2004 - defaulted globals to null, added global to allow users to not use defaults
--                         - added remove_hint
--                         - added check_table function, returns N if no UI Defaults, S if need to synch table, F if table fine
--     sbk      06/15/2004 - added get_static_lov_string
--     sbk      06/22/2004 - added check_schema_privs
--                         - added create_table_hint_priv, create_column_hint_priv, create_lov_data_priv, remove_hint_priv
--                                 These ensure that the user has privilge on the schema they are creating for
--     sbk      06/28/2004 - added check_lov_issues to display warning when display as requires lov but no lov provided
--     sbk      09/13/2004 - added back in create_normalize_hint - it was somehow dropped
--     sbk      09/19/2007 - added update_table_hint, update_column_hint, update_lov_data, remove_column_hint, remove_lov_data
--     mhichwa  07/06/2009 - added synch_defaults_from_app
--     pawolf   10/20/2009 - Added dynamic attributes to wwv_flow_hnt_column_info
--     sbkenned 11/24/2009 - Added migration to Attribute Dictionary
--     sbkenned 12/02/2009 - Added is_valid_lov_query (needed with move to 4500)
--     sbkenned 12/08/2009 - Added update_ad_from_items, insert_ad_from_items, update_ad_from_cr, update_ad_from_ir,
--                           insert_ad_from_cr, insert_ad_from_ir to support pushing from page to Attribute Dictionary
--     sbkenned 12/15/2009 - Updated create_col and create_col priv to include group_id
--                         - Added create_group, create_group_priv and remove_group
--                         - Added create_col_attribute, create_col_synonym, update_col_attribute, update_col_synonym,
--                                 remove_col_attribute, remove_col_synonym
--     sbkenned 01/13/2010 - Added remove_col_attr_by_name, g_exp_workspace to support export/import
--     sbkenned 01/22/2010 - Removed form_display_as from attribute dictionary
--                         - Added update_items_from_ad, update_ir_from_ad, update_cr_from_ad
--     sbkenned 02/02/2010 - Added update_cr_ht_from_ad to set plug_query_headings_type when label updated in standard report
--     sbkenned 03/30/2010 - Added ad_col_hint_exists
--     sbkenned 04/01/2010 - Added get_ad_ui_defaults
--     hfarrell 04/09/2010 - Modified g_report_col_alignment to increase size from 1 to 10
--     sbkenned 06/01/2010 - Added remove_col_syn_by_name to support import
--     pawolf   12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--     jstraub  01/18/2012 - Removed display_cons_columns
--     cneumuel 08/09/2012 - Removed is_valid_lov_query
--     cneumuel 04/05/2013 - removed obsolete variables, added schema and sgid checks (bug #16607248)
--     cneumuel 12/03/2013 - In check_schema_privs: added p_table_name (bug #17883392)
--
--------------------------------------------------------------------------------

-- Used in get_table_ui_defaults and get_col_ui_defaults

    g_form_region_title    varchar2(255)  := null;
    g_report_region_title  varchar2(255)  := null;

    g_group_id             number         := null;
    g_group_seq            number         := null;
    g_group_name           varchar2(255)  := null;

    g_column_id            number         := null;
    g_label                varchar2(255)  := null;
    g_help_text            varchar2(4000) := null;
    g_mask_form            varchar2(255)  := null;
    g_display_seq_form     number         := null;
    g_display_in_form      varchar2(1)    := null;
    g_display_as_form      varchar2(50)   := null;
    g_form_attribute_01    varchar2(4000) := null;
    g_form_attribute_02    varchar2(4000) := null;
    g_form_attribute_03    varchar2(4000) := null;
    g_form_attribute_04    varchar2(4000) := null;
    g_form_attribute_05    varchar2(4000) := null;
    g_form_attribute_06    varchar2(4000) := null;
    g_form_attribute_07    varchar2(4000) := null;
    g_form_attribute_08    varchar2(4000) := null;
    g_form_attribute_09    varchar2(4000) := null;
    g_form_attribute_10    varchar2(4000) := null;
    g_form_attribute_11    varchar2(4000) := null;
    g_form_attribute_12    varchar2(4000) := null;
    g_form_attribute_13    varchar2(4000) := null;
    g_form_attribute_14    varchar2(4000) := null;
    g_form_attribute_15    varchar2(4000) := null;
    g_display_as_tab_form  varchar2(255)  := null;
    g_display_seq_report   number         := null;
    g_display_in_report    varchar2(1)    := null;
    g_display_as_report    varchar2(255)  := null;
    g_mask_report          varchar2(255)  := null;
    g_aggregate_by         varchar2(1)    := null;
    g_lov_query            varchar2(4000) := null;
    g_default_value        varchar2(255)  := null;
    g_required             varchar2(1)    := null;
    g_alignment            varchar2(1)    := null;
    g_display_width        number         := null;
    g_max_width            number         := null;
    g_height               number         := null;
    g_group_by             varchar2(1)    := null;
    g_searchable           varchar2(1)    := null;
    g_lov_type             varchar2(1)    := null;
    --
    g_form_format_mask     varchar2(255)  := null;
    g_form_display_width   number         := null;
    g_form_display_height  number         := null;
    g_form_data_type       varchar2(30)   := null;
    g_report_format_mask   varchar2(4000) := null;
    g_report_col_alignment varchar2(10)    := null;

-- Setting the following global to true makes all the functions and procedures pull
--   the UI Default values.  If the global is set to false (the user running the wizard
--   decided to override and not use UI Defaults), null is returned for the values.

    g_use_ui_defaults      boolean        := true;

-- The following global is used in check_schema_privs to ensure that, on import,
--    the user has privilege on the schema they are importing.

    g_schema               varchar2(30)   := null;

-- The following global is used in wwv_flow_imp_parser.get_attr_dict_workspace to show,
--    on import, the name of the exporting workspace.

    g_exp_workspace        varchar2(255)   := null;

procedure check_schema_privs (
    p_schema     in varchar2 default wwv_flow_hint.g_schema,
    p_table_name in varchar2 default null );

function table_hint_exists (
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return boolean;

function column_hint_exists (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return boolean;

-- sbk, 06/11/04: This column is no longer used but function left in for now
function get_region_title (
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return varchar2;

function get_report_region_title (
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return varchar2;

function get_form_region_title (
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return varchar2;

function get_item_help (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_report_mask (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_form_mask (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_alignment (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_searchable (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_required (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_label (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_display_in_report (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return varchar2;

function get_display_seq_report (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2
    ) return number;

function get_group_by (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

-- sbk, 06/11/04 - column not used for 1.5 or 1.6
function get_order_by_seq (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

-- sbk, 06/11/04 - column not used for 1.5 or 1.6
function get_order_by_asc_desc (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

function get_display_in_form (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

function get_display_seq_form (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

function get_display_as_form (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

function get_lov_query (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

procedure get_lov (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2,
    p_lov_type     out varchar2,
    p_lov_query    out varchar2,
    p_column_id    out number
    );

function get_static_lov_string (
    p_column_id   in number
    ) return varchar2;

function get_default_value (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

function get_display_width (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

function get_max_width (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

function get_height (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return number;

function get_display_as_tab_form (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

function get_display_as_report (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;

function get_aggregate_by (
    p_schema       in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2
    ) return varchar2;


procedure create_table_hint (
    p_table_id             in number   default null,
    p_schema               in varchar2 default null,
    p_table_name           in varchar2 default null,
    p_form_region_title    in varchar2 default null,
    p_report_region_title  in varchar2 default null
    );

procedure create_group (
    p_group_id             in number   default null,
    p_table_id             in number   default null,
    p_group_name           in varchar2 default null,
    p_description          in varchar2 default null,
    p_display_sequence     in number   default null
    );

procedure create_column_hint (
    p_column_id           in number   default null,
    p_table_id            in number   default null,
    p_column_name         in varchar2 default null,
    p_group_id            in number   default null,
    p_label               in varchar2 default null,
    p_help_text           in varchar2 default null,
    p_mask_form           in varchar2 default null,
    p_display_seq_form    in number   default null,
    p_display_in_form     in varchar2 default null,
    p_display_as_form     in varchar2 default null,
    p_form_attribute_01   in varchar2 default null,
    p_form_attribute_02   in varchar2 default null,
    p_form_attribute_03   in varchar2 default null,
    p_form_attribute_04   in varchar2 default null,
    p_form_attribute_05   in varchar2 default null,
    p_form_attribute_06   in varchar2 default null,
    p_form_attribute_07   in varchar2 default null,
    p_form_attribute_08   in varchar2 default null,
    p_form_attribute_09   in varchar2 default null,
    p_form_attribute_10   in varchar2 default null,
    p_form_attribute_11   in varchar2 default null,
    p_form_attribute_12   in varchar2 default null,
    p_form_attribute_13   in varchar2 default null,
    p_form_attribute_14   in varchar2 default null,
    p_form_attribute_15   in varchar2 default null,
    p_display_as_tab_form in varchar2 default null,
    p_display_seq_report  in number   default null,
    p_display_in_report   in varchar2 default null,
    p_display_as_report   in varchar2 default null,
    p_mask_report         in varchar2 default null,
    p_aggregate_by        in varchar2 default null,
    p_lov_query           in varchar2 default null,
    p_default_value       in varchar2 default null,
    p_required            in varchar2 default null,
    p_alignment           in varchar2 default null,
    p_display_width       in number   default null,
    p_max_width           in number   default null,
    p_height              in number   default null,
    p_group_by            in varchar2 default null,
    p_order_by_seq        in number   default null,
    p_order_by_asc_desc   in varchar2 default null,
    p_searchable          in varchar2 default null
    );

procedure create_lov_data (
    p_id                 in number      default null,
    p_column_id          in number      default null,
    p_lov_disp_sequence  in number      default null,
    p_lov_disp_value     in varchar2    default null,
    p_lov_return_value   in varchar2    default null
    );

procedure remove_table_hint (
    p_table_id    in number   default null
    );

procedure remove_hint (
    p_schema          in varchar2 default null,
    p_table_name      in varchar2 default null
    );

procedure synch_hints (
    p_schema          in varchar2 default null,
    p_table_name      in varchar2 default null
    );

function gen_lov_name (
    p_owner        in varchar2,
    p_table_name   in varchar2,
    p_column_name  in varchar2,
    p_sgid         in number,
    p_app_number   in number,
    p_page_number  in number
    ) return varchar2;


procedure get_table_ui_defaults (
    p_schema               in  varchar2,
    p_table_name           in  varchar2
    );

procedure get_col_ui_defaults (
    p_schema              in  varchar2,
    p_table_name          in  varchar2,
    p_column_name         in  varchar2
    );

function check_table (
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return varchar2;

procedure create_table_hint_priv (
    p_table_id             in number   default null,
    p_schema               in varchar2 default null,
    p_table_name           in varchar2 default null,
    p_form_region_title    in varchar2 default null,
    p_report_region_title  in varchar2 default null
    );

procedure create_group_priv (
    p_group_id             in number   default null,
    p_table_id             in number   default null,
    p_group_name           in varchar2 default null,
    p_description          in varchar2 default null,
    p_display_sequence     in number   default null
    );

procedure create_column_hint_priv (
    p_column_id           in number   default null,
    p_table_id            in number   default null,
    p_column_name         in varchar2 default null,
    p_group_id            in number   default null,
    p_label               in varchar2 default null,
    p_help_text           in varchar2 default null,
    p_mask_form           in varchar2 default null,
    p_display_seq_form    in number   default null,
    p_display_in_form     in varchar2 default null,
    p_display_as_form     in varchar2 default null,
    p_form_attribute_01   in varchar2 default null,
    p_form_attribute_02   in varchar2 default null,
    p_form_attribute_03   in varchar2 default null,
    p_form_attribute_04   in varchar2 default null,
    p_form_attribute_05   in varchar2 default null,
    p_form_attribute_06   in varchar2 default null,
    p_form_attribute_07   in varchar2 default null,
    p_form_attribute_08   in varchar2 default null,
    p_form_attribute_09   in varchar2 default null,
    p_form_attribute_10   in varchar2 default null,
    p_form_attribute_11   in varchar2 default null,
    p_form_attribute_12   in varchar2 default null,
    p_form_attribute_13   in varchar2 default null,
    p_form_attribute_14   in varchar2 default null,
    p_form_attribute_15   in varchar2 default null,
    p_display_as_tab_form in varchar2 default null,
    p_display_seq_report  in number   default null,
    p_display_in_report   in varchar2 default null,
    p_display_as_report   in varchar2 default null,
    p_mask_report         in varchar2 default null,
    p_aggregate_by        in varchar2 default null,
    p_lov_query           in varchar2 default null,
    p_default_value       in varchar2 default null,
    p_required            in varchar2 default null,
    p_alignment           in varchar2 default null,
    p_display_width       in number   default null,
    p_max_width           in number   default null,
    p_height              in number   default null,
    p_group_by            in varchar2 default null,
    p_order_by_seq        in number   default null,
    p_order_by_asc_desc   in varchar2 default null,
    p_searchable          in varchar2 default null
    );

procedure create_lov_data_priv (
    p_id                 in number      default null,
    p_column_id          in number      default null,
    p_lov_disp_sequence  in number      default null,
    p_lov_disp_value     in varchar2    default null,
    p_lov_return_value   in varchar2    default null
    );


procedure remove_hint_priv (
    p_schema          in varchar2 default null,
    p_table_name      in varchar2 default null
    );

function check_lov_issues (
    p_table_id in number
    ) return varchar2;

procedure create_normalize_hint (
    p_schema      in varchar2,
    p_table_name  in varchar2,
    p_column_name in varchar2,
    p_lov_query   in varchar2
    );

procedure update_table_hint (
    p_table_id             in number   default null,
    p_schema               in varchar2 default null,
    p_table_name           in varchar2 default null,
    p_form_region_title    in varchar2 default null,
    p_report_region_title  in varchar2 default null
    );

procedure update_group (
    p_group_id             in number   default null,
    p_table_id             in number   default null,
    p_group_name           in varchar2 default null,
    p_description          in varchar2 default null,
    p_display_sequence     in number   default null
    );

procedure update_column_hint (
    p_column_id           in number   default null,
    p_table_id            in number   default null,
    p_column_name         in varchar2 default null,
    p_group_id            in number   default null,
    p_label               in varchar2 default null,
    p_help_text           in varchar2 default null,
    p_mask_form           in varchar2 default null,
    p_display_seq_form    in number   default null,
    p_display_in_form     in varchar2 default null,
    p_display_as_form     in varchar2 default null,
    p_display_as_tab_form in varchar2 default null,
    p_display_seq_report  in number   default null,
    p_display_in_report   in varchar2 default null,
    p_display_as_report   in varchar2 default null,
    p_mask_report         in varchar2 default null,
    p_aggregate_by        in varchar2 default null,
    p_lov_query           in varchar2 default null,
    p_default_value       in varchar2 default null,
    p_required            in varchar2 default null,
    p_alignment           in varchar2 default null,
    p_display_width       in number   default null,
    p_max_width           in number   default null,
    p_height              in number   default null,
    p_group_by            in varchar2 default null,
    p_order_by_seq        in number   default null,
    p_order_by_asc_desc   in varchar2 default null,
    p_searchable          in varchar2 default null
    );

procedure update_lov_data (
    p_id                 in number      default null,
    p_column_id          in number      default null,
    p_lov_disp_sequence  in number      default null,
    p_lov_disp_value     in varchar2    default null,
    p_lov_return_value   in varchar2    default null
    );

procedure remove_column_hint (
    p_column_id  in number   default null
    );

procedure remove_lov_data (
    p_id  in number   default null
    );

procedure remove_group (
    p_group_id  in number  default null
    );

--

procedure synch_defaults_from_app (
   p_application_id         in number,
   p_form_page_id           in number default null,
   p_report_page_id         in number default null,
   p_table_id               in number,
   p_attributes_to_synch    in varchar2)
   ;

procedure migrate (
   p_table_id   in number
   );

procedure update_ad_from_items (
   p_application_id   in number,
   p_page_id          in number,
   p_item_id          in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure insert_ad_from_items (
   p_application_id   in number,
   p_page_id          in number,
   p_item_id          in number,
   p_attr_to_include  in varchar2);

procedure update_ad_from_cr (
   p_application_id   in number,
   p_rc_id            in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure update_ad_from_ir (
   p_application_id   in number,
   p_rc_id            in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure insert_ad_from_cr (
   p_application_id   in number,
   p_rc_id            in number,
   p_attr_to_include  in varchar2);

procedure insert_ad_from_ir (
   p_application_id   in number,
   p_rc_id            in number,
   p_attr_to_include  in varchar2);

procedure update_items_from_ad (
   p_application_id   in number,
   p_page_id          in number,
   p_item_id          in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure update_ir_from_ad (
   p_application_id   in number,
   p_rc_id            in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure update_cr_ht_from_ad (
   p_application_id   in number,
   p_page_id          in number,
   p_region_id        in number);

procedure update_cr_from_ad (
   p_application_id   in number,
   p_page_id          in number,
   p_region_id        in number,
   p_rc_id            in number,
   p_column_id        in number,
   p_attr_to_include  in varchar2);

procedure create_col_attribute (
    p_column_id             in number   default null,
    p_column_name           in varchar2 default null,
    p_label                 in varchar2 default null,
    p_help_text             in varchar2 default null,
    p_format_mask           in varchar2 default null,
    p_default_value         in varchar2 default null,
    p_form_format_mask      in varchar2 default null,
    p_form_display_width    in number   default null,
    p_form_display_height   in number   default null,
    p_form_data_type        in varchar2 default null,
    p_report_format_mask    in varchar2 default null,
    p_report_col_alignment  in varchar2 default null
    );

procedure create_col_synonym (
    p_syn_id             in number   default null,
    p_column_id          in number   default null,
    p_syn_name           in varchar2 default null
    );

procedure update_col_attribute (
    p_column_id             in number   default null,
    p_column_name           in varchar2 default null,
    p_label                 in varchar2 default null,
    p_help_text             in varchar2 default null,
    p_format_mask           in varchar2 default null,
    p_default_value         in varchar2 default null,
    p_form_format_mask      in varchar2 default null,
    p_form_display_width    in number   default null,
    p_form_display_height   in number   default null,
    p_form_data_type        in varchar2 default null,
    p_report_format_mask    in varchar2 default null,
    p_report_col_alignment  in varchar2 default null
    );

procedure update_col_synonym (
    p_syn_id             in number   default null,
    p_syn_name           in varchar2 default null
    );

procedure remove_col_attribute (
    p_column_id          in number   default null
    );

procedure remove_col_attr_by_name (
    p_column_name        in varchar2   default null
    );

procedure remove_col_synonym (
    p_syn_id             in number   default null
    );

procedure remove_col_syn_by_name (
    p_syn_name           in varchar2   default null
    );

function ad_col_hint_exists (
    p_sgid        in number,
    p_schema      in varchar2,
    p_table_name  in varchar2
    ) return boolean;

procedure get_ad_ui_defaults (
    p_sgid                in  number,
    p_column_name         in  varchar2
    );

end wwv_flow_hint;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SERIES_ATTR"
is

g_attribute_value wwv_flow_global.vc_arr2;


function fetch_attribute (
   p_region_id     in number,
   p_series_id     in number,
   p_attribute_id  in number)
   return varchar2
   ;

function fetch_attribute_in_array (
   p_region_id     in number,
   p_attribute_id  in number)
   return wwv_flow_global.vc_arr2
   ;

procedure fetch_attributes (
   p_region_id     in number,
   p_series_id     in number,
   p_value_count   in number default 50)
   ;

procedure set_attribute (
    p_region_id     in number,
    p_series_id     in number,
    p_attribute_id  in number,
    p_value         in varchar2 default null)
    ;

procedure set_attributes (
    p_region_id     in number,
    p_series_id     in number default null,
    p_a001          in varchar2 default null,
    p_a002          in varchar2 default null,
    p_a003          in varchar2 default null,
    p_a004          in varchar2 default null,
    p_a005          in varchar2 default null,
    p_a006          in varchar2 default null,
    p_a007          in varchar2 default null,
    p_a008          in varchar2 default null,
    p_a009          in varchar2 default null,
    p_a010          in varchar2 default null,
    p_a011          in varchar2 default null,
    p_a012          in varchar2 default null,
    p_a013          in varchar2 default null,
    p_a014          in varchar2 default null,
    p_a015          in varchar2 default null,
    p_a016          in varchar2 default null,
    p_a017          in varchar2 default null,
    p_a018          in varchar2 default null,
    p_a019          in varchar2 default null,
    p_a020          in varchar2 default null,
    p_a021          in varchar2 default null,
    p_a022          in varchar2 default null,
    p_a023          in varchar2 default null,
    p_a024          in varchar2 default null,
    p_a025          in varchar2 default null,
    p_a026          in varchar2 default null,
    p_a027          in varchar2 default null,
    p_a028          in varchar2 default null,
    p_a029          in varchar2 default null,
    p_a030          in varchar2 default null,
    p_a031          in varchar2 default null,
    p_a032          in varchar2 default null,
    p_a033          in varchar2 default null,
    p_a034          in varchar2 default null,
    p_a035          in varchar2 default null,
    p_a036          in varchar2 default null,
    p_a037          in varchar2 default null,
    p_a038          in varchar2 default null,
    p_a039          in varchar2 default null,
    p_a040          in varchar2 default null,
    p_a041          in varchar2 default null,
    p_a042          in varchar2 default null,
    p_a043          in varchar2 default null,
    p_a044          in varchar2 default null,
    p_a045          in varchar2 default null,
    p_a046          in varchar2 default null,
    p_a047          in varchar2 default null,
    p_a048          in varchar2 default null,
    p_a049          in varchar2 default null,
    p_a050          in varchar2 default null,
    p_value_count   in number   default 50)
    ;

procedure delete_attributes (
    p_region_id     in number,
    p_series_id     in number default null)
    ;
end wwv_flow_series_attr;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_EDIT_REPORT" as

  type assoc_vc2_arr is table of varchar2(4000) index by varchar2(4000);
  empty_assoc_vc2_arr assoc_vc2_arr;

  type assoc_bln_arr is table of boolean index by varchar2(4000);
  empty_assoc_bln_arr assoc_bln_arr;

  g_is_query_column  assoc_bln_arr := empty_assoc_bln_arr;

  g_col_alias        wwv_flow_global.vc_arr2;
  g_status           varchar(5000);    -- execution status

  g_col_display_seq  assoc_vc2_arr := empty_assoc_vc2_arr;
  g_col_hidden       assoc_vc2_arr := empty_assoc_vc2_arr;
  g_col_heading      assoc_vc2_arr := empty_assoc_vc2_arr;
  g_col_alignment    assoc_vc2_arr := empty_assoc_vc2_arr;
  g_hd_alignment     assoc_vc2_arr := empty_assoc_vc2_arr;
  g_col_sum          assoc_vc2_arr := empty_assoc_vc2_arr;
  g_disable_sort_col assoc_vc2_arr := empty_assoc_vc2_arr;
  g_default_sort_col assoc_vc2_arr := empty_assoc_vc2_arr;

  g_include_in_export   assoc_vc2_arr := empty_assoc_vc2_arr;
  g_print_col_width     assoc_vc2_arr := empty_assoc_vc2_arr;
  g_print_col_align     assoc_vc2_arr := empty_assoc_vc2_arr;

  g_report_column_width assoc_vc2_arr := empty_assoc_vc2_arr;

------------------------------------------------------------------------------------------------------
--

  procedure move_cols (
    p_region_id           in number,
    p_column_id           in number,
    p_col_num             in number,
    p_dir                 in varchar2
  );

------------------------------------------------------------------------------------------------------
--

  function get_alias_display_name (
    p_alias in varchar2
  ) return varchar2;

------------------------------------------------------------------------------------------------------
--

  function add_derived_column (
    p_region_id in number,
    p_col_num   in number,
    p_type      in varchar2
  ) return number;

------------------------------------------------------------------------------------------------------
--

  procedure remove_derived_column (
      p_region_id in number,
      p_column_id in number
  );

------------------------------------------------------------------------------------------------------
--

  procedure update_report_columns (
    p_region_id           in number,
    p_column_heading_type in varchar2,
    p_column_id           in wwv_flow_global.vc_arr2,
    p_column_alias        in wwv_flow_global.vc_arr2,
    p_display_seq         in wwv_flow_global.vc_arr2,
    p_column_heading      in wwv_flow_global.vc_arr2,
    p_column_alignment    in wwv_flow_global.vc_arr2,
    p_heading_alignment   in wwv_flow_global.vc_arr2,
    p_hidden_column       in wwv_flow_global.vc_arr2,
    p_sum_column          in wwv_flow_global.vc_arr2,
    p_disable_sort_column in wwv_flow_global.vc_arr2,
    p_default_sort_column in wwv_flow_global.vc_arr2,
    p_report_column_width in wwv_flow_global.vc_arr2
  );

------------------------------------------------------------------------------------------------------
--

  procedure update_print_column_attributes (
    p_region_id           in number,
    p_column_heading_type in varchar2,
    p_column_id           in wwv_flow_global.vc_arr2,
    p_column_alias        in wwv_flow_global.vc_arr2,
    p_include_in_export   in wwv_flow_global.vc_arr2,
    p_print_col_width     in wwv_flow_global.vc_arr2
  );

------------------------------------------------------------------------------------------------------
--

  procedure update_column_display_sequence (
    p_region_id           in number
  );

------------------------------------------------------------------------------------------------------
--

  procedure update_report_column_sequence (
    p_region_id           in number
  );

------------------------------------------------------------------------------------------------------
--

  procedure column_headings_javascript (
    p_region_id                number,
    p_plug_query_headings_type varchar2
  );

end wwv_flow_edit_report;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_QUERY_API" as

    g_conditions wwv_flow_global.vc_arr2;
    g_columns    wwv_flow_global.vc_arr2;
    g_rows       wwv_flow_global.vc_arr2;
    g_y          wwv_flow_global.vc_arr2;
    g_index      number;
    g_emptyvc    wwv_flow_global.vc_arr2;

    function add_columns(
      p_condition   in varchar2,
      p_column      in varchar2 ) return varchar2;

    function get_conditions(
      p_query_id    in varchar2,
      p_new_line    in varchar2 := chr(10),
      sp            in varchar2 := ' ' ) return clob;

    function get_structured_query(
      p_id          in number ) return clob;

    procedure get_alias(
      p_column      in varchar2,
      p_query_id    in number,
      p_num         in number := 1 );

    procedure parse_conditions(
      p_query_id    in number,
      p_id          in number,
      p_top_id      in number );

    procedure create_collection(
      p_query_id    in number );

    procedure create_conditions(
      p_query_id    in number );

    procedure create_structured_query(
      p_flow_id     in number,
      p_region_id   in number,
      p_collection  in varchar2 default 'COLUMNS');

    procedure update_query_sql(
      p_query_id    in number);

    procedure delete_structured_query(
      p_query_id    in number );

    procedure reorder_columns(
      p_query_id    in number,
      p_collection  in varchar2 default null );

    procedure update_structured_query(
      p_query_id    in number,
      p_flow_id     in number,
      p_region_id   in number,
      p_collection  in varchar2 default 'COLUMNS');

    procedure update_joins(
      p_query_id    in number);



end wwv_flow_query_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_IMP_PARSER"
as
--  Copyright (c) Oracle Corporation 1999 - 2003. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package provides parsing engine for flow export file.
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

function get_build_status (p_file_id in number)
return varchar2;


function get_version (p_file_id in number)
return varchar2;

function is_websheet_export (p_file_id in number)
return boolean;

function is_company_export (p_file_id in number)
return boolean;

function flow_exists (p_flow_id in number)
return number;

function get_image_name (p_file_id in number)
return varchar2;

function get_css_name (p_file_id in number)
return varchar2;

function get_workspace_name (p_file_id in number)
return varchar2;

function get_attr_dict_workspace (p_file_id in number)
return varchar2;

function get_schema_provisioned (p_file_id in number)
return varchar2;

function get_workspace_schemas (p_file_id in number)
return varchar2;

function get_component_manifest (p_file_id in number)
return clob;

function get_flow_id (p_file_id in number)
return number;

function get_ws_app_id (p_file_id in number)
return number;

function get_page_id (p_file_id in number)
return number;

function get_theme_id (p_file_id in number)
return number;

function get_theme_name (p_file_id in number)
return varchar2;

function get_plugin_type (p_file_id in number)
return varchar2;

function get_plugin_name (p_file_id in number)
return varchar2;

function get_plugin_display_name (p_file_id in number)
return varchar2;

function get_ui_schema (p_file_id in number)
return varchar2;

function get_security_group_id (p_file_id in number)
return number;

function get_parse_as_schema (p_file_id in number)
return varchar2;

function get_websheet_schema (p_file_id in number)
return varchar2;

function get_feedback_origin (p_file_id in number)
return varchar2;

function is_component_export (p_file_id in number)
return boolean;

procedure parse (
  p_file_id           in number,
  p_parse_as_schema   in varchar2 default null,
  p_install_as_flow   in number   default null,
  p_original_flow_id  in number   default null,
  p_adjust_offset     in boolean  default true,
  p_create_theme      in boolean  default false,
  p_pkg_app_install   in boolean  default false
  );

procedure parse (
  p_clob              in clob,
  p_parse_as_schema   in varchar2 default null,
  p_install_as_flow   in number   default null,
  p_original_flow_id  in number   default null,
  p_adjust_offset     in boolean  default true,
  p_create_theme      in boolean  default false,
  p_pkg_app_install   in boolean  default false
  );

procedure websheet_parse (
  p_file_id            in number,
  p_websheet_schema    in varchar2 default null,
  p_new_ws_app_id      in number   default null,
  p_original_ws_app_id in number   default null,
  p_adjust_offset      in boolean  default true
  );
end wwv_flow_imp_parser;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LOGIN" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    DESCRIPTION
--      Logic to login
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    mhichwa     09/23/2004 - Created
--    sspadafo    09/15/2005 - Added xe_login
--    sspadafo    09/27/2005 - Add authenticate, user_is_dba functions
--    cneumuel    04/13/2011 - Add builder_sso_login
--    cneumuel    04/18/2011 - Formatting and header docs
--    cneumuel    09/08/2011 - In builder: added p_login_token
--    cneumuel    04/02/2012 - Added get_workspace_name, removed authenticate, moved user_is_dba to wwv_flow_security
--                           - In builder, administrator: code has been moved to wwv_flow_f4000_plugins.internal_authenticate
--
--------------------------------------------------------------------------------

--==============================================================================
-- return the workspace name with which builder() was called or 'INTERNAL' if
-- administrator() was called.
--==============================================================================
function get_workspace_name
    return varchar2;

--==============================================================================
-- login to p_workspace as p_username with p_password (4550:1, normal builder login)
--==============================================================================
procedure builder (
    p_workspace   in varchar2,
    p_username    in varchar2,
    p_password    in varchar2 default null );

--==============================================================================
-- login to INTERNAL as p_username (4550:10, instance admin login)
--==============================================================================
procedure administrator (
    p_username  in varchar2,
    p_password  in varchar2);

end wwv_flow_login;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DEVELOPER_TOOLBAR"
is
--  Copyright (c) Oracle Corporation 2001-2003. All Rights Reserved.
--
--     DESCRIPTION
--
--       Display the links on flow pages to related builder pages and
--       other useful places.
--
--    SECURITY
--
--       Internal use only.
--
--    NOTES
--
--    EXAMPLE
--
--
g_ok_to_show_toolbar boolean := false;
--
procedure show_toolbar;
--
function get_inline_edit (
    p_url in varchar2 )
    return varchar2;
--
procedure show_inline_edit (
    p_url in varchar2 );
--
end wwv_flow_developer_toolbar;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."HTMLDB_UTIL" as

--  Copyright (c) Oracle Corporation 2003 - 2011. All Rights Reserved.
--
--    DESCRIPTION
--      APEX Utilities
--      Provides procedural access for advanced APEX application development
--
--    SECURITY
--      Publicly executable.
--

c_must_not_be_public_user constant varchar2(30) := 'MUST_NOT_BE_PUBLIC_USER';

g_blob              blob;                      -- BLOB uploaded via APEX listener
g_blob_mime_type    varchar2(512)  := null;    -- BLOB mimetype via APEX listener
g_blob_file_charset varchar2(512)  := null;    -- BLOB file_charset via APEX listener
g_blob_action       varchar2(512)  := null;    -- owner:table:blob column:pk column name 1:pk column name 2
g_pk1               varchar2(4000) := null;
g_pk2               varchar2(4000) := null;
empty_vc_arr        wwv_flow_global.vc_arr2;

g_request_cookies   utl_http.cookie_table;
g_response_cookies  utl_http.cookie_table;

type header is record (name varchar2(256), value varchar2(1024));
type header_table is table of header index by binary_integer;

g_headers           header_table;
g_request_headers   header_table;

g_status_code       pls_integer;



--------------------
-- Language Selector
--

function get_language_selector_list
    return varchar2
    ;

function get_language_selector_ul
    return varchar2
    ;
function get_language_selector_ul2
    return varchar2
    ;

-------------------
-- feedback
--
procedure submit_feedback (
    p_comment          in varchar2 default null,
    p_type             in number   default 1,
    p_application_id   in varchar2 default null,
    p_page_id          in varchar2 default null,
    p_email            in varchar2 default null,
    p_screen_width     in varchar2 default null,
    p_screen_height    in varchar2 default null,
    p_attribute_01     in varchar2 default null,
    p_attribute_02     in varchar2 default null,
    p_attribute_03     in varchar2 default null,
    p_attribute_04     in varchar2 default null,
    p_attribute_05     in varchar2 default null,
    p_attribute_06     in varchar2 default null,
    p_attribute_07     in varchar2 default null,
    p_attribute_08     in varchar2 default null,
    p_label_01         in varchar2 default null,
    p_label_02         in varchar2 default null,
    p_label_03         in varchar2 default null,
    p_label_04         in varchar2 default null,
    p_label_05         in varchar2 default null,
    p_label_06         in varchar2 default null,
    p_label_07         in varchar2 default null,
    p_label_08         in varchar2 default null
    );

procedure submit_feedback_followup (
    p_feedback_id      in number,
    p_follow_up        in varchar2 default null,
    p_email            in varchar2 default null
    );

function get_feedback_follow_up (
    p_feedback_id    in number,
    p_row            in number default 1,
    p_template       in varchar2 default '<br />#CREATED_ON# (#CREATED_BY#) #FOLLOW_UP#')
    return varchar2
    ;
-----------------
-- Accessibility
--

-- Screnn Reader Mode
--
function is_screen_reader_session
    return boolean
    ;

function is_screen_reader_session_yn
    return varchar2
    ;

procedure set_session_screen_reader_on
    ;

procedure set_session_screen_reader_off
    ;

procedure show_screen_reader_mode_toggle (
    p_on_message  in varchar2 default null,
    p_off_message in varchar2 default null)
    ;

function get_screen_reader_mode_toggle (
    p_on_message  in varchar2 default null,
    p_off_message in varchar2 default null)
    return varchar2
    ;

-- High Contrast Mode
--
function is_high_contrast_session
    return boolean
    ;

function is_high_contrast_session_yn
    return varchar2
    ;

procedure set_session_high_contrast_on
    ;

procedure set_session_high_contrast_off
    ;

procedure show_high_contrast_mode_toggle (
    p_on_message  in varchar2 default null,
    p_off_message in varchar2 default null)
    ;

function get_high_contrast_mode_toggle (
    p_on_message  in varchar2 default null,
    p_off_message in varchar2 default null)
    return varchar2
    ;

-----------------
-- Session State
--

function get_session_state (
    --
    --This function returns the value in session state for a given item.
    --
    --Arguments:
    --
    --  p_item:     Case insensitive name of the item for which you
    --              wish to have the session state fetched.
    --
    --Example:
    --
    --  l_val := htmldb_util.get_session_state('my_item');
    --
    --
    p_item  in varchar2)
    return varchar2
    ;

function get_numeric_session_state (
    --
    --This function returns the numeric value in session state for a given
    --numeric item.
    --
    --Arguments:
    --
    --  p_item:     Case insensitive name of the numeric item for which you
    --              wish to have the session state fetched.
    --
    --Example:
    --
    --  l_num := htmldb_util.get_numeric_session_state('my_item');
    --
    --
    p_item      in varchar2)
    return number
    ;

function fetch_app_item(
    --
    -- Given an application-level item name, locate item in current or specified
    -- application and current or specified session and return item value.
    --
    --Arguments:
    --
    --  p_item:     name of application-level item
    --  p_app:      application ID that owns the item
    --  p_session:  session ID
    --
    --Example:
    --
    --  l_num := htmldb_util.fetch_app_item(p_item=>'F300_NAME',p_app=>300)
    --
    --
    p_item         in varchar2,
    p_app          in number default null,
    p_session      in number default null)
    return varchar2
    ;

function get_file_id(
    --
    -- This function returns the numeric primary key of the named file in wwv_flow_file_objects$
    --
    p_name in varchar2)
    return number
    ;

procedure get_file (
    --
    --This procedure is used to download files from the HTMLDB file
    --repository.
    --
    --Arguments:
    --
    --  p_file_id:      The id in wwv_flow_files of the file to download.
    --  p_mime_type:    The mime type of the file to download
    --  p_inline:       'YES' to display inline in browser, 'NO' to download as
    --                  attachment
    --
    --Example:
    --
    --  htmldb_util.get_file(
    --      p_file_id   => '8675309',
    --      p_mime_type => 'text/xml',
    --      p_inline    => 'YES');
    --
    --
    p_file_id   in varchar2,
    p_mime_type in varchar2 default null,
    p_inline    in varchar2 default 'NO')
    ;

procedure count_click (
    --
    --This procedure is used to count clicks from an application to external site.
    --
    --Arguments:
    --
    --  p_url:          the url to redirect to
    --  p_cat:          a category to classify the click
    --  p_id:           a secondary id to associate with the click <-- optional
    --  p_user:         the application user <-- optional
    --  p_workspace:      the workspace associated with the application <-- optional (deprecated)
    --  p_workspace:    the workspace associated with the application <-- optional
    p_url       in varchar2,
    p_cat       in varchar2,
    p_id        in varchar2    default null,
    p_user      in varchar2    default null,
    p_company   in varchar2    default null,
    p_workspace in varchar2    default null)
    ;


procedure set_session_state (
    --
    -- Programmatically set session state for a current session.
    -- This procedure must be called from Application Express since it requires
    -- the Application Express environment.
    --
    -- Arguments:
    --
    --   p_name:  Name of application or page level item to set session state for
    --   p_value: Value of session state to set.
    --
    -- example:
    --
    --     htmldb_util.set_session_state('my_item','myvalue');
    --
    p_name    in varchar2 default null,
    p_value   in varchar2 default null)
    ;

procedure reset_authorizations
    --
    -- Security checks are cached to increase performance, this procedure allows you to
    -- undo the caching and thus require all security checks to be revalidated for the
    -- current user.  Use this routine if you allow a user to change "responcibilities"
    -- within an application, thus changing the authorization checks that they pass.
    --
    --Example:
    --
    --  htmldb_util.reset_authorizations;
    --
    ;

function public_check_authorization (
    --
    -- Given the name of a flow security scheme determine if the current user
    -- passes the security check.
    --
    -- You can also check for the predefined authorization MUST_NOT_BE_PUBLIC_USER,
    -- use the constant c_must_not_be_public_user to reference it.
    --
    -- Arguments:
    --
    -- p_security_scheme
    --
    --Example:
    --
    --  l_boolean := htmldb_util.public_check_authorization('MY_SECURITY_SCHEME');
    --
    p_security_scheme in varchar2)
    return boolean
    ;


function string_to_table (
    --
    --This function takes in a string and returns a PL/SQL array, of type
    --wwv_flow_global.vc_arr2, which is a table of varchar2(32767).
    --
    -- Arguments:
    --
    -- p_string:    string to be converted into a plsql table of type wwv_flow_global.vc_arr2
    -- p_separator: string seperator, by default a colon.
    --
    --Example:
    --
    --  l_vc_arr2 := htmldb_util.string_to_table('ONE:TWO:THREE');
    --
    p_string    in varchar2,
    p_separator in varchar2 default ':')
    return wwv_flow_global.vc_arr2
    ;


function table_to_string (
    --
    --This function takes in a PL/SQL table of type wwv_flow_global.vc_arr2
    --and returns a string separated by the separator supplied, or a ':' by default.
    --
    -- Arguments:
    --
    -- p_table:     PL/SQL table that is to be converted into delimited string
    -- p_string:   string seperator, by default a colon.
    --
    --Example:
    --
    --  l_string := htmldb_util.table_to_string(l_vc_arr2);
    --
    p_table     in wwv_flow_global.vc_arr2,
    p_string    in varchar2 default ':')
    return varchar2
    ;

function url_encode (
    --
    -- Encode (into HEX) all special characters which includes spaces,
    -- question marks, ampersands, etc.
    --
    --Arguments:
    -- p_string:    The string you would like to have encoded
    --
    --Examples:
    --
    --  l_url := htmldb_util.url_encode('http://www.myurl.com?id=1&cat=foo');
    --
    p_url       in varchar2)
    return varchar2
    ;


function get_apex_id
    -- get APEX ID
    -- Return the virtual GUID used by APEX to generate component primary keys
    return number
    ;

function get_apex_char_id
    -- get APEX ID
    -- Return the virtual GUID used by APEX to generate component primary keys compressed into alpha numberic format
    return varchar2
    ;


function compress_int (
    -- get compress_int
    -- Return a minimum of 4 character alphanumeric compressed value for an integer
    -- Arguments
    --   p_number: any integer
    p_number in integer)
    return   varchar2
    ;


function get_uuid
    -- get uuid
    -- Used to get return a uuid formatted guid
    return varchar2
    ;

procedure clear_page_cache (
    -- Reset all cached items for a given page to null
    --Arguments:
    --  p_page_id:   The ID of the page in the current application and session to clear the cache for
    --
    --Example:
    --
    --  htmldb_util.clear_page_cache(1);
    --
    p_page_id in number default null)
    ;

procedure clear_app_cache (
    --
    --For the current session remove session state for the given flow.
    --
    --Arguments:
    --  p_app_id:   The ID of the application to clear the cache for current session
    --
    --Example:
    --
    --  htmldb_util.clear_app_cache('101');
    --
    p_app_id    in varchar2 default null)
    ;

procedure clear_user_cache
    --
    --For the current user's session remove session state and flow system preferences.
    --Run this procedure if you reuse session IDs and want to run htmldb application without
    --the benifit of existing session state.
    --
    --Example:
    --
    --  htmldb_util.clear_user_cache;
    --
    ;

procedure pause (
    --
    -- Pause for number of seconds identified by p_seconds
    --  (capped at 120 seconds)
    --
    p_seconds   in number)
    ;

-- ----------------------------------------------------------------------------------------
-- get timeframe
-- Used to get a string representation of the time in days, examples: 5 days, 2 weeks, 8 seconds.
-- Arguments:
--   p_days: numeric number of days
function get_timeframe (
    p_days in number default null)
    return varchar2;

-- ----------------------------------------------------------------------------------------
-- get since
-- Used to get a string representation of the time passed since the input date
-- Arguments:
--   p_date: date that is used to compute time since p_date and sysdate

function get_since(
      p_date date
  ) return varchar2;

--
-- Overloaded implementations of get_since
--
function get_since(
    p_value in timestamp
    ) return varchar2;

function get_since(
    p_value in timestamp with time zone
    ) return varchar2;

function get_since(
    p_value in timestamp with local time zone
    ) return varchar2;


-- ----------------------------------------------------------------------------------------
-- get since tswtz
-- Used to get a string representation of the time passed since the input timestamp with time zone
-- Arguments:
--   p_timestamp: timestamp with time zone  that is used to compute time since p_timestamp and systimestamp
function get_since_tswtz(
      p_timestamp in timestamp with time zone
  ) return varchar2;



-- ----------------------------------------------------------------------------------------
-- get since tswltz
-- Used to get a string representation of the time passed since the input timestamp with local time zone
-- Arguments:
--   p_ltimestamp: timestamp with local time zone  that is used to compute time since p_ltimestamp and localtimestamp
function get_since_tswltz(
      p_ltimestamp in timestamp with local time zone
  ) return varchar2;


procedure set_preference (
    --
    --Used to set a preference for a user that persists beyond the user's current session.
    --
    --Arguments:
    --  p_preference:   name of the preference, case sensitive
    --  p_value:        the value for the preference
    --  p_user:         the user to set the preference for
    --
    --Example:
    --  htmldb_util.set_preference(
    --      p_preference => 'default_view',
    --      p_value      => 'WEEKLY',
    --      p_user       => :APP_USER);
    --
    p_preference   in varchar2 default null,
    p_value        in varchar2 default null,
    p_user         in varchar2 default null)
    ;

function get_preference (
    --
    --Used to retrieve the value of a previously saved preference for a given user.
    --
    --Arguments:
    --
    --  p_prefernce:    the name of the preference to retrieve the value
    --  p_user:         the user to retrieve the preference for
    --
    --Example:
    --  l_default_view := htmldb_util.get_preference(
    --                      p_preference => 'default_view',
    --                      p_user       => :APP_USER);
    --
    p_preference   in varchar2 default null,
    p_user         in varchar2 default v('USER'))
    return varchar2
    ;

procedure remove_preference(
    --
    --Removes the preference for the supplied user.
    --
    --Arguments:
    --  p_preference:   the name of the preference to remove
    --  p_user:         the user to remove the preference for
    --
    --Example:
    --  htmldb_util.remove_preference(
    --      p_preference => 'default_view',
    --      p_user       => :APP_USER);
    --
    p_preference   in varchar2 default null,
    p_user         in varchar2 default v('USER'))
    ;

procedure remove_sort_preferences (
    --
    -- This procedure removes user's column heading sorting preference value.
    --
    --Arguments:
    --  p_user:         the user to remove sorting preferences for
    --
    --Example:
    --  htmldb_util.remove_sort_preferences;
    --
    p_user         in varchar2 default v('USER'))
    ;



function current_user_in_group (
   --
   -- Given a group name return a boolean true or false if the current
   -- application user is part of that group.
   -- Example: if htmldb_util.current_user_in_group('MY_GROUP') then ...
   --
   p_group_name          in varchar2 )
   return boolean
   ;


function current_user_in_group (
   --
   -- Given a group numeric identifier return a boolean true or false if the current
   -- application user is part of that group.
   -- Example: if htmldb_util.current_user_in_group(1234567) then ...
   -- The above example assumes that 1234567 is a valid group ID.
   --
   p_group_id            in number)
   return boolean
   ;

function is_login_password_valid (
   --
   -- Checks the wwv_flow_fnd_users table to see if
   -- username/password combo is valid within the current workspace (checking by security_group_id)
   --
   p_username in varchar2 default null,
   p_password  in varchar2 default null)
   return boolean
   ;

function is_username_unique (
   --
   -- Simply checks wwv_flow_fnd_users table to see if
   -- username is unique within the current workspace (checking by security_group_id)
   --
   p_username              in varchar2)
   return boolean
   ;


----------------------------
-- G E T   F U N C T I O N S
--


function get_group_id (
   --
   -- Given a group name return the groups numeric identifier.
   -- Example: ... htmldb_util.get_group_name('MY_GROUP') ...
   --
   p_group_name          in varchar2 )
   return number
   ;


function get_group_name (
   --
   -- Given a group ID return the aphanumeric name.
   -- Example: ... htmldb_util.get_group_name(1234567) ...
   --
   p_group_id            in varchar2 )
   return varchar2
   ;


function get_group_name (
   --
   -- Added overloaded version with correct number type for p_group_id.
   -- Given a group ID (numeric) return the aphanumeric name.
   -- Example: ... htmldb_util.get_group_name(1234567) ...
   --
   p_group_id            in number )
   return varchar2
   ;


function get_email (
   --
   -- For a given user return the identified email address from the fnd user table.  Only works
   -- with standard user management system.  If you use applications with
   -- other user repositories this API will not return useful information.
   -- Example:  ... htmldb_util.get_email('JOE.USER')
   -- The example above assumes a username JOE.USER exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_first_name (
   --
   -- For a given user return the identified first name.  Only works
   -- with standard user management system.  If you use applications with
   -- other user repositories this API will not return useful information.
   -- Example:  ... htmldb_util.get_first_name('JOE_USER')
   -- The example above assumes a username JOE_USER exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_last_name (
   --
   -- For a given user return the identified last name.  Only works
   -- with standard user management system.  If you use with
   -- other user repositories this API will not return useful information.
   -- Example:  ... htmldb_util.get_last_name('JOE_USER')
   -- The example above assumes a username JOE_USER exists.
   --
   p_username            in varchar2)
   return varchar2
   ;


function get_current_user_id
   --
   -- For the current user return the numeric identifier.  Only
   -- useful when useing user management system.
   --
   return number
   ;


function get_user_id (
   --
   -- Given a username return the numeric idenfier.
   -- Example: ... htmldb_util.get_user_id('JOE_USER')
   -- The example above assumes JOE_USER is a valid username.
   --
   p_username            in varchar2)
   return number
   ;


function get_username (
   --
   -- Given a user ID return the username.
   -- Example: ... htmldb_util.get_username(222222)
   -- The example above assumes 222222 is a valid user ID.
   --
   p_userid              in number)
   return varchar2
   ;

function get_attribute (
   --
   -- Given a user name and attribute number, valid values are 1..10
   -- return the attribute value.  The wwv_flow_fnd_user table contains
   -- 10 columns attribute_01 .. attribute_10 for extra user attributes.
   --
   p_username             in varchar2,
   p_attribute_number     in number)
   return varchar2
   ;


function get_groups_user_belongs_to (
   --
   -- Given a username returns a comma seperated list of groups that
   -- this user is a member of.
   -- Example: htp.p('user JOE_USER is a member of the following groups: '||
   --                 htmldb_util.get_groups_user_belongs_to('JOE_USER'));
   --
   p_username            in varchar2)
   return varchar2
   ;

function get_default_schema
   --
   -- For the currently logged in user, return the schema that the workspace
   -- was provisioned with, by default.
   --
   return varchar2
   ;

----------------------------
-- S E T   F U N C T I O N S
--

procedure set_email (
   --
   -- For a given userid set the identified email address.  Only works
   -- with standard user management system.  If you use with
   -- other user repositories this API will not set useful information.
   -- Example:  ... htmldb_util.set_email(222222,'MIKE@HOTMAIL.COM')
   -- The example above assumes a user ID 222222 exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_email               in varchar2)
   ;


procedure set_first_name (
   --
   -- For a given user set the identified first name.  Only works
   -- with standard user management system.  If you use with
   -- other user repositories this API will not return useful information.
   -- Example:  ... htmldb_util.set_first_name(222222,'Mike')
   -- The example above assumes a user ID 222222 exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_first_name          in varchar2)
   ;


procedure set_last_name (
   --
   -- For a given user set the identified last name.  Only works
   -- with standard user management system.  If you use with
   -- other user repositories this API will not return useful information.
   -- Example:  ... htmldb_util.set_last_name('JOE_USER')
   -- The example above assumes a username JOE_USER exists.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_last_name           in varchar2)
   ;


procedure set_username (
   --
   -- Given a user ID set the username.
   -- Example: ... htmldb_util.set_username(222222,'JOE')
   -- The example above assumes 222222 is a valid user ID.
   -- An error will be raised in the event this procedure fails.
   --
   p_userid              in number,
   p_username            in varchar2)
   ;

procedure set_attribute (
   --
   -- Given a user ID and attribute number, valid values are 1..10
   -- set the attribute value.  The wwv_flow_fnd_user table contains
   -- 10 columns attribute_01 .. attribute_10 for extra user attributes.
   -- An error will be raised in the event this procedure fails.
   -- Example: ... htmldb_util.set_attribute(22222,1,'likes sailing and tennis');
   --
   p_userid               in number,
   p_attribute_number     in number,
   p_attribute_value      in varchar2)
   ;

procedure export_users (
    -- Description:
    --    This procedure exports all users in a the current workspace, designed
    --    to be called from the development environment.
    --
    p_export_format in varchar2 default 'UNIX')
    ;

procedure create_user_group (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users.
    --
    -- Arguments:
    --    p_ID                = unique identifier of the group, typically a large virtually globally unique number.
    --    p_group_name        = name of group
    --    p_security_group_id = identifies which workspace this user group belongs to
    --    p_group_desc        = text description used as an note to the developer
    --
    p_id                      in number,
    p_group_name              in varchar2,
    p_security_group_id       in number,
    p_group_desc              in varchar2)
    ;

procedure delete_user_group (
    -- Description
    --   This procedure allows for removal of group from wwv_flow_fnd_user_groups.
    --   This procedure is overloaded.
    -- Arguments:
    --    p_group_id          = unique identifier of the group, typically a large virtually globally unique number.
    --
    p_group_id                 in number)
    ;

procedure delete_user_group (
    -- Description
    --   This procedure allows for removal of group from wwv_flow_fnd_user_groups.
    --   This procedure is overloaded.
    -- Arguments:
    --    p_group_name          = group name.
    p_group_name              in varchar2)
    ;

procedure create_user (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users.
    --
    -- Example:
    --    From sqlplus logged in as a schema assigned to the target workspace
    --
    --    begin
    --       for i in 1..10 loop
    --          htmldb_util.create_user(
    --             p_user_name => 'USER_'||i,
    --             p_email_address => 'user_'||i||'@myworkspace.com',
    --             p_web_password => 'user_'||i) ;
    --       end loop;
    --       commit;
    --    end;
    --    /
    --
    --
    -- Arguments:
    --    p_user_id         numeric primary key of user
    --    p_user_name       the username the user uses to login
    --    p_first_name      informational only
    --    p_last_name       informational only
    --    p_web_password    the unencrypted password for the new user
    --    p_group_ids       A colon delimited list of group IDs from the table wwv_flow_fnd_user_groups
    --    p_developer_privs A colon delmited list of developer privs, privs include:
    --                      ADMIN:BROWSE:CREATE:DATA_LOADER:DB_MONITOR:EDIT:HELP:MONITOR:SQL:USER_MANAGER
    --    p_default_schema  A valid oracle schema that is the default schema for use in browsing and
    --                      creating Application Express
    --    p_default_date_format Oracle Date format for user, used for now only in SQL Workshop
    --    p_allow_access_to_schemas A colon delimited list of oracle schemas that the user is allowed to
    --                      parse as.  If null the user can parse as any schema available to the workspace.
    --                      This does not provide privilege it only resticts privilege, so listing a schema
    --                      does not provide the privilege to parse as a schema, it only restricts that user
    --                      to that list of schemas.
    --    p_attributes_XX   These attributes allow you to store arbitary information about a given user.
    --                      They are for use by flow developers who want to extend user information.
    --    p_web_password_format Identifies the format of the web password.
    --                      The range of values is CLEAR_TEXT, HEX_ENCODED_DIGEST, DIGEST
    --
    --
    --
    p_user_id                      in number   default null,
    p_user_name                    in varchar2,
    p_first_name                   in varchar2 default null,
    p_last_name                    in varchar2 default null,
    p_description                  in varchar2 default null,
    p_email_address                in varchar2 default null,
    p_web_password                 in varchar2,
    p_web_password_format          in varchar2 default 'CLEAR_TEXT',
    p_group_ids                    in varchar2 default null,
    p_developer_privs              in varchar2 default null,
    p_default_schema               in varchar2 default null,
    p_default_date_format          in varchar2 default null,
    p_allow_access_to_schemas      in varchar2 default null,
    p_account_expiry               in date     default trunc(sysdate),
    p_account_locked               in varchar2 default 'N',
    p_failed_access_attempts       in number   default 0,
    p_change_password_on_first_use in varchar2 default 'Y',
    p_first_password_use_occurred  in varchar2 default 'N',
    p_attribute_01                 in varchar2 default null,
    p_attribute_02                 in varchar2 default null,
    p_attribute_03                 in varchar2 default null,
    p_attribute_04                 in varchar2 default null,
    p_attribute_05                 in varchar2 default null,
    p_attribute_06                 in varchar2 default null,
    p_attribute_07                 in varchar2 default null,
    p_attribute_08                 in varchar2 default null,
    p_attribute_09                 in varchar2 default null,
    p_attribute_10                 in varchar2 default null,
    p_allow_app_building_yn        in varchar2 default null,
    p_allow_sql_workshop_yn        in varchar2 default null,
    p_allow_websheet_dev_yn        in varchar2 default null,
    p_allow_team_development_yn    in varchar2 default null    )
    ;

procedure create_user_from_file (
    -- Description:
    --    This procedure allows for programatic and bulk creation of users
    --    from a text file.  The file must be in one of two formats.
    --
    --    FORMAT 1
    --    username,email,PRIV1:PRIV2,password
    --
    --    FORMAT 2
    --    username,email,PRIV1:PRIV2
    --
    --    PRIV1:PRIV2 is a colon delimited list of developer privelages of the
    --    user.  Valid privelages are detailed in create_fnd_user spec.
    --
    --    Each line must end with a line feed (chr(10)).
    --
    -- Arguments:
    --
    --    p_id          The id of the file in wwv_flow_file_objects$
    --    p_mode        Either CREATE or display depending on whether you
    --                  actually want to create the users or just display them
    --                  via htp.p
    --    p_format      Can be either 1, 2 or 3.  Refers to the format of the file
    --                  and the create user process.  1: passwords are contained in
    --                  the file in clear text.  2: passwords have been supplied via
    --                  the p_password parameter.  3: passwords should be randomly
    --                  generated and then e-mailed to the user.
    --    p_password    Only relevant in format 2.  Every user created is given the
    --                  password supplied in this parameter.
    --    p_app         The name of the application.  This name appears in the subject
    --                  and body of the e-mail message sent to users when format is 3.
    --    p_appurl      Optional URL can be supplied when file format is 3.  The URL will
    --                  appear at the end of the mail message.
    --    p_start       This parameter holds the start time of execution
    --    p_end         Parameter holds the time the procedure completes
    --    p_loaded      The number of users that were provisioned by the execution of the
    --                  procedure.
    --
    --
    --
    p_id in number,
    p_mode      in varchar2 default 'CREATE',
    p_format    in varchar2 default '1',
    p_password  in varchar2 default 'oracle',
    p_app       in varchar2 default null,
    p_appurl    in varchar2 default null,
    p_start    out varchar2,
    p_end      out varchar2,
    p_loaded   out varchar2)
    ;

procedure remove_user (
    -- Description
    --   This procedure allows for programatic removal of users.
    --   This procedure is overloaded.
    --
    p_user_id         in number)
    ;

procedure remove_user (
    -- Description:
    --   This procedure allows for programatic removal of users.
    --   This procedure is overloaded.
    --
    -- Example:
    --    begin wwv_flow_security.g_security_group_id := 20; end;
    --    /
    --
    --    begin
    --       for i in 1..10 loop
    --          wwv_flow_fnd_user_api.remove_fnd_user(
    --             p_user_name => 'USER_'||i);
    --       end loop;
    --       commit;
    --    end;
    --    /
    --
    p_user_name       in varchar2)
    ;

procedure change_current_user_pw (
    --
    -- This procedure changes the current user's password.
    --
    p_new_password    in varchar2)
    ;

procedure reset_pw (
    --
    -- This procedure resets the named user's password.
    --
    p_user                  in varchar2,
    p_msg                   in varchar2)
    ;

function user_in_group (
    --
    -- obsolete
    --
    p_group_name in varchar2)
    return boolean
    ;

function get_user_roles (
    --
    -- Return the colon-delimited list of developer roles
    -- for the specified user in the current workspace
    --
    p_username              in varchar2)
    return varchar2
    ;

function find_security_group_id (
     --
     -- given a workspace short name return the security group id
     -- p_workspace = short name of workspace
     --
     p_workspace  in varchar2 default null)
     return number;


function find_workspace (
     --
     -- given a security_group_id, return the workspace short name
     -- p_workspace = short name of workspace
     --
     p_security_group_id  in varchar2 default null)
     return varchar2;

procedure fetch_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id       in number,
     p_workspace       out varchar2,
     p_user_name     out varchar2,
     p_first_name    out varchar2,
     p_last_name     out varchar2,
     p_web_password  out varchar2,
     p_email_address out varchar2,
     p_start_date    out varchar2,
     p_end_date      out varchar2,
     p_employee_id   out varchar2,
     p_allow_access_to_schemas out varchar2,
     p_person_type     out varchar2,
     p_default_schema  out varchar2,
     p_groups          out varchar2,
     p_developer_role  out varchar2,
     p_description     out varchar2
     );

procedure fetch_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id         in number,
     p_user_name       out varchar2,
     p_first_name      out varchar2,
     p_last_name       out varchar2,
     p_email_address   out varchar2,
     p_groups          out varchar2,
     p_developer_role  out varchar2,
     p_description     out varchar2
     );

procedure fetch_user (
     --
     -- Fetch user information from
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     -- This procedure is overloaded.
     --
     p_user_id                      in number,
     p_workspace                    out varchar2,
     p_user_name                    out varchar2,
     p_first_name                   out varchar2,
     p_last_name                    out varchar2,
     p_web_password                 out varchar2,
     p_email_address                out varchar2,
     p_start_date                   out varchar2,
     p_end_date                     out varchar2,
     p_employee_id                  out varchar2,
     p_allow_access_to_schemas      out varchar2,
     p_person_type                  out varchar2,
     p_default_schema               out varchar2,
     p_groups                       out varchar2,
     p_developer_role               out varchar2,
     p_description                  out varchar2,
     p_account_expiry               out date,
     p_account_locked               out varchar2,
     p_failed_access_attempts       out number,
     p_change_password_on_first_use out varchar2,
     p_first_password_use_occurred  out varchar2
     );

procedure edit_user (
     --
     -- Edit user information to
     -- wwv_flow_fnd_user, wwv_flow_fnd_group_users and wwv_flow_developers table.
     --
     p_user_id                      in number,
     p_user_name                    in varchar2,
     p_first_name                   in varchar2 default null,
     p_last_name                    in varchar2 default null,
     p_web_password                 in varchar2 default null,
     p_new_password                 in varchar2 default null,
     p_email_address                in varchar2 default null,
     p_start_date                   in varchar2 default null,
     p_end_date                     in varchar2 default null,
     p_employee_id                  in varchar2 default null,
     p_allow_access_to_schemas      in varchar2 default null,
     p_person_type                  in varchar2 default null,
     p_default_schema               in varchar2 default null,
     p_default_date_format          in varchar2 default null,
     p_group_ids                    in varchar2 default null,
     p_developer_roles              in varchar2 default null,
     p_description                  in varchar2 default null,
     p_account_expiry               in date     default null,
     p_account_locked               in varchar2 default 'N',
     p_failed_access_attempts       in number   default 0,
     p_change_password_on_first_use in varchar2 default 'Y',
     p_first_password_use_occurred  in varchar2 default 'N'
     );

procedure lock_account (
     p_user_name     in varchar2
     );

procedure unlock_account(
     p_user_name     in varchar2
     );

function get_account_locked_status(
     p_user_name in varchar2
     ) return boolean
     ;

procedure expire_workspace_account(
    p_user_name in varchar2
    );

procedure unexpire_workspace_account(
    p_user_name in varchar2
    );

procedure expire_end_user_account(
    p_user_name in varchar2
    );

procedure unexpire_end_user_account(
    p_user_name in varchar2
    );

function workspace_account_days_left(
    p_user_name in varchar2)
    return number
    ;

function end_user_account_days_left(
    p_user_name in varchar2)
    return number
    ;

procedure set_custom_auth_status(
    p_status in varchar2
    );

procedure set_authentication_result(
    p_code in number
    );

function change_password_on_first_use(
    p_user_name in varchar2
    ) return boolean
    ;

function password_first_use_occurred(
    p_user_name in varchar2
    ) return boolean
    ;

function get_authentication_result
    return number
    ;

function prepare_url(
    --
    -- If URL is f?p format, do escape_url on the argument values only.
    -- This function assumes that all substitutions, e.g., &ITEM_NAME. substitutions have already been performed.
    --
    p_url           in varchar2,
    p_url_charset   in varchar2 default null,
    p_checksum_type in varchar2 default null
    )
    return varchar2
    ;

function savekey_num(p_val in number)
    return number
    ;

function keyval_num return number
    ;

function savekey_vc2(p_val in varchar2)
    return varchar2
    ;

function keyval_vc2 return varchar2
    ;

procedure flash2(
    p in varchar2,
    preloaderLoadingText in varchar2 default null,
    swffile in varchar2 default null,
    preloaderInitText in varchar2 default null,
    XMLCallDate in varchar2 default null
    );

procedure increment_calendar;

procedure decrement_calendar;

procedure today_calendar;

procedure custom_calendar(p_date_type_field varchar2 default null);

procedure weekly_calendar(p_date_type_field varchar2 default null);

procedure daily_calendar(p_date_type_field varchar2 default null);

procedure agenda_calendar(p_date_type_field varchar2 default null);

procedure month_calendar(p_date_type_field varchar2 default null);


-----------------------------------------------------------------------
-- Page and Region Caching APIs, APIs for use by application developers
--
procedure cache_purge_by_application (
   -- Purges all cached pages and regions for a given application.
   --
   p_application    in number);

procedure cache_purge_by_page (
   -- Purges all cached pages and regions for a given application and page.
   -- If p_user_name is supplied, only that user's cached pages and regions
   -- will be purged.
   --
   p_application  in number,
   p_page         in number,
   p_user_name    in varchar2 default null);

procedure cache_purge_stale (
   -- Deletes all cached pages and regions for the specified application
   -- that have passed their timeout.  When you select to have a page or
   -- region be cached, you can specify an active time period.  Once that
   -- has passed, that cache will not be used.  This removes those
   -- unusable pages and regions from the cache.
   --
   p_application    in number);

function cache_get_date_of_page_cache (
   -- Returns the date and time the specified application page
   -- was cached either for the user issuing the call
   -- or for all users if the page was not set to be cached by user.
   --
   p_application  in number,
   p_page         in number)
   return date;

procedure purge_regions_by_app (
    -- Purges all cached regions for a given application.
    --
    p_application in number);

procedure purge_regions_by_name (
    -- Purges all cached regions of a given name for a given application
    -- and page.
    --
    p_application  in number,
    p_page         in number,
    p_region_name  in varchar2);

procedure purge_regions_by_page (
    -- Purges all cached regions for a given application and page.
    --
    p_application  in number,
    p_page         in number);

function cache_get_date_of_region_cache (
   -- Returns the date and time the specified region
   -- was cached either for the user issuing the call
   -- or for all users if the region was not set to be cached by user.
   --
   p_application  in number,
   p_page         in number,
   p_region_name  in varchar2)
   return date;

-----------------------
-- SQL Prompt Utilities
--

procedure export_application (
    --
    -- For use from SQL prompt
    -- Application export generated to HTP buffer
    --
    -- example:
    -- begin apex_util.export_application(p_application_id=>:a,p_workspace_id=>:b); end;
    --
    p_workspace_id            in number,
    p_application_id          in number)
    ;

procedure export_application_page (
    --
    -- For use from SQL prompt
    -- Application page export generated to HTP buffer
    --
    -- example:
    -- begin apex_util.export_application_page(p_application_id=>:a,p_page_id=>:b,p_workspace_id=>:c); end;
    --
    p_workspace_id            in number,
    p_application_id          in number,
    p_page_id                 in number)
    ;

procedure export_application_component (
    --
    -- For use from SQL prompt
    -- Application component export generated to HTP buffer
    --
    -- example:
    -- begin apex_util.export_application_component(p_application_id=>:a,p_page_id=>:b,p_workspace_id=>:c); end;
    --
    p_workspace_id            in number,
    p_application_id          in number,
    p_component_id            in number,
    p_component_type          in varchar2)
    ;

function minimum_free_application_id
    --
    --  For use from SQL prompt
    --
    -- example:
    -- begin dbms_output.put_line(apex_util.minimum_free_application_id); end;
    --
    return number
    ;

function get_application_id_status (
    --
    --  For use from SQL prompt
    --
    --  0 = available
    --  1 = used by current workspace and database user and application owner
    -- -1 = unavailable
    --
    -- p_application name is provided only for return values of 1.
    --
    -- example:
    -- begin dbms_output.put_line(apex_util.get_application_id_status(p_application_id=>:a,p_workspace_id=>:b)); end;
    --
    --
    p_workspace_id           in  number,
    p_application_id         in  number)
    return number
    ;

function get_application_name (
    --
    -- For use from SQL prompt
    --
    -- will return null if current user does not own application
    --
    -- example:
    -- begin dbms_output.put_line(apex_util.get_application_name(p_application_id=>:a,p_workspace_id=>:b)); end;
    --
    p_workspace_id           in  number,
    p_application_id         in  number)
    return varchar2
    ;

-------
-- JSON
--

procedure json_from_sql (
    sqlq     in varchar2 default null,
    p_sub    in varchar2 default 'N',
    p_owner  in varchar2 default null);

procedure json_from_array (
    p_rows   in number   default null,
    p_cols   in number   default null,
    p_name01 in varchar2 default null,
    p_name02 in varchar2 default null,
    p_name03 in varchar2 default null,
    p_name04 in varchar2 default null,
    p_name05 in varchar2 default null,
    p_name06 in varchar2 default null,
    p_name07 in varchar2 default null,
    p_name08 in varchar2 default null,
    p_name09 in varchar2 default null,
    p_name10 in varchar2 default null,
    p_f01    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f02    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f03    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f04    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f05    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f06    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f07    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f08    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f09    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_f10    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_sub    in varchar2 default 'N');


procedure json_from_items(
    p_items      in varchar2 default null,
    p_separator  in varchar2 default ':',
    p_sub        in varchar2 default 'N'
);

procedure json_from_string(
    p_items      in varchar2 default null,
    p_separator  in varchar2 default ':',
    p_sub        in varchar2 default 'N'
);


---------------
-- BLOB Support
--
-- Procedures and functions that implement BLOB column support
--

procedure get_blob_file(
    -- Automatically called from APEX form pages
    -- Not designed to be called proceduarlly
    -- Calls to this procedure can be generated by calling the apex_util.get_blob_file_src function
    -- Page must have item of type FILE (FILE Browse)
    -- Page item source must use the following format "DB_COLUMN:MIMETYPE_COLUMN:FILENAME_COLUMN:LAST_UPDATE_COLUMN:CHARSET_COLUMN:CONTENT_DISPOSITION:DOWNLOAD_LINK"
    --    DB_COLUMN           = Required case sensitive name of a valid column which is of type BLOB
    --    MIMETYPE_COLUMN     = Optional case sensitive column name of a table column used to store the mimetype
    --    FILENAME_COLUMN     = Optional case sensitive column name of a table column used to store the file name
    --    LAST_UPDATE_COLUMN  = Optional case sensitive column name of a table column used to store the last update date of the BLOB
    --    CHARSET_COLUMN      = Optional case sensitive column name of a table column used to store the file character set
    --    CONTENT_DISPOSITION = inline or attachment
    --    DOWNLOAD_LINK       = Optional text to be used for the download text, defaults to Download, translated
    -- Page item source must include at least the database column name and a trailing colon
    -- Mimetype column is required if the mimetype is to be encoded in the download header
    -- Page item must be of source type of DATABASE COLUMN
    -- Page must have a DML process of type DML_PROCESS_ROW, used to determine the tablename
    -- Must be called from an APEX application context
    -- Invalid inputs will result in a 404 error
    --
    s                     in number,                -- APEX session ID
    a                     in number,                -- APEX application ID
    p                     in number,                -- APEX page ID of the form page
    d                     in number,                -- DML process APEX meta data ID
    i                     in number,                -- ITEM of type FILE APEX meta data ID
    p_pk1                 in varchar2,              -- Primary key value
    p_ck                  in varchar2,              -- Checksum used to prevent URL Tampering
    p_pk2                 in varchar2 default null, -- Optional Second Primary Key Value, used for compound keys
    p_mimetype            in varchar2 default null, -- Optional ...
    p_content_disposition in varchar2 default null, -- Optional use "inline" or "attachment" all other values ignored
    p_show_last_mod       in varchar2 default 'Y'); -- Optional ...

function get_blob_file_src (
    -- Generates a call to the apex_util.get_blob_file that can be used to download a BLOB column content
    -- Only generates usable output if called from a valid APEX session
    -- Example:
    --    PLSQL Function Body: return '<img src="'||apex_util.get_blob_file_src('P2_ATTACHMENT',empno)||'" />';
    --
    p_item_name in varchar2 default null,           -- Name of valid application page ITEM that with type FILE, and source type of DB column
    p_v1        in varchar2 default null,           -- Value of primary key column
    p_v2        in varchar2 default null,           -- Optional value of second primary key column
    p_content_disposition in varchar2 default null) -- Optional content disposition, valid values are "inline" and "attachment", other values ignored
    return varchar2
    ;

procedure get_blob (
    -- This procedure will download a blob column given proper inputs
    -- This get_blob function is designed to be called from APEX reports automatically
    -- Classic and Interactive Reports given a format mask will generate a link to this procedure
    -- Report that uses  "select ... dbms_lob.getlength(myblob_column) ..." syntax
    --
    -- The report column format mask has the following format
    -- DOWNLOAD|IMAGE:<blob_tab>:<blob_col>:<pk1_col>:<pk2_col>:<mimetype_col>:<filename_col>:<last_update_col>:<charset_col>:<content disposition>:<download text>
    -- All arguments are delimited by colons
    --
    -- This procedure is NOT designed to be called directly, it is intended to be called by APEX reporting engines
    -- Reference function apex_util.get_blob_file_src
    --
    -- position 1: "DOWNLOAD" or "IMAGE"
    --             Download will result in the generation a "a href=" tag
    --             Image will result in the generation of an inline "img src=" tag
    --             Use image when your files are images
    --             Using image for non image based files will result in broken image links
    --             Required
    -- position 2: Name of the table containing the blob column in question
    --             Required and case sensitive
    -- position 3: Name of the BLOB column name
    --             Required and case sensitive
    -- position 4: Name of the primary key column in the table identified in position 2
    --             Required and case sensitive
    -- position 5: Name of a secondary key column to uniquely identify the row that contains the BLOB column
    --             Optional and case sensitive
    -- position 6: Name of a column that is used to store the mime type that corresponds to the BLOB column
    --             Managing the mimetype allows the mimetype to be encoded in the file download
    --             If a mimetype is not specified download will use "application/octet-stream"
    --             A proper mimetype allows the browser to pick an approparte application to display the file
    --             Optional and case sensitive
    -- position 7: Name of a column that is used to store the filename of the BLOB column identified in position 3
    --             Managing the filename allows downloads to default the file name to a usefull value
    --             Optional and case sensitive
    --             Not used for IMAGE format but left in so format can easily be changed between IMAGE and DOWNLOAD
    -- position 8: Name of a column that is used to store the date the BLOB was last updated
    --             If used, the HTTP header of the file download will indicate the date of last modification and
    --                browsers will be able to cache the BLOB.  If not specified, the browser may not be able to cache files.
    --             Optional and case sensitive
    -- position 9: Name of the character set that is used to store the character set of the file in the BLOB column
    --             Most useful for applications that have files in multiple character sets
    --             Optional and case sensitive
    --             Not used for IMAGE format but left in so format can easily be changed between IMAGE and DOWNLOAD
    -- position 10: For DOWNLOAD format masks, identifies the content disposition
    --             Defaults to inline
    --             Valid values are "inline" and "attachment"
    --             A value of inline will cause the browser to render the file inline if it can
    --             A value of attachment will prompt the user to download the file
    --             Optional, use lower case
    --             Not used for IMAGE format but left in so format can easily be changed between IMAGE and DOWNLOAD
    -- position 11: For DOWNLOAD format masks, identifies the text used to indicate a download link text
    --             Default to "Download"
    --             Translated into 10 languages
    --             Specify if you wish to over-ride the default text
    --             Standard APEX substitutions are performed
    --             Only used for DOWNLOAD format masks
    --             Optional
    --             For IMAGE, String used for the alt tag associated with the image
    --
    -- Example Report format masks:
    --
    -- DOWNLOAD:EMP:RESUME:EMPNO::MIMETYPE:FILENAME:RESUME_LAST_UPDATE
    -- DOWNLOAD:EMP:RESUME:EMPNO::MIMETYPE:FILENAME:RESUME_LAST_UPDATE:::Resume
    -- IMAGE:EMP:EMP_PHOTO:EMPNO::MIMETYPE::PHOTO_LAST_UPDATE:::Employee Photo
    --
    s                 in number,                -- session id
    a                 in number,                -- application id
    c                 in number,                -- id of the report column
    p                 in number,                -- page
    k1                in varchar2,              -- primary key 1 value
    ck                in varchar2,              -- checksum
    rt                in varchar2 default 'IR', -- optional report type IR (interactive repors) or CR (classic reports)
    k2                in varchar2 default null, -- optional, primary key 2 value
    lm                in varchar2 default 'Y'   -- optional, show last modified
    );

--------------------------------------
-- APEX Listener procedure to set blob
--
-- returns file name


function set_blob (
   p_application_id      in varchar2 default null,
   p_page_id             in varchar2 default null,
   p_session_id          in varchar2 default null,
   p_request             in varchar2 default null,
   --
   p_item_id             in varchar2 default null,
   --
   p_file_name           in varchar2 default null,
   p_mime_type           in varchar2 default null,
   p_blob_content        in blob
   )
   return varchar2;

----------------------
-- Interactive Reports
--
-- Procedures to provide programatic control over interactive reports
--

procedure ir_filter (
    -- Note:  Deprecated starting APEX 4.2.  Use APEX_IR.ADD_FILTER instead.
    --
    -- Used to control Interactive Report filters
    -- Given an APEX page sets a report filter
    -- Useful if you want to define report filters declaratively
    -- If p_report_alias is null, it creates filter on Primary default
    -- If p_report_alias passed, it creates filter on the specific saved report
    --
    -- Valid values for p_operator_abbr
    -- EQ = Equals
    -- LT = Less than
    -- LTE = Less then or equal to
    -- GT = Greater Than
    -- GTE = Greater than or equal to
    -- LIKE = SQL Like operator
    -- N = Null
    -- NN = Not Null
    --
    -- Filter values are bound into Report SQL
    --
    -- Example:
    --    apex_util.ir_filter(p_page_id=>1,p_report_column=>'DEPTNO',p_operator_abbr=>'EQ',p_filter_value=>'10');
    --
    p_page_id       in number,                -- Page of the current APEX application that contains an Interactive Report
    p_report_column in varchar2,              -- Name of the report SQL column (or column alias) to be filtered
    p_operator_abbr in varchar2 default null, -- Filter type, Valid values are 'EQ' , 'LT', 'LTE', 'GT', 'GTE', 'LIKE', 'N', 'NN'
    p_filter_value  in varchar2,              -- Value of filter, not used for N and NN
    p_report_alias in varchar2 default null   -- valid saved report alias within current application page
    );

procedure ir_reset (
    -- Note:  Deprecated starting APEX 4.2.  Use APEX_IR.RESET_REPORT instead.
    --
    -- Resets an interactive report for current user session and application
    -- Same as a user reseting via the pull down menu
    -- Resetting will re-create default filter, control breaks, display columns etc
    -- If p_report_alias is null, it resets Primary default report settings
    -- If p_report_alias passed, it resets specific saved report settings
    --
    p_page_id      in number,               -- valid page number within current application
    p_report_alias in varchar2 default null -- valid saved report alias within current application page
    );

procedure ir_clear (
    -- Note:  Deprecated starting APEX 4.2.  Use APEX_IR.CLEAR_REPORT instead.
    --
    -- Clears an interactive report for current user session and application
    -- Clears filters for an interactive report
    -- Clears any report filters including default filters
    -- Clears all interactive reports for a given application page
    -- If p_report_alias is null, it clears Primary default report settings
    -- If p_report_alias passed, it clears specific saved report settings
    --
    p_page_id      in number,               -- valid page number within current application
    p_report_alias in varchar2 default null -- valid saved report alias within current application page
    );

procedure ir_delete_report(
    -- Note:  Deprecated starting APEX 4.2.  Use APEX_IR.DELETE_REPORT instead.
    --
    -- Deletes saved interactive report for current application
    -- Can delete all saved reports except Primary Default report
    p_report_id           in number -- valid saved report id within current application
    );

procedure ir_delete_subscription(
    -- Note:  Deprecated starting APEX 4.2.  Use APEX_IR.DELETE_SUBSCRIPTION instead.
    --
    -- Deletes interactive report subscription for current workspace
    p_subscription_id           in number -- valid subscription id within current workspace
    );

---------------
-- Format Masks
--
-- Used by interactive and classic reports to provide additional format masks

function filesize_mask (
    -- Takes a file size in bytes and returns a rounded off size with trailing KB, MB, GB, or TB
    -- Provides a more readable file size
    -- Use FILESIZE format mask on numeric columns from within Classic and Interactive Reports
    -- Null values will return null
    -- KB, MB, GB, and TB are always english language strings
    --
    -- Example report format masks for interactive and classic reports
    --     "FILESIZE"
    --
    -- Example SQL query syntax
    --     "select apex_util.filesize_mask(8675309) from dual"
    --
    p_number       in number default null)
    return varchar2
    ;

function html_pct_graph_mask (
    -- Given a number between 0 and 100, a HTML graph
    -- The width of the HTML graph will devault to 100 px in width
    -- Number outside the range 0 to 100 will result in a null return
    -- Used by classic and interactive reports with format mask of GRAPH
    -- Generates a div tag with inline styles
    -- If p_format argument is supplied, p_size, p_background, p_bar_background are ignored
    --
    -- Report column mask syntax PCT_GRAPH:<BACKGROUND>:<FOREGROUND>:<CHART_WIDTH>
    -- position 1: PCT_GRAPH format mask indicator
    -- position 2: Background color in hex, 6 characters
    --             Optional
    -- position 3: Foreground "bar" color in hex, 6 characters
    --             Optionsl
    -- position 4: Chart width in Pixels
    --             Numeric, defaults to 100
    --             p_number is automatically scaled, so 50 would be half chart_width
    --             Optional
    --
    -- SQL Example:
    --    select apex_util.html_pct_graph_mask(33) from dual
    --
    -- Report Numeric Column Format Mask Example:
    --    PCT_GRAPH:777777:111111:200
    --
    p_number         in number   default null, -- Number between 0 and 100
    p_size           in number   default 100,  -- Width of graph in pixels
    p_background     in varchar2 default null, -- 6 character hex color of chart background (not bar color)
    p_bar_background in varchar2 default null, -- 6 character hex color of chart bar (bar color)
    p_format         in varchar2 default null) -- PCT_GRAPH:<BACKGROUND>:<FOREGROUND>:<CHART_WIDTH>
    return varchar2
    ;



----------------------
-- Password Checking
--

procedure strong_password_check(
    p_username                    in  varchar2,
    p_password                    in  varchar2,
    p_old_password                in  varchar2,
    p_workspace_name              in  varchar2,
    p_use_strong_rules            in  boolean,
    p_min_length_err              out boolean,
    p_new_differs_by_err          out boolean,
    p_one_alpha_err               out boolean,
    p_one_numeric_err             out boolean,
    p_one_punctuation_err         out boolean,
    p_one_upper_err               out boolean,
    p_one_lower_err               out boolean,
    p_not_like_username_err       out boolean,
    p_not_like_workspace_name_err out boolean,
    p_not_like_words_err          out boolean,
    p_not_reusable_err            out boolean)
    ;

function strong_password_validation(
    p_username         in varchar2,
    p_password         in varchar2,
    p_old_password     in varchar2 default null,
    p_workspace_name   in varchar2,
    p_use_strong_rules in boolean default false)
    return varchar2
    ;

-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_report_data:        XML based report data (utf-8 encoded)
--   p_report_layout:      Report layout in XSL-FO or RTF format
--   p_report_layout_type: Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:    Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:       URL of of the print server. If not specified, the print server will be derived from preferences
--                         example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_report_data         in clob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;

-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_report_data:        XML based report data (utf-8 encoded)
--   p_report_layout:      Report layout in XSL-FO or RTF format
--   p_report_layout_type: Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:    Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:       URL of of the print server. If not specified, the print server will be derived from preferences
--                         example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_report_data         in blob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using pre-defined report query and pre-defined report layout.
--
-- Arguments:
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout_name:  Name of the report query (stored under application's shared components)
--                          if report layout name is not specified, layout associated with report query will be used
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout_name  in varchar2 default null,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
function get_print_document (
--
-- This function returns a document as BLOB using a pre-defined report query and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout:       Defines the report layout in in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
) return blob;


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Defines the filename of the print document
--   p_content_disposition: Specifies whether to download the print document or display inline ("attachment", "inline")
--   p_report_data:         XML based report data
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_report_data         in clob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using XML based report data and RTF or XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Defines the filename of the print document
--   p_content_disposition: Specifies whether to download the print document or display inline ("attachment", "inline")
--   p_report_data:         XML based report data
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_report_data         in blob,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using pre-defined report query and pre-defined report layout.
--
-- Arguments:
--   p_file_name            Filename of print document
--   p_content_disposition: Download print document or display inline ("attachment", "inline")
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout_name:  Name of the report query (stored under application's shared components)
--                          if report layout name is not specified, layout associated with report query will be used
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout_name  in varchar2 default null,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);


-- -----------------------------------------------------------------------------------------------
procedure download_print_document (
--
-- This procedure initiates the download of a print document using pre-defined report query and RTF and XSL-FO based report layout.
--
-- Arguments:
--   p_file_name            Filename of print document
--   p_content_disposition: Download print document or display inline ("attachment", "inline")
--   p_application_id:      Defines the application ID of the report query
--   p_report_query_name:   Name of the report layout (stored under application's Shared Components)
--   p_report_layout:       Report layout in XSL-FO or RTF format
--   p_report_layout_type:  Defines the report layout type, that is "xsl-fo" or "rtf"
--   p_document_format:     "Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"
--   p_print_server:        URL of of the print server. If not specified, the print server will be derived from preferences
--                          example: http://myserver.example.com:8888/xmlpserver/convert
--
    p_file_name           in varchar,
    p_content_disposition in varchar  default 'attachment',
    p_application_id      in number,
    p_report_query_name   in varchar2,
    p_report_layout       in clob,
    p_report_layout_type  in varchar2 default 'xsl-fo',
    p_document_format     in varchar2 default 'pdf',
    p_print_server        in varchar2 default null
);

function host_url(
    --
    -- This function returns the host URL for the Application Express instance.
    --
    -- Argument:
    --   p_option           Specifies the parts of the URL to include
    --
    --                      Possible values for p_option are:
    --                          NULL   - Return URL up to port number (e.g., https://myserver.com:7778 )
    --                          SCRIPT - Return URL to include script name (e.g., https://myserver.com:7778/pls/apex/ )
    --                          IMGPRE - Return URL to include image prefix (e.g., https://myserver.com:7778/i/ )
    --
    p_option          in varchar2 default null )
    return varchar2
    ;

--------------------------------------------------------------------------------
-- Calls owa_util.redirect_url to redirect the browser to a new URL.
-- The procedure automatically calls apex_application.stop_apex_engine to
-- abort further processing of the APEX application.
--
-- p_reset_htp_buffer should be set to FALSE if the application has set it's own
-- cookie in the response, otherwise the HTP buffer will be reseted to make sure
-- that the browser understands the redirect to the new URL and isn't confused
-- by data which has already been written to the HTP buffer.
--------------------------------------------------------------------------------
procedure redirect_url (
    p_url              in varchar2,
    p_reset_htp_buffer in boolean default true );

-- --------------------------------------------
procedure set_session_lifetime_seconds(
    p_seconds in number,
    p_scope   in varchar2 default 'SESSION')
    ;

procedure set_session_max_idle_seconds(
    p_seconds  in number,
    p_scope    in varchar2 default 'SESSION')
    ;


--
-- set_session_time_zone() will set the time zone for the current Application Express session.
-- As well, it will also immediately set the database session time zone to this setting.  If the value
-- specific is invalid, then the session time zone will be set to the database time zone.
--
procedure set_session_time_zone(
    p_time_zone in varchar2 );

--
-- get_session_time_zone() will return the current time zone for the currnet Application Express session, if it has been set.
-- If it has not been explicitly set, then a null value will be returned.  When it has not been explicitly set, the
-- database session time zone is always set to the database time zone
--
function get_session_time_zone return varchar2;

--
-- reset_session_time_zone will clear the time zone setting for the current APEX session.  As well, it will alter
-- the time zone setting of the database session to the database time zone
--
procedure reset_session_time_zone;



--
-- set_session_lang() will set the language for the current Application Express session, but this
-- is only relevant when the application language is derived from 'Session'.
--
procedure set_session_lang(
    p_lang in varchar2 );

--
-- get_session_lang() will return the current language for the current Application Express session, but this
-- is only relevant when the application language is derived from 'Session'.
--
function get_session_lang return varchar2;

--
-- reset_session_lang will clear the language setting for the current APEX session.
--
procedure reset_session_lang;



--
-- set_session_territory() will set the territory for the current Application Express session
--
procedure set_session_territory(
    p_territory in varchar2 );

--
-- get_session_territory() will return the current territory for the current Application Express session
--
function get_session_territory return varchar2;

--
-- reset_session_territory will clear the territory setting for the current APEX session.
--
procedure reset_session_territory;



--
-- set_edition will set the edition for all workspace-schema parsed SQL for the current page view
--
procedure set_edition( p_edition in varchar2 );

function get_edition return varchar2;

--
-- when used with find_security_group_id, eases use of mail package, etc, in batch mode
--
procedure set_security_group_id ( p_security_group_id  in number );

--
-- set_compatibility_mode will update the compatibility mode setting of the specified
-- application. Valid values for p_compatibility_mode are '4.0' and '4.1'.
--
procedure set_compatibility_mode (
    p_application_id     in number,
    p_compatibility_mode in varchar2 );

-- *****************************************************************************
--
-- NOTE: The following APIs are for internal use only and are likely to be
--       changed or removed in a future version of Application Express.
--
-- *****************************************************************************

--
-- Returns TRUE if p_value contains dangerous characters which could be used
-- to attack the application/system/... and FALSE if p_value is safe.
--
-- p_check can be one of the following values:
--
--   US_ONLY - Whitelist for a-Z, 0-9 and space
--   WEB_SAFE - Blacklist HTML command characters (<>")
--   NO_SPECIAL_CHAR - Blacklist &<>"/;,*|=% and --
--   NO_SPECIAL_CHAR_NL - Blacklist &<>"/;,*|=% or -- and new line
--
function has_restricted_chars (
    p_value in varchar2,
    p_check in varchar2 )
    return boolean;


--
-- Procedure to change the status of Build Options
-- p_app: The Application id
-- p_id: The Build Option Id
-- p_build_status: Status with possible values 'INCLUDE','EXCLUDE' (Both uppercase)
procedure set_build_option_status(
   p_application_id   in number,
   p_id               in number,
   p_build_status     in varchar2 );

--
-- Function to get the status of Build Options
-- p_application_id: The Application id
-- p_id:  The Build Option Id
--
function get_build_option_status(
   p_application_id   in number,
   p_id               in number )
return varchar2;

--
-- Function to get the status of Build Options
-- p_application_id: The Application id
-- p_build_option_name: Build Option Name
--
function get_build_option_status(
   p_application_id   in number,
   p_build_option_name in varchar2 )
return varchar2;


--
-- Close all database links open in the current session
--
procedure close_open_db_links;


--
-- set format mask for report columns in classic reports
--
procedure set_report_column_format (
    p_column_format in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr
);

end htmldb_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."HTMLDB_CUSTOM_AUTH"
as
--  Copyright (c) Oracle Corporation 2001-2003. All Rights Reserved.
--
--     DESCRIPTION
--       API package for flow developers using custom authentication.
--
--       These functions and procedures provide access to flow
--       metadata and flow session state and provide wrappers
--       for commonly used security-related modules.
--
--       Some of these modules are intended for use only within
--       the flow engine runtime context, and others may be
--       called from within any context, if so indicated.
--
--    SECURITY
--       Executable via public synonym and grant
--
--    NOTES
--
--    EXAMPLE
--
--
function get_next_session_id
    --
    -- Context: HTML DB runtime
    -- Purpose: Generate next session id from sequence generator
    --
    return number;

function get_security_group_id
    --
    -- Context: HTML DB runtime
    -- Purpose: Return the wwv_flow_security.g_security_group_id global
    --
    return number;

function application_page_item_exists(
    --
    -- Context: HTML DB runtime
    -- Purpose: Return boolean as to existence within the current
    --          flow page's metadata of a named page-level item.
    --
    p_item_name in varchar2)
    return boolean;

function current_page_is_public
    --
    -- Context: HTML DB runtime
    -- Purpose: Return boolean corresponding to current flow
    --          page attribute PAGE_IS_PUBLIC_Y_N setting.
    --
    return boolean;

function session_id_exists
    --
    -- Context: HTML DB runtime
    -- Purpose: Return boolean if wwv_flow.g_instance is set/not set
    --
    return boolean;

function get_user
    --
    -- Context: HTML DB runtime
    -- Purpose: Return wwv_flow.g_user global
    --
    return varchar2;

function get_session_id
    --
    -- Context: HTML DB runtime
    -- Purpose: Return wwv_flow.g_instance global
    --
    return number;

procedure set_user(
    --
    -- Context: HTML DB runtime
    -- Purpose: Set wwv_flow.g_user global
    --
    p_user in varchar2);

procedure set_session_id(
    --
    -- Context: HTML DB runtime
    -- Purpose: Set wwv_flow.g_instance global
    --
    p_session_id in number);

procedure set_session_id_to_next_value
    --
    -- Context: HTML DB runtime
    -- Purpose: Set wwv_flow.g_instance to next
    --          session id from sequence generator.
    --
    ;

procedure define_user_session(
    --
    -- Context: HTML DB runtime
    -- Purpose: Combine the functions of set_user and
    --          set_session_id to provide a concise API call
    --
    p_user in varchar2,
    p_session_id in number)
    ;

function get_username
    --
    -- Context: htmldb application runtime
    -- Purpose: get username from wwv_flow_session$ for current session
    --
    return varchar2
    ;

function get_session_id_from_cookie
    --
    -- Context: htmldb application runtime with cookie in cgi environment
    -- Purpose: get session id of current user based on cookie
    --
    return number
    ;

function is_session_valid
    --
    -- Context: htmldb application runtime
    -- Purpose: determine if session exists and is valid
    --
    return boolean
    ;

procedure logout(
    --
    -- Context: Use as redirect URL from navbar logout item and similar places
    -- Purpose: determine cookie for given flow, unset cooie, then redirect to url
    --          if p_next_url is passed in, else redirect to flow page using
    --          p_next_flow_page_sess
    --
    p_this_app            in varchar2 default null,
    p_next_app_page_sess  in varchar2 default null, -- assumed to be FLOW:PAGE:SESSION to redirect to
    p_next_url            in varchar2 default null) -- assumed to be full url to redirect to
    ;

procedure logout_then_go_to_page(
    --
    -- Context: Use as redirect URL from navbar logout item and similar places
    -- Purpose: wrapper for logout procedure when redirect to flow page is needed.
    --          Makes it easier to cram all the logout arguments into one for use in URLs
    --
    p_args in varchar2 default null) -- assumed to be THISFLOW:FLOW:PAGE:SESSION to redirect to
    ;

procedure remove_session
    ;

procedure logout_then_go_to_url(
    --
    -- Context: Use as redirect URL from navbar logout item and similar places
    -- Purpose: wrapper for logout procedure when redirect to free form url is needed.
    --          Makes it easier to cram all the logout arguments into one for use in URLs
    --
    p_args in varchar2 default null) -- assumed to be THISFLOW:URL to redirect to
    ;

function portal_sso_sentry_v1
    return boolean
    ;

procedure login(
    --
    -- Context: any
    -- Purpose: Do after login page submit processing
    --          starting at the pre-authentication step.
    --
    p_uname             in varchar2 default null,
    p_password          in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_app_page          in varchar2 default null,
    p_entry_point       in varchar2 default null,
    p_preserve_case     in boolean default false)
    ;

procedure post_login(
    --
    -- Context: any
    -- Purpose: Do after login page submit processing
    --          starting at the post-authentication step.
    --
    p_uname             in varchar2 default null,
    p_session_id        in varchar2 default null,
    p_app_page          in varchar2 default null,
    p_preserve_case     in boolean default false)
    ;

procedure get_cookie_props(
    --
    -- Context: any
    -- Purpose: get cookie properties for specified flow
    --
    p_app_id         in number,
    p_cookie_name   out varchar2,
    p_cookie_path   out varchar2,
    p_cookie_domain out varchar2,
    p_secure        out boolean)
    ;

function ldap_dnprep(
    p_username in varchar2)
    return varchar2
   ;

function ldap_authenticate(
    --
    -- Context: any
    -- Purpose: verify credentials using ldap directory
    --
    p_username           in varchar2,
    p_password           in varchar2,
    p_ldap_host          in varchar2,
    p_ldap_port          in number,
    p_use_ssl            in varchar2 default 'N',
    p_use_exact_dn       in varchar2 default 'Y',
    p_ldap_string        in varchar2,
    p_search_filter      in varchar2 default null,
    p_ldap_edit_function in varchar2,
    p_owner              in varchar2)
    return boolean
    ;

procedure get_ldap_props(
    --
    -- Context: in application
    -- Purpose: get ldap config for current application's authentication scheme
    --
    p_ldap_host          out varchar2,
    p_ldap_port          out integer,
    p_use_ssl            out varchar2,
    p_use_exact_dn       out varchar2,
    p_ldap_dn            out varchar2,
    p_search_filter      out varchar2,
    p_ldap_edit_function out varchar2)
    ;

end htmldb_custom_auth;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."HTMLDB_LANG"
--  Copyright (c) Oracle Corporation 2003. All Rights Reserved.
--
--    DESCRIPTION
--      globalization services
--
--    NOTES
--      This program allows for translation of text strings from
--      on national language to another.
--
--    RUNTIME DEPLOYMENT: YES
is

function message (
    -- Function to return a message from the message repository.
    --
    -- p_name           - name of message to be printed
    -- p0 - p9          - substitution parameters that replace text srings
    --                    %0 through %9
    -- p_lang           - optional parameter to override the language
    -- p_application_id - optional parameter for a specific application ID instead of the current one
    --
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in number default null)
    return varchar2
    ;



procedure message_p (
    -- Print a message from the message repository.
    --
    -- p_name           - name of message to be printed
    -- p0 - p9          - substitution parameters that replace text srings
    --                    %0 through %9
    -- p_lang           - optional parameter to override the language
    -- p_application_id - optional parameter for a specific application ID instead of the current one
    --
    p_name                      in varchar2 default null,
    p0                          in varchar2 default null,
    p1                          in varchar2 default null,
    p2                          in varchar2 default null,
    p3                          in varchar2 default null,
    p4                          in varchar2 default null,
    p5                          in varchar2 default null,
    p6                          in varchar2 default null,
    p7                          in varchar2 default null,
    p8                          in varchar2 default null,
    p9                          in varchar2 default null,
    p_lang                      in varchar2 default null,
    p_application_id            in number   default null)
    ;


function lang (
   -- Return a translated text string from the
   -- translatable messages repository within HTMLDB.
   --
   -- p_primary_text_string - text string to be translated
   -- p0 - p9  - substitution parameters that replace text srings
   --            %0 through %9
   -- p_primary_text_context-
   -- p_primary_language    -
   --
   p_primary_text_string       in varchar2 default null,
   p0                          in varchar2 default null,
   p1                          in varchar2 default null,
   p2                          in varchar2 default null,
   p3                          in varchar2 default null,
   p4                          in varchar2 default null,
   p5                          in varchar2 default null,
   p6                          in varchar2 default null,
   p7                          in varchar2 default null,
   p8                          in varchar2 default null,
   p9                          in varchar2 default null,
   p_primary_language          in varchar2 default null)
   return varchar2
   ;


procedure create_message(
    --
    -- Create a runtime message
    --
    p_application_id in number,
    p_name           in varchar2,
    p_language       in varchar2,
    p_message_text   in varchar2 )
    ;

procedure update_message(
    --
    -- Update a text message specified by ID
    --
    p_id           in number,
    p_message_text in varchar2 );

procedure delete_message(
    --
    -- Delete a runtime message
    --
    p_id in number );


procedure update_translated_string(
    --
    -- Update the string in the translation repository
    --
    p_id       in number,
    p_language in varchar2,
    p_string   in varchar2);


procedure seed_translations(
    --
    -- Seed the translation repository for the specified application
    -- and language.
    --
    p_application_id in number,
    p_language       in varchar2 );

procedure create_language_mapping(
    --
    -- Create a language mapping for the specified application.  A mapping
    -- includes the target application ID and also the language code (e.g., de, en-us, etc.)
    --
    p_application_id             in number,
    p_language                   in varchar2,
    p_translation_application_id in number);


procedure update_language_mapping(
    --
    -- Update the mapping for specified application and language.  Only the mapping to the new translation
    -- ID can be updated.  The language cannot be updated.
    --
    p_application_id             in number,
    p_language                   in varchar2,
    p_new_trans_application_id   in number);


procedure delete_language_mapping(
    --
    -- Delete a language mapping for the specified application and language.
    --
    p_application_id in number,
    p_language       in varchar2);


procedure publish_application(
    --
    -- Publish the translations of an application.  You can optionally specify
    -- a new application ID for the specific translation mapping.
    --
    p_application_id           in number,
    p_language                 in varchar2,
    p_new_trans_application_id in number default null );


end htmldb_lang;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FORM_CONTROL"
as
--  Copyright (c) Oracle Corporation 2004. All Rights Reserved.
--
--
--    DESCRIPTION
--
--
--    NOTES
--      This package is used to compute form control values.
--      For example, it is used to compute next or previous primary key value(s) based on given table information and current primary key value(s).
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--


procedure get_next_or_prev_info (
    p_process_sql    in varchar2 default null);
end wwv_flow_form_control;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_THEME_GLOBALS"
as

    g_theme_id                    number;
    -- page
    g_default_page_template       number;
    g_error_template              number;
    g_printer_friendly_template   number;
    g_breadcrumb_display_point    varchar2(2000);
    g_sidebar_display_point       varchar2(2000);
    g_login_template              number;
    -- region
    g_default_button_template     number;
    g_default_region_template     number;
    g_default_chart_template      number;
    g_default_form_template       number;
    g_default_reportr_template    number;
    g_default_tabform_template    number;
    g_default_wizard_template     number;
    g_default_menur_template      number;
    g_default_listr_template      number;
    g_default_irr_template        number;
    g_default_header_template     number;
    g_default_footer_template     number;
    --row/report
    g_default_report_template     number;
    -- field/label
    g_default_label_template      number;
    -- menu
    g_default_menu_template       number;
    -- calendar
    g_default_calendar_template   number;
    -- lists
    g_default_list_template       number;
    g_default_option_label        number;
    g_default_required_label      number;
    -- list globals
    g_default_chart_list          number;
    g_default_report_list         number;
    g_default_ul_wo_bullet_list   number;
    --
    g_default_breadcrumb_region   number;

    g_default_sb_page_template    number;
    g_default_sb_region_template  number;
    g_default_sb_nav_template     number;

end wwv_flow_theme_globals;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_THEME_MANAGER" is

    empty_vc_arr wwv_flow_global.vc_arr2;

    procedure create_new_public_theme (
       p_workspace_id    in number,
       p_app_id          in number,
       p_app_theme_id    in number,
       p_theme_name      in varchar2,
       p_theme_number    in number,
       p_theme_desc      in varchar2 default null);

    function get_theme_image_icon (
       p_theme_id               in number,
       p_application_id         in number)
       return varchar2;

    procedure add_theme_to_application (
        p_application_id         in number,
        p_theme_id               in number);

    procedure delete_workspace_theme (
        p_id              in number);

    procedure delete_public_theme (
        p_id              in number);

    procedure change_workspace_theme (
        p_id              in number,
        p_theme_name      in varchar2,
        p_theme_number    in number,
        p_theme_desc      in varchar2 default null);

    procedure change_public_theme (
        p_id              in number,
        p_theme_name      in varchar2,
        p_theme_number    in number,
        p_theme_desc      in varchar2 default null);

    procedure create_new_workspace_theme (
        p_app_id          in number,
        p_app_theme_id    in number,
        p_theme_name      in varchar2,
        p_theme_number    in number,
        p_theme_desc      in varchar2 default null);

    function count_consolidation (
        p_application_id       in number,
        p_consolidate_from     in number default 0,
        p_consolidate_to       in number default 0,
        p_template_type        in varchar2 default null)
        return number;
    procedure consolidate_templates (
        p_application_id       in number,
        p_consolidate_from     in number default 0,
        p_consolidate_to       in number default 0,
        p_template_type        in varchar2 default null);
    procedure switch_theme (
        p_flow_id    in number,
        p_from_theme in number,
        p_to_theme   in number );
    procedure delete_theme(p_flow_id in number, p_theme_id in number, p_import in varchar2 default 'N');
    procedure renumber_theme(p_flow_id in number, p_to_theme in number, p_from_theme in number);
    procedure copy_theme(p_from_flow_id in number, p_to_flow_id in number, p_from_theme in number, p_to_theme in number);
    procedure set_globals (
        p_flow_id           in number,
        p_to_theme          in number default null,
        p_user_interface_id in number default null );
    function  get_new_theme_id(p_flow_id in number) return number;
    function  get_button_postion(p_template_id in number, p_position in varchar2) return varchar2;
    function get_page_util(p_flow_id in number, p_id in number) return varchar2;
    function get_region_util(p_flow_id in number, p_id in number) return varchar2;
    function get_report_util(p_flow_id in number, p_id in number) return varchar2;
    function get_list_util(p_flow_id in number, p_id in number) return varchar2;
    function get_field_util(p_flow_id in number, p_id in number) return varchar2;
    function get_button_util(p_flow_id in number, p_id in number) return varchar2;
    function get_menu_util(p_flow_id in number, p_id in number) return varchar2;
    function get_cal_util(p_flow_id in number, p_id in number) return varchar2;

    procedure f4000_process_theme_image (
        p_id           in number   default null,
        p_THEME_IMAGE  in varchar2 default null,
        P_CUSTOM_IMAGE in varchar2 default null)
        ;
end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."HTMLDB_SITE_ADMIN_PRIVS"
--
--  Copyright (c) Oracle Corporation 1999 - 2005. All Rights Reserved.
--
--    DESCRIPTION
--      Privilege Management for Site Administrators
--
as

procedure restrict_schema(
    p_schema in varchar2)
    ;

procedure unrestrict_schema(
    p_schema in varchar2)
    ;

procedure create_exception(
    p_schema    in varchar2,
    p_workspace in varchar2)
    ;

procedure remove_exception(
    p_schema    in varchar2,
    p_workspace in varchar2)
    ;

procedure remove_schema_exceptions(
    p_schema    in varchar2)
    ;

procedure remove_workspace_exceptions(
    p_workspace    in varchar2)
    ;

procedure report
    ;

end htmldb_site_admin_privs;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PPR_UTIL"
as
procedure run_process(
    p_process_name_or_id in varchar2)
    ;
end wwv_flow_ppr_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_SCRIPT"
as
--  Copyright (c) Oracle Corporation 2005. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package is used to manage script files from SQL Workshop Script Repository.
--
--    NOTES
--      Some existing procedures from sw_api and wwv_flow_parser has been moved to this package.
--
--      This package has following limitation:
--      1.  Cannot run SELECT statement greater than 32KB.
--
--    SECURITY
--      No grants, must be run as schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

g_result_id              number := null;

function get_success_cnt(p_result_id in number) return varchar2;

function get_failure_cnt(p_result_id in number) return varchar2;

function get_free_space return number;

function script_w_warning (p_file_id in number) return boolean;

function array_element(
    p_vcarr in wwv_flow_global.vc_arr2,
    p_index in number )
    return varchar2;

function invalid_script(p_file_id in number) return number;

function chunk_lines(p_stmt in  varchar2) return sys.dbms_sql.varchar2a;

function getlengthb (
    p_clob in clob) return number;

function valid_script_name (
    p_script_name in varchar2
    ) return boolean;

function create_script_file (
    p_script_name in varchar2,
    p_description in varchar2 default null,
    p_script      in varchar2 default null
    ) return number;

function draw_quotameter2(
         p_max_size     in number,
         p_current_size in number)
         return varchar2;

function draw_quotameter return varchar2;

procedure clean_out_orphan_long_op;

--==============================================================================
-- print html-escaped p_str
--
-- ARGUMENTS
-- * p_str        the string that should be printed
-- * p_max_length if not null, the number of characters in p_str that should be
--                printed
--==============================================================================
procedure escape_sc_clob (
    p_str        in clob,
    p_max_length in number default null );

--==============================================================================
procedure print_clob (p_str in clob);

procedure display_invalid_stmt(
    p_file_id          in number,
    p_date_time_format in varchar2);

procedure display_run_confirm (
    p_file_id          in number,
    p_date_time_format in varchar2);

procedure print_result (
    p_id in number);

procedure print_stmt (
    p_id in number);

procedure create_script_file (
    p_script_name in varchar2,
    p_script      in varchar2,
    p_description in varchar2 default null,
    p_file_id     in number   default null
    );

procedure create_script_from_clob (
    p_script_name in varchar2,
    p_script      in clob,
    p_description in varchar2 default null,
    p_file_id     in number   default null
    );

procedure save_file_attrib (
    p_flow_id           in number,
    p_security_group_id in number,
    p_name              in varchar2,
    p_created_by        in varchar2,
    p_filename          in varchar2 default null,
    p_description       in varchar2 default null,
    p_file_type         in varchar2 default 'SCRIPT',
    p_file_charset      in varchar2 default null
    );

procedure update_script_file (
    p_file_id     in number,
    p_script_name in varchar2,
    p_script      in clob
    );

procedure delete_file (
    p_id in number
    );

procedure run_file(
    p_result_id        in number,
    p_file_id          in number,
    p_schema           in varchar2,
    p_run_by           in varchar2,
    p_session          in number default null,
    p_job_id           in number default null,
    p_error_raised     in varchar2 default 'N'
    );

function submit_to_run (
    p_file_id  in number,
    p_run_by   in varchar2,
    p_run_as   in varchar2
    ) return number;

procedure cancel_script (
    p_job_id    in number,
    p_result_id in number
    );
end wwv_flow_sw_script;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LIST"
as
procedure render(
    p_list_id           in number,
    p_list_template_id  in number default null
);
end wwv_flow_list;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SC_TRANSACTIONS" as

--==============================================================================
function add_trans(p_session in number,
                    p_user in varchar2,
                    p_schema in varchar2,
                    p_type in varchar2,
                    p_rows in number,
                    p_binds in varchar2,
                    p_sql in varchar2) return number;

--==============================================================================
procedure set_identifier(p_client_id in varchar2);

--==============================================================================
procedure set_client(p_user in varchar2);

--==============================================================================
procedure set_mod(p_mod in varchar2, p_sql in varchar2);

--==============================================================================
procedure set_action(p_name in varchar2);

--==============================================================================
procedure sc_job (p_session in number, p_user in varchar2);

--==============================================================================
-- schedule sc_job (in app process of 4500)
--==============================================================================
function sc_create_job
    return number;

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PRINT_UTIL"
as

function convert (
    p_report_data    in blob,
    p_template       in clob,
    p_template_type  in varchar2,
    p_output         in varchar2,
    p_print_server   in varchar2 default null
) return blob;

function get_header return wwv_flow_global.vc_arr2;

end wwv_flow_print_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FLASH_CHART"
as

g_chart_engine  varchar2(255) := 'ANYCHART';
g_clob                       clob;

procedure chart (
    p_region_id in number
    );

procedure show (
    p_region_id        in number,
    p_region_static_id in varchar2,
    p_region_source    in varchar2 );

function static_xml (
    p_region_id in number
    ) return varchar2;

procedure ajax;

end wwv_flow_flash_chart;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FLASH_CHART2"
as

procedure chart(p_report_id in number default null);

end wwv_flow_flash_chart2;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FLASH_CHART5" as

g_chart_engine       varchar2(255) := 'ANYCHART';
g_clob               clob;
g_data_clob          clob;
g_region_src_clob    clob;
empty_vc_arr         wwv_flow_global.vc_arr2;
g_dbms_output        sys.dbms_output.chararr;
g_max_size_reached   boolean := false;
g_status varchar2(32767) := null;

procedure chart(p_region_id in number default null);

procedure show (
    p_region_id        in number,
    p_region_static_id in varchar2,
    p_region_source    in varchar2 );

function static_xml (
    p_region_id in number
    ) return varchar2;

-----------------------------------------------------------------------------------------------
-- get varchar2 array of report results
-- p_owner:  owner / schema name
-- p_query:  SQL statement
-- p_report_name: name of chart and series
-- p_format: CSV, HTML or XML
-- p_values: bind values
-- p_max_rows: number of report rows processed
-- p_dbms_output_lines: number of dbms output lines

function get_accessible_report (
    p_owner             varchar2,
    p_query             varchar2,
    p_report_name       varchar2,
    p_format            varchar2 default 'HTML',
    p_max_size          number   default 10000,
    p_max_rows          number   default 10,
    p_limit_type        varchar2 default 'S', -- 'S' for size 'R' for rows
    p_dbms_output_lines number   default 10000,
    p_headers           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_header_align      in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_column_align      in wwv_flow_global.vc_arr2 default empty_vc_arr
) return wwv_flow_global.vc_arr2;

procedure ajax;

end wwv_flow_flash_chart5;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FLASH_CHART_UTIL" as
--  Copyright (c) Oracle Corporation 2007. All Rights Reserved.
--
--    DESCRIPTION
--      Flash Chart utility package.
--
--    SECURITY
--
--    NOTES
--
--

function is_valid_flash_chart_query (
    p_flow_id           in number,
    p_security_group_id in number,
    p_chart_type        in varchar2,
    p_query             in varchar2,
    p_query_type        in varchar2 default 'SQL_QUERY'
    ) return varchar2;

function get_flash_filename (
  p_flash_chart_type in varchar2
) return varchar2;

procedure fetch_chart_attr (
    p_flow_id                 in number,
    p_region_id               in number,
    p_chart_id                out number,
    p_chart_type              out varchar2,
    p_chart_width             out number,
    p_chart_height            out number,
    --
    p_chart_margin_top        out number,
    p_chart_margin_bottom     out number,
    p_chart_margin_left       out number,
    p_chart_margin_right      out number,
    --
    p_chart_title             out varchar2,
    p_animation               out varchar2,
    p_color_scheme            out varchar2,
    p_custom_colors           out varchar2,
    p_bgtype                  out varchar2,
    p_bgcolor1                out varchar2,
    p_bgcolor2                out varchar2,
    p_gradient_rotation       out number,
    p_show_hints              out varchar2,
    p_show_names              out varchar2,
    p_show_values             out varchar2,
    p_show_legend             out varchar2,
    p_show_grid               out varchar2,
    p_x_axis_title            out varchar2,
    p_y_axis_title            out varchar2,
    p_y_axis_title_rotate     out varchar2,
    p_x_axis_prefix           out varchar2,
    p_x_axis_postfix          out varchar2,
    p_x_axis_group_sep        out varchar2,
    p_x_axis_decimal_place    out number,
    p_y_axis_prefix           out varchar2,
    p_y_axis_postfix          out varchar2,
    p_y_axis_group_sep        out varchar2,
    p_y_axis_decimal_place    out number,
    --
    p_x_axis_min              out number,
    p_x_axis_max              out number,
    p_x_axis_grid_spacing     out number,
    p_y_axis_min              out number,
    p_y_axis_max              out number,
    p_y_axis_grid_spacing     out number,
    p_names_font_face         out varchar2,
    p_names_font_size         out number,
    p_names_font_color        out varchar2,
    p_names_rotation          out number,
    p_values_font_face        out varchar2,
    p_values_font_size        out number,
    p_values_font_color       out varchar2,
    p_values_rotation         out number,
    p_hints_font_face         out varchar2,
    p_hints_font_size         out number,
    p_hints_font_color        out varchar2,
    p_legend_font_face        out varchar2,
    p_legend_font_size        out number,
    p_legend_font_color       out varchar2,
    p_grid_font_face          out varchar2,
    p_grid_font_size          out varchar2,
    p_grid_font_color         out varchar2,
    p_chart_title_font_face   out varchar2,
    p_chart_title_font_size   out varchar2,
    p_chart_title_font_color  out varchar2,
    p_xaxis_font_face         out varchar2,
    p_xaxis_font_size         out number,
    p_xaxis_font_color        out varchar2,
    p_yaxis_font_face         out varchar2,
    p_yaxis_font_size         out number,
    p_yaxis_font_color        out varchar2,
    p_xml                     out varchar2,
    p_use_xml                 out varchar2,
    p_async                   out varchar2,
    p_async_time              out number,
    p_omit_label_interval     out number,
    p_show_dial_tick          out varchar2,
    p_show_dial_tick_label    out varchar2,
    p_dial_tick_spacing       out number
    );

procedure save_chart_attr (
    p_flow_id                 in number,
    p_region_id               in number,
    p_chart_id                in number,
    p_chart_type              in varchar2 default null,
    p_chart_width             in number default null,
    p_chart_height            in number default null,
    --
    p_chart_margin_top        in number default null,
    p_chart_margin_bottom     in number default null,
    p_chart_margin_left       in number default null,
    p_chart_margin_right      in number default null,
    --
    p_chart_title             in varchar2 default null,
    p_animation               in varchar2 default null,
    p_color_scheme            in varchar2 default null,
    p_custom_colors           in varchar2 default null,
    p_bgtype                  in varchar2 default null,
    p_bgcolor1                in varchar2 default null,
    p_bgcolor2                in varchar2 default null,
    p_gradient_rotation       in number default null,
    p_show_hints              in varchar2 default null,
    p_show_names              in varchar2 default null,
    p_show_values             in varchar2 default null,
    p_show_legend             in varchar2 default null,
    p_show_grid               in varchar2 default null,
    p_x_axis_title            in varchar2 default null,
    p_y_axis_title            in varchar2 default null,
    p_y_axis_title_rotate     in varchar2 default null,
    p_x_axis_prefix           in varchar2 default null,
    p_x_axis_postfix          in varchar2 default null,
    p_x_axis_group_sep        in varchar2 default null,
    p_x_axis_decimal_place    in number default null,
    p_y_axis_prefix           in varchar2 default null,
    p_y_axis_postfix          in varchar2 default null,
    p_y_axis_group_sep        in varchar2 default null,
    p_y_axis_decimal_place    in number default null,
    --
    p_x_axis_min              in number default null,
    p_x_axis_max              in number default null,
    p_x_axis_grid_spacing     in number default null,
    p_y_axis_min              in number default null,
    p_y_axis_max              in number default null,
    p_y_axis_grid_spacing     in number default null,
    p_names_font_face         in varchar2 default null,
    p_names_font_size         in number default null,
    p_names_font_color        in varchar2 default null,
    p_names_rotation          in number default null,
    p_values_font_face        in varchar2 default null,
    p_values_font_size        in number default null,
    p_values_font_color       in varchar2 default null,
    p_values_rotation         in number default null,
    p_hints_font_face         in varchar2 default null,
    p_hints_font_size         in number default null,
    p_hints_font_color        in varchar2 default null,
    p_legend_font_face        in varchar2 default null,
    p_legend_font_size        in number default null,
    p_legend_font_color       in varchar2 default null,
    p_grid_font_face          in varchar2 default null,
    p_grid_font_size          in varchar2 default null,
    p_grid_font_color         in varchar2 default null,
    p_chart_title_font_face   in varchar2 default null,
    p_chart_title_font_size   in varchar2 default null,
    p_chart_title_font_color  in varchar2 default null,
    p_xaxis_font_face         in varchar2 default null,
    p_xaxis_font_size         in number default null,
    p_xaxis_font_color        in varchar2 default null,
    p_yaxis_font_face         in varchar2 default null,
    p_yaxis_font_size         in number default null,
    p_yaxis_font_color        in varchar2 default null,
    p_xml                     in varchar2 default null,
    p_use_xml                 in varchar2 default null,
    p_async                   in varchar2 default null,
    p_async_time              in number default null,
    p_omit_label_interval     in number default null,
    p_show_dial_tick          in varchar2 default null,
    p_show_dial_tick_label    in varchar2 default null,
    p_dial_tick_spacing       in number default null
    );

procedure fetch_chart_series_attr (
    p_series_id           in number,
    p_chart_id            out number,
    p_series_name         out varchar2,
    p_series_seq          out number,
    p_query               out varchar2,
    p_query_type          out varchar2,
    p_query_parse_opt     out varchar2,
    p_query_max_rows      out number,
    p_query_no_data_found out varchar2
    );

procedure save_chart_series_attr (
    p_chart_id            in number,
    p_series_id           in number default null,
    p_series_name         in varchar2 default null,
    p_series_seq          in number default null,
    p_query               in varchar2 default null,
    p_query_type          in varchar2 default null,
    p_query_parse_opt     in varchar2 default null,
    p_query_max_rows      in number default null,
    p_query_no_data_found in varchar2 default null
    );
end wwv_flow_flash_chart_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_FLASH_CHART5_UTIL" as
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Flash Chart 5 utility package.
--
--    SECURITY
--
--    NOTES
--
--

function is_valid_flash_chart_query (
    p_flow_id           in number,
    p_security_group_id in number,
    p_chart_type        in varchar2,
    p_query             in varchar2,
    p_query_type        in varchar2 default 'SQL_QUERY',
    p_owner             in varchar2 default null
    ) return varchar2;

function get_flash_filename (
  p_flash_chart_type in varchar2
) return varchar2;

function get_files(
  p_id in number
) return varchar2;

procedure show_map_tree(
    p_folder_name                in varchar2,
    p_wizard_type                in varchar2
);

procedure show_map_tree2(
    p_folder_name                in varchar2,
    p_wizard_type                in varchar2
);

procedure fetch_chart_attr (
    p_flow_id                    in number,
    p_region_id                  in number,
    p_chart_id                   out number,
    p_chart_title                out varchar2,
    p_chart_type                 out varchar2,
    p_chart_rendering            out varchar2,
    p_chart_width                out number,
    p_chart_height               out number,
    p_chart_margin_top           out number,
    p_chart_margin_bottom        out number,
    p_chart_margin_left          out number,
    p_chart_margin_right         out number,
    p_chart_gradient_angle       out number,
    p_animation                  out varchar2,
    --
    p_color_scheme               out varchar2,
    p_color_scheme_level         out varchar2,
    p_hatch_pattern              out varchar2,
    p_custom_colors              out varchar2,
    p_series_style               out varchar2,
    p_bgtype                     out varchar2,
    p_bgcolor1                   out varchar2,
    p_bgcolor2                   out varchar2,
    --
    p_show_hints                 out varchar2,
    p_show_names                 out varchar2,
    p_show_values                out varchar2,
    p_show_legend                out varchar2,
    p_show_grid                  out varchar2,
    p_show_scrollbar             out varchar2,
    p_show_marker                out varchar2,
    p_show_dial_majorticks       out varchar2,
    p_show_dial_minorticks       out varchar2,
    p_show_dial_tick_labels      out varchar2,
    p_label_position             out varchar2,
    p_pie_decimal_places         out number,
    --
    p_multi_y_axes               out varchar2,
    p_multi_x_axes               out varchar2,
    p_invert_x_axis              out varchar2,
    p_invert_y_axis              out varchar2,
    p_overlay                    out varchar2,
    p_sort_overlay               out varchar2,
    --
    p_gauge_frame                out varchar2,
    p_gauge_pointer              out varchar2,
    p_gauge_major_interval       out number,
    p_gauge_minor_interval       out number,
    p_gauge_start_angle          out number,
    p_gauge_sweep_angle          out number,
    p_gauge_label_rotation       out number,
    p_gauge_label_align          out varchar2,
    p_invert_scale               out varchar2,
    --
    p_gantt_navigate             out varchar2,
    p_gantt_actual_start         out varchar2,
    p_gantt_actual_end           out varchar2,
    p_gantt_actual_shape         out varchar2,
    p_gantt_progress_start       out varchar2,
    p_gantt_progress_end         out varchar2,
    p_gantt_progress_shape       out varchar2,
    p_gantt_baseline_start       out varchar2,
    p_gantt_baseline_end         out varchar2,
    p_gantt_baseline_shape       out varchar2,
    p_gantt_line_height          out number,
    p_gantt_item_height          out number,
    p_gantt_item_padding         out number,
    p_show_datagrid              out varchar2,
    p_show_datagrid_id           out varchar2,
    p_show_datagrid_name         out varchar2,
    p_show_datagrid_start        out varchar2,
    p_show_datagrid_end          out varchar2,
    p_gantt_date_format          out varchar2,
    p_gantt_start_date           out date,
    p_gantt_start_date_item      out varchar2,
    p_gantt_end_date             out date,
    p_gantt_end_date_item        out varchar2,
    --
    p_map_source                 out varchar2,
    p_map_projection             out varchar2,
    p_map_label_mode             out varchar2,
    p_map_region_column          out varchar2,
    --
    p_group_series               out varchar2,
    p_legend_title               out varchar2,
    p_legend_layout              out varchar2,
    p_legend_background          out varchar2,
    p_x_axis_title               out varchar2,
    p_x_axis_min                 out number,
    p_x_axis_max                 out number,
    p_x_axis_title_font_face     out varchar2,
    p_x_axis_title_font_size     out number,
    p_x_axis_title_font_color    out varchar2,
    p_x_axis_label_font_face     out varchar2,
    p_x_axis_label_font_size     out number,
    p_x_axis_label_font_color    out varchar2,
    p_x_axis_decimal_place       out varchar2,
    p_x_axis_prefix              out varchar2,
    p_x_axis_postfix             out varchar2,
    p_x_axis_label_rotation      out number,
    p_x_axis_major_interval      out number,
    p_x_axis_minor_interval      out number,
    p_y_axis_title               out varchar2,
    p_y_axis_min                 out number,
    p_y_axis_max                 out number,
    p_y_axis_label_font_face     out varchar2,
    p_y_axis_label_font_size     out number,
    p_y_axis_label_font_color    out varchar2,
    p_y_axis_label_rotation      out number,
    p_y_axis_title_font_face     out varchar2,
    p_y_axis_title_font_size     out number,
    p_y_axis_title_font_color    out varchar2,
    p_y_axis_decimal_place       out varchar2,
    p_y_axis_prefix              out varchar2,
    p_y_axis_postfix             out varchar2,
    p_y_axis_major_interval      out number,
    p_y_axis_minor_interval      out number,
    p_values_font_face           out varchar2,
    p_values_font_size           out number,
    p_values_font_color          out varchar2,
    p_values_rotation            out number,
    p_values_prefix              out varchar2,
    p_values_postfix             out varchar2,
    p_pie_prefix                 out varchar2,
    p_pie_postfix                out varchar2,
    --
    p_hints_font_face            out varchar2,
    p_hints_font_size            out number,
    p_hints_font_color           out varchar2,
    p_legend_font_face           out varchar2,
    p_legend_font_size           out number,
    p_legend_font_color          out varchar2,
    p_chart_title_font_face      out varchar2,
    p_chart_title_font_size      out varchar2,
    p_chart_title_font_color     out varchar2,
    p_gauge_label_font_face      out varchar2,
    p_gauge_label_font_size      out varchar2,
    p_gauge_label_font_color     out varchar2,
    p_xml                        out varchar2,
    p_use_xml                    out varchar2,
    p_async                      out varchar2,
    p_async_time                 out number
    );

procedure save_chart_attr (
    p_flow_id                  in number,
    p_region_id                in number,
    p_chart_id                 in number,
    p_chart_title              in varchar2 default null,
    p_chart_type               in varchar2 default null,
    p_chart_rendering          in varchar2 default null,
    p_chart_width              in number default null,
    p_chart_height             in number default null,
    p_chart_margin_top         in number default null,
    p_chart_margin_bottom      in number default null,
    p_chart_margin_left        in number default null,
    p_chart_margin_right       in number default null,
    p_chart_gradient_angle     in number default null,
    p_animation                in varchar2 default null,
    p_color_scheme             in varchar2 default null,
    p_color_scheme_level       in varchar2 default null,
    p_hatch_pattern            in varchar2 default null,
    p_custom_colors            in varchar2 default null,
    p_series_style             in varchar2 default null,
    p_bgtype                   in varchar2 default null,
    p_bgcolor1                 in varchar2 default null,
    p_bgcolor2                 in varchar2 default null,
    p_show_hints               in varchar2 default null,
    p_show_names               in varchar2 default null,
    p_show_values              in varchar2 default null,
    p_show_legend              in varchar2 default null,
    p_show_grid                in varchar2 default null,
    p_show_scrollbar           in varchar2 default null,
    p_show_marker              in varchar2 default null,
    p_show_dial_majorticks     in varchar2 default null,
    p_show_dial_minorticks     in varchar2 default null,
    p_show_dial_tick_labels    in varchar2 default null,
    p_label_position           in varchar2 default null,
    p_pie_decimal_places       in number   default null,
    --
    p_multi_y_axes             in varchar2 default null,
    p_multi_x_axes             in varchar2 default null,
    p_invert_x_axis            in varchar2 default null,
    p_invert_y_axis            in varchar2 default null,
    p_overlay                  in varchar2 default null,
    p_sort_overlay             in varchar2 default null,
    --
    p_gauge_frame              in varchar2 default null,
    p_gauge_pointer            in varchar2 default null,
    p_gauge_major_interval     in number default null,
    p_gauge_minor_interval     in number default null,
    p_gauge_start_angle        in number default null,
    p_gauge_sweep_angle        in number default null,
    p_gauge_label_rotation     in number default null,
    p_gauge_label_align        in varchar2 default null,
    p_invert_scale             in varchar2 default null,
    --
    p_gantt_navigate           in varchar2 default null,
    p_gantt_actual_start       in varchar2 default null,
    p_gantt_actual_end         in varchar2 default null,
    p_gantt_actual_shape       in varchar2 default null,
    p_gantt_progress_start     in varchar2 default null,
    p_gantt_progress_end       in varchar2 default null,
    p_gantt_progress_shape     in varchar2 default null,
    p_gantt_baseline_start     in varchar2 default null,
    p_gantt_baseline_end       in varchar2 default null,
    p_gantt_baseline_shape     in varchar2 default null,
    p_gantt_line_height        in number default null,
    p_gantt_item_height        in number default null,
    p_gantt_item_padding       in number default null,
    p_show_datagrid            in varchar2 default null,
    p_show_datagrid_id         in varchar2 default null,
    p_show_datagrid_name       in varchar2 default null,
    p_show_datagrid_start      in varchar2 default null,
    p_show_datagrid_end        in varchar2 default null,
    p_gantt_date_format        in varchar2 default null,
    p_gantt_start_date         in date default null,
    p_gantt_start_date_item    in varchar2 default null,
    p_gantt_end_date           in date default null,
    p_gantt_end_date_item      in varchar2 default null,
    --
    p_map_source               in varchar2 default null,
    p_map_projection           in varchar2 default null,
    p_map_label_mode           in varchar2 default null,
    p_map_region_column        in varchar2 default null,
    --
    p_group_series             in varchar2 default null,
    p_legend_title             in varchar2 default null,
    p_legend_layout            in varchar2 default null,
    p_legend_background        in varchar2 default null,
    p_enable_3d_mode           in varchar2 default null,
    p_x_axis_title             in varchar2 default null,
    p_x_axis_min               in number default null,
    p_x_axis_max               in number default null,
    p_x_axis_scroll_start      in varchar2 default null,
    p_x_axis_scroll_end        in varchar2 default null,
    p_x_axis_scroll_range      in varchar2 default null,
    p_x_axis_scroll_range_unit in varchar2 default null,
    p_x_axis_label_font_face   in varchar2 default null,
    p_x_axis_label_font_size   in number default null,
    p_x_axis_label_font_color  in varchar2 default null,
    p_x_axis_label_rotation    in number default null,
    p_x_axis_title_font_face   in varchar2 default null,
    p_x_axis_title_font_size   in number default null,
    p_x_axis_title_font_color  in varchar2 default null,
    p_x_axis_decimal_place     in varchar2 default null,
    p_x_axis_prefix            in varchar2 default null,
    p_x_axis_postfix           in varchar2 default null,
    p_x_axis_major_interval    in number default null,
    p_x_axis_minor_interval    in number default null,
    p_y_axis_title             in varchar2 default null,
    p_y_axis_min               in number default null,
    p_y_axis_max               in number default null,
    p_y_axis_scroll_start      in varchar2 default null,
    p_y_axis_scroll_end        in varchar2 default null,
    p_y_axis_scroll_range      in varchar2 default null,
    p_y_axis_scroll_range_unit in varchar2 default null,
    p_y_axis_label_font_face   in varchar2 default null,
    p_y_axis_label_font_size   in number default null,
    p_y_axis_label_font_color  in varchar2 default null,
    p_y_axis_label_rotation    in number default null,
    p_y_axis_title_font_face   in varchar2 default null,
    p_y_axis_title_font_size   in number default null,
    p_y_axis_title_font_color  in varchar2 default null,
    p_y_axis_decimal_place     in varchar2 default null,
    p_y_axis_prefix            in varchar2 default null,
    p_y_axis_postfix           in varchar2 default null,
    p_y_axis_major_interval    in number default null,
    p_y_axis_minor_interval    in number default null,
    p_values_font_face         in varchar2 default null,
    p_values_font_size         in number default null,
    p_values_font_color        in varchar2 default null,
    p_values_rotation          in number default null,
    p_values_prefix            in varchar2 default null,
    p_values_postfix           in varchar2 default null,
    p_pie_prefix               in varchar2 default null,
    p_pie_postfix              in varchar2 default null,
    p_hints_font_face          in varchar2 default null,
    p_hints_font_size          in number default null,
    p_hints_font_color         in varchar2 default null,
    p_legend_font_face         in varchar2 default null,
    p_legend_font_size         in number default null,
    p_legend_font_color        in varchar2 default null,
    p_chart_title_font_face    in varchar2 default null,
    p_chart_title_font_size    in varchar2 default null,
    p_chart_title_font_color   in varchar2 default null,
    p_gauge_label_font_face    in varchar2 default null,
    p_gauge_label_font_size    in varchar2 default null,
    p_gauge_label_font_color   in varchar2 default null,
    p_xml                      in varchar2 default null,
    p_use_xml                  in varchar2 default null,
    p_async                    in varchar2 default null,
    p_async_time               in number default null
    );

procedure fetch_map_attr (
    p_flow_id                    in number,
    p_region_id                  in number,
    p_chart_id                   out number,
    p_chart_title                out varchar2,
    p_chart_rendering            out varchar2,
    p_chart_type                 out varchar2,
    p_chart_width                out number,
    p_chart_height               out number,
    p_chart_margin_top           out number,
    p_chart_margin_bottom        out number,
    p_chart_margin_left          out number,
    p_chart_margin_right         out number,
    p_chart_gradient_angle       out number,
    p_animation                  out varchar2,
    --
    p_color_scheme               out varchar2,
    p_color_scheme_level         out varchar2,
    p_hatch_pattern              out varchar2,
    p_custom_colors              out varchar2,
    p_set_undef_colors           out varchar2,
    p_undef_color_scheme         out varchar2,
    p_undef_hatch_pattern        out varchar2,
    p_undef_custom_colors        out varchar2,
    p_bgtype                     out varchar2,
    p_bgcolor1                   out varchar2,
    p_bgcolor2                   out varchar2,
    p_grid_bgtype                out varchar2,
    p_grid_bgcolor1              out varchar2,
    p_grid_bgcolor2              out varchar2,
    p_grid_gradient_angle        out varchar2,
    --
    p_show_hints                 out varchar2,
    p_show_names                 out varchar2,
    p_show_values                out varchar2,
    p_show_legend                out varchar2,
    p_show_grid                  out varchar2,
    p_show_zoom                  out varchar2,
    p_show_nav                   out varchar2,
    p_show_marker                out varchar2,
    --
    p_map_source                 out varchar2,
    p_map_projection             out varchar2,
    p_map_label_mode             out varchar2,
    p_map_region_column          out varchar2,
    p_map_centroid_x             out varchar2,
    p_map_centroid_y             out varchar2,
    p_map_centre                 out varchar2,
    --
    p_group_series               out varchar2,
    p_legend_title               out varchar2,
    p_legend_layout              out varchar2,
    p_legend_background          out varchar2,
    p_legend_items               out varchar2,
    p_values_font_face           out varchar2,
    p_values_font_size           out number,
    p_values_font_color          out varchar2,
    p_values_rotation            out number,
    p_values_prefix              out varchar2,
    p_values_postfix             out varchar2,
    --
    p_hints_font_face            out varchar2,
    p_hints_font_size            out number,
    p_hints_font_color           out varchar2,
    p_legend_font_face           out varchar2,
    p_legend_font_size           out number,
    p_legend_font_color          out varchar2,
    p_chart_title_font_face      out varchar2,
    p_chart_title_font_size      out varchar2,
    p_chart_title_font_color     out varchar2,
    p_xml                        out varchar2,
    p_use_xml                    out varchar2,
    p_async                      out varchar2,
    p_async_time                 out number
    );

procedure save_map_attr (
    p_flow_id                  in number,
    p_region_id                in number,
    p_chart_id                 in number,
    p_chart_title              in varchar2 default null,
    p_chart_rendering          in varchar2 default null,
    p_chart_type               in varchar2 default null,
    p_chart_width              in number default null,
    p_chart_height             in number default null,
    p_chart_margin_top         in number default null,
    p_chart_margin_bottom      in number default null,
    p_chart_margin_left        in number default null,
    p_chart_margin_right       in number default null,
    p_chart_gradient_angle     in number default null,
    p_animation                in varchar2 default null,
    --
    p_color_scheme             in varchar2 default null,
    p_color_scheme_level       in varchar2 default null,
    p_hatch_pattern            in varchar2 default null,
    p_custom_colors            in varchar2 default null,
    p_set_undef_colors         in varchar2 default null,
    p_undef_color_scheme       in varchar2 default null,
    p_undef_hatch_pattern      in varchar2 default null,
    p_undef_custom_colors      in varchar2 default null,
    p_bgtype                   in varchar2 default null,
    p_bgcolor1                 in varchar2 default null,
    p_bgcolor2                 in varchar2 default null,
    p_grid_bgtype              in varchar2 default null,
    p_grid_bgcolor1            in varchar2 default null,
    p_grid_bgcolor2            in varchar2 default null,
    p_grid_gradient_angle      in varchar2 default null,
    --
    p_show_hints               in varchar2 default null,
    p_show_names               in varchar2 default null,
    p_show_values              in varchar2 default null,
    p_show_legend              in varchar2 default null,
    p_show_grid                in varchar2 default null,
    p_show_zoom                in varchar2 default null,
    p_show_nav                 in varchar2 default null,
    p_show_marker              in varchar2 default null,
    --
    p_map_source               in varchar2 default null,
    p_map_projection           in varchar2 default null,
    p_map_label_mode           in varchar2 default null,
    p_map_region_column        in varchar2 default null,
    p_map_centroid_x           in varchar2 default null,
    p_map_centroid_y           in varchar2 default null,
    p_map_centre               in varchar2 default null,
    --
    p_group_series             in varchar2 default null,
    p_legend_title             in varchar2 default null,
    p_legend_layout            in varchar2 default null,
    p_legend_background        in varchar2 default null,
    p_legend_items             in varchar2 default null,
    p_enable_3d_mode           in varchar2 default null,
    p_values_font_face         in varchar2 default null,
    p_values_font_size         in number default null,
    p_values_font_color        in varchar2 default null,
    p_values_rotation          in number default null,
    p_values_prefix            in varchar2 default null,
    p_values_postfix           in varchar2 default null,
    p_hints_font_face          in varchar2 default null,
    p_hints_font_size          in number default null,
    p_hints_font_color         in varchar2 default null,
    p_legend_font_face         in varchar2 default null,
    p_legend_font_size         in number default null,
    p_legend_font_color        in varchar2 default null,
    p_chart_title_font_face    in varchar2 default null,
    p_chart_title_font_size    in varchar2 default null,
    p_chart_title_font_color   in varchar2 default null,
    p_xml                      in varchar2 default null,
    p_use_xml                  in varchar2 default null,
    p_async                    in varchar2 default null,
    p_async_time               in number default null
    );

procedure fetch_chart_series_attr (
    p_series_id               in number,
    p_chart_id                out number,
    p_series_name             out varchar2,
    p_series_type             out varchar2,
    p_series_required_role    out varchar2,
    p_required_patch          out number,
    p_series_seq              out number,
    p_query                   out varchar2,
    p_query_type              out varchar2,
    p_query_parse_opt         out varchar2,
    p_ajax_items_to_submit    out varchar2,
    p_query_max_rows          out number,
    p_query_no_data_found     out varchar2,
    p_show_action_link        out varchar2,
    p_action_link             out varchar2,
    p_checksum_link           out varchar2,
    p_display_when_cond_type  out varchar2,
    p_display_when_condition  out varchar2,
    p_display_when_condition2 out varchar2
    );

 procedure save_chart_series_attr (
    p_chart_id                in number,
    p_series_id               in number default null,
    p_series_name             in varchar2 default null,
    p_series_type             in varchar2 default null,
    p_series_required_role    in varchar2 default null,
    p_required_patch          in number default null,
    p_series_seq              in number default null,
    p_query                   in varchar2 default null,
    p_query_type              in varchar2 default null,
    p_query_parse_opt         in varchar2 default null,
    p_ajax_items_to_submit    in varchar2 default null,
    p_query_max_rows          in number default null,
    p_query_no_data_found     in varchar2 default null,
    p_show_action_link        in varchar2 default 'N',
    p_checksum_link           in varchar2 default null,
    p_display_when_cond_type  in varchar2 default null,
    p_display_when_condition  in varchar2 default null,
    p_display_when_condition2 in varchar2 default null
    );
end wwv_flow_flash_chart5_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_INSTANCE_ADMIN" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2007. All Rights Reserved.
--
--    NAME
--      wwv_flow_instance_admin.sql
--
--    DESCRIPTION
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    SCRIPT ARGUMENTS
--      None
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED    (MM/DD/YYYY)
--      jstraub    08/10/2007 - Created
--      jstraub    09/18/2007 - Added grant to APEX_ADMINISTRATOR_ROLE
--      jstraub    10/30/2007 - Added remove_workspace
--      jstraub    11/08/2007 - Added add_workspace
--      jstraub    01/23/2009 - Added remove_saved_reports
--      cbcho      01/05/2010 - Added remove_saved_report to remove specific saved ir report
--      jkallman   05/13/2010 - Added add_authorized_url, remove_authorized_url, get_authorized_urls (Bug 9708943)
--      jstraub    04/14/2011 - Added remove_application
--      pawolf     09/05/2011 - Added new parameter p_rm_consumer_group and p_source_identifier to add_workspace (Bug 12944223)
--      cneumuel   10/21/2011 - In add_workspace: added p_group_name, p_host_prefix (bug #13101596)
--      cneumuel   11/09/2011 - In add_workspace: renamed p_group_name to p_cloud_group_name, added p_cloud_service_name
--      jstraub    12/01/2011 - Added truncate_log
--      jstraub    12/14/2011 - Added archive_workspace, purge_archives, purge_archive_versions
--      jkallman   02/01/2012 - Added enable_workspace, disable_workspace
--      jstraub    02/09/2012 - Added p_apps_only parameter to archive_workspace
--      jkallman   04/09/2012 - Added set_rm_consumer_group (Feature# 757)
--      cneumuel   04/30/2012 - Added reserve_workspace_app_ids, free_workspace_app_ids (bug#14008101)
--      jkallman   06/06/2012 - Added set_log_switch_interval
--      cneumuel   06/11/2012 - Added documentation for app id range procedures (feature #923)
--      cneumuel   06/14/2012 - Added LOGIN_THROTTLE_METHODS (feature #899)
--      cneumuel   06/18/2012 - Added INBOUND_PROXIES (feature #899)
--      cbcho      07/11/2012 - Added remove_subscription (feature #763)
--      jkallman   11/29/2012 - Added option of 'O' for application activity logging (Bug 15918165)
--      cneumuel   12/04/2012 - Fixed typo in doc of WORKSPACE_PROVISION_DEMO_OBJECTS, WORKSPACE_WEBSHEET_OBJECTS
--      cneumuel   12/05/2012 - Documented TRACING_ENABLED instance parameter (feature #994)
--      jkallman   12/07/2012 - Documented EMAIL_ATTACHMENT_MAX_SIZE_MB (Bug 15972758)
--      jkallman   04/12/2013 - Added set_workspace_parameter (Bug 15893138)
--
--------------------------------------------------------------------------------

--##############################################################################
--#
--# I N S T A N C E   P A R A M E T E R S
--#
--##############################################################################

-- Parameter Name                    Description
-- --------------------------------- --------------------------------------------------------------------------------------------------
-- ACCOUNT_LIFETIME_DAYS             The maximum number of days an end-user account password may be used before the account is expired.
-- ALLOW_DB_MONITOR                  If set to Y, the default, database monitoring is enabled. If set to N, it is disabled.
-- ALLOW_PUBLIC_FILE_UPLOAD          If set to Y, file uploads are allowed without user authentication. If set to N, the default, they
--                                   are not allowed.
-- ALLOW_REST                        If set to Y, the default, developers are allowed to expose report regions as RESTful services. If
--                                   set to N, the are not allowed.
-- APPLICATION_ACTIVITY_LOGGING      Controls instance wide setting of application activity log ([A]lways, [N]ever, [U]se application
--                                   settings,[O]ff for New Applications)
-- APPLICATION_ID_MIN                The smallest possible ID for a websheet or database application
-- APPLICATION_ID_MAX                The largest possible ID for a websheet or database application
-- AUTOEXTEND_TABLESPACES            If set to Y, the default, provisioned tablespaces will autoextend up to a maximum size. If set to
--                                   N tablespaces will not autoextend.
-- DELETE_UPLOADED_FILES_AFTER_DAYS  Uploaded files like application export files, websheet export files, spreadsheet data load files
--                                   will be automatically deleted after this number of days. Default is 14.
-- DISABLE_ADMIN_LOGIN               If set to Y, administration services are disabled. If set to N, the default, they are not
--                                   disabled.
-- DISABLE_WORKSPACE_LOGIN           If set to Y, the workspace login is disabled. If set to N, the default, the login is not disabled.
-- DISABLE_WS_PROV                   If set to Y, the workspace creation is disabled for requests sent out via e-mail notification. If
--                                   set to N, the default, they are not disabled.
-- EMAIL_ATTACHMENT_MAX_SIZE_MB      Maximum size, in megabytes, of a single email attachment sent via APEX_MAIL.
-- ENABLE_TRANSACTIONAL_SQL          If set to Y, the default, transactional SQL commands are enabled on this instance. If set to N,
--                                   they are not enabled.
-- EXPIRE_FIND_USER_ACCOUNTS         If set to Y, expiration of APEX accounts is enabled. If set to N, they are not enabled.
-- INBOUND_PROXIES                   Comma-separated list of IP addresses for proxy servers through which requests come in.
-- LOGIN_THROTTLE_DELAY              The flag which determines the time increase in seconds after failed logins
-- LOGIN_THROTTLE_METHODS            The methods to count failed logins. Colon-separated list of USERNAME_IP, USERNAME, IP
-- MAX_SESSION_IDLE_SEC              The number of seconds an internal application may be idle.
-- MAX_SESSION_LENGTH_SEC            The number of seconds an internal application session may exist.
-- PASSWORD_ALPHA_CHARACTERS         The alphabetic characters used for password complexity rules. Default list of alphabetic characters
--                                   include the following:
--                                   abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
-- PASSWORD_HISTORY_DAYS             Defines the maximum number of days a developer or administrator account password may be used before
--                                   the account expires. The default value is 45 days.
-- PASSWORD_PUNCTUATION_CHARACTERS   The punctuation characters used for password complexity rules. Default list of punctuation
--                                   characters include the following:
--                                   !"#$%&()``*+,-/:;<=>?_
-- PLSQL_EDITING                     If set to Y, the default, the SQL Workshop Object Browser is enabled to allow users to edit and
--                                   compile PL/SQL. If set to N, users are not allowed.
-- PRINT_BIB_LICENSED                Specify either standard support or advanced support. Advanced support requires an Oracle BI Publisher
--                                   license. Valid values include:
--                                   * STANDARD
--                                   * ADVANCED
-- PRINT_SVR_PROTOCOL                Valid values include:
--                                   * http
--                                   * https
-- PRINT_SVR_HOST                    Specifies the host address of the print server converting engine, for example, localhost. Enter the
--                                   appropriate host address if the print server is installed at another location.
-- PRINT_SVR_PORT                    Defines the port of the print server engine, for example 8888. Value must be a positive integer.
-- PRINT_SVR_SCRIPT                  Defines the script that is the print server engine, for example:
--                                   /xmlpserver/convert
-- REQUIRE_HTTPS                     Set to Y to allow authentication pages within the Application Express development and administration
--                                   applications to be used only when the protocol is HTTPS. Select N to allow these application pages to
--                                   be used when the protocol is either HTTP or HTTPS.
-- REQUIRE_VERIFICATION_CODE         If set to Y, the Verification Code is displayed and is required for someone to request a new
--                                   workspace. If set to N, the default, the Verification Code is not required.
-- REQ_NEW_SCHEMA                    If set to Y, the option for new schema for new workspace requests is enabled. If set to N, the
--                                   default, the option is disabled.
-- RESTFULL_SERVICES_ENABLED         If set to Y, the default, RESTful services development is enabled. If set to N, RESTful services
--                                   are not enabled.
-- SERVICE_REQUESTS_ENABLED          If set to Y, the default, workspace service requests for schemas, storage, and termination is
--                                   enabled. If set to N, these requests are disabled.
-- SERVICE_REQUEST_FLOW              Determines default provisioning mode. Default is MANUAL.
-- SMTP_FROM                         Defines the "from" address for administrative tasks that generate email, such as approving a
--                                   provision request or resetting a password.  Enter a valid email address, for example:
--                                   someone@somewhere.com
-- SMTP_HOST_ADDRESS                 Defines the server address of the SMTP server. If you are using another server as an SMTP relay,
--                                   change this parameter to that server's address.
--                                   Default setting: localhost
-- SMTP_HOST_PORT                    Defines the port the SMTP server listens to for mail requests.
--                                   Default setting: 25
-- SMTP_PASSWORD                     Defines the password APEX takes to authenticate itself against the SMTP server, in conjunction
--                                   with the parameter SMTP_USERNAME.
-- SMTP_TLS_MODE                     Defines whether or not APEX opens an encrypted connection to the SMTP server. Encryption is only
--                                   supported on database versions 11.2.0.2 and later. On earlier database versions, the connection
--                                   is not encrypted.
--                                   If set to N, the connection is unencrypted (default).
--                                   If set to Y, the connection is encrypted before data is sent.
--                                   If STARTTLS, Apex sends the SMTP commands EHLO <SMTP_HOST_ADDRESS> and STARTTLS before encrypting
--                                   the connection.
-- SMTP_USERNAME                     Defines the username APEX takes to authenticate itself against the SMTP server (default is null).
--                                   Starting with database version 11.2.0.2, APEX uses UTL_MAIL's AUTH procedure for authentication.
--                                   This procedure negotiates an authentication mode with the SMTP server. With earlier database versions,
--                                   the authentication mode is always AUTH LOGIN. If SMTP_USERNAME is null, no authentication is used.
-- SQL_SCRIPT_MAX_OUTPUT_SIZE        The maximum allowable size for an individual script result. Default is 200000.
-- STRONG_SITE_ADMIN_PASSWORD        If set to Y, the default, the apex_admin password must conform to the default set of strong complexity
--                                   rules. If set to N, the password is not required to follow the strong complexity rules.
-- SYSTEM_HELP_URL                   Location of the help and documentation accessed from the Help link within the development environment.
--                                   Default is http://apex.oracle.com/doc41.
-- TRACING_ENABLED                   If set to Y (the default), an application with Debug enabled can also generate server-side db trace
--                                   files using "&p_trace=YES" on the URL. If set to N, the request to create a trace file will be ignored.
-- USERNAME_VALIDATION               The regular expression used to validate a username if the Builder authentication scheme is not APEX.
--                                   Default is as follows: ^[[:alnum:]._%-]+@[[:alnum:].-]+\.[[:alpha:]]{2,4}$
-- WALLET_PATH                       The path to the wallet on the file system, for example: file:/home/<username>/wallets
-- WALLET_PWD                        The password associated with the wallet.
-- WEBSHEET_SQL_ACCESS               If set to Y, the default, SQL tags and SQL reports are possible in Websheet applications. If set to
--                                   N, they are not possible.
-- WORKSPACE_EMAIL_MAXIMUM           Maximum number of emails allowed to be sent via APEX_MAIL per workspace in a 24 hour period. Default
--                                   is 1000.
-- WORKSPACE_MAX_OUTPUT_SIZE         The maximum space allocated for script results. Default is 2000000.
-- WORKSPACE_PROVISION_DEMO_OBJECTS  If set to Y, the default, demonstration applications and database objects are created in new workspaces.
--                                   If set to N, they are not created in the current workspace.
-- WORKSPACE_WEBSHEET_OBJECTS        If set to Y, the default, APEX Websheet database objects are created in new workspaces. If set to N,
--                                   they are not created in the current workspace.

--==============================================================================
procedure set_parameter(
    p_parameter           in varchar2,
    p_value               in varchar2 default 'N' );

--==============================================================================
function get_parameter(
    p_parameter           in varchar2 )
return varchar2;

--##############################################################################
--#
--# W O R K S P A C E   M A N A G E M E N T
--#
--##############################################################################

--==============================================================================
procedure add_workspace(
    p_workspace_id        in number   default null,
    p_workspace           in varchar2,
    p_source_identifier   in varchar2 default null,
    p_primary_schema      in varchar2,
    p_additional_schemas  in varchar2,
    p_rm_consumer_group   in varchar2 default null,
    p_cloud_group_name    in varchar2 default null,
    p_cloud_service_name  in varchar2 default null,
    p_host_prefix         in varchar2 default null );

--==============================================================================
procedure remove_workspace(
    p_workspace           in varchar2,
    p_drop_users          in varchar2 default 'N',
    p_drop_tablespaces    in varchar2 default 'N' );

--==============================================================================
procedure remove_application(
    p_application_id      in number );

--==============================================================================
function get_schemas(
    p_workspace           in varchar2 )
return varchar2;

--==============================================================================
procedure add_schema(
    p_workspace           in varchar2,
    p_schema              in varchar2 );

--==============================================================================
procedure remove_schema(
    p_workspace           in varchar2,
    p_schema              in varchar2 );

--==============================================================================
procedure set_workspace_consumer_group(
    p_workspace           in varchar2,
    p_rm_consumer_group   in varchar2 );

--==============================================================================
procedure set_workspace_parameter(
    p_workspace           in varchar2,
    p_parameter           in varchar2,
    p_value               in varchar2 );

--==============================================================================
procedure disable_workspace(
    p_workspace        in varchar2 default null );

--==============================================================================
procedure enable_workspace(
    p_workspace        in varchar2 default null );

--##############################################################################
--#
--# W O R K S P A C E   A R C H I V I N G
--#
--##############################################################################

--==============================================================================
procedure archive_workspace(
    p_workspace        in varchar2 default null,
    p_schema           in varchar2 default null,
    p_apps_only        in varchar2 default 'N');

procedure purge_archives(
    p_workspace        in varchar2 default null,
    p_schema           in varchar2 default null);

procedure purge_archive_versions(
    p_workspace                 in varchar2 default null,
    p_schema                    in varchar2 default null,
    p_max_versions_to_retain    in number);

--##############################################################################
--#
--# A P P L I C A T I O N   I D   R A N G E
--#
--##############################################################################

--==============================================================================
-- This procedure permanently reserves the IDs of websheet and database
-- applications in a given workspace. Even if the workspace and it's
-- applications get removed, developers can not create other applications with
-- one of these IDs.
--
-- Together with the parameters APPLICATION_ID_MIN and APPLICATION_ID_MAX, this
-- procedure can be used to support moving workspaces between Application
-- Express instances, without the risk of having duplicate application IDs.
--
-- ARGUMENTS
-- * p_workspace_id: The unique id of a workspace.
--
-- EXAMPLE
--   After setting up Application Express instance 1, ensure that
--   application IDs are between 100000 and 199999:
--
--   begin
--     apex_instance_admin.set_parameter('APPLICATION_ID_MIN', 100000);
--     apex_instance_admin.set_parameter('APPLICATION_ID_MAX', 199999);
--   end;
--
--   After setting up Application Express instance 2, ensure that
--   application IDs are between 200000 and 299999:
--
--   begin
--     apex_instance_admin.set_parameter('APPLICATION_ID_MIN', 200000);
--     apex_instance_admin.set_parameter('APPLICATION_ID_MAX', 299999);
--   end;
--
--   Later, the operations team decides that workspace MY_WORKSPACE with
--   ID 1234567890 should be moved from instance 1 to instance 2. The
--   required steps are:
--   1. Export the workspace, applications and data on instance 1 (not shown
--      here)
--   2. Ensure that no other application on instance 1 can reuse application
--      IDs of this workspace
--
--   begin
--     apex_instance_admin.reserve_workspace_app_ids(1234567890);
--   end;
--
--   3. Drop workspace, accompanying data and users on instance 1
--
--   begin
--     apex_instance_admin.remove_workspace('MY_WORKSPACE');
--   end;
--
--   4. Import the workspace, applications and data on instance 2 (not shown
--      here)
--==============================================================================
procedure reserve_workspace_app_ids (
    p_workspace_id in number );

--==============================================================================
-- This procedure removes the reservation of application IDs for a given
-- workspace id (see reserve_workspace_app_ids).
--
-- ARGUMENTS
-- * p_workspace_id: The unique id of a workspace.
--
-- remove the application id reservations for p_workspace_id
--==============================================================================
procedure free_workspace_app_ids (
    p_workspace_id in number );

--##############################################################################
--#
--# I N T E R A C T I V E   R E P O R T S
--#
--##############################################################################

--==============================================================================
procedure remove_saved_reports(
    p_application_id      in number default null );

--==============================================================================
procedure remove_saved_report(
    p_application_id      in number,
    p_report_id           in number);

--==============================================================================
procedure remove_subscription (
    p_subscription_id     in number);

--##############################################################################
--#
--# A U T H O R I Z E D   U R L S
--#
--##############################################################################

--==============================================================================
procedure add_authorized_url(
    p_url                 in varchar2,
    p_description         in varchar2 default null );

--==============================================================================
procedure remove_authorized_url(
    p_url                 in varchar2 );

--==============================================================================
function get_authorized_urls return wwv_flow_global.vc_arr2;

--##############################################################################
--#
--# L O G S
--#
--##############################################################################

--==============================================================================
procedure set_log_switch_interval(
   p_log_name              in varchar2,
   p_log_switch_after_days in number );

--==============================================================================
procedure truncate_log(
    p_log                 in varchar2 );

end wwv_flow_instance_admin;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GRID_LAYOUT"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_grid_layout.sql
--
--    DESCRIPTION
--      This package is responsible for handling grid layouts in the
--      runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    05/15/2012 - Created
--      pawolf    05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--      pawolf    05/24/2012 - Added p_grid_attributes to wwv_flow_grid_layout.init
--      pawolf    05/31/2012 - Continued work on grid layout (feature #936)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_grid_component is record (
    idx  binary_integer,
    name varchar2(255) );

type t_grid_components is table of t_grid_component index by pls_integer; -- index: seq increment

type t_column is record (
    no          pls_integer,
    column_span pls_integer,
    row_span    pls_integer,
    attributes  varchar2(255),
    components  t_grid_components,
    is_emitted  boolean      := false );

type t_columns is table of t_column  index by pls_integer; -- index: seq increment

type t_row is record (
    cols           t_columns,
    is_emitted     boolean     := false,
    next_column_no pls_integer := 1 );

type t_rows is table of t_row index by pls_integer; -- index: seq increment

type t_grid is record (
    max_columns          pls_integer,
    attributes           varchar2(255),
    rows                 t_rows,
    has_to_be_rendered   boolean     := null,
    is_emitted           boolean     := false );

type t_grids is table of t_grid index by pls_integer; -- index: seq increment

type t_iterator is record (
    component_idx         binary_integer,
    component_column_span pls_integer,
    is_finished           boolean        := true,
    -- internal info
    grids                 t_grids,
    grid_idx              pls_integer,
    grid_row_idx          pls_integer,
    grid_column_idx       pls_integer,
    grid_component_idx    pls_integer,
    grid_template         wwv_flow_template.t_grid_template );

type t_component is record (
    name              varchar2(255),
    type              varchar2(10),
    original_idx      binary_integer,
    item_type         wwv_flow_step_items.display_as%type,
    is_ok_to_display  boolean,
    is_new_grid       boolean,
    is_new_row        boolean,
    is_new_column     boolean,
    column_no         pls_integer,
    column_span       pls_integer,
    row_span          pls_integer,
    column_attributes varchar2(255) );

type t_components is table of t_component index by pls_integer;

--==============================================================================
-- Global constants
--==============================================================================
c_component_type_region    constant varchar2(10) := 'REGION';
c_component_type_page_item constant varchar2(10) := 'PAGE_ITEM';
c_component_type_label     constant varchar2(10) := 'LABEL';
c_component_type_button    constant varchar2(10) := 'BUTTON';

c_null_iterator t_iterator;
c_empty_vc_arr2 wwv_flow_global.vc_arr2;

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Parses the layout information of the passed components and calculates
-- the structure of the grids with it's rows and columns. This has to be the
-- first call before actually emitting the grid with emit_open or next_and_emit_close.
--
-- If the grid has completely been emitted, p_iterator.is_finished will be TRUE.
-- The next component which should be displayed is stored in p_iterator.component_idx
-- and is the array index which should be used to access the component in the
-- passed arrays.
--
-- declare
--     l_iterator wwv_flow_grid_layout.t_iterator;
-- begin
--     wwv_flow_grid_layout.init (
--         p_grid_template_id     => coalesce(wwv_flow.g_step_grid_template_id, wwv_flow.g_page_tmpl_grid_template_id),
--         p_is_always_rendered   => false,
--         p_emit_display_point   => p_process_point,
--         p_emit_parent_id       => null,
--         p_component_names      => wwv_flow.g_plug_name,
--         p_display_points       => wwv_flow.g_plug_display_point,
--         p_parent_ids           => wwv_flow.g_plug_parent_plug_id,
--         p_new_grids            => wwv_flow.g_plug_new_grid,
--         p_new_grid_rows        => wwv_flow.g_plug_new_grid_row,
--         p_new_grid_columns     => wwv_flow.g_plug_new_grid_column,
--         p_grid_display_columns => wwv_flow.g_plug_display_column,
--         p_grid_column_spans    => wwv_flow.g_plug_grid_column_span,
--         p_grid_column_attrs    => wwv_flow.g_plug_column_width,
--         p_iterator             => l_iterator );
--
--     while not l_iterator.is_finished
--     loop
--         if <<is ok to display>> then
--             wwv_flow_grid_layout.emit_open (
--                 p_iterator => l_iterator );
--
--             -- Show component
--             -- ... code ...
--         end if;
--
--         wwv_flow_grid_layout.next_and_emit_close (
--             p_iterator => l_iterator );
--     end loop;
-- end;
--
--==============================================================================
procedure init (
    p_grid_template          in            wwv_flow_template.t_grid_template,
    p_has_grid_support       in            boolean,
    p_max_fixed_grid_columns in            pls_integer,
    p_is_always_rendered     in            boolean,
    p_grid_attributes        in            varchar2,
    p_components             in            t_components,
    p_iterator               in out nocopy t_iterator );

--==============================================================================
-- Call this procedure if a component should be rendered. It will automatically
-- take care that a grid, grid row and grid column is emitted if necessary.
--==============================================================================
procedure emit_open (
    p_iterator in out nocopy t_iterator );

--==============================================================================
-- This procedure has always to be called in the while loop to close an open grid,
-- grid row or grid column. It will also return the next component in
-- p_iterator.component_idx or set p_iterator.is_finished = TRUE if all components
-- have been processed.
--==============================================================================
procedure next_and_emit_close (
    p_iterator in out nocopy t_iterator );
--
end wwv_flow_grid_layout;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PAGE_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_page_api.sql
--
--    DESCRIPTION
--      This package is the public API for handling pages.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    02/29/2012 - Created
--      pawolf    04/12/2012 - Added is_read_only
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================
c_ui_type_desktop    constant varchar2(10) := 'DESKTOP';
c_ui_type_smartphone constant varchar2(10) := 'SMARTPHONE';
c_ui_type_tablet     constant varchar2(10) := 'TABLET';

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns TRUE if the current page has been designed for Desktop browsers.
--==============================================================================
function is_desktop_ui return boolean;
--
--==============================================================================
-- Returns TRUE if the current page has been designed for smartphone devices
-- using jQuery Mobile.
--==============================================================================
function is_jqm_smartphone_ui return boolean;
--
--==============================================================================
-- Returns TRUE if the current page has been designed for tablet devices
-- using jQuery Mobile.
--==============================================================================
function is_jqm_tablet_ui return boolean;
--
--==============================================================================
-- Returns the UI type for which the current page has been designed for.
--==============================================================================
function get_ui_type return varchar2;

--==============================================================================
-- Returns TRUE if the current page is rendered read only and FALSE if not.
--==============================================================================
function is_read_only return boolean;
--
--==============================================================================
-- Purge the cache of the specified application, page and optional for
-- the specified user. If the user isn't specified, all cached versions of
-- that page are purged.
--==============================================================================
procedure purge_cache (
    p_application_id in number,
    p_page_id        in number,
    p_user_name      in varchar2 default null );
--
end wwv_flow_page_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PAGE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_page.sql
--
--    DESCRIPTION
--      This package is responsible for handling pages the
--      runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    02/29/2012 - Created
--      pawolf    03/20/2012 - Added trace information
--      pawolf    03/22/2012 - Added get_page_id
--      pawolf    03/29/2012 - Changed get_page_id to raise an error if the specified page doesn't exists
--      pawolf    04/10/2012 - Added read only on page and region level (feature# 570)
--      pawolf    04/11/2012 - Changed is_read_only handling and added reset
--      pawolf    04/08/2012 - Moved code from flow.plb to render a page
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the name of the UI type for which the current page has been designed
-- for.
--==============================================================================
function get_ui_type (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return varchar2;

--==============================================================================
-- Returns TRUE if the current page has been designed for Desktop browsers.
--==============================================================================
function is_desktop_ui (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;

--==============================================================================
-- Returns TRUE if the current page has been designed for
-- jQuery Mobile (Smartphone, Tablet or Phonegap) browsers.
--==============================================================================
function is_jqm_ui (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;

--==============================================================================
-- Returns TRUE if the current page has been designed for
-- jQuery Mobile Smartphones browsers.
--==============================================================================
function is_jqm_smartphone_ui (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;

--==============================================================================
-- Returns TRUE if the current page has been designed for
-- jQuery Mobile Tablet browsers.
--==============================================================================
function is_jqm_tablet_ui (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return boolean;

--==============================================================================
-- Returns the theme id which is used by the specified page.
--==============================================================================
function get_theme_id (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;

--==============================================================================
-- Returns the id of the page templates which should be used by the current page.
-- If the page itself doesn't have an assigned page template, the theme default
-- will be used.
--==============================================================================
function get_page_template_id (
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_page_id           in number default wwv_flow.g_flow_step_id,
    p_security_group_id in number default wwv_flow_security.g_curr_flow_security_group_id )
    return number;

--==============================================================================
-- Purge the cache of the specified application, page and optional for
-- the specified user. If the user isn't specified, all cached versions of
-- that page are purged.
--==============================================================================
procedure purge_cache (
    p_application_id in number,
    p_page_id        in number,
    p_user_name      in varchar2 default null );

--==============================================================================
-- Returns the id of the specified page alias. If the parameter p_page_id_or_alias
-- is a numeric value. The function also checks if the specified page exists.
--==============================================================================
function get_page_id (
    p_application_id   in number default wwv_flow_security.g_flow_id,
    p_page_id_or_alias in varchar2 )
    return number;

--==============================================================================
-- Returns TRUE if the current page should be rendered read only and FALSE if not.
--==============================================================================
function is_read_only return boolean;

--==============================================================================
-- Render the current page
--==============================================================================
procedure render;

--==============================================================================
-- Renders the error page with the specified values in p_error.
--==============================================================================
procedure render_error_page (
    p_error in wwv_flow_error_api.t_error );

--==============================================================================
-- Resets all global variables.
-- Note: Always call this procedure if the current page changes!
--==============================================================================
procedure reset;
--
end wwv_flow_page;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REGION_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_region_api.sql
--
--    DESCRIPTION
--      This package is the public API for handling regions.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    04/12/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns TRUE if the current region is rendered read only and FALSE if not.
-- If the function is called from a context where no region is currently
-- processed it will return NULL.
--==============================================================================
function is_read_only return boolean;

--==============================================================================
-- Purge the region cache of the specified application, page and region.
--
-- Parameters:
--   p_application_id Id of the application where the region caches should be purged.
--   p_page_id        Id of the page where the region caches should be purged.
--                    If no value is specified all regions of the specified application
--                    will be purged.
--   p_region_id      Id of a specific region on a page which should be purged.
--                    If no value is specified all regions of the specified page
--                    will be purged.
--==============================================================================
procedure purge_cache (
    p_application_id in number,
    p_page_id        in number default null,
    p_region_id      in number default null );

--
end wwv_flow_region_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REGION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_region.sql
--
--    DESCRIPTION
--      This package is responsible for handling regions in the
--      runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    04/12/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================
g_is_read_only boolean; -- initialized by plug.plb


--==============================================================================
-- Returns TRUE if the current region is rendered read only and FALSE if not.
-- If the function is called from a context where no region is currently
-- processed it will return NULL.
--==============================================================================
function is_read_only return boolean;

--==============================================================================
-- Purge the region cache of the specified application, page and region.
--
-- Parameters:
--   p_application_id Id of the application where the region caches should be purged.
--   p_page_id        Id of the page where the region caches should be purged.
--                    If no value is specified all regions of the specified application
--                    will be purged.
--   p_region_id      Id of a specific region on a page which should be purged.
--                    If no value is specified all regions of the specified page
--                    will be purged.
--==============================================================================
procedure purge_cache (
    p_application_id in number,
    p_page_id        in number default null,
    p_region_id      in number default null );

--==============================================================================
-- Resets all global variables.
-- Note: Always call this procedure if the current page/region changes!
--==============================================================================
procedure reset;

--
end wwv_flow_region;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CDN"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_cdn.sql
--
--    DESCRIPTION
--      This package is responsible for gettings files from a
--      content delivery networks in the runtime engine.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    04/05/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================
c_library_jquery        constant varchar2(20) := 'jquery';
c_library_jquery_ui     constant varchar2(20) := 'jquery-ui';
c_library_jquery_mobile constant varchar2(20) := 'jquery.mobile';

c_file_type_js          constant varchar2(3)  := 'js';
c_file_type_css         constant varchar2(3)  := 'css';

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the URL for a 3rd party library which is stored on a CDN.
-- If the application hasn't specified to use a CDN, the version which ships
-- with APEX will be returned.
-- p_library:   Use one of the c_library_* constants
-- p_file_name: If no value is provided the main js/css file will be returned
-- p_file_type: Use one of the c_file_type_* constants
-- p_directory: Directory where the file p_file_name is located
-- p_version:   If no value is provided the version required by APEX will be used
--
-- Examples:
--
--   get_url (
--     p_library   => wwv_flow_cdn.c_library_jquery,
--     p_file_type => wwv_flow_cdn.c_file_type_js )
--
--   get_url (
--     p_library   => wwv_flow_cdn.c_library_jquery_ui,
--     p_file_name => 'jquery.ui.draggable',
--     p_file_type => wwv_flow_cdn.c_file_type_js )
--
--   get_url (
--     p_library   => wwv_flow_cdn.c_library_jquery_ui,
--     p_file_name => 'jquery.ui.datepicker-' || wwv_flow.g_browser_language,
--     p_file_type => wwv_flow_cdn.c_file_type_js,
--     p_directory => 'i18n/oracle/' )
--
--==============================================================================
function get_url (
    p_library   in varchar2,
    p_file_name in varchar2 default null,
    p_file_type in varchar2,
    p_directory in varchar2 default null,
    p_version   in varchar2 default null )
    return varchar2;
--
end wwv_flow_cdn;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CSS" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_css.sql
--
--    DESCRIPTION
--      This package contains utility functions for adding CSS styles to the HTTP output.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      01/04/2010 - Created
--    pawolf      05/18/2010 - Bug# 9602440: Added caching for CSS code
--    pawolf      12/03/2010 - Changed APEX version identifier to _4_1
--    pawolf      04/05/2012 - Added support for content delivery networks (feature #819)
--    pawolf      05/03/2012 - Added p_media_query and p_ie_condition to add_file (feature 930)
--    pawolf      05/08/2012 - Added p_emit_immediately to different APIs
--    pawolf      06/03/2013 - Added reset
--
--------------------------------------------------------------------------------
--
--
--==============================================================================
-- This procedure adds the link tag to load a CSS library.
-- If a library has already been added, it will not be added a second time.
-- Parameter:
--   p_name:             has to be specified without .js
--   p_directory:        has to have a trailing slash
--   p_version:          version identifier which should be added to the library name (optional)
--   p_skip_extension:   if true the extension .css is NOT added (optional)
--   p_media_query:      value which should be set as media query (optional)
--   p_ie_condition:     condition which should be used as Internet Explorer condition (optional)
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--==============================================================================
procedure add_file (
    p_name             in varchar2,
    p_directory        in varchar2 default wwv_flow.g_image_prefix||'css/',
    p_version          in varchar2 default null,
    p_skip_extension   in boolean  default false,
    p_media_query      in varchar2 default null,
    p_ie_condition     in varchar2 default null,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- This procedure adds the link tag to load a 3rd party css file (supported
-- libraries: jQuery, jQueryUI, jQueryMobile) and will also take into account
-- the specified Content Delivery Network for the application.
--
-- If a library has already been added, it will not be added a second time.
--
-- Parameter:
--   p_library:          Use one of the c_library_* constants
--   p_file_name:        Has to be specified without version, .min and .css
--   p_directory:        Directory where the file p_file_name is located (optional)
--   p_version:          If no value is provided then the same version APEX ships
--                       will be used (optional)
--   p_media_query:      value which should be set as media query (optional)
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--
-- Examples:
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.accordion' )
--
--==============================================================================
procedure add_3rd_party_library_file (
    p_library          in varchar2,
    p_file_name        in varchar2,
    p_directory        in varchar2 default null,
    p_version          in varchar2 default null,
    p_media_query      in varchar2 default null,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- Adds the link tag to load a list of URLs specified in p_urls.
-- The URLs specified in p_urls can contain the placeholder #MIN# which will
-- get replaced by .min or an empty string depending if the page is viewed
-- in debug mode or not.
--
-- Parameter:
--   p_urls:             list of urls delimited by a new line
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--==============================================================================
procedure add_file_urls (
    p_urls             in varchar2,
    p_emit_immediately in boolean default false );
--
--==============================================================================
-- Adds a CSS style snippet which is included inline into the HTML output
-- eg. You can use this procedure to add new css style declarations.
--
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_style:            CSS style snippet. eg: #test { color:#fff }
--   p_key:              identifier for the style snippet. If specified and a style snippet with
--                       the same name has already been added the new style snippet will be ignored. (optional)
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--==============================================================================
procedure add (
    p_css              in varchar2,
    p_key              in varchar2 default null,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- Adds a CSS style snippet into an internal buffer which is emitted by
-- the call to emit later in the page rendering.
--
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_style:            CSS style snippet. eg: .test { color:#fff }
--   p_key:              identifier for the style snippet. If specified and a style snippet with
--                       the same name has already been added the new style snippet will be ignored.
--   p_type:             name of the style type. eg: INLINE, LINK
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--==============================================================================
procedure add (
    p_css              in varchar2,
    p_type             in varchar2,
    p_key              in varchar2 default null,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- Emits CSS style snippets which have been added to the internal buffer.
--==============================================================================
procedure emit;
--
--==============================================================================
-- Returns the standard CSS files of APEX. If wwv_flow.g_include_apex_css_js_yn
-- is set to no, nothing is returned
--==============================================================================
function get_standard_files return varchar2;
--
--==============================================================================
-- Saves the buffered CSS code in the page/region cache table wwv_flow_page_code_cache.
-- If p_region_id is specified, only the CSS code for that region is saved.
--==============================================================================
procedure save_in_cache (
    p_page_cache_id in number,
    p_region_id     in number default null );
--
--==============================================================================
-- Clears the buffered CSS code.
--==============================================================================
procedure reset;
--
end wwv_flow_css;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CSS_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_css_api.sql
--
--    DESCRIPTION
--      This package contains utility functions for adding CSS styles to the HTTP output.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      02/27/2012 - Created
--    pawolf      04/05/2012 - Added support for content delivery networks (feature #819)
--    pawolf      05/03/2012 - Added p_media_query and p_ie_condition to add_file (feature 930)
--
--------------------------------------------------------------------------------
--
--
--==============================================================================
-- Global constants
--==============================================================================
c_library_jquery        constant varchar2(20) := 'jquery';
c_library_jquery_ui     constant varchar2(20) := 'jquery-ui';
c_library_jquery_mobile constant varchar2(20) := 'jquery.mobile';
--
--
--==============================================================================
-- This procedure adds the link tag to load a CSS library.
-- If a library has already been added, it will not be added a second time.
-- Parameter:
--   p_name:           has to be specified without .js
--   p_directory:      has to have a trailing slash
--   p_version:        version identifier which should be added to the library name (optional)
--   p_skip_extension: if true the extension .css is NOT added (optional)
--   p_media_query:    value which should be set as media query (optional)
--   p_ie_condition:   condition which should be used as Internet Explorer condition (optional)
--==============================================================================
procedure add_file (
    p_name           in varchar2,
    p_directory      in varchar2 default wwv_flow.g_image_prefix||'css/',
    p_version        in varchar2 default null,
    p_skip_extension in boolean  default false,
    p_media_query    in varchar2 default null,
    p_ie_condition   in varchar2 default null );
--
--==============================================================================
-- This procedure adds the link tag to load a 3rd party css file (supported
-- libraries: jQuery, jQueryUI, jQueryMobile) and will also take into account
-- the specified Content Delivery Network for the application.
--
-- If a library has already been added, it will not be added a second time.
--
-- Parameter:
--   p_library:     Use one of the c_library_* constants
--   p_file_name:   Has to be specified without version, .min and .css
--   p_directory:   Directory where the file p_file_name is located (optional)
--   p_version:     If no value is provided then the same version APEX ships
--                  will be used (optional)
--   p_media_query: value which should be set as media query (optional)
--
-- Examples:
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.accordion' )
--
--==============================================================================
procedure add_3rd_party_library_file (
    p_library     in varchar2,
    p_file_name   in varchar2,
    p_directory   in varchar2 default null,
    p_version     in varchar2 default null,
    p_media_query in varchar2 default null );
--
--==============================================================================
-- Adds a CSS style snippet which is included inline into the HTML output
-- eg. You can use this procedure to add new css style declarations.
--
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_style: CSS style snippet. eg: #test { color:#fff }
--   p_key:   identifier for the style snippet. If specified and a style snippet with
--            the same name has already been added the new style snippet will be ignored.
--==============================================================================
procedure add (
    p_css in varchar2,
    p_key in varchar2 default null );
--
/*
 * Create a new css_repository entry, returns unique id for
 *  wwv_flow_css_repository table.
 */
function new_css_repository_record (
    p_name                  in out varchar2,
    p_varchar2_table            in sys.dbms_sql.varchar2_table,
    p_mimetype                  in varchar2,
    p_flow_id                   in number,
    p_notes                     in varchar2 )
    return number
    ;
--
-- F I L E S Y S T E M   I N T E G R A T I O N
--
/*
 * pass in the css id of the wwv_flow_css_repository record representing
 *  the css file you want to drop. If this css does not exist according to the
 *  wwv_flow_css_repository table, this will fail.
 */
--
-- remove by name
--
procedure remove_css (
    p_css_name in varchar2,
    p_flow_id  in number   default null );
--
end wwv_flow_css_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_JAVASCRIPT_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_javascript_api.sql
--
--    DESCRIPTION
--      This package contains utility functions for creating or interacting with javascript.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      02/27/2012 - Created
--    pawolf      04/05/2012 - Added support for content delivery networks (feature #819)
--    pawolf      05/03/2012 - Added p_ie_condition to add_library (feature 930)
--
--------------------------------------------------------------------------------
--
--
--==============================================================================
-- Global constants
--==============================================================================
c_library_jquery        constant varchar2(20) := 'jquery';
c_library_jquery_ui     constant varchar2(20) := 'jquery-ui';
c_library_jquery_mobile constant varchar2(20) := 'jquery.mobile';
--
--
--==============================================================================
-- Adds the script tag to load a javascript library.
-- If a library has already been added, it will not be added a second time.
-- Parameter:
--   p_name:           has to be specified without .js
--   p_directory:      has to have a trailing slash
--   p_version:        version identifier which should be added to the library name (optional)
--   p_check_to_add_minified:
--                     if true, the API will test if it is appropriate to add '.min' extension.
--                     this will be added on APEX Production instances, that are not running debug mode (optional)
--   p_skip_extension: if true the extension .js is NOT added (optional)
--   p_ie_condition:   condition which should be used as Internet Explorer condition (optional)
--   p_key:            is used to identify if the library has already been loaded (optional),
--                     if not specified the key will default to p_directory||p_name||p_version
--==============================================================================
procedure add_library (
    p_name                  in varchar2,
    p_directory             in varchar2,
    p_version               in varchar2 default null,
    p_check_to_add_minified in boolean  default false,
    p_skip_extension        in boolean  default false,
    p_ie_condition          in varchar2 default null,
    p_key                   in varchar2 default null );
--
--==============================================================================
-- Adds the script tag to load a 3rd party javascript library file (supported
-- libraries: jQuery, jQueryUI) and will also take into account the specified
-- Content Delivery Network for the application.
--
-- If a library has already been added, it will not be added a second time.
--
-- Parameter:
--   p_library:   Use one of the c_library_* constants
--   p_file_name: Has to be specified without version, .min and .js
--   p_directory: Directory where the file p_file_name is located (optional)
--   p_version:   If no value is provided then the same version APEX ships
--                will be used (optional)
--
-- Examples:
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.draggable' )
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.datepicker-' || wwv_flow.g_browser_language,
--     p_directory => 'i18n/oracle/' )
--
--==============================================================================
procedure add_3rd_party_library_file (
    p_library   in varchar2,
    p_file_name in varchar2,
    p_directory in varchar2 default null,
    p_version   in varchar2 default null );
--
--==============================================================================
-- Adds a javascript code snippets to the HTML output which is executed at the
-- onload event.
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_code: javascript code snippet. eg: $s('P1_TEST', 'abc');
--   p_key:  name of the key. eg: APEX_WIDGET
--==============================================================================
procedure add_onload_code (
    p_code in varchar2,
    p_key  in varchar2 default null );
--
--==============================================================================
-- Adds a code snippet which is included inline into the HTML output
-- eg. You can use this procedure to add new functions or global
--     variable declarations.
-- Note: if you want to execute code, you should use add_onload_code
--
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_code: javascript code snippet. eg: $s('P1_TEST', 123);
--   p_key:  identifier for the code snippet. If specified and a code snippet with
--           the same name has already been added the new code snippet will be ignored.
--==============================================================================
procedure add_inline_code (
    p_code in varchar2,
    p_key  in varchar2 default null );
--
--==============================================================================
-- Escapes a text so that it can be used in JavaScript without problems.
-- Replaces \ with \\, / with \/, " with \u0022, ' with \u0027, tab with \t,
-- chr(10) with \n.
--==============================================================================
function escape (
    p_text in varchar2 )
    return varchar2;
--
--==============================================================================
-- Returns the escaped text surrounded by double quotes. eg: "That\'s a test"
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in varchar2,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the number, if p_value is NULL the value null is returned.
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in number,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns a JavaScript boolean (true, false, null)
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in boolean,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the date as a javascript object, if p_value is NULL the value null is returned.
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in date,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its escaped text surrounded by double quotes.
-- eg: test:"That\'s a test"
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in varchar2,
    p_omit_null in boolean default true,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its number, if p_value is NULL the value null is
-- returned. eg. test:123 or test:null
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in number,
    p_omit_null in boolean default true,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and a JavaScript boolean (true, false, null)
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in boolean,
    p_omit_null in boolean default true,
    p_add_comma in boolean default true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its date, if p_value is NULL the value null is
-- returned. eg. test:new Date(2009,0,1) or test:null
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in date,
    p_omit_null in boolean default true,
    p_add_comma in boolean default true )
    return varchar2;
--
--
end wwv_flow_javascript_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_JAVASCRIPT" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_javascript.sql
--
--    DESCRIPTION
--      This package contains utility functions for creating or interacting with javascript.
--
--    MODIFIED   (MM/DD/YYYY)
--    cbackstr    05/30/2008 - Created
--    cbackstr    06/24/2008 - Added function standard_javascript
--    pwolf       03/04/2009 - Added new procedure add_library and add_onload_code
--    pwolf       03/07/2009 - Moved wwv_flow.add_code/emit_code to wwv_flow_javascript
--    pwolf       06/09/2009 - Added new utility functions
--    pawolf      07/29/2009 - Added p_skip_extension to add_library
--    pawolf      09/03/2009 - Modified escape to use hex for single quote and quote
--    arayner     09/10/2009 - Fixed an issue with the escape function, function declaration had been shifted into a comment line
--    pawolf      12/09/2009 - Added add_value and add_attribute for date
--    arayner     02/09/2010 - Added has_code_buffered function to determine if the buffer is populated
--    pawolf      04/27/2010 - Bug# 9557775: Fixed escaping to not use hex values
--    pawolf      05/03/2010 - Bug# 9557775: correct escaping of " back to use hex code to avoid problems with HTML tag attributes
--    pawolf      05/18/2010 - Bug# 9602440: Added caching for JavaScript code
--    pawolf      12/03/2010 - Changed APEX version identifier to _4_1
--    pawolf      04/19/2011 - Added p_key to add_library
--    pawolf      04/21/2011 - Added add_apex_library and modified interface of add_library
--    jkallman    04/25/2011 - Moved c_apex_version from package body to package spec
--    arayner     10/13/2011 - Bug# 12760234: Added p_check_to_add_minified parameter to add_library
--    arayner     10/14/2011 - Bug# 12760234: Added additional comments to add_apex_library to explain a minified version of the file must be available
--    arayner     03/06/2012 - Added escaping of < and > to their unicode equivalent in escape function
--    pawolf      04/05/2012 - Added support for content delivery networks (feature #819)
--    pawolf      05/03/2012 - Added p_ie_condition to add_library (feature 930)
--    pawolf      05/08/2012 - Added p_emit_immediately to different APIs
--    pawolf      06/03/2013 - Added reset
--
--------------------------------------------------------------------------------
--
--
--==============================================================================
-- Adds the script tag to load a javascript library.
-- If a library has already been added, it will not be added a second time.
-- Parameter:
--   p_name:           has to be specified without .js
--   p_directory:      has to have a trailing slash
--   p_version:        version identifier which should be added to the library name (optional)
--   p_check_to_add_minified:
--                     if true, the API will test if it is appropriate to add '.min' extension.
--                     this will be added on APEX Production instances, that are not running debug mode (optional)
--   p_skip_extension: if true the extension .js is NOT added (optional)
--   p_ie_condition:   condition which should be used as Internet Explorer condition (optional)
--   p_key:            is used to identify if the library has already been loaded (optional),
--                     if not specified the key will default to p_directory||p_name||p_version
--==============================================================================
procedure add_library (
    p_name                  in varchar2,
    p_directory             in varchar2,
    p_version               in varchar2 default null,
    p_check_to_add_minified in boolean  default false,
    p_skip_extension        in boolean  default false,
    p_ie_condition          in varchar2 default null,
    p_key                   in varchar2 default null );
--
--==============================================================================
-- Adds the script tag to load a 3rd party javascript library file (supported
-- libraries: jQuery, jQueryUI) and will also take into account the specified
-- Content Delivery Network for the application.
--
-- If a library has already been added, it will not be added a second time.
--
-- Parameter:
--   p_library:   Use one of the c_library_* constants
--   p_file_name: Has to be specified without version, .min and .js
--   p_directory: Directory where the file p_file_name is located (optional)
--   p_version:   If no value is provided then the same version APEX ships
--                will be used (optional)
--
-- Examples:
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.draggable' )
--
--   add_3rd_party_library_file (
--     p_library   => c_library_jquery_ui,
--     p_file_name => 'jquery.ui.datepicker-' || wwv_flow.g_browser_language,
--     p_directory => 'i18n/oracle/' )
--
--==============================================================================
procedure add_3rd_party_library_file (
    p_library   in varchar2,
    p_file_name in varchar2,
    p_directory in varchar2 default null,
    p_version   in varchar2 default null );
--
--==============================================================================
-- Adds the script tag to load an APEX javascript library from the /i/javascript/
-- directory. If a library has already been added, it will not be added a second time.
-- Note: You must ensure the library being added also has a minified version, because
-- this procedure internally calls add_library with p_check_to_add_minified set to true.
--
-- Parameter:
--   p_name: has to be specified without version, .min and .js
--==============================================================================
procedure add_apex_library (
    p_name in varchar2 );
--
--==============================================================================
-- Adds the script tag to load a list of URLs specified in p_urls.
-- The URLs specified in p_urls can contain the placeholder #MIN# which will
-- get replaced by .min or an empty string depending if the page is viewed
-- in debug mode or not.
--
-- Parameter:
--   p_urls:             list of urls delimited by a new line
--   p_emit_immediately: TRUE if the URLs should immidiately be written to the HTTP buffer (optional)
--==============================================================================
procedure add_library_urls (
    p_urls             in varchar2,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- Adds a javascript code snippets to the HTML output which is executed at the
-- onload event.
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_code: javascript code snippet. eg: $s('P1_TEST', 'abc');
--   p_key:  name of the key. eg: APEX_WIDGET
--==============================================================================
procedure add_onload_code (
    p_code in varchar2,
    p_key  in varchar2 default null );
--
--==============================================================================
-- Adds a code snippet which is included inline into the HTML output
-- eg. You can use this procedure to add new functions or global
--     variable declarations.
-- Note: if you want to execute code, you should use add_onload_code
--
-- If an entry with the same key exits it will be ignored.
-- If p_key is null the snippet will always be added.
--
-- Parameter:
--   p_code: javascript code snippet. eg: $s('P1_TEST', 123);
--   p_key:  identifier for the code snippet. If specified and a code snippet with
--           the same name has already been added the new code snippet will be ignored.
--==============================================================================
procedure add_inline_code (
    p_code in varchar2,
    p_key  in varchar2 default null );
--
--==============================================================================
-- Emits code which has been added to the internal buffer.
--==============================================================================
procedure emit_code (
    p_type in varchar2 );
--
--==============================================================================
-- Escapes a text so that it can be used in JavaScript without problems.
-- Replaces \ with \\, / with \/, " with \u0022, ' with \u0027, tab with \t,
-- chr(10) with \n, < with \u003c, > with \u003e.
--==============================================================================
function escape (
    p_text in varchar2 )
    return varchar2;
--
--==============================================================================
-- Returns the escaped text surrounded by double quotes. eg: "That\'s a test"
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in varchar2,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the number, if p_value is NULL the value null is returned.
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in number,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns a JavaScript boolean (true, false, null)
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in boolean,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the date as a javascript object, if p_value is NULL the value null is returned.
-- If p_add_comma is TRUE a trailing comma is added.
--==============================================================================
function add_value (
    p_value     in date,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its escaped text surrounded by double quotes.
-- eg: test:"That\'s a test"
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in varchar2,
    p_omit_null in boolean := true,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its number, if p_value is NULL the value null is
-- returned. eg. test:123 or test:null
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in number,
    p_omit_null in boolean := true,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and a JavaScript boolean (true, false, null)
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in boolean,
    p_omit_null in boolean := true,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns the attribute and its date, if p_value is NULL the value null is
-- returned. eg. test:new Date(2009,0,1) or test:null
-- If p_omit_null is TRUE and p_value is NULL the function returns nothing.
-- If p_add_comma is TRUE a trailing comma is added when a value is returned.
--==============================================================================
function add_attribute (
    p_name      in varchar2,
    p_value     in date,
    p_omit_null in boolean := true,
    p_add_comma in boolean := true )
    return varchar2;
--
--==============================================================================
-- Returns true or false, depending on whether any entries exist for all, or a
-- defined type.
-- If p_type is null, all types are checked (INLINE and ONLOAD)
-- If p_type is not null, only types of type p_type are checked.
--==============================================================================
function has_code_buffered (
    p_type      in varchar2 default null )
    return boolean;
--
--==============================================================================
-- Returns a script tag with all the standard JavaScript files required by APEX.
--==============================================================================
function standard_javascript
    return varchar2;
--
--==============================================================================
-- Adds a javascript code snippets into an internal buffer which is emitted by
-- the call to emit_code later in the page rendering.
-- If an entry with this same type and key exits it will be ignored.
-- If p_key is null the snippet will always be added to the buffer.
--
-- Parameter:
--   p_code: javascript code snippet. eg: $s('P1_TEST', 'abc');
--   p_key:  name of the key. eg: APEX_WIDGET
--   p_type: name of the code type. eg: ONLOAD, INLINE, LINK
--==============================================================================
procedure add_code (
    p_code             in varchar2,
    p_type             in varchar2,
    p_key              in varchar2 default null,
    p_emit_immediately in boolean  default false );
--
--==============================================================================
-- Saves the buffered JavaScript code in the page/region cache table wwv_flow_page_code_cache.
-- If p_region_id is specified, only the JavaScript code for that region is saved.
--==============================================================================
procedure save_in_cache (
    p_page_cache_id in number,
    p_region_id     in number default null );
--
--==============================================================================
-- Clears the buffered JavaScript code.
--==============================================================================
procedure reset;
--
end wwv_flow_javascript;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLUGIN"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_plugin.sql
--
--    DESCRIPTION
--      This package is responsible for handling plug-ins.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      04/02/2009 - Created
--    pawolf      04/10/2009 - Continue implementation
--    pawolf      04/15/2009 - Continue implementation
--    pawolf      04/22/2009 - Added get_attribute_def_javascript
--    pawolf      04/29/2009 - Renamed package to wwv_flow_item_type_plugin
--    pawolf      04/14/2009 - Added dynamic attributes
--    pawolf      06/03/2009 - Renamed wwv_flow_plugin_attributes.attribute_level to attribute_scope
--    pawolf      06/08/2009 - Added dynamic action support
--    pawolf      07/09/2009 - Added validate_attribute_values
--    pawolf      13/09/2009 - Added synchronize_attribute_values
--    pawolf      14/09/2009 - Simplified interface
--    pawolf      07/17/2009 - Added new debugging procedures
--    pawolf      07/23/2009 - Modified call interface for dynamic actions
--    pawolf      07/27/2009 - Added is_in_use
--    pawolf      07/27/2009 - Fixed bug for LOV parameters
--    pawolf      09/25/2009 - Moved Builder specific code to wwv_flow_plugin_f4000
--    pawolf      10/05/2009 - Added constant c_plugin_type_report_col_type
--    pawolf      10/28/2009 - Removed error_display_location from wwv_flow_plugins
--    pawolf      12/29/2009 - Modified calling interface for validations
--    pawolf      12/29/2009 - Added "standard_validations" to wwv_flow_step_items
--    pawolf      01/07/2010 - Added region error message to t_region
--    pawolf      01/20/2010 - Added escape_on_http_output to wwv_flow_step_items
--    pawolf      02/02/2010 - Added cascading lov columns to wwv_flow_step_items
--    pawolf      02/20/2010 - Added support for processes
--    pawolf      12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--    cneumuel    03/02/2011 - Added plugin support for authorization (feature #580)
--    pawolf      05/13/2011 - Added plug-ins for authentication schemes (feature 581)
--    cneumuel    05/20/2011 - Signature changes to authentication plugins (feature 581)
--    pawolf      05/23/2011 - Changed signatures of authentication plugins (feature 581)
--    cneumuel    05/23/2011 - Added decode_ajax_identifier and changed signature of ajax_callback, to use it out of wwv_flow_authentication_engine (feature #581)
--    cneumuel    05/26/2011 - Added decode_ajax_request to trigger ajax callbacks for authentications (feature #581)
--    cneumuel    08/09/2011 - In execute_authorization: renamed p_user_name to p_username (bug #12849435)
--    pawolf      02/24/2012 - Renamed package to wwv_flow_plugin
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------
type t_ajax_callback is record (
    callback_type varchar2(12),
    id            number
);
--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------

-- plugin types
c_plugin_type_item_type       constant varchar2(30) := 'ITEM TYPE';
c_plugin_type_dynamic_action  constant varchar2(30) := 'DYNAMIC ACTION';
c_plugin_type_validation_type constant varchar2(30) := 'VALIDATION TYPE';
c_plugin_type_region_type     constant varchar2(30) := 'REGION TYPE';
c_plugin_type_report_col_type constant varchar2(30) := 'REPORT COLUMN TYPE';
c_plugin_type_process_type    constant varchar2(30) := 'PROCESS TYPE';
c_plugin_type_authorization   constant varchar2(30) := 'AUTHORIZATION TYPE';
c_plugin_type_authentication  constant varchar2(30) := 'AUTHENTICATION TYPE';

-- attribute scope
c_attribute_scope_application constant varchar2(20) := 'APPLICATION';
c_attribute_scope_component   constant varchar2(20) := 'COMPONENT';

--
-- possible plugin types for ajax callbacks: item, region, dynamic action,
-- authentication
--
c_ajax_callback_item           constant varchar2(12) := 'ITEM TYPE';
c_ajax_callback_region         constant varchar2(12) := 'REGION TYPE';
c_ajax_callback_dynamic_action constant varchar2(12) := 'DA TYPE';
c_ajax_callback_authentication constant varchar2(12) := 'AUTH TYPE';

--------------------------------------------------------------------------------
-- Global variables
--------------------------------------------------------------------------------
g_current_item_id number;
g_ajax_identifier varchar2(255);
--
--==============================================================================
-- Returns the name attribute which has to be used for a HTML input element if
-- you want that the value of the element is stored in session state when the
-- page is submitted. If you have a HTML input element which returns multiple
-- values (eg. select list with multiple="multiple") you have
-- to set p_is_multi_value.
-- Note: This function has to be called before you write something to the
--       HTTP buffer with HTP.P(RN)
--==============================================================================
function get_input_name_for_page_item (
    p_is_multi_value in boolean )
    return varchar2;
--
--==============================================================================
-- Returns the AJAX identifier which has to be used for the on-demand call
-- of a plug-in.
--
-- Note: if the plug-in doesn't have an AJAX callback configured, null will be
--       returned!
--==============================================================================
function get_ajax_identifier return varchar2;
--
--==============================================================================
-- Function to render an item type plugin.
-- p_item_idx contains the index for the wwv_flow.g_item_xx arrays.
--==============================================================================
function render_page_item (
    p_item_idx            in binary_integer,
    p_value               in varchar2,
    p_lov                 in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Function to validate an item type plugin. If the validation fails,
-- message will contain a value. display_location and page_item_name can
-- optionally be set.
--==============================================================================
function validate_page_item (
    p_item_id in number )
    return wwv_flow_plugin_api.t_page_item_validation_result;
--
--==============================================================================
-- Procedure to render a region plugin.
-- p_region_id is the id of the non-translated region.
--==============================================================================
procedure render_region (
    p_region_id           in number,
    p_is_printer_friendly in boolean );
--
--==============================================================================
-- Function to render a dynamic action plugin.
-- p_dynamic_action_id is the id of the non-translated dynamic action.
--==============================================================================
function render_dynamic_action (
    p_dynamic_action_id in number,
    p_action            in varchar2,
    p_attribute_01      in varchar2,
    p_attribute_02      in varchar2,
    p_attribute_03      in varchar2,
    p_attribute_04      in varchar2,
    p_attribute_05      in varchar2,
    p_attribute_06      in varchar2,
    p_attribute_07      in varchar2,
    p_attribute_08      in varchar2,
    p_attribute_09      in varchar2,
    p_attribute_10      in varchar2,
    p_attribute_11      in varchar2,
    p_attribute_12      in varchar2,
    p_attribute_13      in varchar2,
    p_attribute_14      in varchar2,
    p_attribute_15      in varchar2 )
    return wwv_flow_plugin_api.t_dynamic_action_render_result;
--
--==============================================================================
-- Function to execute a process plugin.
-- p_process_idx contains the index for the wwv_flow.g_process_xx arrays.
--==============================================================================
function execute_process (
    p_process_idx in binary_integer )
    return wwv_flow_plugin_api.t_process_exec_result;
--
--==============================================================================
-- Function to execute an authorization plugin.
-- p_authorization_id is the id of the non-translated authorization.
--==============================================================================
function execute_authorization (
    p_authorization_id  in number,
    p_type              in varchar2,
    p_name              in varchar2,
    p_username          in varchar2,
    p_attribute_01      in varchar2,
    p_attribute_02      in varchar2,
    p_attribute_03      in varchar2,
    p_attribute_04      in varchar2,
    p_attribute_05      in varchar2,
    p_attribute_06      in varchar2,
    p_attribute_07      in varchar2,
    p_attribute_08      in varchar2,
    p_attribute_09      in varchar2,
    p_attribute_10      in varchar2,
    p_attribute_11      in varchar2,
    p_attribute_12      in varchar2,
    p_attribute_13      in varchar2,
    p_attribute_14      in varchar2,
    p_attribute_15      in varchar2 )
    return wwv_flow_plugin_api.t_authorization_exec_result;
--
--==============================================================================
-- Function to execute the session sentry function of an authentication plugin.
--==============================================================================
function execute_session_sentry (
    p_type           in varchar2,
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Function to execute the invalid session function of an authentication plugin.
--==============================================================================
function execute_invalid_session (
    p_type           in varchar2,
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- Function to verify if the login credentials of an authentication plugin are
-- valid.
--==============================================================================
function execute_authentication (
    p_type           in varchar2,
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_password       in varchar2 )
    return wwv_flow_plugin_api.t_authentication_auth_result;
--
--==============================================================================
-- Function to execute the post logout function an authentication plugin.
--==============================================================================
function execute_post_logout (
    p_type           in varchar2,
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_logout_result;
--
--==============================================================================
-- function to decode an ajax identifier from a "PLUGIN=xxx" request
--==============================================================================
function decode_ajax_request (
    p_request in varchar2 )
    return t_ajax_callback;
--
--==============================================================================
-- Procedure to create a response for an AJAX call of a plugin.
--==============================================================================
procedure ajax_callback (
    p_ajax_callback in t_ajax_callback );
--
--
end wwv_flow_plugin;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TABULAR_FORM"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_tabular_form.sql
--
--    DESCRIPTION
--      This package is responsible for handling tabular forms.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    01/11/2011 - Created (feature# 542)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================

--==============================================================================
-- Function returns the number of submitted rows of the specified tabular form.
--==============================================================================
function get_row_count (
    p_tabular_form_region_id in number )
    return pls_integer;

--==============================================================================
-- Function returns the status (C=create, U=update, D=delete) of the specified
-- tabular form row.
--==============================================================================
function get_row_status (
    p_tabular_form_region_id in number,
    p_row_num                in pls_integer )
    return varchar2;

--==============================================================================
-- Function returns TRUE if the row selector of the specified tabular form is
-- checked. Returns FALSE if it's not checked or the tabular form doesn't have
-- a row selector.
--==============================================================================
function is_row_selector_checked (
    p_tabular_form_region_id in number,
    p_row_num                in pls_integer )
    return boolean;

--==============================================================================
-- Function returns TRUE if the specified row has been created or modified.
-- Returns FALSE if the submitted values are still matching with the checksum.
--==============================================================================
function has_row_changed (
    p_tabular_form_region_id in number,
    p_row_num                in pls_integer )
    return boolean;

--==============================================================================
-- Function returns an array, indexed by column alias which contains the
-- column values of the specified tabular form row. This array can be used to
-- call set_component_values.
--
-- The "Row Selector" column is returned as "APEX$ROW_SELECTOR" and contains
-- the value X if checked.
-- The "Record Status" column is returned as "APEX$ROW_STATUS".
-- The current row is returns as "APEX$ROW_NUM".
--==============================================================================
function get_row_values (
    p_tabular_form_region_id in number,
    p_row_num                in pls_integer )
    return wwv_flow_global.vc_map;

--==============================================================================
-- Procedure which updates the tabular form wwv_flow.g_fxx arrays with the values
-- of the p_value_map. p_value_map is index by column alias.
--==============================================================================
procedure set_row_values (
    p_tabular_form_region_id in number,
    p_value_map              in wwv_flow_global.vc_map,
    p_row_num                in pls_integer );

--==============================================================================
-- Function returns the "id" of the HTML element for the specified column alias
-- and tabular form row. If p_column_alias is a non existing column or the
-- column has not been rendered this function will return NULL.
--==============================================================================
function get_html_element_id (
    p_tabular_form_region_id in number,
    p_column_alias           in varchar2,
    p_row_num                in pls_integer )
    return varchar2;

--==============================================================================
-- Function returns the heading for the specified column alias.
-- If p_column_alias is a non existing column or the column has not been
-- rendered this function will return NULL.
--==============================================================================
function get_column_heading (
    p_tabular_form_region_id in number,
    p_column_alias           in varchar2 )
    return varchar2;

--==============================================================================
-- Function returns TRUE if the specified page contains at least one tabular form.
--==============================================================================
function has_tabular_form (
    p_application_id    in number default nv('FB_FLOW_ID'),
    p_page_id           in number default nv('FB_FLOW_PAGE_ID'),
    p_security_group_id in number default nv('WORKSPACE_ID') )
    return boolean;

end wwv_flow_tabular_form;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_VALIDATION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_validation.sql
--
--    DESCRIPTION
--      This package is responsible for handling validations.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    01/04/2011 - Created (feature# 542)
--      pawolf    02/28/2011 - Added new error handling (feature# 544)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================

--==============================================================================
-- Performs all validations (basic, predefined and custom validations).
-- This procedure has to be called during page processing.
--==============================================================================
procedure perform;

end wwv_flow_validation;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COMPUTATION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_computation.sql
--
--    DESCRIPTION
--      This package is responsible for handling computations.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    05/07/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Performs all computations defined for the specified process point
--==============================================================================
procedure perform (
    p_process_point in varchar2 );

end wwv_flow_computation;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PROCESS"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_process.sql
--
--    DESCRIPTION
--      This package is responsible for handling processes.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    01/04/2011 - Created (feature# 542)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================
e_error_occurred exception;

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Performs all processes defined for the specified process point
--==============================================================================
procedure perform (
    p_process_point in varchar2 );

--==============================================================================
-- Adds a process error message to the error stack and raises e_error_occurred
-- afterwards. This procedure is public, because it's also used by wwv_flow_item.mru*
--==============================================================================
procedure add_error_message (
    p_process_error    in varchar2,
    p_error            in varchar2,
    p_display_location in varchar2 );

procedure add_error_message (
    p_error_code       in varchar2,
    p0                 in varchar2 default null,
    p1                 in varchar2 default null,
    p2                 in varchar2 default null,
    p3                 in varchar2 default null,
    p4                 in varchar2 default null,
    p5                 in varchar2 default null,
    p6                 in varchar2 default null,
    p7                 in varchar2 default null,
    p8                 in varchar2 default null,
    p9                 in varchar2 default null,
    p_display_location in varchar2 );

procedure add_error_message (
    p_process_error    in varchar2,
    p_error            in varchar2,
    p_display_location in varchar2,
    p_region_id        in number,
    p_row_num          in number );

procedure add_error_message (
    p_error_code       in varchar2,
    p0                 in varchar2 default null,
    p1                 in varchar2 default null,
    p2                 in varchar2 default null,
    p3                 in varchar2 default null,
    p4                 in varchar2 default null,
    p5                 in varchar2 default null,
    p6                 in varchar2 default null,
    p7                 in varchar2 default null,
    p8                 in varchar2 default null,
    p9                 in varchar2 default null,
    p_display_location in varchar2,
    p_region_id        in number,
    p_row_num          in number );

end wwv_flow_process;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DYNAMIC_ACTION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_dynamic_action.sql
--
--    DESCRIPTION
--      This package is resonsible for handling dynamic actions in the
--      runtime engine.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--      arayner   06/04/2009 - Created
--      arayner   06/04/2009 - Added get_json function that returns a JSON representation of dynamic action metadata.
--      pawolf    06/08/2009 - Added plugin support
--      pawolf    07/23/2009 - Added new record type for rendering
--      arayner   10/06/2009 - Added get_opposite_actions function
--      arayner   12/11/2009 - Removed get_opposite_actions function, no longer needed
--      arayner   06/20/2011 - Bug# 12673405: Added requires_affected_element
--      arayner   01/04/2012 - Added is_affected_region_valid function (bug 13441441)
--      pawolf    03/20/2012 - Moved requires_affected_element to wwv_flow_dynamic_action_dev and is_affected_region_valid to api.plb
--
--------------------------------------------------------------------------------

--==============================================================================
-- Public types
--==============================================================================
type t_browser_attributes is record (
    javascript_function varchar2(32767),
    ajax_identifier     varchar2(255),
    attribute_01        wwv_flow_page_da_actions.attribute_01%type,
    attribute_02        wwv_flow_page_da_actions.attribute_02%type,
    attribute_03        wwv_flow_page_da_actions.attribute_03%type,
    attribute_04        wwv_flow_page_da_actions.attribute_04%type,
    attribute_05        wwv_flow_page_da_actions.attribute_05%type,
    attribute_06        wwv_flow_page_da_actions.attribute_06%type,
    attribute_07        wwv_flow_page_da_actions.attribute_07%type,
    attribute_08        wwv_flow_page_da_actions.attribute_08%type,
    attribute_09        wwv_flow_page_da_actions.attribute_09%type,
    attribute_10        wwv_flow_page_da_actions.attribute_10%type );

--==============================================================================
-- includes the necessary Javascript code into the HTML page
-- to handle the defined dynamic actions of the current page.
--==============================================================================
procedure render;

end wwv_flow_dynamic_action;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DYNAMIC_ACTION_NATIVE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_dynamic_action_native.sql
--
--    DESCRIPTION
--      This package is resonsible for handling native dynamic actions.
--
--    MODIFIED   (MM/DD/YYYY)
--    arayner     12/08/2009 - Created
--    arayner     12/08/2009 - Added render_show and render_hide procedures
--    arayner     12/08/2009 - Added other native types
--    arayner     12/09/2009 - Added render_add_class, render_remove_class and render_set_css procedures
--    arayner     12/09/2009 - Removed render_hide_and_clear and render_disable_and_clear, merged into hide and disable
--    arayner     12/09/2009 - Removed render_hide_item_row and render_show_item_row, merged into hide and show
--    arayner     12/11/2009 - Added ajax_set to support setting values from a sql statement
--    arayner     12/11/2009 - Renamed render_set and ajax_set to be render_set_value and ajax_set_value
--    pawolf      12/16/2009 - Added set focus and submit page
--    pawolf      02/05/2010 - Changed to new plug-in interface
--    pawolf      02/09/2010 - Added render_refresh
--    arayner     04/12/2010 - Added render_execute_plsql_code
--    arayner     04/13/2010 - Added ajax_execute_plsql_code
--    arayner     04/17/2010 - Added render_cancel_event
--    pawolf      04/18/2010 - Added dynamic actions confirm, alert and clear
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      04/02/2012 - Created dispatcher functins
--    pawolf      04/04/2012 - Renamed wwv_flow_native_dynamic_action to wwv_flow_dynamic_action_native
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin to run the render function.
--==============================================================================
function render (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_dynamic_action in wwv_flow_plugin_api.t_dynamic_action )
    return wwv_flow_plugin_api.t_dynamic_action_render_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin to run the ajax function.
--==============================================================================
function ajax (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_dynamic_action in wwv_flow_plugin_api.t_dynamic_action )
    return wwv_flow_plugin_api.t_dynamic_action_ajax_result;
--
end wwv_flow_dynamic_action_native;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DATA_UPLOAD"

as
empty_vc_arr               wwv_flow_global.vc_arr2;

procedure create_collections_from_data (
    p_first_row_is_col_name   in varchar2 default 'N',
	p_data_type				  in varchar2 default 'PASTE',
	p_file_name 			  in varchar2 default null,
    --
    p_separator               in varchar2 default chr(9),
    p_enclosed_by             in varchar2 default null,
    --
    p_currency                in varchar2 default '$',
    p_group_separator         in varchar2 default '.',
    p_decimal_char            in varchar2 default ',',
    p_charset                 in varchar2 default null);

procedure display_table_mapping (
    p_load_table_id     in number,
	p_flow_id			in number);

procedure save_column_mapping (
    p_cnames                in wwv_flow_global.vc_arr2,
    p_data_format           in wwv_flow_global.vc_arr2 default empty_vc_arr);

procedure create_load_collection;

procedure create_verify_collection (
    p_id    in number);

procedure load_data (
    p_id                    in number,
    p_session_id            in number,
    p_insert_count          out varchar2,
    p_update_count          out varchar2,
    p_error_count           out varchar2,
    p_review_count          out varchar2);

function get_owner_name(
    p_owner_name            in varchar2,
    p_flow_id               in number)
    return varchar2;

procedure fix_pre42(p_flow_id          in number );

end wwv_flow_data_upload;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REGION_NATIVE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_region_native.sql
--
--    DESCRIPTION
--      This package is resonsible for handling native region types.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      06/07/2011 - Created
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      03/23/2012 - Added new region type jQM List View (feature# 884)
--    pawolf      04/02/2012 - Added p_plugin to APIs
--    pawolf      04/04/2012 - Renamed wwv_flow_region_native to wwv_flow_region_native
--    pawolf      04/27/2012 - Added Builder checks for jQM List View region type
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------
c_data_upload_column_mapping constant varchar2(40) := 'NATIVE_DATA_UPLOAD_COLUMN_MAPPING';
c_jqm_list_view              constant varchar2(40) := 'NATIVE_JQM_LIST_VIEW';

--==============================================================================
-- Dispatcher which actually calls the native region plug-in.
--==============================================================================
function render_region (
    p_type                in varchar2,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_region              in wwv_flow_plugin_api.t_region,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_region_render_result;
--
--==============================================================================
-- Dispatcher which actually calls the native region plug-in.
--==============================================================================
function ajax_region (
    p_type   in varchar2,
    p_plugin in wwv_flow_plugin_api.t_plugin,
    p_region in wwv_flow_plugin_api.t_region )
    return wwv_flow_plugin_api.t_region_ajax_result;
--
--==============================================================================
-- Dispatcher which validates the entered data in the Builder.
--==============================================================================
procedure validate_builder_region (
    p_type             in varchar2,
    p_attribute_scope  in varchar2,
    p_page_item_prefix in varchar2 );
--
--
end wwv_flow_region_native;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PROCESS_NATIVE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_process_native.sql
--
--    DESCRIPTION
--      This package is resonsible for handling native process types.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      03/12/2010 - Created
--    pawolf      06/07/2011 - Added dispatcher
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      04/02/2012 - Added p_plugin to APIs
--    pawolf      04/04/2012 - Renamed wwv_flow_native_process to wwv_flow_process_native
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public constant definitions
--------------------------------------------------------------------------------
c_send_email            constant varchar2(40) := 'NATIVE_SEND_EMAIL';
c_parse_uploaded_data   constant varchar2(40) := 'NATIVE_PARSE_UPLOADED_DATA';
c_prepare_uploaded_data constant varchar2(40) := 'NATIVE_PREPARE_UPLOADED_DATA';
c_load_uploaded_data    constant varchar2(40) := 'NATIVE_LOAD_UPLOADED_DATA';

--==============================================================================
-- Dispatcher which actually calls the native process plug-in.
--==============================================================================
function execute_process (
    p_type    in varchar2,
    p_plugin  in wwv_flow_plugin_api.t_plugin,
    p_process in wwv_flow_plugin_api.t_process )
    return wwv_flow_plugin_api.t_process_exec_result;
--
--
end wwv_flow_process_native;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHORIZATION_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_authorization_api.sql
--
--    DESCRIPTION
--      Public interface to the authorization subsystem.
--
--      This package contains public utility functions for controlling and
--      querying access rights to the application.
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/02/2012 - Created
--    cneumuel    06/05/2012 - Added reset_cache, is_authorized
--
--------------------------------------------------------------------------------

--==============================================================================
-- Reset authorization caches for the session and force a re-evaluation when
-- an authorization has to be checked next.
--==============================================================================
procedure reset_cache;

--==============================================================================
-- Determine if the current user passes the authorization with name
-- "p_authorization_name". For performance reasons, authorization results are
-- cached, so this function may not always evaluate the authorization when
-- called, but take the result out of the cache (see attribute "Evaluation
-- Point" in the authorization schemes).
--
-- ARGUMENTS
-- * p_authorization_name: The name of an authorization scheme in the
--                         application.
--
-- RETURNS
-- * TRUE if the authorization was successful
-- * FALSE if the authorization was not successful
--==============================================================================
function is_authorized (
    p_authorization_name in varchar2 )
    return boolean;

end wwv_flow_authorization_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHORIZATION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_authorization.sql
--
--    DESCRIPTION
--      This package is resonsible for handling native authorization types.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    02/03/2011 - Created
--    pawolf      10/25/2011 - Added Cloud IDM (bug# 13101596)
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    pawolf      04/02/2012 - Added p_plugin to APIs
--    cneumuel    04/10/2012 - Added g_authorize_public_pages (bug #13940433)
--
--------------------------------------------------------------------------------
--
--------------------------------------------------------------------------------
-- Native authorizations
--
c_exists                constant varchar2(40) := 'NATIVE_EXISTS';
c_not_exists            constant varchar2(40) := 'NATIVE_NOT_EXISTS';
c_function_body         constant varchar2(40) := 'NATIVE_FUNCTION_BODY';
c_item_equals_value     constant varchar2(40) := 'NATIVE_ITEM_EQUALS_VALUE';
c_item_not_equals_value constant varchar2(40) := 'NATIVE_ITEM_NOT_EQUALS_VALUE';
c_item_is_null          constant varchar2(40) := 'NATIVE_ITEM_IS_NULL';
c_item_is_not_null      constant varchar2(40) := 'NATIVE_ITEM_IS_NOT_NULL';
c_pref_equals_value     constant varchar2(40) := 'NATIVE_PREF_EQUALS_VALUE';
c_pref_not_equals_value constant varchar2(40) := 'NATIVE_PREF_NOT_EQUALS_VALUE';
c_cloud_idm             constant varchar2(40) := 'NATIVE_CLOUD_IDM';
--
--------------------------------------------------------------------------------
-- globals for this request
g_authorize_public_pages boolean; -- wwv_flow.authorize_public_pages_yn
--
--==============================================================================
-- Checks native authorization
--==============================================================================
function check_native_authorization (
    p_type          in varchar2,
    p_plugin        in wwv_flow_plugin_api.t_plugin,
    p_authorization in wwv_flow_plugin_api.t_authorization )
    return wwv_flow_plugin_api.t_authorization_exec_result;
--
--==============================================================================
-- Resets authorization for the session.
-- If p_save_state is true then the state in wwv_flow_sessions$ will be cleared.
--==============================================================================
procedure reset_cache (
    p_save_state in boolean );
--
--==============================================================================
-- initialize package with session info from wwv_flow_session$
--==============================================================================
procedure init_cache (
    p_passed_sec_checks in wwv_flow_sessions$.passed_sec_checks%type,
    p_failed_sec_checks in wwv_flow_sessions$.failed_sec_checks%type );
--
--==============================================================================
-- return whether user has privilege given a security scheme.
--
-- p_authorization:
--   determines kind of authorization. can be prefixed by '!' for negation of
--   authorization result. one of
--   - NULL or %null%: always true, negation not possible
--   - MUST_NOT_BE_PUBLIC_USER: true if not in (nobody, PUBLIC_USER,
--     HTMLDB_PUBLIC_USER, ANONYMOUS, APEX_PUBLIC_USER)
--   - security scheme ID: uses authorization result of plugin
--   - otherwise: invalid, show error page
-- p_component:
--   if in (FLOW, PAGE) and authorization fails: show error page
--==============================================================================
function is_authorized (
    p_authorization in varchar2,
    p_component     in varchar2 default null )
    return boolean;
--
--==============================================================================
-- return whether the given authorization is passed
--==============================================================================
function is_authorized_by_name (
    p_authorization_name in varchar2 )
    return boolean;
--
--==============================================================================
-- Internal builder authorization, helper for Developer Authorization plugin.
--==============================================================================
function is_authorized_developer (
    p_developer_authorization in varchar2 )
    return boolean;
--
end wwv_flow_authorization;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHENTICATION_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_authentication_api.sql
--
--    DESCRIPTION
--      This package provides a public API for authentication plugins
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/23/2011 - Created
--    pawolf      05/26/2011 - Made some minor modifications--
--    cneumuel    05/27/2011 - in callback(): added p_app_id
--    cneumuel    06/06/2011 - Added get_login_username_cookie,send_login_username_cookie
--    cneumuel    08/08/2011 - In login(): Added p_uppercase_username (bug #12846747)
--    cneumuel    01/13/2012 - In logout(): added p_ws_app_id (bug #13360987)
--    cneumuel    02/29/2012 - Renamed from wwv_flow_authentication
--    cneumuel    03/26/2012 - Added post_login (bug #13813195)
--    cneumuel    06/05/2012 - Added is_authenticated, is_public_user
--    cneumuel    09/05/2012 - Added documentation
--
--------------------------------------------------------------------------------
--
--==============================================================================
c_default_username_cookie constant varchar2(30) := 'LOGIN_USERNAME_COOKIE';

--==============================================================================
-- Authenticate the user in the current session (part of the default login page)
--
-- Login processing has 8 steps:
--   1. run authentication scheme's pre-authentication procedure
--   2. run authentication scheme's authentication function to check the user
--      credentials (p_username, p_password), returning true on success
--   3. if result=true: run post-authentication procedure
--   4. if result=true: save username in session table
--   5. if result=true: set redirect url to deep link
--   6. if result=false: set redirect url to current page, with an error message
--      in the notification_msg parameter
--   7. log authentication result
--   8. redirect
--
-- ARGUMENTS
-- * p_username            user's name
-- * p_password            user's password
-- * p_uppercase_username  if true then p_username is converted to uppercase
--
-- EXAMPLE
--   apex_authentication.login('JOE USER', 'mysecret');
--
-- SEE ALSO
--   post_login
--==============================================================================
procedure login (
    p_username           in varchar2,
    p_password           in varchar2,
    p_uppercase_username in boolean default true );
--
--==============================================================================
-- Authenticate the user in the current session.
--
-- This procedure runs a subset of login(), without steps 1. and 2. It is
-- primarily useful in authentication schemes where user credentials checking
-- is done externally to Apex.
--
-- ARGUMENTS
-- * p_username            user's name
-- * p_password            user's password
-- * p_uppercase_username  if true then p_username is converted to uppercase
--
-- EXAMPLE
--   apex_authentication.post_login('JOE USER', 'mysecret');
--
-- SEE ALSO
--   login
--==============================================================================
procedure post_login (
    p_username           in varchar2,
    p_password           in varchar2,
    p_uppercase_username in boolean default true );
--
--==============================================================================
-- Send a cookie with the username (part of the default login page)
--
-- ARGUMENTS
-- * p_username            user's name
-- * p_cookie_name         the cookie name which stores p_username in the
--                         browser
--
-- EXAMPLE
--   apex_authentication.send_login_username_cookie('JOE USER');
--
-- SEE ALSO
--   get_login_username_cookie
--==============================================================================
procedure send_login_username_cookie (
    p_username    in varchar2,
    p_cookie_name in varchar2 default c_default_username_cookie );
--
--==============================================================================
-- Read the cookie with the username (part of the default login page)
--
-- ARGUMENTS
-- * p_cookie_name         the cookie name which stores the username in the
--                         browser
--
-- EXAMPLE
--   :P101_USERNAME := apex_authentication.get_login_username_cookie;
--
-- SEE ALSO
--   send_login_username_cookie
--==============================================================================
function get_login_username_cookie (
    p_cookie_name in varchar2 default c_default_username_cookie )
    return varchar2;
--
--==============================================================================
-- Close the session and redirect to the application's home page.
--
-- To be called directly from the browser.
--
-- ARGUMENTS
-- * p_session_id          the Application Express session which should be
--                         closed.
-- * p_app_id              the database application id
-- * p_ws_app_id           the websheet application id
--
-- EXAMPLE
--   apex_authentication.logout(:SESSION, :APP_ID);
--==============================================================================
procedure logout (
    p_session_id in number,
    p_app_id     in number,
    p_ws_app_id  in number default null );

--==============================================================================
-- Landing resource for external login pages.
--
-- To be called directly from the browser.
--
-- ARGUMENTS
-- * p_session_id          the Application Express session
-- * p_app_id              the database application id
-- * p_ajax_identifier     the system-generated AJAX identifier (see
--                         apex_plugin.get_ajax_identifier)
-- * p_x01-p_x10           optional parameters that the external login can pass
--                         to the authentication plugin
--
-- EXAMPLE
--   --
--   -- we redirect to an external login page and pass the callback into
--   -- Application Express, which the external login redirects to after
--   -- successful authentication.
--   --
--   declare
--     l_callback varchar2(4000) := apex_application.get_callback_url;
--   begin
--     sys.owa_util.redirect_url(
--         'https://single-signon.example.com/my_custom_sso.login?p_on_success='||
--         sys.utl_url.escape (
--             url                   => l_callback,
--             escape_reserved_chars => true );
--     apex_application.stop_apex_engine;
--   end;
--   --
--   -- an example external login page could for example save user data in
--   -- a shared table and call back with a handle to the data
--   --
--   create or replace package body my_custom_sso as
--     procedure login (
--         p_on_success in varchar2 )
--     is
--       l_login_id varchar2(32);
--     begin
--       l_login_id := rawtohex(sys.dbms_crypto.random(32));
--       insert into login_data(id, username) values (l_login_id, 'JOE USER');
--       sys.owa_util.redirect_url (
--           p_on_success||'&p_x01='||l_login_id );
--     end;
--   end my_custom_sso;
--   --
--   -- in Application Express, the callback will activate the authentication
--   -- plugin's ajax code. it can take the value of x01 and fetch the actual
--   -- user data from the shared table.
--   --
--
-- SEE ALSO
--   get_callback_url
--==============================================================================
procedure callback (
    p_session_id      in number,
    p_app_id          in number,
    p_ajax_identifier in varchar2,
    p_x01             in varchar2 default null,
    p_x02             in varchar2 default null,
    p_x03             in varchar2 default null,
    p_x04             in varchar2 default null,
    p_x05             in varchar2 default null,
    p_x06             in varchar2 default null,
    p_x07             in varchar2 default null,
    p_x08             in varchar2 default null,
    p_x09             in varchar2 default null,
    p_x10             in varchar2 default null );

--==============================================================================
-- Plugin helper function to return a URL that can be used as a landing
-- request for external login pages.
--
-- When the browser sends the request, it triggers the authentication plugin
-- ajax callback, which can be used to log the user in.
--
-- ARGUMENTS
-- * p_x01-p_x10           optional parameters that the external login can pass
--                         to the authentication plugin
--
-- SEE ALSO
--   callback
--==============================================================================
function get_callback_url (
    p_x01 in varchar2 default null,
    p_x02 in varchar2 default null,
    p_x03 in varchar2 default null,
    p_x04 in varchar2 default null,
    p_x05 in varchar2 default null,
    p_x06 in varchar2 default null,
    p_x07 in varchar2 default null,
    p_x08 in varchar2 default null,
    p_x09 in varchar2 default null,
    p_x10 in varchar2 default null )
    return varchar2;

--==============================================================================
-- Check if the user is authenticated in the session
--
-- Returns TRUE if the user is already logged on or FALSE if the user of the
-- current session is not yet authenticated
--
-- EXAMPLE
--   if apex_authentication.is_authenticated then
--     sys.htp.p(apex_escape.html(:APP_USER)||', you are known to the system');
--   else
--     sys.htp.p('Please sign in');
--   end if;
--
-- SEE ALSO
--   is_public_user
--==============================================================================
function is_authenticated
    return boolean;

--==============================================================================
-- Check if the user is NOT authenticated in the session
--
-- Returns FALSE if the user is already logged on or TRUE if the user of the
-- current session is not yet authenticated
--
-- EXAMPLE
--   if apex_authentication.is_public_user then
--     sys.htp.p('Please sign in');
--   else
--     sys.htp.p(apex_escape.html(:APP_USER)||', you are known to the system');
--   end if;
--
-- SEE ALSO
--   is_authenticated
--==============================================================================
function is_public_user
    return boolean;

end wwv_flow_authentication_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHENTICATION"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_authentication.sql
--
--    DESCRIPTION
--      This package provides an internal API for authentication plugins
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/17/2011 - Created
--    cneumuel    05/20/2011 - Added execute_login,execute_logout, moved native plugins to wwv_flow_plugin_authentication (feature #581)
--    cneumuel    05/26/2011 - Signature changes and code improvements - first working version (feature #581)
--    cneumuel    06/06/2011 - Added get_cookie_properties,get_login_help_for_app,activate_in_app,get_translated_authent_name
--    cneumuel    07/11/2011 - Session zero support (bug #12732173)
--    cneumuel    07/25/2011 - Added is_invalid_session_page, which returns true on the login page (bug #12794514)
--    cneumuel    07/28/2011 - Added get_builtin_login_url, return that open door auth does not need password (bug #12795092)
--    cneumuel    10/13/2011 - In execute_login: add p_post_login (bug #13045147)
--    cneumuel    01/13/2012 - In execute_logout(): added p_ws_app_id to get session cookie from websheet app (bug #13360987)
--    cneumuel    02/03/2012 - Added get_session_0_cookie_value (bug #13653895)
--    cneumuel    02/29/2012 - Renamed from wwv_flow_authentication_engine
--    cneumuel    03/28/2012 - Added throttle_login_attempts, log_login (bug #13713222)
--    cneumuel    03/30/2012 - Cleaned up login throttle code (bug #13713222)
--    cneumuel    04/02/2012 - Added add_login_throttle_onload_code.
--    cneumuel    04/05/2012 - In t_login_throttle,compute_login_throttle: use instance setting for delay (feature #899)
--    cneumuel    04/10/2012 - Added is_public_page (bug #13940433)
--    cneumuel    05/03/2012 - Moved get_login_help_for_app, get_translated_authent_name, activate_in_app to wwv_flow_authentication_dev
--    cneumuel    05/10/2012 - Removed dead code: send_session_cookie
--    cneumuel    05/16/2012 - Removed send_session_0_cookie, get_session_0_cookie_value, added get_session_id_if_public (bug #13708507)
--    cneumuel    06/14/2012 - extend login throttle to delay by username, ip or username+ip (feature #899)
--    cneumuel    07/03/2012 - In load_authentication, authenticate_and_init_session: added ui detection logic (feature #791)
--    cneumuel    08/08/2012 - In execute_login: added p_builder_login_for_workspace, to correctly log the workspace and appliy the throttle for builder logins
--    cneumuel    11/15/2012 - In execute_login: change workspace consistency check to allow builder login via other app than 4550 (bug #15867739)
--
--------------------------------------------------------------------------------

type t_authentication_result is record (
    is_valid     boolean,
    redirect_url varchar2(32767) );

type t_failed_login_counter is record (
    method_name    varchar2(30),
    counting       boolean,
    login_attempts pls_integer,
    last_login     date );

type t_login_throttle is record (
    username_counter    t_failed_login_counter,
    ip_counter          t_failed_login_counter,
    username_ip_counter t_failed_login_counter,
    delay_increase      pls_integer,
    delay_seconds       pls_integer );

--##############################################################################
--#
--# U T I L I T Y   F U N C T I O N S
--#
--##############################################################################

--==============================================================================
-- helper function to get the builtin login url in app 4155 for the current
-- page and session.
--==============================================================================
function get_builtin_login_url return varchar2;

--==============================================================================
-- get cookie properties for specified application
--==============================================================================
procedure get_cookie_properties (
    p_app_id        in number,
    p_cookie_name   out varchar2,
    p_cookie_path   out varchar2,
    p_cookie_domain out varchar2,
    p_secure        out boolean );

--==============================================================================
-- return the session id if the user is public
--==============================================================================
function get_session_id_if_public (
    p_app_id in number default wwv_flow_security.g_flow_id )
    return number;

--==============================================================================
-- Helper function for authorizations
--
-- Return if the current page is the invalid session (i.e. login) page
--==============================================================================
function is_invalid_session_page
    return boolean;

--==============================================================================
-- Helper function for authorizations
--
-- Return if the current page is a public page
--==============================================================================
function is_public_page
    return boolean;

--##############################################################################
--#
--# S E S S I O N   I N I T I A L I Z A T I O N
--#
--##############################################################################

--==============================================================================
-- Show/accept interface
--
-- The function to start authentication and initialize the session.
--==============================================================================
function authenticate_and_init_session (
    p_app_id         in number )
    return t_authentication_result;

--##############################################################################
--#
--# L O G I N / L O G O U T
--#
--##############################################################################

--==============================================================================
-- login interface
--
-- the entry point to the engine to perform user/password authentication.
--
-- ARGUMENTS
-- * p_username                    the end user's name
-- * p_password                    the end user's password
-- * p_current_app_id
-- * p_next_app_id
-- * p_next_page_id
-- * p_post_login                  if true, do not call pre-authentication and
--                                 authentication function, i.e. no credentials
--                                 hecking
-- * p_builder_login_for_workspace when called from wwv_flow_login.builder: the
--                                 workspace where the user wants to login. null
--                                 otherwise.
--==============================================================================
procedure execute_login (
    p_username                    in varchar2,
    p_password                    in varchar2,
    p_current_app_id              in number,
    p_next_app_id                 in number,
    p_next_page_id                in number,
    p_post_login                  in boolean default false,
    p_builder_login_for_workspace in number  default null );

--==============================================================================
-- custom_auth_std.logout interface
--
-- log out of session, using the authentication scheme of p_app_id.
-- if p_app_id=4900, then p_ws_app_id should contain the websheet app id.
--==============================================================================
procedure execute_logout (
    p_session_id in number,
    p_app_id     in number,
    p_ws_app_id  in number default null );

--##############################################################################
--#
--# L O G I N   T H R O T T L E
--#
--##############################################################################

--==============================================================================
-- if workspace expiry is enabled, create a record with the number of seconds
-- that login has to be delayed because of past login attempts.
-- if workspace expiry is disabled, return an empty record.
--==============================================================================
function create_login_throttle (
    p_security_group_id in number default wwv_flow_security.g_security_group_id,
    p_application_id    in number default wwv_flow_security.g_flow_id,
    p_username          in varchar2 )
    return t_login_throttle;

--==============================================================================
-- if workspace expiry is disabled, do nothing.
-- elsif p_throttle contains a delay, set p_authentication to failed because of
-- the login delay.
-- elsif p_add_1_failure, add a login failure and re-compute the delay.
--==============================================================================
procedure apply_login_throttle (
    p_throttle       in out nocopy t_login_throttle,
    p_authentication in out nocopy wwv_flow_plugin_api.t_authentication_auth_result,
    p_add_1_failure  in boolean default false );

--==============================================================================
-- add javascript code for login throttle timer
--==============================================================================
procedure add_login_throttle_onload_code;

--##############################################################################
--#
--# L O G G I N G
--#
--##############################################################################

--==============================================================================
-- write successful and failed login attempts to the access log.
--==============================================================================
procedure log_login (
    p_username               in varchar2,
    p_security_group_id      in number   default wwv_flow_security.g_security_group_id,
    p_owner                  in varchar2 default wwv_flow_security.g_parse_as_schema,
    p_application_id         in number   default wwv_flow_security.g_flow_id,
    p_authentication_method  in varchar2,
    p_authentication_result  in number,
    p_custom_status_text     in varchar2 default null );

end wwv_flow_authentication;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHENTICATION_NATIVE"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_authentication_native.sql
--
--    DESCRIPTION
--      This package provides an internal API for native authentication plugins
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/17/2011 - Created
--    cneumuel    05/26/2011 - Made ias_sso_invalid_session public, for reuse in internal authentication
--    pawolf      05/27/2011 - Added CGI_VARIABLE authentication
--    pawolf      06/17/2011 - Renamed CGI_VARIABLE to HTTP_HEADER_VARIABLE
--    cneumuel    10/17/2011 - Added get_header_cgi_username
--    pawolf      10/17/2011 - Added Cloud IDM authentication, added get_absolute_logout_url
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    cneumuel    02/29/2012 - Renamed from wwv_flow_native_authentication
--    pawolf      04/02/2012 - Added p_plugin to APIs
--    cneumuel    05/09/2012 - In ldap_authentication_hlp: ldap username escaping based on authentication scheme attribute value (bug #14047270)
--    cneumuel    05/10/2012 - Made ldap_authentication_impl public (bug #14047270)
--    cneumuel    04/03/2013 - In ldap_authentication_impl: added p_parse_as_schema for websheets (bug #16593319)
--
--------------------------------------------------------------------------------
--
--==============================================================================
-- native plugin scheme types
--==============================================================================
c_type_apex_accounts        constant varchar2(30) := 'NATIVE_APEX_ACCOUNTS';
c_type_ldap                 constant varchar2(30) := 'NATIVE_LDAP';
c_type_db_accounts          constant varchar2(30) := 'NATIVE_DB_ACCOUNTS';
c_type_open_door            constant varchar2(30) := 'NATIVE_OPEN_DOOR';
c_type_custom               constant varchar2(30) := 'NATIVE_CUSTOM';
c_type_dad                  constant varchar2(30) := 'NATIVE_DAD';
c_type_ias_sso              constant varchar2(30) := 'NATIVE_IAS_SSO';
c_type_http_header_variable constant varchar2(30) := 'NATIVE_HTTP_HEADER_VARIABLE';
c_type_cloud_idm            constant varchar2(30) := 'NATIVE_CLOUD_IDM';
--
--==============================================================================
--
subtype t_ssl_mode is varchar2(10);
c_ssl_mode_ssl      constant t_ssl_mode := 'SSL';
c_ssl_mode_ssl_auth constant t_ssl_mode := 'SSL_AUTH';
c_ssl_mode_no_ssl   constant t_ssl_mode := 'NO_SSL';

subtype t_ldap_esc is varchar2(4);
c_ldap_esc_std           constant t_ldap_esc := 'STD';
c_ldap_esc_special_chars constant t_ldap_esc := 'ONLY';
c_ldap_esc_no_escaping   constant t_ldap_esc := 'NO';

type t_custom_attributes is record (
    -- only for c_type_custom
    sso_partner_app_name varchar2(4000),
    -- for c_type_ldap and c_type_custom
    ldap_host            varchar2(4000),
    ldap_port            number,
    ssl_mode             varchar2(10),
    dn_string            varchar2(4000),
    use_exact_dn         boolean,
    search_filter        varchar2(4000),
    edit_function        varchar2(4000),
    username_escaping    t_ldap_esc );
--
--==============================================================================
-- Get CGI variable value for HEADER authentication
--==============================================================================
function get_header_cgi_username (
    p_cgi_variable in varchar2 )
    return varchar2;
--
--==============================================================================
-- Returns an absolute (including http://domain/) logout URL if the passed in
-- logout url is relative (for example f?p=xxx).
--==============================================================================
function get_absolute_logout_url (
    p_logout_url in varchar2,
    p_escape_url in boolean  default true )
    return varchar2;
--
--==============================================================================
-- Invalid Session function for iAS SSO authentication.
--==============================================================================
function ias_sso_invalid_session (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- This function returns the attribute values of the current application's
-- authentication scheme. It is only supported for LDAP and CUSTOM
-- authentication, for others an error is raised. If the authentication type is
-- native LDAP authentication, it returns the ldap attributes. If it is CUSTOM,
-- it additionally returns the sso partner app name.
--==============================================================================
function get_custom_attributes
    return t_custom_attributes;
--
--==============================================================================
-- perform the LDAP authentication check
--==============================================================================
function ldap_authentication_impl (
    p_username           in varchar2,
    p_password           in varchar2,
    p_ldap_attributes    in t_custom_attributes,
    p_parse_as_schema    in varchar2 default wwv_flow_security.g_parse_as_schema )
    return wwv_flow_plugin_api.t_authentication_auth_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin_rt to run the session sentry
-- function.
--==============================================================================
function execute_session_sentry (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin_rt to run the invalid
-- session function.
--==============================================================================
function execute_invalid_session (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin_rt to run the authentication
-- function for verifying the end user's username/password credentials.
--==============================================================================
function execute_authentication (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_password       in varchar2 )
    return wwv_flow_plugin_api.t_authentication_auth_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin_rt to run the
-- "ajax_function" callback triggered by external authentication servers.
--==============================================================================
function execute_ajax_callback (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Native plugin interface
--
-- This function is called from wwv_flow_plugin_rt to run the
-- post logout function.
--==============================================================================
function execute_post_logout (
    p_type           in varchar2,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_logout_result;

end wwv_flow_authentication_native;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHENTICATION_F4155" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_authentication_f4155.sql
--
--    DESCRIPTION
--      Authentication for application 4155
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/17/2013 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Internal login application authentication plugin
--
-- Check if session can be used.
--==============================================================================
function session_sentry (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;

end wwv_flow_authentication_f4155;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CLOUD_IDM"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_cloud_idm.sql
--
--    DESCRIPTION
--      Add description of the package.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    10/25/2011 - Created
--      cneumuel  10/27/2011 - Added builder_% functions for cloud builder authentication (bug #13101596)
--      pawolf    11/10/2011 - Added get_cloud_return_url and set_cloud_return_url (bug 13004647)
--      cneumuel  11/29/2011 - Added ws_session_sentry, ws_invalid_session, ws_ajax (bug #13360987)
--      pawolf    02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--      cneumuel  02/29/2012 - Authentication package renaming
--      cneumuel  03/09/2012 - Added get_workspace_privilege (bug #13824999)
--      cneumuel  05/30/2012 - Removed get_cloud_return_url, set_cloud_return_url (bug #14136239)
--
--------------------------------------------------------------------------------

subtype t_workspace_privilege is varchar2(13);
c_priv_admin     constant t_workspace_privilege := 'ADMINISTRATOR';
c_priv_developer constant t_workspace_privilege := 'DEVELOPER';
c_priv_user      constant t_workspace_privilege := 'USER';

--
--==============================================================================
-- Session Sentry function for native CLOUD_IDM authentication.
--==============================================================================
function native_session_sentry (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Invalid Session function for native CLOUD_IDM authentication.
--==============================================================================
function native_invalid_session (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- AJAX function for native CLOUD_IDM authentication.
--==============================================================================
function native_ajax (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Post Logout function for native CLOUD_IDM authentication.
--==============================================================================
function native_post_logout (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_logout_result;
--
--==============================================================================
-- Session Sentry function for builder CLOUD_IDM authentication.
--==============================================================================
function builder_session_sentry (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Invalid Session function for builder CLOUD_IDM authentication.
--==============================================================================
function builder_invalid_session (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- AJAX function for builder CLOUD_IDM authentication.
--==============================================================================
function builder_ajax (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Post Logout function for builder CLOUD_IDM authentication.
--==============================================================================
function builder_post_logout (
    p_authentication in wwv_flow_plugin_api.t_authentication )
    return wwv_flow_plugin_api.t_authentication_logout_result;
--
--==============================================================================
-- websheet session sentry
--==============================================================================
function ws_session_sentry
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- websheet invalid session handler
--==============================================================================
function ws_invalid_session
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- websheet ajax callback
--==============================================================================
function ws_ajax
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Checks if the specified user groups are assigned to the current user.
--==============================================================================
function check_usergroups (
    p_authorization in wwv_flow_plugin_api.t_authorization )
    return wwv_flow_plugin_api.t_authorization_exec_result;
--
--==============================================================================
-- Returns the privilege of the current user in the current workspace, based on
-- IDM groups:
-- - c_priv_admin if HTTP_OAM_REMOTE_USER_GROUPS contains a DB_ADMINISTRATOR
--   role for the service,
-- - c_priv_developer if it contains DB_DEVELOPER for the service,
-- - c_priv_user otherwise
--==============================================================================
function get_workspace_privilege
    return t_workspace_privilege;

end wwv_flow_cloud_idm;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_MAINT"
as
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Maintenance procedures for Oracle Appliation Express
--

procedure archive_activity_summary;

procedure daily_maintenance;

end wwv_flow_maint;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_APPLICATION_INSTALL" as

--  Copyright (c) Oracle Corporation 2010. All Rights Reserved.
--
--    NAME
--      wwv_flow_application_install
--
--    DESCRIPTION
--      Methods used to control APEX application installation behavior.  If not set,
--      then an APEX application will install normally.  However, if these global are set,
--      then these will take precedence over those specified in the application export file
--
--
--
--
--

--
-- Workspace ID
--
procedure set_workspace_id(
    p_workspace_id in number );

function get_workspace_id
    return number;


--
-- Application ID
--
procedure set_application_id(
    p_application_id in number );

function get_application_id
    return number;

procedure generate_application_id;


--
-- Offset
--
procedure set_offset(
    p_offset in number );

procedure generate_offset;

function get_offset
    return number;


--
-- Schema
--
procedure set_schema(
    p_schema in varchar2 );

function get_schema
    return varchar2;


--
-- Name
--
procedure set_application_name(
    p_application_name in varchar2 );

function get_application_name
    return varchar2;


--
-- Alias
--
procedure set_application_alias(
    p_application_alias in varchar2 );

function get_application_alias
    return varchar2;


--
-- Image Prefix
--
procedure set_image_prefix(
    p_image_prefix in varchar2 );

function get_image_prefix
    return varchar2;


--
-- Proxy
--
procedure set_proxy(
    p_proxy in varchar2 );

function get_proxy
    return varchar2;


--
-- Publish Application
--
procedure publish_application(
    p_application_id in number,
    p_language_code  in varchar2,
    p_new_translated_app_id in number default null );



--
-- Clear
--
procedure clear_all;



end wwv_flow_application_install;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TREE_REGION"
as

--
-- Procedure which reads the meta data for the tree and initializes other
-- global variables.
-- Note: This procedure has to be called before calling any other procedure in
--       this package
procedure init (
    p_application_id in number,
    p_page_id        in number,
    p_region_id      in number);
--
--
-- Procedure which generates the necessary HTML code for the tree.
-- Note: init has to be called before calling this procedure
procedure show_tree;

--
-- Central dispatch procedure for refreshing parts of the tree. Called from the
-- on-demand process on the generated page.
procedure get_tree_data;

-- Retrieve jsTree attributes
procedure fetch_jstree_attr  (
    p_flow_id                   in number,
    p_region_id                 in number,
    p_tree_template             out varchar2,
    p_tree_source               out varchar2,
    p_tree_query                out varchar2,
    p_tree_node_title           out varchar2,
    p_tree_node_value           out varchar2,
    p_tree_node_icon            out varchar2,
    p_tree_node_link            out varchar2,
    p_tree_node_hints           out varchar2,
    p_show_node_link            out varchar2,
    p_node_link_checksum_type   out varchar2,
    p_show_hints                out varchar2,
    p_tree_hint_text            out varchar2,
    p_tree_has_focus            out varchar2,
    p_tree_click_action         out varchar2,
    p_selected_node             out varchar2
    );

-- Save jsTree attributes
procedure save_jstree_attr  (
    p_flow_id                   in number default null,
    p_page_id                   in number default null,
    p_region_id                 in number default null,
    p_tree_template             in varchar2 default null,
    p_tree_source               in varchar2 default null,
    p_tree_query                in varchar2 default null,
    p_tree_node_title           in varchar2 default null,
    p_tree_node_value           in varchar2 default null,
    p_tree_node_icon            in varchar2 default null,
    p_tree_node_link            in varchar2 default null,
    p_tree_node_hints           in varchar2 default null,
    p_show_node_link            in varchar2 default null,
    p_node_link_checksum_type   in varchar2 default null,
    p_show_hints                in varchar2 default null,
    p_tree_hint_text            in varchar2 default null,
    p_tree_has_focus            in varchar2 default null,
    p_tree_click_action         in varchar2 default null,
    p_selected_node             in varchar2 default null
    );


/*function is_valid_tree_item_query (
    p_query in varchar2
    ) return boolean; */

procedure set_tree(
    p_tree        in wwv_flow_plugin_util.t_column_value_list
);

procedure set_tree_id(
    p_tree_id     in number
);

procedure set_tree_template(
    p_tree_template  in varchar2
);

procedure set_tree_has_focus(
    p_tree_has_focus in varchar2
);

procedure set_tree_action(
    p_tree_action  in varchar2
);

procedure set_hints(
    p_hints  in varchar2
);

procedure set_hints_text(
    p_hints_text  in varchar2
);

function is_valid_start_query(
    p_sql        in varchar2
) return boolean;

end wwv_flow_tree_region;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_ATTACHMENT"
as

procedure add_doc (
    p_ws_app_id       in number,
    p_webpage_id      in number default null,
    p_websheet_id     in number default null,
    p_row_id          in varchar2 default null,
    p_component_level in varchar2 default null,
    p_file_name       in varchar2 default null,
    p_image_alias     in varchar2 default null,
    p_desc            in varchar2 default null
    );

procedure delete_doc (
    p_doc_id    in varchar2
    );

procedure change_image_attr (
    p_ws_app_id        in number,
    p_file_id          in number,
    p_page_id          in number default null,
    p_image_alias      in varchar2 default null,
    p_image_attributes in varchar2 default null,
    p_description      in varchar2 default null
    );

function get_ws_file_src (
    p_file_id in number )
    return varchar2;

procedure get_ws_file (
    p_session_id in number,
    p_file_id    in number,
    p_checksum   in varchar2 );

end wwv_flow_ws_attachment;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_GEOCODE"
as

function get_geocode (
    p_worksheet_id  in varchar2,
    p_address       in varchar2
    ) return varchar2;

procedure cache_geocode (
    p_address   in varchar2,
    p_geocode   in varchar2
    );

procedure save_geocodes (
    p_worksheet_id  in varchar2,
    p_columns       in varchar2
    );

procedure reset_geocodes (
    p_worksheet_id  in varchar
    );

end wwv_flow_ws_geocode;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_STICKIES"
as
procedure show_stickies (
    p_application_id    in number,
    p_worksheet_id      in number,
    p_session           in number,
    p_row_id            in number,
    p_print             in varchar2 default 'Y',
    p_body_array        out wwv_flow_global.vc_arr2)
    ;
end wwv_flow_ws_stickies;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_FLASH_CHART"
as

procedure chart(p_section_id in number default null);

end wwv_flow_ws_flash_chart;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_WEBPAGE"
as

g_tree                  wwv_flow_plugin_util.t_column_value_list; -- for use with jstrees
g_running_data_section  boolean := false;

type t_datagrid_section is record (
    section_id           number,
    show_edit_row        varchar2(1),
    max_row_count        number,
    last_page_id         number);
g_data_grid_section t_datagrid_section;

g_data_section_html     varchar2(32767) := null; -- for data section

function clean_out_editor_tag (
    p_string        in clob)
    return clob;

function validate_string (
    p_str              in clob,
    p_ws_app_id        in number,
    p_page_id          in number,
    p_section_id       in number) return varchar2;

procedure show_tag_clouds (
    p_ws_app_id             in number,
    p_session_id            in number,
    p_alpha                 in number default 1,
    p_max                   in number default 100,
    p_limit                 in number default 10000,
    p_link_to_page          in varchar2 default '904',
    p_tag_item_filter       in varchar2 default 'IRC_TAG',
    p_clear_cache           in varchar2 default '904,RIR') ;

procedure show (
    p_ws_app_id         in number,
    p_webpage_id        in number,
    p_request           in varchar2 default null,
    p_presentation_mode in varchar2 default 'N');

function get_login_url(
	p_ws_app_id  in number,
	p_ws_page_id in number default null )
return varchar2;

function get_url (
    p_ws_app_id       in number,
    p_session         in number,
    p_alias           in varchar2,
    p_url_postfix     in varchar2 default null )
    return varchar2;

function get_anchor (
    p_ws_app_id       in number,
    p_session         in number,
    p_alias           in varchar2,
    p_url_postfix     in varchar2 default null,
    p_text            in varchar2,
    p_escape_sc       in varchar2 default 'Y')
    return varchar2;

end wwv_flow_ws_webpage;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_UI"
as

procedure page_header (
    p_app_id     in number,
    p_session    in number,
    p_app_user   in varchar2,
    p_ws_app_id  in number);

procedure control_panel (
    p_app_id      in number,
    p_session     in number,
    p_ws_app_id   in number,
    p_ws_page_id  in number);

procedure show_breadcrumbs (
    p_ws_app_id            in number,
    p_app_session          in number,
    p_page_id              in number,
    p_image_prefix         in varchar2 default null,
    p_parent_entry         in varchar2 default null,
    p_parent_entry_page_id in number default null,
    p_current_entry        in varchar2 default null);

procedure show_slide_breadcrumbs (
    p_ws_app_id            in number,
    p_app_session          in number,
    p_page_id              in number,
    p_image_prefix         in varchar2 default null);

procedure show_attachments (
    p_ws_app_id   in number,
    p_webpage_id  in number);

procedure show_notes (
    p_session     in number,
    p_ws_app_id   in number,
    p_webpage_id  in number);

procedure show_tags (
    p_ws_app_id   in number,
    p_webpage_id  in number);

procedure p22_data_grid_list (
    p_app_id       in number,
    p_app_session  in number,
    p_ws_app_id    in number,
    p_data_grid_id in number);

procedure p22_data_grid_columns (
    p_data_grid_id   in number);

procedure p22_data_grid_query (
    p_data_grid_id   in number);

procedure p900_footer (
    p_app_id          in number default 0,
    p_ws_app_id       in number default 0,
    p_page_id         in number default 0,
    p_app_session     in number default 0
    );

procedure print_custom_css (
    p_ws_app_id  in number
    );

procedure plsql_example;

procedure show_data_grid_menu (
    p_ws_app_id   in number,
    p_app_session in number);

procedure show_report_menu (
    p_ws_app_id   in number,
    p_app_session in number);

procedure data_grid_sql_help (
    p_app_id       in number,
    p_app_session  in number,
    p_ws_app_id    in number);
end wwv_flow_ws_ui;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_IMPORT" as

function is_date (
    p_str    in varchar2,
    p_format out varchar2) return boolean;

procedure import_csv (
     p_flow_id            number default null,
     p_ws_app_id          number,
     p_worksheet_id       number,
     p_websheet_id        number,
     p_collection_name    varchar2,
     p_headings_included  varchar2);

procedure import_text_sections (
    p_ws_app_id           in number,
    p_webpage_id          in number,
    p_collection_name     in varchar2,
    p_headings_included   in varchar2 default 'Y');
end wwv_flow_ws_import;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_DIALOG" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_ws_dialog.sql
--
--    DESCRIPTION
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED (MM/DD/YYYY)
--    cbcho     03/31/2008 - Created
--    cbcho     07/01/2008 - Changed list_of_values to edit existing LOV
--    cbcho     07/24/2008 - Added add_column_validation
--    cbcho     07/29/2008 - Added p_mode to column_groups
--    cbcho     08/18/2008 - Added p_websheet_id to add_notification
--    cbackstr  08/20/2008 - Added list_of_values_text to get csv string of LOV item
--    cbcho     04/23/2009 - Added p_websheet_id where needed
--    cbcho     05/22/2009 - Added p_link_id to add_links
--    cbcho     05/28/2009 - Changed reset_geocode to accept p_websheet_id
--    cbcho     08/04/2009 - Removed add_notification
--    cbcho     08/14/2009 - Added p_note_id to add_notes
--    cbcho     09/04/2009 - Removed add_webpage_section
--    jkallman  02/05/2010 - Removed websheet_sharing
--    arayner   04/15/2010 - Added p_column_name parameter to add_column_validation
--    cneumuel  12/10/2012 - Added ondemand_dialog (bug #15977940)
--
--------------------------------------------------------------------------------

procedure websheet_properties (
    p_worksheet_id   in number,
    p_base_report_id in number,
    p_app_user       in varchar2,
	p_mode           in varchar2 default 'REPORT'
    );

procedure add_column (
    p_worksheet_id   in number,
	p_mode           in varchar2 default 'REPORT'
    );

procedure column_properties (
    p_worksheet_id        in number,
    p_base_report_id      in number,
    p_app_user            in varchar2,
    p_column_name         in varchar2 default null,
    p_mode                in varchar2 default 'REPORT');

procedure list_of_values_text (
    p_worksheet_id        in number,
    p_base_report_id      in number,
    p_app_user            in varchar2,
    p_lov_id              in number default null,
    p_mode                in varchar2 default 'REPORT');

procedure list_of_values (
    p_worksheet_id        in number,
    p_base_report_id      in number,
    p_app_user            in varchar2,
    p_lov_id              in number default null,
    p_mode                in varchar2 default 'REPORT');

procedure remove_columns (
    p_worksheet_id        in number,
    p_base_report_id      in number,
    p_app_user            in varchar2,
	p_mode                in varchar2 default 'REPORT'
	);

procedure set_column_value (
    p_worksheet_id    in number,
    p_base_report_id  in number,
    p_app_user        in varchar2,
	p_mode            in varchar2 default 'REPORT');

procedure replace_value (
    p_worksheet_id    in number,
    p_base_report_id  in number,
    p_app_user        in varchar2,
	p_mode            in varchar2 default 'REPORT');

procedure fill (
    p_worksheet_id    in number,
    p_base_report_id  in number,
    p_app_user        in varchar2,
	p_mode            in varchar2 default 'REPORT');

procedure delete_rows (
    p_worksheet_id    in number,
    p_base_report_id  in number,
    p_app_user        in varchar2,
	p_mode            in varchar2 default 'REPORT');

procedure geocode (
    p_worksheet_id     in number,
    p_base_report_id   in number,
    p_app_user         in varchar2,
	p_mode             in varchar2 default 'REPORT');

procedure copy (
    p_worksheet_id in number,
	p_mode         in varchar2 default 'REPORT'
    );

procedure export (
    p_worksheet_id in number,
	p_mode         in varchar2 default 'REPORT'
    );

procedure delete_websheet (
    p_worksheet_id     in number,
    p_base_report_id   in number,
    p_app_user         in varchar2,
	p_mode             in varchar2 default 'REPORT');

procedure column_groups (
    p_worksheet_id     in number,
    p_base_report_id   in number,
    p_app_user         in varchar2,
    p_group_id         in number default null,
    p_mode             in varchar2 default 'REPORT');

procedure reset_geocode (
    p_worksheet_id   in number,
    p_websheet_id    in number,
    p_base_report_id in number,
    p_app_user       in varchar2,
	p_mode           in varchar2 default 'REPORT');

procedure column_expression  (
    p_worksheet_id    in number,
    p_base_report_id  in number,
    p_app_user        in varchar2,
	p_mode            in varchar2 default 'REPORT'
    );

procedure add_attachment (
    p_worksheet_id  in number,
	p_mode          in varchar2 default 'REPORT'
    );

procedure add_notes (
    p_worksheet_id  in number default null,
	p_mode          in varchar2 default 'REPORT',
	p_note_id       in number default null
    );

procedure add_links (
    p_worksheet_id  in number,
	p_mode          in varchar2 default 'REPORT',
	p_link_id       in number default null
    );

procedure add_tags (
    p_worksheet_id  in number,
    p_row_id        in number,
	p_mode          in varchar2 default 'REPORT'
    );

procedure move_columns (
    p_worksheet_id     in number,
	p_mode             in varchar2 default 'REPORT'
    );

procedure add_column_validation (
    p_worksheet_id    in number,
    p_app_user        in varchar2,
    p_base_report_id  in number,
    p_validation_id   in number         default null,
    p_column_name     in varchar2       default null,
	p_mode            in varchar2       default 'REPORT'
    );

--==============================================================================
-- on-demand process DIALOG in 4900
--==============================================================================
procedure ondemand_dialog (
    p_websheet_id     in number,  -- P2_WEBSHEET_ID
    p_worksheet_id    in number,  -- P2_ID
    p_base_report_id  in number,  -- RPT_ID
    p_row_id          in number );-- CURRENT_WORKSHEET_ROW

end  wwv_flow_ws_dialog;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_FORM"
as

procedure show_column_popup (
    p_db_column_name in varchar2,
    p_workspace_id   in number,
    p_worksheet_id   in number);

procedure show_actions (
    p_row_id         in number,
    p_ws_app_id      in number default null,
    p_ir_id          in number default null,
    p_data_grid_id   in number default null
    );

procedure show (
    p_ws_app_id            in number,
    p_worksheet_id         in number,
    p_data_grid_id         in number,
    p_app_user             in varchar2,
    p_row_id               in varchar2 default null,
    p_session              in number   default null,
    p_base_report_id       in number   default null,
    p_partial_page_refresh in boolean,
    p_validation_passed    in varchar2 default 'Y',
    p_last_page_id         in number default null,
    p_last_section_id      in number default null
    );

end wwv_flow_ws_form;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WEBSERVICES_API"
as

empty_vc_arr wwv_flow_global.vc_arr2;

g_request_cookies   sys.utl_http.cookie_table;
g_response_cookies  sys.utl_http.cookie_table;

type header is record (name varchar2(256), value varchar2(1024));
type header_table is table of header index by binary_integer;

g_headers           header_table;
g_request_headers   header_table;

g_status_code       pls_integer;

function blob2clobbase64 (
--
-- This function converts a blob to base64 character encoded representation and
-- returns it as a clob.
--
-- Arguments:
--   p_blob                 The blob to convert
--
--
    p_blob in blob ) return clob;

function clobbase642blob (
--
-- This function converts base64 encoded binary data and returns it as a blob.
--
-- Arguments:
--   p_clob                 The base64 encoded data
--
--
    p_clob in clob ) return blob;

procedure make_request (
--
-- This procedure invokes a Web service with the supplied SOAP envelope and stores
-- the response in a collection.
--
-- Arguments:
--   p_url                  The url endpoint of the Web service
--   p_action               The SOAP Action corresponding to the operation invoked
--   p_version              The SOAP version, 1.1 or 1.2
--   p_collection_name      The name of the collection to store the response
--   p_envelope             The SOAP envelope to post to the service
--   p_username             The username if basic authentication is required for this service
--   p_password             The password if basic authentication is required for this service
--   p_proxy_override       The proxy to use for the request
--   p_transfer_timeout     The amount of time in seconds to wait for a response
--   p_wallet_path          The filesystem path to a wallet if request is https
--                          ex., file:/usr/home/oracle/WALLETS
--   p_wallet_pwd           The password to access the wallet
--
    p_url               in varchar2,
    p_action            in varchar2 default null,
    p_version           in varchar2 default '1.1',
    p_collection_name   in varchar2 default null,
    p_envelope          in clob,
    p_username          in varchar2 default null,
    p_password          in varchar2 default null,
    p_proxy_override    in varchar2 default null,
    p_transfer_timeout  in number default 180,
    p_wallet_path       in varchar2 default null,
    p_wallet_pwd        in varchar2 default null );

function make_request (
--
-- This function invokes a Web service with the supplied SOAP envelope and returns
-- the response as an sys.xmltype.
--
-- Arguments:
--   p_url                  The url endpoint of the Web service
--   p_action               The SOAP Action corresponding to the operation invoked
--   p_version              The SOAP version, 1.1 or 1.2
--   p_envelope             The SOAP envelope to post to the service
--   p_username             The username if basic authentication is required for this service
--   p_password             The password if basic authentication is required for this service
--   p_proxy_override       The proxy to use for the request
--   p_transfer_timeout     The amount of time in seconds to wait for a response
--   p_wallet_path          The filesystem path to a wallet if request is https
--                          ex., file:/usr/home/oracle/WALLETS
--   p_wallet_pwd           The password to access the wallet
--
    p_url               in varchar2,
    p_action            in varchar2 default null,
    p_version           in varchar2 default '1.1',
    p_envelope          in clob,
    p_username          in varchar2 default null,
    p_password          in varchar2 default null,
    p_proxy_override    in varchar2 default null,
    p_transfer_timeout  in number default 180,
    p_wallet_path       in varchar2 default null,
    p_wallet_pwd        in varchar2 default null ) return sys.xmltype;

function make_rest_request(
--
-- This function invokes a RESTful Web service with the supplied name value pairs, body clob, or body blob
-- the response as an clob.
--
-- Arguments:
--   p_url                  The url endpoint of the Web service
--   p_http_method          The HTTP Method to use, PUT, POST, GET, HEAD or DELETE
--   p_username             The username if basic authentication is required for this service
--   p_password             The password if basic authentication is required for this service
--   p_proxy_override       The proxy to use for the request
--   p_body                 The HTTP payload to be sent as clob
--   p_body_blob            The HTTP payload to be sent as binary blob (ex., posting a file)
--   p_parm_name            The name of the parameters to be used in name/value pairs
--   p_parm_value           The value of the paramters to be used in name/value pairs
--   p_wallet_path          The filesystem path to a wallet if request is https
--                          ex., file:/usr/home/oracle/WALLETS
--   p_wallet_pwd           The password to access the wallet
--
    p_url               in varchar2,
    p_http_method       in varchar2,
    p_username          in varchar2 default null,
    p_password          in varchar2 default null,
    p_proxy_override    in varchar2 default null,
    p_transfer_timeout  in number default 180,
    p_body              in clob default empty_clob(),
    p_body_blob         in blob default empty_blob(),
    p_parm_name         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_wallet_path       in varchar2 default null,
    p_wallet_pwd        in varchar2 default null ) return clob;

function parse_xml (
--
-- This function returns a particular node of an xml document and returns it as
-- a varchar.
--
-- Arguments:
--   p_xml                  The xmldocument as an sys.xmltype to parse
--   p_xpath                The xPath to the desired node
--   p_ns                   The namespace to the desired node
    p_xml               in sys.xmltype,
    p_xpath             in varchar2,
    p_ns                in varchar2 default null ) return varchar2;

function parse_xml_clob (
--
-- This function returns a particular node of an xml document and returns it as
-- a clob.
--
-- Arguments:
--   p_xml                  The xmldocument as an sys.xmltype to parse
--   p_xpath                The xPath to the desired node
--   p_ns                   The namespace to the desired node
    p_xml               in sys.xmltype,
    p_xpath             in varchar2,
    p_ns                in varchar2 default null ) return clob;

function parse_response (
--
-- This function converts the clob001 column of passed collection to an sys.xmltype
-- and then returns a particular node of that document.
--
-- Arguments:
--   p_collection_name      The name of the collection that has the xml document
--   p_xpath                The xPath to the desired node
--   p_ns                   The namespace to the desired node
    p_collection_name   in varchar2,
    p_xpath             in varchar2,
    p_ns                in varchar2 default null ) return varchar2;

function parse_response_clob (
--
-- This function converts the clob001 column of passed collection to an sys.xmltype
-- and then returns a particular node of that document.
--
-- Arguments:
--   p_collection_name      The name of the collection that has the xml document
--   p_xpath                The xPath to the desired node
--   p_ns                   The namespace to the desired node
    p_collection_name   in varchar2,
    p_xpath             in varchar2,
    p_ns                in varchar2 default null ) return clob;


end wwv_flow_webservices_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_AUTH"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_ws_auth.sql
--
--    DESCRIPTION
--      This package is resonsible for handling Websheet security.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      04/08/2009 - Created
--    cbcho       04/22/2009 - Deprecated all procedure related to projects since Websheet will not have projects
--    jkallman    02/05/2010 - Removed all workgroup and other unnecessary procedures
--
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Public type definitions
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Global variables
--------------------------------------------------------------------------------

--
--==============================================================================
-- Called from VPD to set the teamspace schema which is assigned to the
-- workspace.
--==============================================================================
procedure init_schema;

--==============================================================================
-- xxx
--==============================================================================
function guid return number;


--
--
end wwv_flow_ws_auth;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_SETUP"
as
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Utility package to manage APEX$ tables.
--
--    NOTES
--
--

g_apex$_status_collection    varchar2(255) := 'APEX$_OBJECT_STATUS';
g_invalid_apex$_collection   varchar2(255) := 'APEX$_OBJECTS_INVALID';
g_invalid_apex$_detail       varchar2(255) := 'APEX$_OBJECTS_INVALID_DETAIL';

function enough_space_available(
    p_schema           in varchar2,
    --
    p_additional_space out varchar2) return boolean;

function get_apex$_schema (
    p_workspace_id  in number default null) return varchar2;

function setup_exists (
    p_workspace_id  in number default null) return boolean;

function one_workspace_schema_exists return boolean;

function get_invalid_obj_ddl (
    p_object_type in varchar2,
    p_object_name in varchar2) return clob;

procedure display_setup_info (
    p_session_id   in number);

procedure display_setup_multi_schemas (
    p_schema   in varchar2,
    p_session_id   in number);

procedure display_setup_confirm (
    p_schema  in varchar2);

procedure display_remove_confirm;

procedure display_recreate_confirm;

procedure display_invalid_obj_ddl;

procedure get_object_status;

function all_object_valid (
    p_get_object_status  in varchar2 default 'Y'
    ) return boolean;

function all_object_valid2 return boolean;

procedure recreate_invalid_objects;

procedure remove;

procedure install (
    p_schema         in varchar2,
    p_workspace_id   in number default null,
    p_install_to     in varchar2 default 'CURRENT_WORKSPACE'
    );

end  wwv_flow_ws_setup;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_EXPORT"
is

g_mime_shown                 boolean := false;
g_file_id                    number;
g_blob_content               blob;
g_text                       varchar2(32767) := null;
g_lf                         varchar2(10) := unistr('\000a');
g_cr                         varchar2(10) := unistr('\000d');

procedure export (
    p_ws_app_id                   in number,
    p_format                      in varchar2 default 'UNIX',
    p_commit                      in varchar2 default 'YES',
    p_export_datagrid_data        in varchar2 default 'N',
    p_export_datagrid_annotations in varchar2 default 'N',
    p_export_page_annotations     in varchar2 default 'N',
    p_export_public_reports       in varchar2 default 'N',
    p_export_private_reports      in varchar2 default 'N',
    p_export_subscriptions        in varchar2 default 'N',
    p_file_id                     in number   default null
    );

end wwv_flow_ws_export;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WS_IMPORT_API"
authid current_user
as

procedure create_acl (
    p_id              in number default null,
    p_ws_app_id       in number default null,
    p_username        in varchar2 default null,
    p_priv            in varchar2 default null);

procedure create_section (
    p_id                    in number default null,
    p_ws_app_id             in number default null,
    p_webpage_id            in number default null,
    p_section_type          in varchar2 default null,
    p_display_sequence      in number default null,
    p_title                 in varchar2 default null,
    p_content               in varchar2 default null,
    p_content_upper         in varchar2 default null,
    p_nav_start_webpage_id  in number default null,
    p_nav_max_level         in number default null,
    p_nav_order_by          in varchar2 default null,
    p_nav_include_link      in varchar2 default null,
    p_data_grid_id          in number default null,
    p_report_id             in number default null,
    p_data_section_style    in number default null,
    p_max_row_count         in number default null,
    p_show_add_row          in varchar2 default null,
    p_show_edit_row         in varchar2 default null,
    p_show_search           in varchar2 default null,
    p_chart_type            in varchar2 default null,
    p_chart_3d              in varchar2 default null,
    p_chart_label           in varchar2 default null,
    p_label_axis_title      in varchar2 default null,
    p_chart_value           in varchar2 default null,
    p_value_axis_title      in varchar2 default null,
    p_chart_aggregate       in varchar2 default null,
    p_chart_sorting         in varchar2 default null
    );

procedure create_row (
    p_id                 in number default null,
    p_ws_app_id          in number default null,
    p_data_grid_id       in number default null,
    p_unique_value       in varchar2 default null,
    p_tags               in varchar2 default null,
    p_parent_row_id      in number default null,
    p_owner              in varchar2 default null,
    p_geocode            in varchar2 default null,
    p_load_order         in number default null,
    --p_change_count    in default number,
    p_c001               in varchar2 default null,
    p_c002               in varchar2 default null,
    p_c003               in varchar2 default null,
    p_c004               in varchar2 default null,
    p_c005               in varchar2 default null,
    p_c006               in varchar2 default null,
    p_c007               in varchar2 default null,
    p_c008               in varchar2 default null,
    p_c009               in varchar2 default null,
    p_c010               in varchar2 default null,
    p_c011               in varchar2 default null,
    p_c012               in varchar2 default null,
    p_c013               in varchar2 default null,
    p_c014               in varchar2 default null,
    p_c015               in varchar2 default null,
    p_c016               in varchar2 default null,
    p_c017               in varchar2 default null,
    p_c018               in varchar2 default null,
    p_c019               in varchar2 default null,
    p_c020               in varchar2 default null,
    p_c021               in varchar2 default null,
    p_c022               in varchar2 default null,
    p_c023               in varchar2 default null,
    p_c024               in varchar2 default null,
    p_c025               in varchar2 default null,
    p_c026               in varchar2 default null,
    p_c027               in varchar2 default null,
    p_c028               in varchar2 default null,
    p_c029               in varchar2 default null,
    p_c030               in varchar2 default null,
    p_c031               in varchar2 default null,
    p_c032               in varchar2 default null,
    p_c033               in varchar2 default null,
    p_c034               in varchar2 default null,
    p_c035               in varchar2 default null,
    p_c036               in varchar2 default null,
    p_c037               in varchar2 default null,
    p_c038               in varchar2 default null,
    p_c039               in varchar2 default null,
    p_c040               in varchar2 default null,
    p_c041               in varchar2 default null,
    p_c042               in varchar2 default null,
    p_c043               in varchar2 default null,
    p_c044               in varchar2 default null,
    p_c045               in varchar2 default null,
    p_c046               in varchar2 default null,
    p_c047               in varchar2 default null,
    p_c048               in varchar2 default null,
    p_c049               in varchar2 default null,
    p_c050               in varchar2 default null,
    p_n001               in number default null,
    p_n002               in number default null,
    p_n003               in number default null,
    p_n004               in number default null,
    p_n005               in number default null,
    p_n006               in number default null,
    p_n007               in number default null,
    p_n008               in number default null,
    p_n009               in number default null,
    p_n010               in number default null,
    p_n011               in number default null,
    p_n012               in number default null,
    p_n013               in number default null,
    p_n014               in number default null,
    p_n015               in number default null,
    p_n016               in number default null,
    p_n017               in number default null,
    p_n018               in number default null,
    p_n019               in number default null,
    p_n020               in number default null,
    p_n021               in number default null,
    p_n022               in number default null,
    p_n023               in number default null,
    p_n024               in number default null,
    p_n025               in number default null,
    p_n026               in number default null,
    p_n027               in number default null,
    p_n028               in number default null,
    p_n029               in number default null,
    p_n030               in number default null,
    p_n031               in number default null,
    p_n032               in number default null,
    p_n033               in number default null,
    p_n034               in number default null,
    p_n035               in number default null,
    p_n036               in number default null,
    p_n037               in number default null,
    p_n038               in number default null,
    p_n039               in number default null,
    p_n040               in number default null,
    p_n041               in number default null,
    p_n042               in number default null,
    p_n043               in number default null,
    p_n044               in number default null,
    p_n045               in number default null,
    p_n046               in number default null,
    p_n047               in number default null,
    p_n048               in number default null,
    p_n049               in number default null,
    p_n050               in number default null,
    p_d001               in date default null,
    p_d002               in date default null,
    p_d003               in date default null,
    p_d004               in date default null,
    p_d005               in date default null,
    p_d006               in date default null,
    p_d007               in date default null,
    p_d008               in date default null,
    p_d009               in date default null,
    p_d010               in date default null,
    p_d011               in date default null,
    p_d012               in date default null,
    p_d013               in date default null,
    p_d014               in date default null,
    p_d015               in date default null,
    p_d016               in date default null,
    p_d017               in date default null,
    p_d018               in date default null,
    p_d019               in date default null,
    p_d020               in date default null,
    p_d021               in date default null,
    p_d022               in date default null,
    p_d023               in date default null,
    p_d024               in date default null,
    p_d025               in date default null,
    p_d026               in date default null,
    p_d027               in date default null,
    p_d028               in date default null,
    p_d029               in date default null,
    p_d030               in date default null,
    p_d031               in date default null,
    p_d032               in date default null,
    p_d033               in date default null,
    p_d034               in date default null,
    p_d035               in date default null,
    p_d036               in date default null,
    p_d037               in date default null,
    p_d038               in date default null,
    p_d039               in date default null,
    p_d040               in date default null,
    p_d041               in date default null,
    p_d042               in date default null,
    p_d043               in date default null,
    p_d044               in date default null,
    p_d045               in date default null,
    p_d046               in date default null,
    p_d047               in date default null,
    p_d048               in date default null,
    p_d049               in date default null,
    p_d050               in date default null,
    p_clob001            in varchar2 default null,
    p_search_clob        in varchar2 default null);

procedure create_file (
    p_id                     in number default null,
    p_ws_app_id              in number default null,
    p_data_grid_id           in number default null,
    p_row_id                 in number default null,
    p_webpage_id             in number default null,
    p_component_level        in varchar2 default null,
    p_name                   in varchar2 default null,
    p_varchar2_table         in sys.dbms_sql.varchar2_table,
    p_content_last_update    in date default null,
    p_mime_type              in varchar2 default null,
    p_content_charset        in varchar2 default null,
    p_content_filename       in varchar2 default null,
    p_description            in varchar2 default null,
    p_image_attributes       in varchar2 default null,
    p_image_alias            in varchar2 default null
    );

procedure create_note (
    p_id                     in number default null,
    p_ws_app_id              in number default null,
    p_data_grid_id           in number default null,
    p_row_id                 in number default null,
    p_webpage_id             in number default null,
    p_component_level        in varchar2 default null,
    p_content                in varchar2 default null
    );

procedure create_tag (
    p_id                     in number default null,
    p_ws_app_id              in number default null,
    p_data_grid_id           in number default null,
    p_row_id                 in number default null,
    p_webpage_id             in number default null,
    p_component_level        in varchar2 default null,
    p_tag                    in varchar2 default null
    );

procedure create_link (
    p_id                     in number default null,
    p_ws_app_id              in number default null,
    p_data_grid_id           in number default null,
    p_row_id                 in number default null,
    p_webpage_id             in number default null,
    p_component_level        in varchar2 default null,
    p_tags                   in varchar2 default null,
    p_show_on_homepage       in varchar2 default null,
    p_link_name              in varchar2 default null,
    p_url                    in varchar2 default null,
    p_link_description       in varchar2 default null,
    p_display_sequence       in number default null
    );

procedure export_sections (
    p_ws_app_id    in number,
    p_webpage_id   in number,
    p_format       in varchar2 default null);

procedure export_rows (
    p_ws_app_id    in number,
    p_data_grid_id in number,
    p_format       in varchar2 default null);

procedure export_annotations (
    p_ws_app_id       in number,
    p_component_level in varchar2,
    p_format          in varchar2 default null);

procedure export_acl (
    p_ws_app_id       in number
    );

procedure remove_ws_components (
    p_ws_app_id    in number);

procedure copy_data_grid (
    p_ws_app_id            in number,
    p_old_data_grid_id     in number,
    p_new_data_grid_id     in number);

procedure copy_page_sections (
    p_ws_app_id        in number,
    p_old_webpage_id   in number,
    p_new_webpage_id   in number);
end wwv_flow_ws_import_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHORIZATION_DEV" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_authorization_dev.sql
--
--    DESCRIPTION
--      Internal builder utility package for authorization schemes
--
--      copy:                           copy authorization from one app to another app
--      get_authorization_in_other_app: get / create authorization of app b that matches authorization in app a
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    02/05/2013 - Created
--    cneumuel    02/06/2013 - Added copy(), which previously was in wwv_flow_copy_util, to fix a dependency problem.
--
--------------------------------------------------------------------------------

--==============================================================================
-- Copy authorization from one app to another app
--
-- ARGUMENTS
--   * p_from_application_id:   id of app to copy from
--   * p_from_authorization_id: id of authorization to copy from
--   * p_to_application_id:     id of app to copy to
--   * p_to_authorization_name: name of authorization to copy to
--   o p_to_authorization_id:   id of authorization to copy to
--   o p_subscribe:             if true, subscribe authorization (default: false)
--==============================================================================
procedure copy (
    p_from_application_id   in number,
    p_from_authorization_id in number,
    p_to_application_id     in varchar2,
    p_to_authorization_name in varchar2,
    p_to_authorization_id   in number default null,
    p_subscribe             in boolean default false );

--==============================================================================
-- Compute the equivalent of an authorization in a source application to a
-- target application. If the target app does not have an authorization with
-- the same name, the source authorization is copied.
--
-- ARGUMENTS
--   * p_from_authorization:  authorization value (security_scheme) in p_from_application_id
--   * p_from_application_id: application id of p_from_authorization
--   * p_to_application_id:   application id of target authorization
--
-- RETURNS
--   Authorization value (security_scheme) in dest app that is the equivalent
--   of src authorization in src app.
--
-- SEE ALSO
--   * wwv_flow_f4000_util.copy_list_from_app
--==============================================================================
function get_authorization_in_other_app (
    p_from_authorization   in varchar2,
    p_from_application_id  in number,
    p_to_application_id    in number )
    return varchar2;

end wwv_flow_authorization_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_META_UTIL"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_meta_util.sql
--
--    DESCRIPTION
--      Private utility methods used by the engine at runtime.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--      sspadafo  06/09/2009 - Created
--      pwolf     06/10/2009 - Moved functions from wwv_flow_meta_data to wwv_flow_meta_util
--      pawolf    01/23/2010 - Added p_no_order_by to format_lov_query
--      pawolf    11/25/2010 - Bug# 10197557: added default value for is_ok_to_display
--      pawolf    02/02/2011 - Added parameter p_use_template to format_lov_query (bug 13640940)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Function returns true if the passed authorization and
-- display condition of a component are ok to display.
--==============================================================================
function is_ok_to_display (
    p_security_scheme    in varchar2 default null,
    p_display_when_type  in varchar2,
    p_display_when_cond  in varchar2,
    p_display_when_cond2 in varchar2,
    p_component          in varchar2 default null )
    return boolean;

--==============================================================================
-- Function returns true if the passed build option, authorization and
-- display condition of a component are ok to display.
--==============================================================================
function is_ok_to_display (
    p_required_patch     in number,
    p_security_scheme    in varchar2 default null,
    p_display_when_type  in varchar2,
    p_display_when_cond  in varchar2,
    p_display_when_cond2 in varchar2,
    p_component          in varchar2 default null )
    return boolean;

--==============================================================================
-- Function returns true if the passed build option of a component is one which
-- can be used.
--==============================================================================
function is_valid_build_option (
    p_required_patch in number )
    return boolean;

--==============================================================================
-- LOV helper
--==============================================================================
function format_lov_query (
    p_lov          in varchar2,
    p_display_as   in varchar2,
    p_no_order_by  in boolean default false,
    p_use_template in boolean default false )
    return varchar2;

end wwv_flow_meta_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLUGIN_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_plugin_dev.sql
--
--    DESCRIPTION
--      This package is resonsible for handling plugins in the APEX Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      09/25/2009 - Created
--    pawolf      10/20/2009 - Added set_defaults
--    pawolf      01/11/2009 - Added validate_lov
--    pawolf      01/19/2010 - Added validate_region_source
--    pawolf      02/05/2010 - Added check for item type file
--    pawolf      04/16/2010 - Added functions for dynamic actions
--    pawolf      04/21/2010 - Added is_attribute_translatable
--    pawolf      05/31/2010 - Bug# 9748679: always store minimum/maximum value with a period
--    pawolf      10/14/2010 - Bug# 10201943: changed get_attribute_def_javascript to write_plugin_meta_data_array
--    pawolf      12/14/2010 - Added attribute_11 - attribute_15 to all tables supporting plug-ins (feature# 572)
--    pawolf      04/11/2011 - Added plug-in attribute type "REGION SOURCE COLUMN" (feature 663)
--    pawolf      03/29/2012 - Added get_max_custom_attributes and renamed package to wwv_flow_plugin_dev
--    pawolf      04/02/2012 - Added delete_plugin_settings
--    pawolf      04/03/2012 - Removed compiler warnings
--    pawolf      04/04/2012 - Added is_column_translatable
--    arayner     04/24/2012 - Added p_action to synchronize_attribute_columns
--
--------------------------------------------------------------------------------

--==============================================================================
-- Returns the number of custom plug-in attributes depending on the plug-in type.
--==============================================================================
function get_max_custom_attributes (
    p_plugin_type     in varchar2,
    p_attribute_scope in varchar2 )
    return pls_integer;

--==============================================================================
-- Adds the necessary javascript code to initialize the dynamic attributes on a
-- Builder page.
--==============================================================================
procedure add_onload_code (
    p_application_id          in number   default V('FB_FLOW_ID'),
    p_plugin_type             in varchar2,
    p_type_page_item_name     in varchar2,
    p_page_item_prefix        in varchar2,
    p_register_onchange_event in boolean  default true );
--
--==============================================================================
-- Adds the necessary javascript code to initialize the dynamic attributes on a
-- Builder page where the type can't be changed.
--==============================================================================
procedure add_onload_code (
    p_application_id   in number   default V('FB_FLOW_ID'),
    p_plugin_type      in varchar2,
    p_type_value       in varchar2,
    p_page_item_prefix in varchar2,
    p_region_source    in varchar2 default null,
    p_attribute_scope  in varchar2 default wwv_flow_plugin.c_attribute_scope_component );
--
--==============================================================================
-- Writes the javascript array definition gPluginList which contains the
-- dynamic attribute meta data information to the HTTP output.
--==============================================================================
procedure write_plugin_meta_data_array (
    p_application_id  in number,
    p_plugin_type     in varchar2,
    p_attribute_scope in varchar2 default wwv_flow_plugin.c_attribute_scope_component,
    p_region_source   in varchar2 default null );
--
--==============================================================================
-- Returns the value of the SQL examples column of the plug-in configuration if
-- the plug-in has the standard attribute LOV or SOURCE_SQL. Otherwise NULL is
-- returned.
--==============================================================================
function get_sql_examples (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin_name    in varchar2 )
    return varchar2;
--
--==============================================================================
-- Used in the builder to validate the entered attribute values for a plugin.
-- This procedure directly adds the errors for the different attribute page items
-- to the wwv_flow.g_validation_* arrays.
-- p_page_item_prefix for example is P751_
--==============================================================================
procedure validate_attribute_items (
    p_application_id    in number,
    p_page_id           in number default v('FB_FLOW_PAGE_ID'),
    p_security_group_id in number default v('WORKSPACE_ID'),
    p_plugin_type       in varchar2,
    p_plugin_name       in varchar2,
    p_attribute_scope   in varchar2,
    p_page_item_prefix  in varchar2,
    p_region_source     in varchar2 default null );
--
--==============================================================================
-- Used in the builder to validate the LOV for a plugin and the old item types.
-- This procedure directly adds the errors for the different attribute page items
-- to the wwv_flow.g_validation_* arrays.
-- p_page_item_prefix for example is P751_
--==============================================================================
procedure validate_lov (
    p_application_id    in number,
    p_security_group_id in number default v('WORKSPACE_ID'),
    p_plugin_type       in varchar2,
    p_plugin_name       in varchar2,
    p_page_item_prefix  in varchar2 );
--
--==============================================================================
-- Used in the builder to validate the region source for a plugin.
-- The function will return the error message which should be used in a
-- validation.
--==============================================================================
function validate_region_source (
    p_application_id    in number,
    p_security_group_id in number default v('WORKSPACE_ID'),
    p_plugin_name       in varchar2,
    p_region_source     in varchar2 )
    return varchar2;
--
--==============================================================================
-- Used in the builder to validate the affected element attributes of
-- a dynamic action.
-- This procedure directly adds the errors for the different attribute page items
-- to the wwv_flow.g_validation_* arrays.
-- p_page_item_prefix for example is P675_
--==============================================================================
procedure validate_affected_elements (
    p_application_id    in number,
    p_security_group_id in number   default v('WORKSPACE_ID'),
    p_plugin_name       in varchar2 default null,
    p_is_required       in boolean  default null,
    p_is_available      in boolean  default null,
    p_page_item_prefix  in varchar2 );
--
--==============================================================================
-- Used in the builder to validate the triggering of a dynamic action.
-- This procedure directly adds the errors for the different attribute page items
-- to the wwv_flow.g_validation_* arrays.
-- p_page_item_prefix for example is P793_
--==============================================================================
procedure validate_triggering (
    p_page_item_prefix in varchar2 );
--
--==============================================================================
-- Used in the Builder to transform the minimum and maximum value attributes
-- of the item type "NUMBER FIELD" before storage.
-- p_page_item_prefix for example is P751_
--==============================================================================
procedure number_field_for_storage (
    p_application_id    in number,
    p_page_id           in number default v('FB_FLOW_PAGE_ID'),
    p_security_group_id in number default v('WORKSPACE_ID'),
    p_display_as        in varchar2,
    p_page_item_prefix  in varchar2 );
--
--==============================================================================
-- Used in the Builder to transform the minimum and maximum value attributes
-- of the item type "NUMBER FIELD" before displaying them.
--==============================================================================
function get_number_field_for_display (
    p_application_id    in number,
    p_page_id           in number default v('FB_FLOW_PAGE_ID'),
    p_security_group_id in number default v('WORKSPACE_ID'),
    p_display_as        in varchar2,
    p_value             in varchar2 )
    return varchar2;
--
--==============================================================================
-- Called when a new version of a plug-in is installed or when it's refreshed
-- with the Subscribe mechanism. The purpose of the procedure is to check all
-- references of the plug-in and migrate the attribute values if necessary.
--==============================================================================
procedure synchronize_attribute_columns (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin_name    in varchar2,
    p_action         in varchar2 default null );
--
--==============================================================================
-- Returns true if the plug-in is referenced in wwv_flow_step_items, ...
--==============================================================================
function is_in_use (
    p_plugin_id in number )
    return boolean;
--
--==============================================================================
-- Sets the attribute_xx parameters to the default values defined for the plugin
-- specified in p_plugin_name. If a p_attribute_xx parameter contains a value,
-- then the value is NOT modified.
--==============================================================================
procedure set_defaults (
    p_application_id in            number   default null,
    p_plugin_type    in            varchar2,
    p_plugin_name    in            varchar2,
    p_attribute_01   in out nocopy varchar2,
    p_attribute_02   in out nocopy varchar2,
    p_attribute_03   in out nocopy varchar2,
    p_attribute_04   in out nocopy varchar2,
    p_attribute_05   in out nocopy varchar2,
    p_attribute_06   in out nocopy varchar2,
    p_attribute_07   in out nocopy varchar2,
    p_attribute_08   in out nocopy varchar2,
    p_attribute_09   in out nocopy varchar2,
    p_attribute_10   in out nocopy varchar2,
    p_attribute_11   in out nocopy varchar2,
    p_attribute_12   in out nocopy varchar2,
    p_attribute_13   in out nocopy varchar2,
    p_attribute_14   in out nocopy varchar2,
    p_attribute_15   in out nocopy varchar2 );
--
--==============================================================================
-- Sets the attribute_xx parameters to the default values defined for the plugin
-- specified in p_plugin_name. If a p_attribute_xx parameter contains a value,
-- then the value is NOT modified.
--==============================================================================
procedure set_defaults (
    p_application_id in            number   default null,
    p_plugin_type    in            varchar2,
    p_plugin_name    in            varchar2,
    p_attribute_01   in out nocopy varchar2,
    p_attribute_02   in out nocopy varchar2,
    p_attribute_03   in out nocopy varchar2,
    p_attribute_04   in out nocopy varchar2,
    p_attribute_05   in out nocopy varchar2,
    p_attribute_06   in out nocopy varchar2,
    p_attribute_07   in out nocopy varchar2,
    p_attribute_08   in out nocopy varchar2,
    p_attribute_09   in out nocopy varchar2,
    p_attribute_10   in out nocopy varchar2,
    p_attribute_11   in out nocopy varchar2,
    p_attribute_12   in out nocopy varchar2,
    p_attribute_13   in out nocopy varchar2,
    p_attribute_14   in out nocopy varchar2,
    p_attribute_15   in out nocopy varchar2,
    p_attribute_16   in out nocopy varchar2,
    p_attribute_17   in out nocopy varchar2,
    p_attribute_18   in out nocopy varchar2,
    p_attribute_19   in out nocopy varchar2,
    p_attribute_20   in out nocopy varchar2,
    p_attribute_21   in out nocopy varchar2,
    p_attribute_22   in out nocopy varchar2,
    p_attribute_23   in out nocopy varchar2,
    p_attribute_24   in out nocopy varchar2,
    p_attribute_25   in out nocopy varchar2 );
--
--==============================================================================
-- Returns the specified standard attributes for the passed in plugin.
--==============================================================================
function get_standard_attributes (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin_name    in varchar2 )
    return varchar2;
--
--==============================================================================
-- Returns TRUE if the specified feature/standard attribute in p_feature is set
-- for the passed plugin
--==============================================================================
function has_standard_attribute (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin_name    in varchar2,
    p_feature        in varchar2 )
    return boolean;
--
--==============================================================================
-- Returns TRUE if one of the specified dynamic actions has any of the affected
-- element types.
--==============================================================================
function has_affected_element_type (
    p_application_id in number,
    p_true_action    in varchar2,
    p_false_action   in varchar2 default null,
    p_type           in varchar2 default null )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the is_translatable flag is set to Y for the specified
-- plug-in attribute.
--==============================================================================
function is_attribute_translatable (
    p_application_id     in number,
    p_plugin_type        in varchar2,
    p_plugin_name        in varchar2,
    p_attribute_scope    in varchar2,
    p_attribute_sequence in number )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the specified record identified by p_table_name and p_id
-- uses a plug-in where the specified p_column_name is a translatable plug-in
-- attribute. p_table_name has to be one of the tables which support plug-ins
-- ( WWV_FLOW_PLUGIN_SETTINGS, WWV_FLOW_STEP_PROCESSING, WWV_FLOW_PAGE_PLUGS,
--   WWV_FLOW_STEP_ITEMS, WWV_FLOW_PAGE_DA_ACTIONS, WWV_FLOW_SECURITY_SCHEMES,
--   WWV_FLOW_AUTHENTICATIONS ) and p_column_name has to be ATTRIBUTE_xx.
--==============================================================================
function is_column_translatable (
    p_application_id in number,
    p_table_name     in varchar2,
    p_column_name    in varchar2,
    p_id             in number )
    return boolean;
--
--==============================================================================
-- Returns TRUE if the specified plug-in has custom attributes of
-- scope "APPLICATION".
--==============================================================================
function has_application_attributes (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin_name    in varchar2 )
    return boolean;
--
--==============================================================================
-- Copy a plugin, including attributes and events, between applications
-- p_from_application_id to p_to_application_id.
--
-- p_subscribe:
--     if true then the new plugin gets a subscription to the old one.
-- p_if_existing_raise_dupval:
--     if true and a plugin with the same type+name already exists in
--     p_to_flow_id then DUP_VAL_ON_INDEX gets thrown.
--==============================================================================
procedure copy_plugin (
    p_from_application_id      in number,
    p_to_application_id        in number,
    p_type                     in varchar2,
    p_name                     in varchar2,
    p_subscribe                in boolean default false,
    p_if_existing_raise_dupval in boolean default false );
--
--==============================================================================
-- Copy a plugin's attributes, events and files from source to destination. The
-- attributes, events and files of destination will be removed before copying.
--
-- Used internally by copy_plugin and also to refresh subscribers.
--==============================================================================
procedure copy_plugin_details (
    p_source_plugin_id      in number,
    p_destination_plugin_id in number );
--
--==============================================================================
-- This procedure pulls content from the master plugin and
-- copies it to the subscribing plugin.
--==============================================================================
procedure subscribe_plugin (
    p_master_plugin_id      in number,
    p_subscribing_plugin_id in number );
--
--==============================================================================
-- This procedure pushes content of the plugin to
-- all plugins that reference this plugin.
--==============================================================================
procedure push_plugin (
    p_plugin_id in number );
--
--==============================================================================
-- If the master plugin ID is not passed, get the master plugin ID
-- and refresh subscribing plugin.
--==============================================================================
procedure refresh_plugin (
    p_subscribing_plugin_id in number );
--
--==============================================================================
-- Deletes the plug-in settings for the specified plug-in.
-- This procedure should be used when a plug-in is removed from an application.
--==============================================================================
procedure delete_plugin_settings (
    p_application_id in number,
    p_plugin_type    in varchar2,
    p_plugin         in varchar2 );
--
--
end wwv_flow_plugin_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REST" as

g_sql       clob;
g_result    clob;

procedure getReport(
    app             in varchar2,
    page            in varchar2,
    reportid        in varchar2,
    parmvalues      in varchar2     default null,
    lang            in varchar2     default 'en',
    output          in varchar2     default 'xml'
    );

procedure getServiceDescription(
    app             in varchar2
    );

end wwv_flow_rest;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_PURGE" is

procedure compute_inactive;

procedure save_response(
    p_purge_email_id in number,
    p_response_code  in varchar2 );

procedure daily_purge_process;

procedure send_summary_email;

end wwv_purge;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_F4000_UTIL" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2006 - 2010. All Rights Reserved.
--
--    NAME
--      wwv_flow_f4000_util
--
--    DESCRIPTION
--      Application Express logic
--
--      MODIFIED (MM/DD/YYYY)
--      mhichwa   06/16/2006 - Created
--      mhichwa   06/23/2006 - Added CREATE_LOGIN_PAGE2, create_auth_setup, POPULATE_LINK_COL, P327_CREATE_REPORT
--      mhichwa   06/23/2006 - Removed unused argument
--      mhichwa   01/09/2007 - Added create_list_entry_as_copy
--      mhichwa   01/09/2007 - Added show_workspace_images, show_standard_images
--      mhichwa   01/23/2007 - Added set flow page
--      mhichwa   01/23/2007 - Added show help link
--      mhichwa   02/02/2007 - Added procedure set_developer_preferences
--      rvallam   11/20/2007 - Added parameters to procedure P327_CREATE_REPORT
--      mhichwa   11/20/2007 - Added require_flow_id called from 4000:1
--      cbcho     11/20/2007 - Added region_src_changed, save_interactive_rpt_region
--      cbcho     11/20/2007 - Renamed region_src_changed to interactive_rpt_src_changed
--      mhichwa   11/27/2007 - Added show_popup_images
--      rvallam   12/17/2007 - Added print_label parameter to P327_CREATE_REPORT
--      rvallam   12/24/2007 - Added search parameters to P327_CREATE_REPORT
--      mhichwa   01/02/2008 - Added get_build_opt_util function
--      mhichwa   01/07/2008 - Added wwv_flow_f4000_util
--      jstraub   01/16/2008 - Moved is_valid_chart_query and is_valid_dial_chart_query from WWV_RENDER_CHART2 (Bug 6710044)
--      msewtz    01/24/2008 - Added is_valid_lov_query (bug 6707530)
--      jstraub   02/05/2008 - Added wrapper functions/procedures from sys.wwv_dbms_sql to be called from builder applications
--      mhichwa   02/19/2008 - Added function validate_blob_mask
--      mhichwa   02/19/2008 - Added function validate_form_blob_mask
--      mhichwa   02/20/2008 - Added p_source_type argument to validate_form_blob_mask function
--      mhichwa   02/20/2008 - Changed function name from validate_form_blob_mask to validate_form_dbsource
--      pawolf    07/23/2009 - Added check_sql
--      mhichwa   11/17/2009 - create procedure create_feedback_page
--      mhichwa   11/24/2009 - added support for additional feedback attributes
--      pawolf    11/27/2009 - Added p_use_tree_for_p4150 to set_developer_preferences
--      pawolf    01/14/2010 - Enhanced check_sql
--      pawolf    03/05/2010 - Added validate_db_column
--      mhichwa   03/16/2010 - added get_show_tables_01
--      mhichwa   04/08/2010 - added attributes to create_feedback_page
--      hfarrell  04/09/2010 - Updated P327_CREATE_REPORT to include p_use_ui_defaults for attribute dictionary ui default values
--      hfarrell  02/01/2011 - Added function is_valid_list_query for Dynamic Lists (feature #602)
--      arayner   03/28/2011 - Added validate_da_compatible_button (feature #385)
--      pawolf    03/28/2011 - Removed PLUG_DISPLAY_ERROR_MESSAGE (feature# 544)
--      arayner   03/29/2011 - Extended validate_da_compatible_button procedure (feature #385)
--      hfarrell  04/05/2011 - Fix for bug 7048187: replaced all occurrences of varchar2s with varchar2a
--      arayner   04/12/2011 - Added validate_button_action (feature 385)
--      arayner   04/13/2011 - Added support for report query checking in validate_button_action (feature 667)
--      arayner   04/20/2011 - Added validate_button_style (feature 667)
--      arayner   04/21/2011 - Reauthoring of validate_button_action to now support working across all button action pages and clearing session state where appropriate (feature 667)
--      cneumuel  05/10/2011 - Added is_query_with_order_by (bug #12353172)
--      pawolf    05/19/2011 - Removed del_auth_scheme_conf (feature 581)
--      cneumuel  06/08/2011 - Moved login page creation to wwv_flow_wizard_api
--      pawolf    03/15/2012 - Added user_interface_id to p327_create_report and CREATE_LOGIN_PAGE2
--      pawolf    03/19/2012 - Changed code to only use new columns in wwv_flow_user_interfaces instead of the old columns in wwv_flow (feature# 827)
--      cneumuel  05/30/2012 - Remove obsolete create_auth_setup (bug #13253252)
--      cneumuel  08/09/2012 - In is_valid_lov_query: added p_owner, so wwv_flow_hint.is_valid_lov_query can be removed
--
--------------------------------------------------------------------------------

function get_show_tables_01
    return varchar2;

function validate_blob_mask (
   p_mask         in varchar2 default null,
   p_app_id       in number   default null)
   return varchar2
   ;

function validate_db_column (
    p_parsing_schema in varchar2,
    p_owner          in varchar2,
    p_table_name     in varchar2,
    p_column_name    in varchar2 )
    return varchar2;

function get_next_app_page (
    p_request      in varchar2 default null,
    p_current_app  in number   default null,
    p_current_page in number   default null)
    return number
    ;

function get_build_opt_util
    return varchar2
    ;

procedure show_popup_images (
    p_image_size    in number   default null,
    p_show          in varchar2 default null)
    ;

function interactive_rpt_src_changed (
    p_flow_id    in number,
    p_region_id  in number,
    p_new_source in varchar2
    ) return boolean;

procedure save_interactive_rpt_region (
    p_region_id                in number,
    p_flow_id                  in number,
    p_plug_name                in varchar2 default null,
    p_region_name              in varchar2 default null,
    p_region_template          in number default null,
    p_display_seq              in number default null,
    p_display_column           in number default null,
    p_display_point            in varchar2 default null,
    p_region_source            in varchar2 default null,
    p_breadcrumb_template      in number default null,
    p_list_template            in number default null,
    p_required_role            in varchar2 default null,
    p_display_when_cond        in varchar2 default null,
    p_display_when_cond2       in varchar2 default null,
    p_display_cond_type        in varchar2 default null,
    p_region_header            in varchar2 default null,
    p_region_footer            in varchar2 default null,
    p_region_column_width      in varchar2 default null,
    p_customized               in varchar2 default null,
    p_customized_name          in varchar2 default null,
    p_requied_patch            in number   default null,
    p_url_text_begin           in varchar2 default null,
    p_url_text_end             in varchar2 default null,
    p_translate_title          in varchar2 default null,
    p_comment                  in varchar2 default null);

procedure require_flow_id
   ;

procedure set_developer_preferences (
   p_set_view_mode     in varchar2 default 'ICON',
   p_display           in varchar2 default '15',
   p_use_tree_on_p4150 in varchar2 default 'Y' );

-- for popup pages to implement help links
procedure show_help_link (
   p_lang           in varchar2 default null,
   p_session_id     in varchar2 default null,
   p_application_id in varchar2 default null,
   p_page_id        in varchar2 default null)
   ;

-- application level process
procedure set_flow_page
;

-- page 4000.602
procedure copy_list (
    p_copy_from_list_id   in number,
    p_new_list_name       in varchar2)
    ;

-- page 4000.663
procedure copy_list_from_app (
    p_copy_from_app_id    in number,
    p_copy_from_list_id   in number,
    p_new_list_name       in varchar2,
    p_new_application_id  in number)
    ;


-- 4000.4651
procedure show_list_source (
   p_list_id        in number,
   p_application_id in number,
   p_session        in number)
   ;

-- 4000.4651
procedure show_region_tree_source (
   p_application    in number,
   p_id             in number,
   p_session        in number)
   ;

-- 4000.849
procedure create_feedback_page (
    p_page_id                    in number   default null,
    p_application_id             in number   default null,
    p_page_name                  in varchar2 default null,
    p_user_interface_id          in number   default null,
    p_feedback_label             in varchar2 default null,
    p_feedback_type_label        in varchar2 default null,
    p_page_template_id           in varchar2 default null,
    p_region_template_id         in number   default null,
    p_label_template_id          in number   default null,
    p_component_selector_yn      in varchar2 default 'N',
    p_extra_attributes           in number   default 0,
    p_create_nav_bar_entry_yn    in varchar2 default 'N',
    p_nav_bar_entry_label        in varchar2 default null,
    p_enable_feedback_yn         in varchar2 default null);

-- 4000.4495
procedure CREATE_LOGIN_PAGE2 (
    P_FB_FLOW_ID                       in varchar2 default null,
    P_P826_LOGIN_PAGE                  in varchar2 default null,
    p_user_interface_id                in number );

-- 4000.12
procedure POPULATE_LINK_COL (
    P_P5_CREATE_JOINS                  in varchar2 default null,
    P_P4_MASTER_OWNER                  in varchar2 default null,
    P_P4_MASTER_TABLE                  in varchar2 default null,
    P_P5_DETAIL_OWNER                  in varchar2 default null,
    P_P5_DETAIL_TABLE                  in varchar2 default null );

-- 4000.327
procedure P327_CREATE_REPORT (
    p_f4000_p4701_tab_options          in varchar2 default null,
    p_f4000_p4701_tab_text             in varchar2 default null,
    p_f4000_p4701_tab_name             in varchar2 default null,
    p_fb_flow_id                       in varchar2 default null,
    p_f4000_p4701_flow_step_id         in varchar2 default null,
    p_f4000_p4701_page_name            in varchar2 default null,
    p_p259_user_interface_id           in number   default null,
    p_f4000_p4701_report_sql           in varchar2 default null,
    p_p4796_report_template            in varchar2 default null,
    p_f4000_p4701_tab_set              in varchar2 default null,
    p_f4000_p4701_plug_template        in varchar2 default null,
    p_f4000_p4701_plug_name            in varchar2 default null,
    p_f4000_p4701_plug_column          in varchar2 default null,
    p_f4000_p4701_max_rows             in varchar2 default null,
    p_f4000_p4701_rpt_type             in varchar2 default null,
    p_p4701_breadcrumb_id              in varchar2 default null,
    p_p4701_breadcrumb_name            in varchar2 default null,
    p_p4701_parent_id                  in varchar2 default null,
    p_f4000_p4795_query_options        in varchar2 default null,
    p_f4000_p4795_max_cols             in varchar2  default null,
    p_f4000_p4796_break_cols           in varchar2 default null,
    p_f4000_p4796_sorting              in varchar2 default null,
    p_f4000_p4796_csv_output           in varchar2 default null,
    p_f4000_p4796_csv_link_text        in varchar2 default null,
    p_f4000_p4796_print_output         in varchar2 default null,
    p_f4000_p4796_print_format         in varchar2 default null,
    p_f4000_p4796_print_label          in varchar2 default null,
    p_f4000_p4796_enable_search        in varchar2 default null,
    p_search_list                      in varchar2 default null,
    p_use_ui_defaults                  in varchar2 default null);

procedure create_list_entry_as_copy (
   p_id           in number,
   p_list_id      in number,
   p_new_sequence in number,
   p_new_text     in varchar2);

procedure show_standard_images (
   p_icon_size     in varchar2 default '64',
   p_search        in varchar2 default null,
   p_current_image in varchar2 default null,
   p_columns       in number default 3,
   p_show          in varchar2 default 'STANDARD')
   ;

procedure show_workspace_images (
   p_search        in varchar2 default null,
   p_current_icon  in varchar2 default null,
   p_columns       in number default 3)
   ;
procedure show_application_images (
   p_search        in varchar2 default null,
   p_current_icon  in varchar2 default null,
   p_columns       in number default 3)
   ;

function is_valid_chart_query (
    p_flow_id            in number,
    p_security_group_id  in number,
    p_query              in varchar2
  ) return varchar2;

function is_valid_dial_chart_query (
    p_flow_id            in number,
    p_security_group_id  in number,
    p_query              in varchar2
  ) return varchar2;

--==============================================================================
-- ARGUMENTS
-- * p_query
-- * p_owner            defaults to wwv_flow_security.flow_owner for FB_FLOW_ID
--==============================================================================
function is_valid_lov_query (
    p_query              in varchar2,
    p_owner              in varchar2 default null
) return boolean;

--==============================================================================
function is_valid_list_query (
    p_query       varchar2,
    p_query_type  varchar2
) return varchar2;

--==============================================================================
-- Return if p_query contains an order by clause at the end.
-- Used by validations on 4000:420, 4000:4651, 4000:4796 and 4000:831
--==============================================================================
function is_query_with_order_by (
    p_query       in varchar2 )
    return boolean;

/* Used to validate buttons are compatible with Dynamic Actions */
procedure validate_da_compatible_button (
    p_flow_id                   in number,
    p_workspace_id              in number,
    p_button_style              in varchar2,
    p_button_template           in varchar2,
    p_button_cattributes        in varchar2,
    p_error_item_template_chk   in varchar2     default null,
    p_error_item_attribute_chk  in varchar2     default null,
    p_error_display_location    in varchar2
);

/* Used to validate action when button clicked properties */
procedure validate_button_action (
    p_page_item_prefix          in varchar2
);

/* Used to validate button style attributes */
procedure validate_button_style (
    p_style_item          in varchar2,
    p_tag_attr_item       in varchar2,
    p_image_item          in varchar2,
    p_image_attr_item     in varchar2,
    p_template_item       in varchar2
);

function check_plsql (
    p_sql               in varchar2,
    p_flow_id           in number,
    p_security_group_id in number
) return varchar2;

--==============================================================================
-- Checks for a valid SQL statement
-- Returns the error text.
--==============================================================================
function check_sql (
    p_sql                 in varchar2,
    p_min_column_count    in number,
    p_max_column_count    in number   default null,
    p_invalid_sql_error   in varchar2,
    p_column_count_error  in varchar2,
    p_column_name_invalid in varchar2 default null,
    p_column_not_unique   in varchar2 default null )
    return varchar2;

procedure run_block
     ( p_sql       in varchar2,
       p_user      in varchar2,
       p_use_roles in boolean default FALSE);

function select_num( p_sql in varchar2, p_user in varchar2 ) return number;

procedure run_ddl
     ( p_sql    in sys.dbms_sql.varchar2a,
       p_user   in varchar2 );

function countem( p_sql in varchar2,
                  p_user in varchar2 ) return varchar2;

end wwv_flow_f4000_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_INSTALL_WIZARD"
as
--  Copyright (c) Oracle Corporation 2006. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package provides install engine for application install wizard.
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

function install_condition (
    p_flow_id           in number,
    p_condition_type    in varchar2 default null,
    p_condition         in varchar2 default null,
    p_condition2        in varchar2 default null)
    return boolean;

procedure install (
    p_install_id          in number,
    p_flow_id             in number,
    p_schema              in varchar2
    );

procedure upgrade (
    p_install_id          in number,
    p_flow_id             in number,
    p_schema              in varchar2
    );

procedure deinstall (
    p_install_id  in number,
    p_flow_id     in number,
    p_schema      in varchar2
    );

procedure set_sub_strings (
    p_ss_prompts in wwv_flow_global.vc_arr2,
    p_ss_values  in wwv_flow_global.vc_arr2,
    p_install_id in number
    );

procedure configuration_options (
    p_flow_id in number default null
    );

function get_existing_objects(
    p_flow_id in number)
    return varchar2;

function get_missing_privs(
    p_flow_id in number)
    return varchar2;

function get_free_space(
    p_flow_id in number)
    return varchar2;

procedure create_acl_ddl (
    p_flow_id             in number,
    p_security_group_id   in number
    );
end wwv_flow_install_wizard;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CLOUD_DB_SERVICES"
  authid definer as


type t_workspace_statistics is record(
    workspace_name            wwv_flow_companies.short_name%type,
    workspace_display_name    wwv_flow_companies.display_name%type,
    page_events_today         number,
    page_events_yesterday     number,
    emails_sent               number,
    emails_ingested           number,
    total_db_objects          number,
    table_count               number,
    view_count                number,
    trigger_count             number,
    other_db_object_count     number,
    db_app_count              number,
    ws_app_count              number,
    restful_ws_count          number,
    tablespace_bytes_total    number,
    tablespace_bytes_used     number,
    tablespace_bytes_free     number,
    tablespace_pct_used       number);


procedure create_workspace(
    p_workspace_name          in varchar2,
    p_schema_name             in varchar2,
    p_max_size_mb             in number,
    p_initial_size_mb         in number   default null,
    p_install_sample_app      in varchar2 default null,
    p_install_sample_ws       in varchar2 default null,
    p_install_emp_dept        in varchar2 default null,
    p_allow_to_be_purged_yn   in varchar2 default null,
    p_rm_consumer_group       in varchar2 default null,
    p_workspace_description   in varchar2 default null);

procedure remove_workspace(
    p_workspace_name          in varchar2,
    p_drop_users              in varchar2 default 'N',
    p_drop_tablespaces        in varchar2 default 'N' );

-- deprecated
procedure update_workspace_size(
    p_workspace_name          in varchar2,
    p_max_size_mb             in number );

-- preferred
procedure update_workspace_size(
    p_workspace_name          in varchar2,
    p_add_size_mb             in number );

procedure set_workspace_display_name(
    p_workspace_name          in varchar2,
    p_workspace_display_name  in varchar2 );

procedure add_workspace_admin(
    p_workspace_name          in varchar2,
    p_username                in varchar2,
    p_email                   in varchar2,
    p_first_name              in varchar2 default null,
    p_last_name               in varchar2 default null );

procedure add_user(
    p_workspace_name          in varchar2,
    p_username                in varchar2,
    p_email                   in varchar2,
    p_first_name              in varchar2 default null,
    p_last_name               in varchar2 default null,
    p_is_admin                in varchar2 default 'N');

procedure update_user(
    p_workspace_name          in varchar2,
    p_username                in varchar2,
    p_new_username            in varchar2 default null,
    p_new_email               in varchar2 default null,
    p_is_admin                in varchar2 default 'N' );

procedure remove_user(
    p_workspace_name          in varchar2,
    p_username                in varchar2 );

-- Available workspace statuses:  AVAILABLE, ASSIGNED, SUSPENDED
procedure set_workspace_status(
    p_workspace_name          in varchar2,
    p_workspace_status        in varchar2 );


function get_workspace_statistics(
    p_workspace_name          in varchar2 ) return t_workspace_statistics;


-- p_for_when: Y - yesterday, T - today
procedure get_workspace_stats(
    p_workspace_name          in   varchar2,
    p_for_when                in   varchar2  default 'Y',
    p_page_events             out  number,
    p_emails_sent             out  number,
    p_total_objects           out  number,
    p_tables                  out  number,
    p_custom_database_apps    out  number,
    p_packaged_database_apps  out  number,
    p_websheet_apps           out  number,
    p_restful_web_services    out  number,
    p_tablespace_bytes_total  out  number,
    p_tablespace_bytes_used   out  number,
    p_tablespace_bytes_free   out  number,
    p_tablespace_pct_used     out  number);


procedure get_workspace_applications (
    p_workspace_name    in   varchar2,
    p_custom_db_apps    out  varchar2,
    p_packaged_db_apps  out  varchar2,
    p_websheet_apps     out  varchar2 );


end wwv_flow_cloud_db_services;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LISTENER"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_listener.sql

--    DESCRIPTION
--      This package provides utility functions for the APEX listener
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    09/13/2011 - Created
--    cneumuel    09/15/2011 - In authenticate, get_workspace_user_groups: changed p_workspace to p_workspace_id
--    cneumuel    09/16/2011 - Added get_workspace_user_type
--    hfarrell    09/21/2011 - Added get_session_username - need to check with Patrick and Christian
--    hfarrell    09/26/2011 - Added install_seed_data for RESTful Services
--    hfarrell    03/08/2012 - Added is_valid_template (bug 13815223)
--    hfarrell    07/11/2012 - Added is_required_version to check the version of APEX Listener installed, which must be 2.0.0 or higher
--    hfarrell    08/02/2012 - Added procedure reset_sample_data to support resetting of oracle.example.hr sample (as requested by Mike and Kris via email)
--    hfarrell    03/06/2013 - Added SQL Developer-required functions for obtaining user group information for RESTful Services:get_workspace_user_groups,get_workspace_user_group_name and get_workspace_user_group_id.
--                             Changed p_workspace_id from varchar2 to number in get_workspace_user_groups, authenticate,get_workspace_user_type  (bug #16450494)
--    hfarrell    03/13/2013 - Extracted client and group creation logic from install_seed_data to install_prereq_data, to allow for separate execution on non-Cloud instance (bug #16483083)
--
--==============================================================================
-- return if p_username is a valid user in p_workspace_id and can authenticate
-- with p_password
--==============================================================================
function authenticate (
    p_workspace_id in number,
    p_username     in varchar2,
    p_password     in varchar2 )
    return boolean;

--==============================================================================
-- return groups the workspace user is in
--==============================================================================
function get_workspace_user_groups (
    p_workspace_id in number,
    p_username     in varchar2 )
    return vc4000Array;

--==============================================================================
-- return groups in the workspace
--==============================================================================
function get_workspace_user_groups (
    p_workspace_id in number)
    return vc4000Array;

--==============================================================================
-- return group name in a given workspace for a given group ID
--==============================================================================
function get_workspace_user_group_name (
         p_workspace_id  in number,
         p_user_group_id in number)
         return varchar2;

--==============================================================================
-- return group ID in a given workspace for a given group name
--==============================================================================
function get_workspace_user_group_id (
         p_workspace_id  in number,
         p_group_name    in varchar2 )
         return number;

--==============================================================================
-- return if the user is Administrator, Developer or User in the given workspace
--==============================================================================
function get_workspace_user_type (
    p_workspace_id in number,
    p_username     in varchar2 )
    return varchar2;

--==============================================================================
-- return username of the APEX session if it is a valid session
--==============================================================================
function get_session_username (
    p_application_id in number,
    p_session_id     in number )
    return varchar2;

--==============================================================================
-- return if p_template is a valid template containing no length parameters
-- greater than 100 characters
--==============================================================================
function is_valid_template (
    p_template       in varchar2)
    return boolean;


--==============================================================================
-- return if p_template is a valid template containing no length parameters
-- greater than 100 characters
--==============================================================================
function is_required_version
    return boolean;

procedure install_prereq_data;

procedure install_seed_data;

procedure reset_sample_data;

end wwv_flow_listener;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CLOUD_ARCHIVE_OBJ"
authid current_user
as

procedure create_archive_objects;

procedure create_archive_tables;

procedure create_archive_triggers;

procedure remove_archive_objects;

end wwv_flow_cloud_archive_obj;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CLOUD_ARCHIVE"
authid current_user
as

g_max_versions      number;

function create_header(
    p_workspace_id          in number,
    p_version               in number   default null,
    p_archive_name          in varchar2 default null,
    p_comments              in varchar2 default null,
    p_retentions_in_days    in number   default 7) return number;

procedure archive_applications(
    p_workspace_id          in number,
    p_header_id             in number   default null,
    p_application_id        in number   default null,
    p_version               in number   default null,
    p_archive_name          in varchar2 default null,
    p_comments              in varchar2 default null,
    p_retentions_in_days    in number   default 7);

procedure incremental_archive(
    p_workspace_id          in number,
    p_archive_name          in varchar2 default null,
    p_comments              in varchar2 default null,
    p_export_full_wksp      in varchar2 default 'N',
    p_retentions_in_days    in number   default 7);

procedure archive_workspace(
    p_header_id             in number,
    p_workspace_id          in number);

procedure archive_files(
    p_header_id             in number,
    p_workspace_id          in number);

procedure archive_rest(
    p_header_id             in number,
    p_workspace_id          in number);

function archive_file(
    p_workspace_id          in number,
    p_file_id               in number,
    p_header_id             in number   default null,
    p_version               in number   default null,
    p_archive_name          in varchar2 default null,
    p_comments              in varchar2 default null,
    p_retentions_in_days    in number   default 7,
    p_log                   in boolean  default true) return number;

procedure archive_files(
    p_workspace_id          in number,
    p_files                 in wwv_flow_global.vc_arr2,
    p_version               in number   default null,
    p_archive_name          in varchar2 default null,
    p_comments              in varchar2 default null,
    p_retentions_in_days    in number   default 7);

procedure purge_archives;

procedure purge_versions(
    p_max_versions_to_retain    in number,
    p_log                       in boolean default true);

end wwv_flow_cloud_archive;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PKG_APP_LOG" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_pkg_app_log.plb
--
--    DESCRIPTION
--      API to log packaged application installations.
--
--    MODIFIED (MM/DD/YYYY)
--    cbcho     07/09/2012 - Created (feature #992)
--    cneumuel  07/10/2012 - Added "set define '^'" to avoid install errors
--    hfarrell  03/14/2013 - Added build_version, app_locked, and installed_build_version to t_install_log record (bug #16500430)
--
--------------------------------------------------------------------------------

--
-- Global Variables
--

type t_install_log is record (
    log_key                 varchar2(32767),
    app_id                  number,
    app_type                varchar2(255),
    app_version             varchar2(255),
    build_version           number,
    installed_build_version number,
    app_locked              varchar2(1));

g_install_log t_install_log;

function start_log (
    p_log_event     in varchar2 default null,
    p_log_type      in varchar2 default null,
    p_started       in timestamp default null,
    p_ended         in timestamp default null) return number;

procedure end_log (
    p_id            in number);

end wwv_flow_pkg_app_log;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEAM_FILE" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--     wwv_flow_team_file.sql
--
--    DESCRIPTION
--      Package to manage APEX$TEAM_DEV_FILES table.
--
--    MODIFIED (MM/DD/YYYY)
--     cbcho    07/17/2012 - Created (feature #1007)
--     cbcho    07/18/2012 - Added team_dev_file_enabled
--
--------------------------------------------------------------------------------

function team_dev_file_enabled return boolean;

procedure install;

procedure add_file (
    p_component_id    in number default null,
    p_component_type  in varchar2 default null,
    p_file_name       in varchar2 default null,
    p_file_comments   in varchar2 default null
    );

procedure create_file_collection (
    p_component_id    in number default null,
    p_max_row_count   in number default null
    );

function get_file_src (
    p_file_id in number )
    return varchar2;

procedure get_file (
    p_page_id    in number,
    p_session_id in number,
    p_file_id    in number,
    p_checksum   in varchar2 );

procedure delete_file (
    p_file_id   in number);

procedure fetch_file (
    p_file_id          in number,
    p_component_id     out number,
    p_component_type   out varchar2,
    p_filename         out varchar2,
    p_file_mimetype    out varchar2,
    p_file_comments    out varchar2,
    p_updated_on       out varchar2,
    p_updated_by       out varchar2
    );

procedure save_file_comment (
    p_file_id          in number default null,
    p_file_comments    in varchar2 default null);

end  wwv_flow_team_file;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TRANSLATION_UTIL_API"
as

--  Copyright (c) Oracle Corporation 2001 - 2012. All Rights Reserved.
--
--    DESCRIPTION
--      Internal APIs for use with application translation publishing
--
procedure publish_application (
    p_from_flow_id          in number default null,
    p_translated_flow_id    in number default null )
    ;

procedure sync_translations (
    p_flow_id              in number   default null,
    p_language             in varchar2 default null)
    ;

procedure flow_copy (
    p_flow_id_from         in number,
    p_flow_id_to           in number,
    p_alias_to             in varchar2 default null,
    p_flow_language_to     in varchar2,
    p_ok_to_delete_flow    in boolean := false,
    p_perform_translations in boolean := true)
    ;

procedure set_translation_mapping(
    p_application_id_from  in number,
    p_application_id_to    in number,
    p_language             in varchar2 );


end wwv_flow_translation_util_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_APP_BUILDER_API" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_app_builder_api.sql
--
--    DESCRIPTION
--     Interface to build and manage application components outside of APEX builder.
--
--    NOTES
--      This API is unsupported.
--
--    MODIFIED (MM/DD/YYYY)
--     cbcho    01/30/2013 - Created
--     cbcho    02/13/2013 - Added create_page_computation
--     cbcho    02/19/2013 - Changed create_ir_page to remove p_css_file_urls, p_inline_css
--     cbcho    03/08/2013 - Changed create_ir_page to add p_show_save_public, p_show_subscription
--     cbcho    06/19/2013 - Added edit_page_item, edit_ir_column_label, edit_cr_column_label
--     cbcho    07/15/2013 - Added edit_cr_column
--     cbcho    07/16/2013 - Added display condition parameters in edit_ir_column, edit_cr_column
--     cbcho    07/29/2013 - Removed edit_ir_column_label, edit_cr_column_label
--     cbcho    02/25/2014 - Added p_display_text_as in edit_ir_column
--     cbcho    03/19/2014 - Changed edit_ir_column, edit_cr_column to support editing display type and LOV
--
--------------------------------------------------------------------------------

subtype t_ir_column_type is varchar2(10);

c_ir_column_type_string constant t_ir_column_type := 'STRING';
c_ir_column_type_number constant t_ir_column_type := 'NUMBER';
c_ir_column_type_date constant t_ir_column_type := 'DATE';
c_ir_column_type_clob constant t_ir_column_type := 'CLOB';
c_ir_column_type_other constant t_ir_column_type := 'OTHER';

type t_ir_column is record (
    db_column_name     varchar2(255),
    column_type        t_ir_column_type,
    tz_dependent       boolean default false,
    max_length         number,
    column_label       varchar2(4000),
    display_seq        number,
    display_in_report  boolean default true,
    format_mask        varchar2(255),
    column_link        varchar2(4000),
    column_link_text   varchar2(4000),
    column_link_attr   varchar2(4000));

type t_ir_column_list is table of t_ir_column index by binary_integer;

function minimum_free_page (
    p_start_page in number default 1)
    return number;

function ir_query_changed (
    p_interactive_report_id  in number,
    p_new_query              in varchar2
    ) return boolean;

procedure set_application_id (
    p_application_id in number);

procedure get_ir_column_diff (
    p_interactive_report_id in number,
    p_sql_query             in varchar2,
    --
    p_removed_columns       out wwv_flow_global.vc_arr2,
    p_new_columns           out wwv_flow_global.vc_arr2);

procedure delete_page (
    p_page_id in number);

procedure create_page_process (
    p_page_id  in number,
    p_sequence in number,
    p_name     in varchar2,
    p_point    in varchar2,
    p_type     in varchar2,
    p_sql      in varchar2);

procedure create_page_computation (
    p_page_id     in number,
    p_sequence    in number,
    p_item_name   in varchar2,
    p_point       in varchar2,
    p_type        in varchar2,
    p_computation in varchar2);

procedure create_page_button (
    p_page_id      in number,
    p_sequence     in number,
    p_region_id    in number,
    p_name         in varchar2,
    p_action       in varchar2,
    p_image        in varchar2 default null,
    p_image_alt    in varchar2 default null,
    p_position     in varchar2 default null,
    p_alignment    in varchar2 default null,
    p_redirect_url in varchar2 default null);

procedure create_page_branch (
    p_page_id              in number,
    p_sequence             in number,
    p_name                 in varchar2,
    p_type                 in varchar2,
    p_action               in varchar2,
    p_point                in varchar2,
    p_authorization_scheme in varchar2 default null);

procedure create_ir_page (
    p_page_id               in number,
    p_user_interface_id     in number,
    p_sql_query             in varchar2,
    p_report_name           in varchar2,
    p_report_description    in varchar2 default null,
    --
    p_columns               in t_ir_column_list,
    --
    p_show_save_public      in boolean default false,
    p_show_subscription     in boolean default false
    );

procedure edit_ir_column (
    p_id                      in number,
    p_page_id                 in number,
    p_interactive_report_id   in number,
    --
    p_display_order           in number   default null,
    p_column_label            in varchar2 default null,
    p_display_in_default_rpt  in varchar2 default null,
    --
    p_heading_alignment       in varchar2 default null,
    --
    p_allow_sorting           in varchar2 default null,
    p_allow_filtering         in varchar2 default null,
    p_allow_highlighting      in varchar2 default null,
    p_allow_ctrl_breaks       in varchar2 default null,
    p_allow_aggregations      in varchar2 default null,
    p_allow_computations      in varchar2 default null,
    p_allow_charting          in varchar2 default null,
    p_allow_group_by          in varchar2 default null,
    p_allow_hide              in varchar2 default null,
    --
    p_display_text_as         in varchar2 default 'ESCAPE_SC',
    p_rpt_show_filter_lov     in varchar2 default null,
    p_rpt_lov                 in varchar2 default null,
    --
    p_format_mask             in varchar2 default null,
    p_column_link             in varchar2 default null,
    p_column_linktext         in varchar2 default null,
    p_column_link_attr        in varchar2 default null,
    --
    p_display_condition_type  in varchar2 default null,
    p_display_condition       in varchar2 default null,
    p_display_condition2      in varchar2 default null
    );

procedure edit_ir_query (
    p_interactive_report_id      in number,
    p_page_id                    in number,
    p_region_id                  in number,
    --
    p_sql_query                  in varchar2
    );

procedure edit_ir_default_rpt (
    p_interactive_report_id      in number,
    p_page_id                    in number,
    p_region_id                  in number,
    --
    p_report_columns             in varchar2,
    p_sort_col1                  in varchar2 default null,
    p_sort_dir1                  in varchar2 default null,
    p_sort_null1                 in varchar2 default null,
    p_sort_col2                  in varchar2 default null,
    p_sort_dir2                  in varchar2 default null,
    p_sort_null2                 in varchar2 default null,
    p_sort_col3                  in varchar2 default null,
    p_sort_dir3                  in varchar2 default null,
    p_sort_null3                 in varchar2 default null,
    p_sort_col4                  in varchar2 default null,
    p_sort_dir4                  in varchar2 default null,
    p_sort_null4                 in varchar2 default null,
    p_sort_col5                  in varchar2 default null,
    p_sort_dir5                  in varchar2 default null,
    p_sort_null5                 in varchar2 default null,
    p_sort_col6                  in varchar2 default null,
    p_sort_dir6                  in varchar2 default null,
    p_sort_null6                 in varchar2 default null
    );

procedure edit_page_item (
    p_page_id             in number,
    p_item_name           in varchar2,
    p_item_label          in varchar2 default null,
    p_label_template_id   in number default null,
    p_width               in number default null,
    p_height              in number default null,
    p_format_mask         in varchar2 default null,
    --
    p_help_text           in varchar2 default null
    );

procedure edit_cr_column (
    p_page_id                 in number,
    p_region_id               in number,
    p_column_alias            in varchar2,
    p_column_label            in varchar2,
    p_heading_alignment       in varchar2 default null,
    --
    p_display_as              in varchar2 default 'ESCAPE_SC',
    p_inline_lov              in varchar2 default null,
    --
    p_display_when_cond_type  in varchar2 default null,
    p_display_when_condition  in varchar2 default null,
    p_display_when_condition2 in varchar2 default null
    );

end wwv_flow_app_builder_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PAGE_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_page_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling pages in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/13/2012 - Created
--      pawolf    03/19/2012 - Added get_template_id
--      pawolf    06/20/2012 - Added global page support (feature #987)
--      pawolf    11/13/2012 - Added is_global_page (bug #14744294)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the name of the UI type for which the specified page has been designed
-- for.
--==============================================================================
function get_ui_type (
    p_application_id in number,
    p_page_id        in number )
    return varchar2;

--==============================================================================
-- Returns TRUE if the specified page has been designed for Desktop browsers.
--==============================================================================
function is_desktop_ui (
    p_application_id in number,
    p_page_id        in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified page has been designed for
-- jQuery Mobile (Smartphone, Tablet or Phonegap) browsers.
--==============================================================================
function is_jqm_ui (
    p_application_id in number,
    p_page_id        in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified page has been designed for
-- jQuery Mobile Smartphones browsers.
--==============================================================================
function is_jqm_smartphone_ui (
    p_application_id in number,
    p_page_id        in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified page has been designed for
-- jQuery Mobile Tablet browsers.
--==============================================================================
function is_jqm_tablet_ui (
    p_application_id in number,
    p_page_id        in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified page is the global page of the user interface
-- referenced by that page.
--==============================================================================
function is_global_page (
    p_application_id in number,
    p_page_id        in number )
    return boolean;

--==============================================================================
-- Returns the theme id which is used by the specified page.
--==============================================================================
function get_theme_id (
    p_application_id in number,
    p_page_id        in number )
    return number;

--==============================================================================
-- Returns the page template used by the specified page. If the page
-- doesn't have a page template specified, the default page template of the
-- theme will be returned.
--==============================================================================
function get_template_id (
    p_application_id in number,
    p_page_id        in number )
    return number;

--==============================================================================
-- Returns the user interface id used by the specified page.
--==============================================================================
function get_user_interface_id (
    p_application_id in number,
    p_page_id        in number )
    return number;
--
end wwv_flow_page_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_THEME_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_theme.sql
--
--    DESCRIPTION
--      This package is responsible for handling themes and templates
--      in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/07/2012 - Created
--      pawolf    05/21/2012 - Added wwv_flow_theme_display_points (feature #936)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the id of the default page template of the specified theme.
--==============================================================================
function get_page_template_id (
    p_application_id in number,
    p_theme_id       in number )
    return number;

--==============================================================================
-- Returns the id of the default breadcrumb template of the specified theme.
--==============================================================================
function get_breadcrumb_template_id (
    p_application_id in number,
    p_theme_id       in number )
    return number;

--==============================================================================
-- Returns the id of the default calendar template of the specified theme.
--==============================================================================
function get_calendar_template_id (
    p_application_id in number,
    p_theme_id       in number )
    return number;

--==============================================================================
-- Returns the id of the default region template of the specified theme.
--==============================================================================
function get_region_template_id (
    p_application_id in number,
    p_theme_id       in number )
    return number;

--==============================================================================
-- Returns the id of the default report template of the specified theme.
--==============================================================================
function get_report_template_id (
    p_application_id in number,
    p_theme_id       in number )
    return number;
--
--==============================================================================
-- This procedure pulls content from the master theme display point and
-- copies it to the subscribing theme display point.
--==============================================================================
procedure subscribe_theme_display_point (
    p_master_display_point_id      in number,
    p_subscribing_display_point_id in number );
--
--==============================================================================
-- This procedure pushes content of the theme display point to
-- all theme display points that subscribe to this theme display point.
--==============================================================================
procedure push_theme_display_point (
    p_display_point_id in number );
--
--==============================================================================
-- Refreshes a theme display point with the values values of the subscribed
-- master theme display point.
--==============================================================================
procedure refresh_theme_display_point (
    p_display_point_id in number );
--
end wwv_flow_theme_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEMPLATE_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_template_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling templates in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/16/2012 - Created
--      pawolf    05/14/2012 - Added grid templates (feature #936)
--      pawolf    05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the default breadcrumb position of a page template.
-- If p_page_template_id isn't specified, the default page template will be used.
--==============================================================================
function get_breadcrumb_display_point (
    p_application_id   in number,
    p_theme_id         in number,
    p_page_template_id in number default null )
    return varchar2;
--
--
end wwv_flow_template_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_USER_INTERFACE_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_user_interface_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling user interfaces in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/12/2012 - Created
--      pawolf    03/19/2012 - Added supports_breadcrumbs APIs
--      pawolf    04/19/2012 - Added new APIs
--      pawolf    06/20/2012 - Added global page support (feature #987)
--      pawolf    07/04/2012 - Added supports_feature (feature #827)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns the name of the UI type for which the specified user interface has
-- been designed for.
--==============================================================================
function get_ui_type (
    p_application_id    in number,
    p_user_interface_id in number )
    return varchar2;

--==============================================================================
-- Returns TRUE if the specified user interface has been designed for Desktop browsers.
--==============================================================================
function is_desktop_ui (
    p_application_id    in number,
    p_user_interface_id in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile (Smartphone, Tablet or Phonegap) browsers.
--==============================================================================
function is_jqm_ui (
    p_application_id    in number,
    p_user_interface_id in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile Smartphones browsers.
--==============================================================================
function is_jqm_smartphone_ui (
    p_application_id    in number,
    p_user_interface_id in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified user interface has been designed for
-- jQuery Mobile Tablet browsers.
--==============================================================================
function is_jqm_tablet_ui (
    p_application_id    in number,
    p_user_interface_id in number )
    return boolean;

--==============================================================================
-- Returns the current theme id of the specified user interface.
--==============================================================================
function get_current_theme_id (
    p_application_id    in number,
    p_user_interface_id in number )
    return number;

--==============================================================================
-- Returns the global page id of the specified user interface.
--==============================================================================
function get_global_page_id (
    p_application_id    in number,
    p_user_interface_id in number )
    return number;

--==============================================================================
-- Returns TRUE if the theme of the specified user interface has a default
-- breadcrumb template and templates are available.
--==============================================================================
function supports_breadcrumbs (
    p_application_id    in number,
    p_user_interface_id in number )
    return boolean;

--==============================================================================
-- Returns TRUE if the specified Builder Feature is supported by the
-- UI type specified by the user interface, otherwise returns FALSE.
--==============================================================================
function supports_feature (
    p_user_interface_id in number,
    p_name              in varchar2 )
    return boolean;
--
end wwv_flow_user_interface_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CALENDAR_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_calendar_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling the calendar component
--      in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/20/2012 - Created based on wwv_flow_calendar3
--      sathikum  03/28/2012 - Added create_calendar_page procedure
--      sathikum  03/29/2012 - Added create_calendar_region procedure
--      sathikum  03/30/2012 - Added additional columns to support Agenda Calendar feature (#812)
--      sathikum  04/13/2012 - Added additional columns to support Mobile and general Template (#811)
--      sathikum  06/19/2012 - Added additional column end_date_column (#814)
--      pmanirah  10/28/2012 - Added a new parameter p_user_interface_id to create_wizard_elements procedure
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--
-- set attributes for the calendar
-- KLR: add md5
--
procedure set_Attributes(
    p_flow_id                     number,
    p_template_id                 number,
    p_plug_id                     number,
    p_start_date                  varchar2    default null,
    p_end_date                    varchar2    default null,
    p_begin_at_Start_of_interval  varchar2    default 'Y',
    p_date_item                   varchar2    default null,
    p_end_date_item               varchar2    default null,
    p_date_type_item              varchar2    default null,
    p_interval                    varchar2    default 'M',
    p_display_item                varchar2    default null,
    p_display_type                varchar2    default null,
    p_item_format                 varchar2    default null,
    p_easy_sql_owner              varchar2    default null,
    p_easy_sql_table              varchar2    default null,
    p_date_col                    varchar2    default null,
    p_end_date_col                varchar2    default null,
    p_display_col                 varchar2    default null,
    p_start_of_week               number      default null,
    p_day_link                    varchar2    default null,
    p_item_link                   varchar2    default null,
    p_start_time                  in varchar2 default null,
    p_end_time                    in varchar2 default null,
    p_time_format                 in varchar2 default null,
    p_week_start_day              in varchar2 default null,
    p_week_end_day                in varchar2 default null,
    p_calendar_type               in varchar2 default null,
    p_include_custom_cal          in varchar2 default null,
    p_custom_cal_days             in number   default 3,
    p_primary_key_column          in varchar2 default null,
    p_drag_drop_required_role     in varchar2 default null,
    p_drag_drop_process_id        in number   default null,
    p_item_link_primary_key_item  in varchar2 default null,
    p_item_link_date_item         in varchar2 default null,
    p_item_link_open_in           in varchar2 default null,
    p_include_time_with_date      in varchar2 default 'N',
    p_data_background_color       in varchar2 default null,
    p_data_text_color             in varchar2 default null,
    p_agenda_cal_days_type        in varchar2 default 'MONTH',
    p_agenda_cal_days             in number   default 30,
    p_SECURITY_GROUP_ID           number      default wwv_flow_security.g_security_group_id ,
    p_LAST_UPDATED_BY             varchar2    default wwv_flow.g_user,
    p_LAST_UPDATED_ON             date        default sysdate);


procedure create_wizard_elements(p_flow_id                    number,
                                 p_page_id                    number,
                                 p_region_id                  number,
                                 p_date_item_name             varchar2,
                                 p_display_item_name          varchar2,
                                 p_buttons                    varchar2,
                                 p_button_template            varchar2,
                                 p_date_item_type_name        varchar2 default null,
                                 p_is_ajax_calendar           varchar2 default null,
                                 p_end_date_item_name         varchar2 default null,
                                 p_include_custom_cal         varchar2 default null,
                                 p_enable_monthly             varchar2 default 'Y',
                                 p_enable_weekly              varchar2 default 'Y',
                                 p_enable_daily               varchar2 default 'Y',
                                 p_enable_agenda              varchar2 default 'Y',
                                 p_add_create_button          varchar2 default 'N',
                                 p_create_url                 varchar2 default null,
                                 p_custom_cal_days            number   default 3,
                                 p_is_jqm_user_interface      boolean  default false,
                                 p_button_region_id           number   default null,
                                 p_user_interface_id          number   default null);

-- function to check process name already used.
function is_process_name_used(
    p_flow_id in number,
    p_step_id in number,
    p_name    in varchar2)
    return boolean;

-- function to generate on demand process for Drag & Drop

function create_on_demand_process(
    p_flow_id                     number,
    p_plug_id                     number,
    p_table_name                  varchar2,
    p_primary_key_col             varchar2,
    p_date_col                    varchar2
) return number;

function is_valid_query(
    p_query  varchar2,
    p_owner  varchar2) return varchar2;

--
-- Loads columns of a select into a collection for select lists
--
procedure loadCols(p_sql   varchar2        default null,
                    p_owner varchar2        default null,
                    p_table varchar2        default null,
                    p_collection varchar2);

--
-- Procedure to Create Calendar Page
--
procedure create_calendar_page( p_flow_id                    number,
                                p_page_id                    number,
                                p_page_name                  varchar2 default null,
                                p_theme_id                   number default null,
                                p_user_interface_id          number default null,
                                p_cal_region_id              number default null,
                                p_cal_region_name            varchar2 default null,
                                p_cal_region_tabset          varchar2 default null,
                                p_cal_tab_options            number default null,
                                p_cal_tab_text               varchar2 default null,
                                p_cal_tab_name               varchar2 default null,
                                p_cal_source_table           varchar2 default null,
                                p_cal_source_sql             varchar2 default null,
                                p_cal_date_col               varchar2 default null,
                                p_cal_end_date_col           varchar2 default null,
                                p_cal_display_col            varchar2 default null,
                                p_date_format                varchar2 default null,
                                p_cal_type                   varchar2 default null,
                                p_primary_key_col            varchar2 default null,
                                p_include_custom_calendar    varchar2 default 'N',
                                p_enable_drag_drop           varchar2 default 'N',
                                p_on_demand_process          number default null,
                                p_drag_drop_auth_scheme      varchar2 default null,
                                p_link_url_or_page           varchar2 default null,
                                p_target_link                varchar2 default null,
                                p_link_open_in               varchar2 default null,
                                p_target_page                number default null,
                                p_target_page_primary_item   varchar2 default null,
                                p_target_page_date_item      varchar2 default null,
                                p_show_new_form_details      varchar2 default null,
                                p_form_page_id               number default null,
                                p_form_page_name             varchar2 default null,
                                p_form_region_id             number default null,
                                p_form_region_name           varchar2 default null,
                                p_form_table_owner           varchar2 default null,
                                p_form_table_name            varchar2 default null,
                                p_form_primary_key_type      varchar2 default null,
                                p_form_primary_key           varchar2 default null,
                                p_form_columns               varchar2 default null,
                                p_form_insert_allowed        varchar2 default 'N',
                                p_form_update_allowed        varchar2 default 'N',
                                p_form_delete_allowed        varchar2 default 'N',
                                p_form_create_button_name    varchar2 default null,
                                p_form_save_button_name      varchar2 default null,
                                p_form_delete_button_name    varchar2 default null,
                                p_form_cancel_button_name    varchar2 default null);

procedure create_calendar_region (p_flow_id                   number,
                                p_page_id                     number,
                                p_security_id                 number,
                                p_theme_id                    number default null,
                                p_user_interface_id           number default null,
                                p_template_id                 number default null,
                                p_parent_plug_id              varchar2 default null,
                                p_region_type                 varchar2 default null,
                                p_region_title                varchar2 default null,
                                p_region_sequence             varchar2 default null,
                                p_display_point               varchar2 default null,
                                p_owner                       varchar2 default null,
                                p_source_table                varchar2 default null,
                                p_source_sql                  varchar2 default null,
                                p_primary_key_col             varchar2 default null,
                                p_date_column                 varchar2 default null,
                                p_end_date_column             varchar2 default null,
                                p_date_column_alternate       varchar2 default null,
                                p_plug_display_column         varchar2 default null,
                                p_display_column              varchar2 default null,
                                p_date_format                 varchar2 default null,
                                p_calendar_type               varchar2 default null,
                                p_include_custom_calendar     varchar2 default 'N',
                                p_link_target_type            varchar2 default null,
                                p_link_target_open_in         varchar2 default null,
                                p_link_target_page            varchar2 default null,
                                p_link_target_url             varchar2 default null,
                                p_target_date_item            varchar2 default null,
                                p_target_primary_key_item     varchar2 default null,
                                p_enable_drag_drop            varchar2 default null,
                                p_drag_drop_on_demand_process number default null,
                                p_drag_drop_auth_scheme       varchar2 default null,
                                p_form_page_id                number default null,
                                p_form_page_name              varchar2 default null,
                                p_form_region_id              number default null,
                                p_form_region_name            varchar2 default null,
                                p_form_table_owner            varchar2 default null,
                                p_form_table_name             varchar2 default null,
                                p_form_primary_key_type       varchar2 default null,
                                p_form_primary_key            varchar2 default null,
                                p_form_columns                varchar2 default null,
                                p_form_insert_allowed         varchar2 default 'N',
                                p_form_update_allowed         varchar2 default 'N',
                                p_form_delete_allowed         varchar2 default 'N',
                                p_form_create_button_name     varchar2 default null,
                                p_form_save_button_name       varchar2 default null,
                                p_form_delete_button_name     varchar2 default null,
                                p_form_cancel_button_name     varchar2 default null) ;

end wwv_flow_calendar_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LDAP" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_ldap.sql
--
--    DESCRIPTION
--      Flow LDAP package
--
--      This package contains functions and procedures used to
--      extract data from an LDAP server, such as OID.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED  (MM/DD/YYYY)
--      tmuth    10/22/2002 - Created
--      jkallman 10/23/2002 - Added get_all_user_attributes
--      jkallman 02/19/2008 - Added get_groups, get_groups_string, move globals to body
--      jstraub  04/08/2010 - Added p_use_ssl to all functions and procedures
--      cneumuel 02/13/2012 - In get_groups,get_groups_string: anonymized parameter comments (bug #13690876)
--      cneumuel 04/17/2012 - Prefix sys objects with schema (bug #12338050)
--      cneumuel 08/16/2012 - Code cleanup, added p_nested_membership, support for "uid=xxx" RDNs (bug #13605304)
--
--------------------------------------------------------------------------------

--##############################################################################
--#
--# AUTHENTICATION
--#
--##############################################################################

--==============================================================================
-- Return if the user credentials can be used to perform a SIMPLE_BIND_S
--
-- ARGUMENTS
-- * p_username        login name of the user
-- * p_password        password for p_username
-- * p_search_base     LDAP search base, e.g. ou=employees,dc=example,dc=com
-- * p_host            LDAP server host name
-- * p_port            LDAP server port name
-- * p_use_ssl         if Y: use SSL in bind to LDAP server
--                     if A: use SSL with one way authentication (requires
--                           certificate in wallet)
--                     if N: do not use SSL
--==============================================================================
function authenticate(
    p_username     in varchar2 default null,
    p_password     in varchar2 default null,
    p_search_base  in varchar2,
    p_host         in varchar2,
    p_port         in varchar2 default 389,
    p_use_ssl      in varchar2 default 'N')
    return boolean;

--##############################################################################
--#
--# AUTHORIZATION (GROUP MEMBERSHIP)
--#
--##############################################################################

--==============================================================================
function is_member(
    p_username     in varchar2,
    p_pass         in varchar2 default null,
    p_auth_base    in varchar2,
    p_host         in varchar2,
    p_port         in varchar2 default 389,
    p_use_ssl      in varchar2 default 'N',
    p_group        in varchar2,
    p_group_base   in varchar2,
    p_nested_membership in boolean default false )
    return boolean;

--==============================================================================
function member_of(
    p_username          in varchar2 default null,
    p_pass              in varchar2 default null,
    p_auth_base         in varchar2,
    p_host              in varchar2,
    p_port              in varchar2 default 389,
    p_use_ssl           in varchar2 default 'N',
    p_nested_membership in boolean default false )
    return wwv_flow_global.vc_arr2;

--==============================================================================
function member_of2(
    p_username          in varchar2 default null,
    p_pass              in varchar2 default null,
    p_auth_base         in varchar2,
    p_host              in varchar2,
    p_port              in varchar2 default 389,
    p_use_ssl           in varchar2 default 'N',
    p_nested_membership in boolean default false )
    return varchar2;


--==============================================================================
function get_groups(
    p_ldap_host             in  varchar2,
    p_ldap_port             in  number  default 389,
    p_use_ssl               in varchar2 default 'N',
    p_username              in  varchar2,
    p_service_account       in  varchar2 default null,
    p_service_account_pwd   in  varchar2 default null,
    p_search_base           in  varchar2 default null,
    p_scope                 in  binary_integer  default sys.dbms_ldap.scope_subtree,
    p_group_attribute       in  varchar2 default 'cn',
    p_nested_membership in boolean default false )
return sys.dbms_ldap_utl.string_collection;

--==============================================================================
function get_groups_string(
    p_ldap_host             in  varchar2,
    p_ldap_port             in  number  default 389,
    p_use_ssl               in varchar2 default 'N',
    p_username              in  varchar2,
    p_service_account       in  varchar2 default null,
    p_service_account_pwd   in  varchar2 default null,
    p_search_base           in  varchar2 default null,
    p_scope                 in  binary_integer  default sys.dbms_ldap.scope_subtree,
    p_group_attribute       in  varchar2 default 'cn',
    p_delimiter             in  varchar2 default ':',
    p_nested_membership     in boolean default false )
return varchar2;

--##############################################################################
--#
--# USER ATTRIBUTES
--#
--##############################################################################

--==============================================================================
procedure get_user_attributes(
    p_username          in  varchar2 default null,
    p_pass              in  varchar2 default null,
    p_auth_base         in  varchar2,
    p_host              in  varchar2,
    p_port              in  varchar2 default 389,
    p_use_ssl           in varchar2 default 'N',
    p_attributes        in  wwv_flow_global.vc_arr2,
    p_attribute_values  out wwv_flow_global.vc_arr2);

--==============================================================================
procedure get_all_user_attributes(
    p_username          in  varchar2 default null,
    p_pass              in  varchar2 default null,
    p_auth_base         in  varchar2 default null,
    p_host              in  varchar2,
    p_port              in  varchar2 default 389,
    p_use_ssl           in varchar2 default 'N',
    p_attributes        out wwv_flow_global.vc_arr2,
    p_attribute_values  out wwv_flow_global.vc_arr2);

end wwv_flow_ldap;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CUSTOM_AUTH_LDAP"
as
--  Copyright (c) Oracle Corporation 2001-2002. All Rights Reserved.
--
--     DESCRIPTION
--       API package to expose ldap authentication function
--
--    SECURITY
--       Executable by owner
--
--    NOTES
--
--    EXAMPLE
--
--

function authenticate(
    --
    -- Context: any
    -- Purpose: authenicate against ldap directory
    --
    p_dn                 in varchar2,
    p_search_filter      in varchar2 default null,
    p_password           in varchar2,
    p_ldap_host          in varchar2,
    p_ldap_port          in number,
    p_use_ssl            in varchar2 default 'N',
    p_use_exact_dn       in varchar2 default 'Y')
    return boolean
    ;

end wwv_flow_custom_auth_ldap;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WEB_SERVICES" as

    --------------------------------------------------
    -- globals for response, clob and sys.xmltype
    --
    type flow_soap_response_clob    is table of clob index by binary_integer;
    g_flow_soap_response_clob       flow_soap_response_clob;

    type flow_soap_response_xmltype is table of sys.xmltype index by binary_integer;
    g_flow_soap_response_xmltype    flow_soap_response_xmltype;

    type flow_soap_idx              is table of number index by binary_integer;
    g_flow_soap_idx                 flow_soap_idx;

    g_flow_soap_error_code          sys.dbms_sql.varchar2_table;
    g_flow_soap_error_message       sys.dbms_sql.varchar2_table;

    empty_vc_arr                    wwv_flow_global.vc_arr2;
    g_body                          varchar2(32000);
    g_header                        varchar2(32000);

function generate_envelope(
    p_operation in varchar2,
    p_style     in varchar2,
    p_ns        in varchar2,
    p_version   in varchar2 default '1.1',
    p_body      in clob,
    p_header    in clob )
return clob;

function make_request(
    p_url            in varchar2,
    p_action         in varchar2,
    p_version        in varchar2 default '1.1',
    p_envelope       in clob,
    p_username       in varchar2,
    p_password       in varchar2,
    p_proxy_override in varchar2 default null,
    p_charset        in varchar2 default null,
    p_wallet_path    in varchar2,
    p_wallet_pwd     in varchar2 )
return clob;

function make_rest_request(
    p_url               in varchar2,
    p_http_method       in varchar2,
    p_username          in varchar2,
    p_password          in varchar2,
    p_proxy_override    in varchar2 default null,
    p_transfer_timeout  in number default 180,
    p_body              in clob default empty_clob(),
    p_body_blob         in blob default empty_blob(),
    p_parm_name         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value        in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_http_headers      in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_http_hdr_values   in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_wallet_path       in varchar2,
    p_wallet_pwd        in varchar2 )
return clob;

function make_soap_request(
    p_url               in varchar2,
    p_action            in varchar2 default null,
    p_version           in varchar2 default '1.1',
    p_envelope          in clob,
    p_username          in varchar2 default null,
    p_password          in varchar2 default null,
    p_proxy_override    in varchar2 default null,
    p_transfer_timeout  in number default 180,
    p_wallet_path       in varchar2 default null,
    p_wallet_pwd        in varchar2 default null,
    p_http_headers      in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_http_hdr_values   in wwv_flow_global.vc_arr2 default empty_vc_arr
)
return clob;

procedure make_request(
    p_id             in number,
    p_process_id     in number,
    p_charset        in varchar2 default null );

procedure make_request(
    p_id             in number,
    p_operation_id   in number,
    p_process_id     in number,
    p_charset        in varchar2 default null );

function render_request(
    p_service_id     in number,
    p_stylesheet     in clob   default null,
    p_occurrence     in number default 1,
    p_stylesheet_id  in number default null)
return clob;

procedure print_rendered_result(
    p_service_id     in number,
    p_stylesheet     in clob   default null,
    p_occurrence     in number default 1,
    p_stylesheet_id  in number default null );

function parse( p_clob in clob )
return clob ;

function get_last_error_message
return varchar2;

function find_proxy(
    p_flow_id   in varchar2)
return varchar2;

function get_parm_value(
    p_parm_id       in number,
    p_process_id    in number )
return varchar2;

function get_parm_value(
    p_name          in varchar2,
    p_parm_name     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value    in wwv_flow_global.vc_arr2 default empty_vc_arr )
return varchar2;

procedure append_element(
    p_process_id        in number default null,
    p_parm_id           in number,
    p_name              in varchar2,
    p_is_xsd            in varchar2,
    p_form_qualified    in varchar2,
    p_type              in varchar2,
    p_operation_id      in number,
    p_in_msg_style      in varchar2,
    p_soap_style        in varchar2,
    p_parm_name         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value        in wwv_flow_global.vc_arr2 default empty_vc_arr );

procedure append_element2(
    p_process_id        in number default null,
    p_parm_id           in number,
    p_name              in varchar2,
    p_is_xsd            in varchar2,
    p_form_qualified    in varchar2,
    p_type              in varchar2,
    p_operation_id      in number,
    p_in_msg_style      in varchar2,
    p_ns                in varchar2,
    p_soap_style        in varchar2,
    p_parm_name         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value        in wwv_flow_global.vc_arr2 default empty_vc_arr );

procedure generate_body(
    p_process_id    in number default null,
    p_operation_id  in number,
    p_in_msg_style  in varchar2,
    p_soap_style    in varchar2,
    p_parm_name     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value    in wwv_flow_global.vc_arr2 default empty_vc_arr );

procedure generate_header(
    p_process_id    in number default null,
    p_operation_id  in number,
    p_in_msg_style  in varchar2,
    p_ns            in varchar2,
    p_soap_style    in varchar2,
    p_parm_name     in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_parm_value    in wwv_flow_global.vc_arr2 default empty_vc_arr );

function get_path(
    p_parm_id       in number,
    p_level         in number default 0 )
return varchar2;

function generate_query(
    p_operation_id              in number,
    p_array_parm                in number,
    p_report_collection_name    in varchar2,
    p_array_parms_collection    in varchar2 )
return varchar2;

function generate_query_manual(
    p_result_node               in varchar2,
    p_soap_style                in varchar2,
    p_message_format            in varchar2,
    p_namespace                 in varchar2,
    p_report_collection_name    in varchar2,
    p_array_parms_collection    in varchar2 )
return varchar2;

function UDDI_request(
    p_uddi_url              in varchar2,
    p_request_type          in varchar2,
    p_request_parameter     in varchar2,
    p_proxy_url             in varchar2,
    p_request_parameter2    in varchar2 default null,
    p_uddi_version          in varchar2 default '2.0' )
return sys.xmltype;

procedure find_services_by_servname(
    p_uddi_url              in varchar2,
    p_request_parameter2    in varchar2,
    p_flow_id               in varchar2,
    p_services_collection   in varchar2,
    p_exact                 in varchar2 default 'N',
    p_case_sensitive        in varchar2 default 'N',
    p_uddi_version          in varchar2 default '2.0' );

procedure find_services_by_busname(
    p_uddi_url              in varchar2,
    p_request_parameter     in varchar2,
    p_flow_id               in varchar2,
    p_services_collection   in varchar2,
    p_exact                 in varchar2 default 'N',
    p_case_sensitive        in varchar2 default 'N',
    p_uddi_version          in varchar2 default '2.0' );

procedure get_service_details(
    p_uddi_url              in varchar2,
    p_request_parameter     in varchar2,
    p_flow_id               in varchar2,
    p_services_collection   in varchar2,
    p_details_collection    in varchar2,
    p_uddi_version          in varchar2 default '2.0' );

function WSDL_analyze(
    p_wsdl_url                      in varchar2,
    p_flow_id                       in varchar2,
    p_uddi_details_collection       in varchar2,
    p_web_service_collection        in varchar2,
    p_operations_collection         in varchar2,
    p_inputs_collection             in varchar2,
    p_outputs_collection            in varchar2,
    p_username                      in varchar2,
    p_password                      in varchar2 )
return varchar2;

procedure create_web_service(
    p_id                            in number,
    p_flow_id                       in varchar2,
    p_name                          in varchar2,
    p_url                           in varchar2,
    p_target_ns                     in varchar2,
    p_xsd_prefix                    in varchar2,
    p_soap_style                    in varchar2,
    p_soap_version                  in varchar2 default '1.1',
    p_operations_collection         in varchar2,
    p_inputs_collection             in varchar2,
    p_outputs_collection            in varchar2,
    p_basic_auth                    in varchar2 );

procedure create_rest_web_reference(
    p_id                            in number,
    p_flow_id                       in varchar2,
    p_name                          in varchar2,
    p_url                           in varchar2,
    p_proxy_override                in varchar2,
    p_http_method                   in varchar2,
    p_input_format                  in varchar2,
    p_body                          in varchar2,
    p_output_format                 in varchar2,
    p_xpath                         in varchar2,
    p_xmlns                         in varchar2,
    p_text_parm_delim               in varchar2,
    p_text_record_delim             in varchar2,
    p_inputs_collection             in varchar2,
    p_outputs_collection            in varchar2,
    p_headers_collection            in varchar2,
    p_basic_auth                    in varchar2 );

procedure update_rest_web_reference(
    p_id                            in number,
    p_flow_id                       in varchar2,
    p_name                          in varchar2,
    p_url                           in varchar2,
    p_proxy_override                in varchar2,
    p_http_method                   in varchar2,
    p_input_format                  in varchar2,
    p_body                          in varchar2,
    p_output_format                 in varchar2,
    p_xpath                         in varchar2,
    p_xmlns                         in varchar2,
    p_text_parm_delim               in varchar2,
    p_text_record_delim             in varchar2,
    p_inputs_collection             in varchar2,
    p_outputs_collection            in varchar2,
    p_headers_collection            in varchar2,
    p_basic_auth                    in varchar2 );

procedure update_process_parms(
    p_process_id                    in number,
    p_in_parm_ids                   in wwv_flow_global.vc_arr2,
    p_in_parm_map_types             in wwv_flow_global.vc_arr2,
    p_in_parm_values                in wwv_flow_global.vc_arr2,
    p_out_map_type                  in varchar2,
    p_out_parm_ids                  in wwv_flow_global.vc_arr2,
    p_out_parm_values               in wwv_flow_global.vc_arr2,
    p_auth_parm_ids                 in wwv_flow_global.vc_arr2,
    p_auth_parm_map_types           in wwv_flow_global.vc_arr2,
    p_auth_parm_values              in wwv_flow_global.vc_arr2 );

procedure create_process_parms(
    p_process_id                    in number,
    p_in_parm_collection_name       in varchar2,
    p_out_map_type                  in varchar2,
    p_out_parm_collection_name      in varchar2 );

procedure create_auth_parms(
    p_process_id                    in number,
    p_auth_collection_name       in varchar2 );

end wwv_flow_web_services;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PROCESS_UTILITY" as

--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--    DESCRIPTION
--      Flow page level process utility.
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

function dml_row_info (
    p_process_id    in varchar2,
    p_type          in varchar2)
    return varchar2;

function dml_row_sql (
    p_owner            in varchar2,
    p_table_name       in varchar2,
    p_pk_item          in varchar2,
    p_pk_column        in varchar2,
    p_pk_item2         in varchar2 default null,
    p_pk_column2       in varchar2 default null,
    p_rv_column        in varchar2 default null,
    p_allowed_actions  in varchar2 default null,
    p_dml_fetch_mode   in varchar2 default null)
    return varchar2;

function multi_row_update_info (
    p_process_id    in varchar2,
    p_type          in varchar2)
    return varchar2;

function multi_row_update_sql (
    p_owner            in varchar2,
    p_table_name       in varchar2,
    p_pk_column        in varchar2,
    p_pk_column2       in varchar2 default null
    )
    return varchar2;

function set_pref_to_item_info (
    p_process_id    in varchar2,
    p_type          in varchar2)
    return varchar2;

function set_pref_to_item_sql (
    p_preference       in varchar2,
    p_item             in varchar2
    )
    return varchar2;

function get_next_or_prev_pk_info (
    p_process_id    in varchar2,
    p_type          in varchar2)
    return varchar2;

function get_next_or_prev_pk_sql (
    p_owner              varchar2,
    p_table              varchar2,
    p_pk_column          varchar2,
    p_pk_column2         varchar2 default null,
    p_sort_column        varchar2 default null,
    p_sort_column2       varchar2 default null,
    p_item_pk            varchar2 default null,
    p_item_next          varchar2 default null,
    p_item_prev          varchar2 default null,
    p_item_pk2           varchar2 default null,
    p_item_next2         varchar2 default null,
    p_item_prev2         varchar2 default null,
    p_item_row_cnt       varchar2 default null,
    p_where              varchar2 default null)
    return varchar2;
end wwv_flow_process_utility;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_PARSER" as

--  Copyright (c) Oracle Corporation 2005. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package is used to parse script files from SQL Workshop Script Repository.
--      It conforms to SQL*Plus 10.2, with some restrictions.
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

  -- File id of the script being parsed
  g_file wwv_flow_file_objects$%rowtype;

  /*
   * Maximum supported line length
   */
  G_LIMIT_LINESIZE        CONSTANT PLS_INTEGER := 32767;

  /*
   * Offset for statement terminators.
   * Callers are assumed not caring about terminator postition, just the fact that one was seen.
   */
  G_OFFSET_UNKNOWN        CONSTANT PLS_INTEGER := -1;

  /*
   * Statment Class Constants
   */
  G_C_UNKNOWN             CONSTANT PLS_INTEGER :=  1; /* unknown - an error in the user's script */
  G_C_SQL                 CONSTANT PLS_INTEGER :=  2; /* A SQL command */
  G_C_PLSQL               CONSTANT PLS_INTEGER :=  3; /* A PL/SQL command */
  G_C_SQLPLUS             CONSTANT PLS_INTEGER :=  4; /* A SQL*Plus command */
  G_C_COMMENT             CONSTANT PLS_INTEGER :=  5; /* A REM, -- or slash-asterisk comment */

  -- These classes are for temporary internal processing only
  G_C_EMPTYLINE           CONSTANT PLS_INTEGER :=  6; /* empty or only whitespace on this line */
  G_C_MULTILINECOMMENT    CONSTANT PLS_INTEGER :=  7; /* A slash-asterisk comment */
  G_C_OLDCOMMENT          CONSTANT PLS_INTEGER :=  8; /* The old DOCUMENT comment syntax */
  G_C_UNKNOWN_SET         CONSTANT PLS_INTEGER :=  9; /* SET seen but could be SQL or PL/SQL */
  G_C_UNKNOWN_CREATE      CONSTANT PLS_INTEGER := 10; /* CREATE seen but could be SQL or PL/SQL */

  /*
   * Statement Identifier Constants
   *
   * New values can be added to the end.
   */
  G_S_UNKNOWN         CONSTANT PLS_INTEGER :=  1; /* only returned for G_C_UNKNOWN */
  G_S_ACCEPT          CONSTANT PLS_INTEGER :=  2;
  G_S_ALTER           CONSTANT PLS_INTEGER :=  3;
  G_S_ANALYZE         CONSTANT PLS_INTEGER :=  4;
  G_S_APPEND          CONSTANT PLS_INTEGER :=  5;
  G_S_ARCHIVE         CONSTANT PLS_INTEGER :=  6;
  G_S_ASSOCIATE       CONSTANT PLS_INTEGER :=  7;
  G_S_AT              CONSTANT PLS_INTEGER :=  8; /* i.e. "@" */
  G_S_ATNESTED        CONSTANT PLS_INTEGER :=  9; /* i.e. "@@" */
  G_S_ATTRIBUTE       CONSTANT PLS_INTEGER := 10;
  G_S_AUDIT           CONSTANT PLS_INTEGER := 11;
  G_S_BEGIN           CONSTANT PLS_INTEGER := 12;
  G_S_BLOCKTERMINATOR CONSTANT PLS_INTEGER := 13; /* Period ending SQL and PL/SQL */
  G_S_BREAK           CONSTANT PLS_INTEGER := 14;
  G_S_BTITLE          CONSTANT PLS_INTEGER := 15;
  G_S_CALL            CONSTANT PLS_INTEGER := 16;
  G_S_CHANGE          CONSTANT PLS_INTEGER := 17;
  G_S_CLEAR           CONSTANT PLS_INTEGER := 18;
  G_S_COLUMN          CONSTANT PLS_INTEGER := 19;
  G_S_COMMENT_SQL     CONSTANT PLS_INTEGER := 20; /* SQL table COMMENT command */
  G_S_COMMIT          CONSTANT PLS_INTEGER := 21;
  G_S_COMMENT_PLUS    CONSTANT PLS_INTEGER := 22; /* REM, --, DOC, or slash-asterisk */
  G_S_COMPUTE         CONSTANT PLS_INTEGER := 23;
  G_S_CONNECT         CONSTANT PLS_INTEGER := 24;
  G_S_COPY            CONSTANT PLS_INTEGER := 25;
  G_S_CREATE_SQL      CONSTANT PLS_INTEGER := 26; /* e.g. CREATE TABLE */
  G_S_CREATE_PLSQL    CONSTANT PLS_INTEGER := 27; /* e.g. CREATE OR REPLACE PACKAGE */
  G_S_DECLARE         CONSTANT PLS_INTEGER := 28;
  G_S_DEFINE          CONSTANT PLS_INTEGER := 29;
  G_S_DEL_PLUS        CONSTANT PLS_INTEGER := 30; /* SQL*Plus line-editor DEL line deletion */
  G_S_DELETE          CONSTANT PLS_INTEGER := 31; /* SQL data deletion */
  G_S_DESCRIBE        CONSTANT PLS_INTEGER := 32;
  G_S_DISASSOCIATE    CONSTANT PLS_INTEGER := 33;
  G_S_DISCONNECT      CONSTANT PLS_INTEGER := 34;
  G_S_DROP            CONSTANT PLS_INTEGER := 35;
  G_S_EDIT            CONSTANT PLS_INTEGER := 36;
  G_S_EXECUTE         CONSTANT PLS_INTEGER := 37;
  G_S_EXPAND          CONSTANT PLS_INTEGER := 38;
  G_S_EXIT            CONSTANT PLS_INTEGER := 39;
  G_S_EXPLAIN         CONSTANT PLS_INTEGER := 40;
  G_S_FLASHBACK       CONSTANT PLS_INTEGER := 41;
  G_S_GET             CONSTANT PLS_INTEGER := 42;
  G_S_GRANT           CONSTANT PLS_INTEGER := 43;
  G_S_HOST            CONSTANT PLS_INTEGER := 44;
  G_S_HOSTALIAS       CONSTANT PLS_INTEGER := 45; /* '!' or '$ */
  G_S_HELP            CONSTANT PLS_INTEGER := 46; /* HELP or "?" */
  G_S_INPUT           CONSTANT PLS_INTEGER := 47;
  G_S_INSERT          CONSTANT PLS_INTEGER := 48;
  G_S_LIST            CONSTANT PLS_INTEGER := 49;
  G_S_LOCK            CONSTANT PLS_INTEGER := 50;
  G_S_MERGE           CONSTANT PLS_INTEGER := 51;
  G_S_NEWPAGE         CONSTANT PLS_INTEGER := 52;
  G_S_NOAUDIT         CONSTANT PLS_INTEGER := 53;
  G_S_ORADEBUG        CONSTANT PLS_INTEGER := 54;
  G_S_PASSWORD        CONSTANT PLS_INTEGER := 55;
  G_S_PAUSE           CONSTANT PLS_INTEGER := 56;
  G_S_PLSQLLABEL      CONSTANT PLS_INTEGER := 57; /* <<mylabel>> begin ... end; */
  G_S_PRINT           CONSTANT PLS_INTEGER := 58;
  G_S_PROMPT          CONSTANT PLS_INTEGER := 59;
  G_S_PURGE           CONSTANT PLS_INTEGER := 60;
  G_S_QUIT            CONSTANT PLS_INTEGER := 61;
  G_S_RECOVER         CONSTANT PLS_INTEGER := 62;
  G_S_RENAME          CONSTANT PLS_INTEGER := 63;
  G_S_REPFOOTER       CONSTANT PLS_INTEGER := 64;
  G_S_REPHEADER       CONSTANT PLS_INTEGER := 65;
  G_S_REVOKE          CONSTANT PLS_INTEGER := 66;
  G_S_ROLLBACK_PLUS   CONSTANT PLS_INTEGER := 67; /* ROLLBAC with no 'K' */
  G_S_ROLLBACK_SQL    CONSTANT PLS_INTEGER := 68;
  G_S_RUN             CONSTANT PLS_INTEGER := 69;
  G_S_SAVE            CONSTANT PLS_INTEGER := 70;
  G_S_SAVEPOINT       CONSTANT PLS_INTEGER := 71;
  G_S_SELECT          CONSTANT PLS_INTEGER := 72; /* SELECT or "(SELECT...)" */
  G_S_SET_PLUS        CONSTANT PLS_INTEGER := 73; /* Client-side SET command */
  G_S_SET_SQL         CONSTANT PLS_INTEGER := 74; /* Server-side SET e.g. SET TRANSACTION */
  G_S_SHOW            CONSTANT PLS_INTEGER := 75;
  G_S_SHUTDOWN        CONSTANT PLS_INTEGER := 76;
  G_S_SLASH           CONSTANT PLS_INTEGER := 77; /* "/" to re-execute previous SQL or PL/SQL */
  G_S_SPOOL           CONSTANT PLS_INTEGER := 78;
  G_S_SQLPLUSPREFIX   CONSTANT PLS_INTEGER := 79; /* "#" */
  G_S_SQLTERMINATOR   CONSTANT PLS_INTEGER := 80; /* ";" or "/" to end SQL*Plus, SQL and PL/SQL */
  G_S_START           CONSTANT PLS_INTEGER := 81;
  G_S_STARTUP         CONSTANT PLS_INTEGER := 82;
  G_S_STORE           CONSTANT PLS_INTEGER := 83;
  G_S_TIMING          CONSTANT PLS_INTEGER := 84;
  G_S_TRUNCATE        CONSTANT PLS_INTEGER := 85;
  G_S_TTITLE          CONSTANT PLS_INTEGER := 86;
  G_S_UNDEFINE        CONSTANT PLS_INTEGER := 87;
  G_S_UPDATE          CONSTANT PLS_INTEGER := 88;
  G_S_VALIDATE        CONSTANT PLS_INTEGER := 89;
  G_S_VARIABLE        CONSTANT PLS_INTEGER := 90;
  G_S_WHENEVER        CONSTANT PLS_INTEGER := 91;
  G_S_WITH            CONSTANT PLS_INTEGER := 92;
  G_S_XQUERY          CONSTANT PLS_INTEGER := 93;


/*
 * Routines for parsing a SQL*Plus script
 */
function  parsed(p_file_id in number) return number;
procedure parse_file (p_file_id in number);
procedure parse_clob(p_script in clob);

end wwv_flow_sw_parser;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SAMPLE_APP"
IS

procedure deinstall_websheet (
	p_security_group_id in number,
	p_id                in number);

procedure install_websheet (
	p_name              in varchar2,
	p_security_group_id in number,
	p_id                in number);

procedure deinstall_db_app (
  p_id                in number);

procedure install_db_app (
  p_app_id            in number,
  p_schema            in varchar2,
  p_security_group_id in number default wwv_flow_security.g_security_group_id,
  p_id                in number default wwv_flow_utilities.minimum_free_flow);

END wwv_flow_sample_app;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SPATIAL_INT" authid definer
$if sys.dbms_db_version.version >= 12 $then
accessible by (wwv_flow_spatial_api)
$end
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_spatial_int.sql
--
--    DESCRIPTION
--      Internal API to maintain spatial metadata from within APEX. See
--      wwv_flow_spatial_api for the public interface.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    12/12/2013 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Insert a spatial metadata record
--==============================================================================
procedure insert_geom_metadata (
    p_owner           in varchar2,
    p_new_table_name  in varchar2,
    p_new_column_name in varchar2,
    p_diminfo         in mdsys.sdo_dim_array,
    p_srid            in number );

--==============================================================================
-- Modify a spatial metadata record
--==============================================================================
procedure change_geom_metadata (
    p_owner           in varchar2,
    p_old_table_name  in varchar2,
    p_old_column_name in varchar2,
    p_new_table_name  in varchar2,
    p_new_column_name in varchar2,
    p_diminfo         in mdsys.sdo_dim_array,
    p_srid            in number );

--==============================================================================
-- Delete a spatial metadata record
--==============================================================================
procedure delete_geom_metadata (
    p_owner           in varchar2,
    p_old_table_name  in varchar2,
    p_old_column_name in varchar2 );

end wwv_flow_spatial_int;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SPATIAL_API" authid current_user as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2013. All Rights Reserved.
--
--    NAME
--      wwv_flow_spatial_api.sql ( APEX_SPATIAL )
--
--    DESCRIPTION
--      Public API to use oracle locator and the spatial option within APEX.
--
--      In an APEX context, spatial developers can not use DML on
--      USER_SDO_GEOM_METADATA, because the underlying instead of trigger
--      applies the logon user for all changes. This is APEX_PUBLIC_USER or
--      ANONYMOUS in APEX, not the application owner / workspace schema.
--      Instead, developers can use the APIs below to insert, update and delete
--      rows of USER_SDO_GEOM_METADATA as the current APEX user. This package
--      also provides a few utilities that simplify the use of spatial in APEX.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             YES
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    12/12/2013 - Created
--    cneumuel    12/16/2013 - In insert_geom_metadata: added p_create_index_name
--    cneumuel    12/18/2013 - Added point, rectangle, circle_polygon
--    cneumuel    12/19/2013 - In geometry functions: removed deterministic clause (bug #17980025)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Spatial Reference system (i.e. coordinate system) IDentifiers. See
-- SDO_COORD_REF_SYS for available reference systems.
--==============================================================================
subtype t_srid is number;
c_no_reference_system constant t_srid := null;
c_wgs_84              constant t_srid := 4326; -- World Geodetic System, EPSG:4326

--##############################################################################
--#
--# GEOMETRY METADATA AND SPATIAL INDEXES
--#
--##############################################################################

--==============================================================================
-- Insert a spatial metadata record and optionally create a spatial index.
--
-- ARGUMENTS
-- * p_table_name        name of a feature table
-- * p_column_name       name of the column of type mdsys.sdo_geometry
-- * p_diminfo           SDO_DIM_ELEMENT array, ordered by dimension, with one entry for each dimension
-- * p_srid              SRID value for the coordinate system for all geometries in the column
-- * p_create_index_name if not null, a spatial index on the column will be
--                       created with this name. only simple column names are
--                       supported, function based indexes or indexes on object
--                       attributes will cause an error. for more complex
--                       requirements, leave this parameter null (the default)
--                       and manually create the index.
--
-- EXAMPLE
--   create table cities (
--       city_id   number primary key,
--       city_name varchar2(30),
--       shape     mdsys.sdo_geometry )
--   /
--   begin
--       apex_spatial.insert_geom_metadata (
--           p_table_name   => 'CITIES',
--           p_column_name  => 'SHAPE',
--           p_diminfo     => SDO_DIM_ARRAY (
--                                SDO_DIM_ELEMENT('X', -180, 180, 1),
--                                SDO_DIM_ELEMENT('Y',  -90,  90, 1) ),
--           p_srid        => apex_spatial.c_wgs_84 );
--   end;
--   /
--   create index cities_idx_shape on cities(shape) indextype is mdsys.spatial_index
--   /
--==============================================================================
procedure insert_geom_metadata (
    p_table_name        in varchar2,
    p_column_name       in varchar2,
    p_diminfo           in mdsys.sdo_dim_array,
    p_srid              in t_srid,
    p_create_index_name in varchar2 default null );

--==============================================================================
-- Insert a spatial metadata record that is suitable for longitude/latitude and
-- optionally create a spatial index.
--
-- ARGUMENTS
-- * p_table_name        name of a feature table
-- * p_column_name       name of the column of type mdsys.sdo_geometry
-- * p_tolerance         tolerance value in each dimension, in meters (default 1)
-- * p_create_index_name if not null, a spatial index on the column will be
--                       created with this name. only simple column names are
--                       supported, function based indexes or indexes on object
--                       attributes will cause an error. for more complex
--                       requirements, leave this parameter null (the default)
--                       and manually create the index.
--
-- EXAMPLE
--   --
--   -- the following is equivalent to the example for insert_geom_metadata
--   --
--   create table cities (
--       city_id   number primary key,
--       city_name varchar2(30),
--       shape     mdsys.sdo_geometry )
--   /
--   begin
--       apex_spatial.insert_geom_metadata_lonlat (
--           p_table_name        => 'CITIES',
--           p_column_name       => 'SHAPE',
--           p_create_index_name => 'CITIES_IDX_SHAPE' );
--   end;
--   /
--==============================================================================
procedure insert_geom_metadata_lonlat (
    p_table_name        in varchar2,
    p_column_name       in varchar2,
    p_tolerance         in number default 1,
    p_create_index_name in varchar2 default null );

--==============================================================================
-- Modify a spatial metadata record
--
-- ARGUMENTS
-- * p_table_name      name of a feature table
-- * p_column_name     name of the column of type mdsys.sdo_geometry
-- * p_new_table_name  new name of a feature table (or null, to keep the current value)
-- * p_new_column_name new name of the column of type mdsys.sdo_geometry (or null, to keep the current value)
-- * p_diminfo         SDO_DIM_ELEMENT array, ordered by dimension, with one entry for each dimension
-- * p_srid            SRID value for the coordinate system for all geometries in the column
--
-- EXAMPLE
--   begin
--       for l_meta in ( select *
--                         from user_sdo_geom_metadata
--                        where table_name  = 'CITIES'
--                          and column_name = 'SHAPE' )
--       loop
--           apex_spatial.change_geom_metadata (
--               p_table_name  => l_meta.table_name,
--               p_column_name => l_meta.column_name,
--               p_diminfo     => SDO_DIM_ARRAY (
--                                    SDO_DIM_ELEMENT('X', -180, 180, 0.1),
--                                    SDO_DIM_ELEMENT('Y',  -90,  90, 0.1) ),
--               p_srid        => l_meta.srid );
--      end loop;
--   end;
--==============================================================================
procedure change_geom_metadata (
    p_table_name      in varchar2,
    p_column_name     in varchar2,
    p_new_table_name  in varchar2 default null,
    p_new_column_name in varchar2 default null,
    p_diminfo         in mdsys.sdo_dim_array,
    p_srid            in t_srid );

--==============================================================================
-- Delete a spatial metadata record
--
-- ARGUMENTS
-- * p_table_name      name of a feature table
-- * p_column_name     name of the column of type mdsys.sdo_geometry
-- * p_drop_index      if true (default is false), drop the spatial index on the column
--
-- EXAMPLE
--   begin
--       apex_spatial.delete_geom_metadata (
--           p_table_name  => 'CITIES',
--           p_column_name => 'SHAPE',
--           p_drop_index  => true );
--   end;
--==============================================================================
procedure delete_geom_metadata (
    p_table_name  in varchar2,
    p_column_name in varchar2,
    p_drop_index  in boolean default false );

--##############################################################################
--#
--# GEOMETRY UTILITIES
--#
--##############################################################################

--==============================================================================
-- create a point at (p_lon, p_lat)
--
-- ARGUMENTS
-- * p_lon             longitude position
-- * p_lat             latitude position
-- * p_srid            reference system (default c_wgs_84)
--
-- EXAMPLE
--   select apex_spatial.point(10, 50) from dual;
--   -- this is the same as
--   -- select mdsys.sdo_geometry(2001, 4326, sdo_point_type(10, 50, null), null, null) from dual;
--==============================================================================
function point (
    p_lon    in number,
    p_lat    in number,
    p_srid in t_srid default c_wgs_84 )
    return mdsys.sdo_geometry;

--==============================================================================
-- create a rectangle from (p_lon1, p_lat1) to (p_lon2, p_lat2)
--
-- ARGUMENTS
-- * p_lon1            longitude of the lower left point
-- * p_lat1            latitude of the lower left point
-- * p_lon2            longitude of the upper right point
-- * p_lat2            latitude of the upper right point
-- * p_srid            reference system (default c_wgs_84)
--
-- EXAMPLE
--   select apex_spatial.rectangle(10, 50, 11, 51) from dual
--   -- this is the same as
--   -- select mdsys.sdo_geometry(
--   --            2003, 4326, null,
--   --            sdo_elem_info_array(1, 1003, 1),
--   --            sdo_ordinate_array(10, 50, 11, 50, 11, 51, 10, 51, 10, 50))
--   -- from dual;
--==============================================================================
function rectangle (
    p_lon1   in number,
    p_lat1   in number,
    p_lon2   in number,
    p_lat2   in number,
    p_srid in t_srid default c_wgs_84 )
    return mdsys.sdo_geometry;

--==============================================================================
-- create a polygon that approximates a circle at (p_lon, p_lat) with radius
-- p_radius. see mdsys.sdo_util.circle_polygon for details.
--
-- ARGUMENTS
-- * p_lon             longitude of center point
-- * p_lat             latitude of center point
-- * p_radius          radius of the circle in meters
-- * p_arc_tolerance   arc tolerance (default 20)
-- * p_srid            reference system (default c_wgs_84)
--
-- EXAMPLE
--   select apex_spatial.circle_polygon(0, 0, 1) from dual
--
-- SEE ALSO
--   mdsys.sdo_util.circle_polygon
--==============================================================================
function circle_polygon (
    p_lon           in number,
    p_lat           in number,
    p_radius        in number,
    p_arc_tolerance in number default 20,
    p_srid          in t_srid default c_wgs_84 )
    return mdsys.sdo_geometry;

end wwv_flow_spatial_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PLSQL_EDITOR" as


    -----------------------------------------------------------------------------------------------
    -- get_lines
    -- p_code: CLOB containing PL/SQL code

    function get_lines (
        p_code CLOB
    ) return sys.dbms_sql.varchar2a;


    -----------------------------------------------------------------------------------------------
    -- compile
    -- p_owner:       parse as schema name
    -- p_object_name: PL/SQL object name
    -- p_code:        PL/SQL code

    function compile (
        p_owner       varchar2,
        p_object_name varchar2,
        p_object_type varchar2,
        p_code        clob
    ) return varchar2;


end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_MODEL_API" as


    -----------------------------------------------------------------------------------------------
    -- get_model_id
    -- deletes incomplete models and returns new model ID

    function get_model_id return number;

    -----------------------------------------------------------------------------------------------
    -- add_form_report_w_analysis
    --    p_model_id:         model_id
    --    p_parent_page_num:  parent page
    --    p_owner:            parse as schema name
    --    p_table:            source table for report and form page

    procedure add_form_report_w_analysis (
        p_model_id         varchar2,
        p_page_type        varchar2 default null,
        p_parent_page_num  varchar2 default null,
        p_owner            varchar2 default null,
        p_table            varchar2 default null,
        p_sum_cols         varchar2 default null,
        p_aggregate_cols   varchar2 default null,
        p_agg_function     varchar2 default null,
        p_create_mode      varchar2 default null,
        p_chart_type       varchar2 default null
    );

    -----------------------------------------------------------------------------------------------
    -- add_page, return page_id
    -- p_model_id:        model_id
    -- p_page_name:       name of new page
    -- p_page_type:       page source type: REPORT, REPORTANDFORM, TABULARFORM, FORM, BLANK
    -- p_page_source:     page source type: TABLE, QUERY, SPREADSHEET
    -- p_parent_page_id:  parent page
    -- p_owner:           parse as schema name
    -- p_table:           source table for report and form page
    -- p_query:           source query for report page
    -- p_spreadsheet_data:source data for spreadsheet based table
    -- p_display_column:   display column for list view
    -- p_supp_info_column: supplemental info column for list view
    -- p_report_filter:   report filter
    -- p_form_and_report: flag to determine whether to create report (QUERY) or report and from (UPDATE)
    -- p_implementation:  flag to determine whether to create classic or interactive report
    -- p_master_table:    source table for the 1st page of master-detail form
    -- p_detail_table:    source table for the master-detail page of a master-detail form
    -- p_form_table:      source table for Forms Migrations Form Page generation
    -- p_block_id:        wwv_mig_frm_blocks.id value to identify converted Oracle Forms block
    -- p_report_id:       wwv_mig_rpts.id value to identify converted Oracle Report
    -- p_chart_rendering  chart rendering: FLASH_PREFERRED or SVG_ONLY
    -- p_chart_type:      chart type:2DColumn,3DColumn,Horizontal2DColumn,Horizontal3DColumn,2DPie,2DDoughnut,3DPie,2DLine,GaugeChart
    -- p_chart_title:     chart title
    -- p_chart_query:     source query for chart page
    -- p_x_axis_title:    title for X axis of chart
    -- p_y_axis_title:    title for Y axis of chart

    function add_page (
        p_model_id         varchar2,
        p_page_name        varchar2,
        p_page_type        varchar2,
        p_page_source      varchar2,
        p_parent_page_num  varchar2 default null,
        p_owner            varchar2 default null,
        p_table            varchar2 default null,
        p_pk1              varchar2 default null,
        p_pk2              varchar2 default null,
        p_query            varchar2 default null,
        p_spreadsheet_data varchar2 default null,
        p_display_column   varchar2 default null,
        p_supp_info_column varchar2 default null,
        p_report_filter    varchar2 default null,
        p_form_and_report  varchar2 default null,
        p_implementation   varchar2 default null,
        p_master_table     varchar2 default null,
        p_detail_table     varchar2 default null,
        p_form_table       varchar2 default null,
        p_block_id         number   default null,
        p_report_id        number   default null,
        p_chart_rendering  varchar2 default null,
        p_chart_type       varchar2 default null,
        p_chart_title      varchar2 default null,
        p_chart_query      varchar2 default null,
        p_x_axis_title     varchar2 default null,
        p_y_axis_title     varchar2 default null
    ) return number;

    -----------------------------------------------------------------------------------------------
    -- add_page
    -- p_model_id:        model_id
    -- p_page_name:       name of new page
    -- p_page_type:       page source type: REPORT, REPORTANDFORM, TABULARFORM, FORM, BLANK
    -- p_page_source:     page source type: TABLE, QUERY, SPREADSHEET
    -- p_parent_page_id:  parent page
    -- p_owner:           parse as schema name
    -- p_table:           source table for report and form page
    -- p_query:           source query for report page
    -- p_spreadsheet_data:source data for spreadsheet based table
    -- p_display_column:   display column for list view
    -- p_supp_info_column: supplemental info column for list view
    -- p_report_filter:   report filter
    -- p_form_and_report: flag to determine whether to create report (QUERY) or report and from (UPDATE)
    -- p_implementation:  flag to determine whether to create classic or interactive report
    -- p_master_table:    source table for the 1st page of master-detail form
    -- p_detail_table:    source table for the master-detail page of a master-detail form
    -- p_form_table:      source table for Forms Migrations Form Page generation
    -- p_block_id:        wwv_mig_frm_blocks.id value to identify converted Oracle Forms block
    -- p_report_id:       wwv_mig_rpts.id value to identify converted Oracle Report
    -- p_chart_rendering  chart rendering: FLASH_PREFERRED or SVG_ONLY
    -- p_chart_type:      chart type:2DColumn,3DColumn,Horizontal2DColumn,Horizontal3DColumn,2DPie,2DDoughnut,3DPie,2DLine,GaugeChart
    -- p_chart_title:     chart title
    -- p_chart_query:     source query for chart page
    -- p_x_axis_title:    title for X axis of chart
    -- p_y_axis_title:    title for Y axis of chart

    procedure add_page (
        p_model_id         varchar2,
        p_page_name        varchar2,
        p_page_type        varchar2,
        p_page_source      varchar2,
        p_parent_page_num  varchar2 default null,
        p_owner            varchar2 default null,
        p_table            varchar2 default null,
        p_pk1              varchar2 default null,
        p_pk2              varchar2 default null,
        p_query            varchar2 default null,
        p_spreadsheet_data varchar2 default null,
        p_display_column   varchar2 default null,
        p_supp_info_column varchar2 default null,
        p_report_filter    varchar2 default null,
        p_form_and_report  varchar2 default null,
        p_implementation   varchar2 default null,
        p_master_table     varchar2 default null,
        p_detail_table     varchar2 default null,
        p_form_table       varchar2 default null,
        p_block_id         number   default null,
        p_report_id        number   default null,
        p_chart_rendering  varchar2 default null,
        p_chart_type       varchar2 default null,
        p_chart_title      varchar2 default null,
        p_chart_query      varchar2 default null,
        p_x_axis_title     varchar2 default null,
        p_y_axis_title     varchar2 default null
    );

    -----------------------------------------------------------------------------------------------
    -- set_report_to_report_link
    -- p_report_tables:        Array of 2 table names: parent table and child table
    -- p_owner:                parse as schema name
    -- p_parent_page_num:      parent page

    procedure set_report_to_report_link (
        p_report_tables     wwv_flow_global.vc_arr2,
        p_owner             varchar2,
        p_parent_page_num   varchar2
    );


    -----------------------------------------------------------------------------------------------
    -- copy_model_pages
    -- p_owner:           parse as schema name
    -- p_model_id         new model ID
    -- p_source_model_id  source mode ID

    procedure copy_model_pages (
        p_owner                   varchar2,
        p_model_id                varchar2,
        p_source_model_id         varchar2,
        p_parent_page_id          number default null,
        p_source_parent_page_id   number default null
    );

end;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_IMAGE_GENERATOR"
as

procedure get_image(
    p_position in number,
    p_sessionid in number);


end wwv_flow_image_generator;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEAM_API"
as

c_compatable_from_version constant varchar2(255) := '2010.05.13';

-- used by the import
g_id_offset number := 0;

procedure check_version (
    --
    -- This call is expected to be made before running any procedure within wwv_flow_team_api.
    -- This "check_version" procedure identifies the version of team development that created your export.
    --
    -- Example:
    --
    --    begin
    --       wwv_flow_team_api.set_version(p_version_yyyy_mm_dd=>'2001.08.27');
    --    end;
    --    /
    --
    -- This call is generated by the wwv_flow_team_gen_api.export procedure.
    -- All team development versions are in the form YYYY.MM.DD.
    -- No API calls will work if the versions are incompatable.
    -- An incompatable version is defined as the wwv_flow_team_api.c_compatable_from_version
    -- (a plsql package constant that indicates from which date this api is good from)
    -- less then or equal to the calling version passed to this procedure.
    --
    p_version_yyyy_mm_dd in varchar2 );

procedure create_bug (
    -- bug
    p_title                     in varchar2  default null,
    p_severity                  in number    default null,
    p_status                    in number    default null,
    p_priority                  in number    default null,
    --
    -- resolution
    p_assigned_to               in varchar2  default null,
    p_new_assigned_to           in varchar2  default null,
    p_fix_by_release            in varchar2  default null,
    p_new_release               in varchar2  default null,
    p_actual_fix_date           in date      default null,
    p_target_milestone_id       in number    default null,
    --
    -- description
    p_description               in clob      default null,
    p_application_id            in number    default null,
    p_page_id                   in number    default null,
    --
    -- other
    p_component                 in varchar2  default null,
    p_tags                      in varchar2  default null,
    p_estimated_fix_date        in date      default null,
    p_reported_platform         in varchar2  default null,
    p_reported_browser          in varchar2  default null,
    p_reported_operating_system in varchar2  default null,
    p_duplicate_of_bug          in number    default null,
    p_customer_name             in varchar2  default null,
    p_customer_issue            in clob      default null,
    p_product                   in varchar2  default null,
    p_product_version           in varchar2  default null,
    p_impact                    in varchar2  default null,
    --
    -- related
    p_feature_id                in number    default null,
    p_task_id                   in number    default null
    );

procedure delete_bug (
    p_id in number );

procedure create_todo (
    -- todo
    p_to_do_action              in varchar2  default null,
    p_assigned_to               in varchar2  default null,
    p_new_assigned_to           in varchar2  default null,
    p_contributor               in varchar2  default null,
    p_new_contributor           in varchar2  default null,
    p_parent_to_do_id           in number    default null,
    p_status                    in number    default null,
    --
    -- dates
    p_due_date                  in date      default null,
    p_start_date                in date      default null,
    p_date_completed            in date      default null,
    --
    -- details
    p_category                  in varchar2  default null,
    p_new_category              in varchar2  default null,
    p_release                   in varchar2  default null,
    p_new_release               in varchar2  default null,
    p_description               in clob      default null,
    p_feature_id                in number    default null,
    p_milestone_id              in number    default null,
    --
    -- customer details
    p_customer_details          in varchar2  default null,
    --
    -- tags
    p_tags                      in varchar2  default null,
    --
    -- application context
    p_application_id            in number    default null,
    p_page_id                   in number    default null,
    p_product_version           in varchar2  default null,
    --
    -- additional details
    p_ref_component_type        in varchar2  default null,
    p_group                     in varchar2  default null,
    p_estimated_effort_in_hours in number    default null
    );

procedure delete_todo (
    p_id in number default null);

procedure create_feature (
    --
    -- feature
    --
    p_feature_name              in varchar2  default null,
    p_feature_tags              in varchar2  default null,
    --
    p_feature_owner             in varchar2  default null,
    p_new_feature_owner         in varchar2  default null,
    --
    p_contributor               in varchar2  default null,
    p_new_contributor           in varchar2  default null,
    --
    p_focus_area                in varchar2  default null,
    p_new_focus_area            in varchar2  default null,
    --
    p_release                   in varchar2  default null,
    p_new_release               in varchar2  default null,
    --
    p_status                    in number    default null,
    p_desirability              in number    default null,
    p_priority                  in number    default null,
    p_milestone_id              in number    default null,
    p_parent_feature_id         in number    default null,
    --
    -- dates
    --
    p_start_date                in date      default null,
    p_due_date                  in date      default null,
    --
    -- feature summary
    --
    p_publishable_description   in varchar2  default null,
    p_publishable_yn            in varchar2  default null,
    --
    -- feature details
    --
    p_description               in clob      default null,
    p_justification             in varchar2  default null,
    p_application_id            in number    default null,
    p_module                    in varchar2  default null,
    p_estimated_effort_in_hours in number    default null,
    --
    -- documentation
    --
    p_doc_impact                in varchar2  default null,
    p_doc_status                in number    default null,
    p_doc_writer                in varchar2  default null,
    --
    -- testing
    --
    p_testing_impact            in varchar2  default null,
    p_testing_status            in number    default null,
    p_testing_assignee          in varchar2  default null,
    --
    -- security
    --
    p_security_impact           in varchar2  default null,
    p_security_status           in number    default null,
    p_security_assignee         in varchar2  default null,
    --
    -- accessibility
    --
    p_accessibility_impact      in varchar2  default null,
    p_accessibility_status      in number    default null,
    p_accessibility_assignee    in varchar2  default null,
    --
    -- globalization
    --
    p_globalization_impact      in varchar2  default null,
    p_globalization_status      in number    default null,
    p_globalization_assignee    in varchar2  default null,
    --
    -- user interface
    --
    p_user_interface_impact     in varchar2  default null,
    p_user_interface_status     in number    default null,
    p_user_interface_assignee   in varchar2  default null
    );

procedure delete_feature (
    p_id in number );

--==============================================================================
-- APIs for import
--==============================================================================

procedure create_news (
    p_id                in number,
    p_news_text         in varchar2 default null,
    p_created_by        in varchar2 default null,
    p_created_on        in date     default null,
    p_last_updated_by   in varchar2 default null,
    p_last_updated_on   in date     default null );

procedure create_link (
    p_id                in number,
    p_link_name         in varchar2 default null,
    p_link_target       in varchar2 default null,
    p_link_category     in varchar2 default null,
    p_link_desc         in varchar2 default null,
    p_tags              in varchar2 default null,
    p_created_by        in varchar2 default null,
    p_created_on        in date     default null,
    p_updated_by        in varchar2 default null,
    p_updated_on        in date     default null );

procedure create_bug (
    p_id                        in number,
    p_bug_id                    in number   default null,
    p_product                   in varchar2 default null,
    p_product_version           in varchar2 default null,
    p_assigned_to               in varchar2 default null,
    p_component                 in varchar2 default null,
    p_bug_severity              in number   default null,
    p_bug_status                in number   default null,
    p_priority                  in number   default null,
    p_fix_by_release            in varchar2 default null,
    p_tags                      in varchar2 default null,
    p_estimated_fix_date        in date     default null,
    p_actual_fix_date           in date     default null,
    p_bug_title                 in varchar2 default null,
    p_bug_description           in clob     default null,
    p_reported_platform         in varchar2 default null,
    p_reported_browser          in varchar2 default null,
    p_reported_operating_system in varchar2 default null,
    p_application_id            in number   default null,
    p_page_id                   in number   default null,
    p_impact                    in varchar2 default null,
    p_feature_id                in number   default null,
    p_target_milestone_id       in number   default null,
    p_task_id                   in number   default null,
    p_duplicate_of_bug          in number   default null,
    p_customer_name             in varchar2 default null,
    p_customer_issue            in clob     default null,
    p_created_by                in varchar2 default null,
    p_created_on                in date     default null,
    p_updated_by                in varchar2 default null,
    p_updated_on                in date     default null );

procedure create_event (
    p_id                          in number,
    p_event_id                    in number   default null,
    p_event_name                  in varchar2 default null,
    p_event_date                  in date     default null,
    p_event_type                  in varchar2 default null,
    p_release                     in varchar2 default null,
    p_event_desc                  in clob     default null,
    p_tags                        in varchar2 default null,
    p_event_owner                 in varchar2 default null,
    p_selectable_from_features_yn in varchar2 default null,
    p_created_by                  in varchar2 default null,
    p_created_on                  in date     default null,
    p_updated_by                  in varchar2 default null,
    p_updated_on                  in date     default null );

procedure create_feature (
    p_id                        in number,
    p_feature_id                in number   default null,
    p_feature_name              in varchar2 default null,
    p_feature_owner             in varchar2 default null,
    p_feature_contributor       in varchar2 default null,
    p_focus_area                in varchar2 default null,
    p_release                   in varchar2 default null,
    p_feature_desc              in clob     default null,
    p_justification             in varchar2 default null,
    p_feature_tags              in varchar2 default null,
    p_feature_priority          in number   default null,
    p_feature_status            in number   default null,
    p_feature_desirability      in number   default null,
    p_due_date                  in date     default null,
    p_start_date                in date     default null,
    p_module                    in varchar2 default null,
    p_estimated_effort_in_hours in number   default null,
    p_publishable_yn            in varchar2 default null,
    p_publishable_description   in varchar2 default null,
    p_globalization_impact      in varchar2 default null,
    p_globalization_assignee    in varchar2 default null,
    p_globalization_status      in number   default null,
    p_user_interface_impact     in varchar2 default null,
    p_user_interface_assignee   in varchar2 default null,
    p_user_interface_status     in number   default null,
    p_doc_impact                in varchar2 default null,
    p_doc_status                in number   default null,
    p_doc_writer                in varchar2 default null,
    p_testing_impact            in varchar2 default null,
    p_testing_assignee          in varchar2 default null,
    p_testing_status            in number   default null,
    p_security_impact           in varchar2 default null,
    p_security_assignee         in varchar2 default null,
    p_security_status           in number   default null,
    p_accessibility_impact      in varchar2 default null,
    p_accessibility_assignee    in varchar2 default null,
    p_accessibility_status      in number   default null,
    p_application_id            in number   default null,
    p_parent_feature_id         in number   default null,
    p_event_id                  in number   default null,
    p_created_by                in varchar2 default null,
    p_created_on                in date     default null,
    p_updated_by                in varchar2 default null,
    p_updated_on                in date     default null );

procedure create_feature_history (
    p_id                 in number,
    p_feature_id         in number   default null,
    p_column_name        in varchar2 default null,
    p_column_data_type   in varchar2 default null,
    p_old_value_varchar2 in varchar2 default null,
    p_new_value_varchar2 in varchar2 default null,
    p_old_value_clob     in clob     default null,
    p_new_value_club     in clob     default null,
    p_created_by         in varchar2 default null,
    p_created_on         in date     default null );

procedure create_feature_progress (
    p_id                in number,
    p_feature_id        in number   default null,
    p_progress_note     in varchar2 default null,
    p_created_by        in varchar2 default null,
    p_created_on        in date     default null,
    p_updated_by        in varchar2 default null,
    p_updated_on        in date     default null );

procedure create_task (
    p_id                 in number,
    p_friendly_id        in number   default null,
    p_assigned_to        in varchar2 default null,
    p_contributor        in varchar2 default null,
    p_task_name          in varchar2 default null,
    p_description        in clob     default null,
    p_task_status        in number   default null,
    p_task_category      in varchar2 default null,
    p_task_tags          in varchar2 default null,
    p_start_date         in date     default null,
    p_date_completed     in date     default null,
    p_application_id     in number   default null,
    p_websheet_id        in number   default null,
    p_product_version    in varchar2 default null,
    p_ref_component_type in varchar2 default null,
    p_customer_details   in varchar2 default null,
    p_event_id           in number   default null,
    p_feature_id         in number   default null,
    p_created_by         in varchar2 default null,
    p_created_on         in date     default null,
    p_updated_by         in varchar2 default null,
    p_updated_on         in date     default null,
    p_parent_task_id     in number   default null,
    p_task_group         in varchar2 default null,
    p_page_id            in number   default null,
    p_release            in varchar2 default null,
    p_due_date           in date     default null,
    p_estimated_effort_in_hours in number default null
 );

procedure create_task_progress (
    p_id                in number,
    p_task_id           in number   default null,
    p_progress_note     in varchar2 default null,
    p_created_by        in varchar2 default null,
    p_created_on        in date     default null,
    p_updated_by        in varchar2 default null,
    p_updated_on        in date     default null );

procedure create_task_defaults (
    p_id                     in number,
    p_default_release        in varchar2 default null,
    p_default_assignee       in varchar2 default null,
    p_default_priority       in number   default null,
    p_show_all_or_open       in varchar2 default null,
    p_enable_feature_ui_yn   in varchar2 default null,
    p_enable_feature_test_yn in varchar2 default null,
    p_enable_feature_doc_yn  in varchar2 default null,
    p_enable_feature_glob_yn in varchar2 default null,
    p_enable_feature_sec_yn  in varchar2 default null,
    p_enable_feature_acc_yn  in varchar2 default null,
    p_created_by             in varchar2 default null,
    p_created_on             in date     default null,
    p_updated_by             in varchar2 default null,
    p_updated_on             in date     default null );


procedure create_feedback (
    p_id                        in number,
    p_feedback_id               in number                   default null,
    p_feedback_comment          in varchar2                 default null,
    p_feedback_type             in number                   default null,
    p_feedback_status           in number                   default null,
    p_developer_comment         in varchar2                 default null,
    p_public_response           in varchar2                 default null,
    p_application_id            in number                   default null,
    p_application_name          in varchar2                 default null,
    p_page_id                   in number                   default null,
    p_page_name                 in varchar2                 default null,
    p_page_last_updated_by      in varchar2                 default null,
    p_page_last_updated_on      in date                     default null,
    p_session_id                in varchar2                 default null,
    p_apex_user                 in varchar2                 default null,
    p_user_email                in varchar2                 default null,
    p_application_version       in varchar2                 default null,
    p_session_info              in varchar2                 default null,
    p_session_state             in varchar2                 default null,
    p_parsing_schema            in varchar2                 default null,
    p_screen_width              in varchar2                 default null,
    p_screen_height             in varchar2                 default null,
    p_http_user_agent           in varchar2                 default null,
    p_remote_addr               in varchar2                 default null,
    p_remote_user               in varchar2                 default null,
    p_http_host                 in varchar2                 default null,
    p_server_name               in varchar2                 default null,
    p_server_port               in varchar2                 default null,
    p_tags                      in varchar2                 default null,
    p_label_01                  in varchar2                 default null,
    p_label_02                  in varchar2                 default null,
    p_label_03                  in varchar2                 default null,
    p_label_04                  in varchar2                 default null,
    p_label_05                  in varchar2                 default null,
    p_label_06                  in varchar2                 default null,
    p_label_07                  in varchar2                 default null,
    p_label_08                  in varchar2                 default null,
    p_attribute_01              in varchar2                 default null,
    p_attribute_02              in varchar2                 default null,
    p_attribute_03              in varchar2                 default null,
    p_attribute_04              in varchar2                 default null,
    p_attribute_05              in varchar2                 default null,
    p_attribute_06              in varchar2                 default null,
    p_attribute_07              in varchar2                 default null,
    p_attribute_08              in varchar2                 default null,
    p_bug_id                    in number                   default null,
    p_feature_id                in number                   default null,
    p_task_id                   in number                   default null,
    p_logging_email             in varchar2                 default null,
    p_logging_security_group_id in varchar2                 default null,
    p_logged_by_workspace_name  in varchar2                 default null,
    p_deployment_system         in varchar2                 default null,
    p_created_by                in varchar2                 default null,
    p_created_on                in timestamp with time zone default null,
    p_updated_by                in varchar2                 default null,
    p_updated_on                in timestamp with time zone default null );

procedure create_feedback_followup (
    p_id          in number,
    p_feedback_id in number                   default null,
    p_follow_up   in varchar2                 default null,
    p_email       in varchar2                 default null,
    p_created_by  in varchar2                 default null,
    p_created_on  in timestamp with time zone default null,
    p_updated_by  in varchar2                 default null,
    p_updated_on  in timestamp with time zone default null );

/* Not yet used
procedure create_team_file (
    p_id                 in number,
    p_file_type          in varchar2 default null,
    p_feature_id         in number   default null,
    p_task_id            in number   default null,
    p_event_id           in number   default null,
    p_feedback_id        in number   default null,
    p_bug_id             in number   default null,
    p_file_name          in varchar2 default null,
    p_file_mime_type     in varchar2 default null,
    p_file_character_set in varchar2 default null,
    p_file_last_update   in date     default null,
    p_created_on         in date     default null,
    p_created_by         in date     default null );
*/

procedure create_team_tags (
    p_id                               in number      default null,
    p_tag                              in varchar2    default null,
    p_tag_type                         in varchar2    default null,
    p_component_id                     in number      default null );

end wwv_flow_team_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TEAM_GEN_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2010. All Rights Reserved.
--
--    NAME
--      wwv_flow_team_gen_api.sql
--
--    DESCRIPTION
--      Exports all team development related data of a workspace.
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    04/09/2010 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================

--==============================================================================
-- Export data of all team development components of the current workspace into
-- a SQL script with all settings for SQL*Plus.
-- p_format can be DOS or UNIX.
--==============================================================================
procedure export_script (
    p_format in varchar2 default 'UNIX' );

--==============================================================================
-- Export data of all team development components of the current workspace, but
-- just the actual API calls.
-- p_format can be DOS or UNIX.
--==============================================================================
procedure export (
    p_format in varchar2 default 'UNIX' );

end wwv_flow_team_gen_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_ACC_LOAD" is

--  Copyright (c) Oracle Corporation 1999 - 2004. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package contains the basic procedures for all migration
--      related tables.  This package also holds the global variable
--      project_id as g_project_id, fileid as g_fileid and the dbid as g_dbid.
--
--    NOTES
--     To run this, you must log in as FLOW schema owner.
--
--    SECURITY
--      No grants, need to be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--
--
--
-------------------------------------------------------------------------------
--GLOBAL VARIABLE DECLARATIONS
--
g_projectid         number := 0;
g_dbid              number := 0;
g_linkdbid          number := 0;
g_fileid            number := 0;
--
--
--
--
-------------------------------------------------------------------------------

-- create function to replace escape characters in strings of export file

   function escape_char (ctext in varchar2)
   return varchar2;


-- create function to replace escape characters in strings of export file

   function escape_char (ctext in clob)
   return clob;


-- create procedure for table  wwv_mig_access
   procedure  ins_wwv_mig_access  (
       p_dbid                  in number,
       p_dbname                in varchar2  default null,
       p_dbsize                in varchar2  default null,
       p_dbpathname            in varchar2  default null,
       p_dbuser                in varchar2  default null,
       p_dbpassword            in varchar2  default null,
       p_isappdb               in number    default null,
       p_isattacheddb          in number    default null,
       p_convertdb             in number    default null,
       p_jetversion            in float     default null,
       p_accessversion         in varchar2  default null,
       p_build                 in number    default null,
       p_collatingorder        in number    default null,
       p_querytimeout          in number    default null,
       p_startupform           in varchar2  default null,
       p_startupshowstatusbar  in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_columns
   procedure  ins_wwv_mig_acc_columns  (
       p_colid              in number,
       p_tblid              in number,
       p_dbid               in number    default null,
       p_colname            in varchar2  default null,
       p_coltype            in number    default null,
       p_coltypedesc        in varchar2  default null,
       p_colautoincr        in number    default null,
       p_nextcountervalue   in number    default null,
       p_maxlengthsource    in number    default null,
       p_avglengthsource    in number    default null,
       p_coltextsize        in number    default null,
       p_allowzerolength    in number    default null,
       p_defaultvalue       in varchar2  default null,
       p_colrequired        in number    default null,
       p_colcollatingorder  in number    default null,
       p_colordposition     in number    default null,
       p_validationrule     in varchar2  default null,
       p_validationtext     in varchar2  default null,
       p_columndescription  in varchar2  default null,
       p_columnhidden       in number    default null,
       p_columnorder        in number    default null,
       p_columnwidth        in number    default null,
       p_decimalplaces      in number    default null,
       p_foreignname        in varchar2  default null,
       p_validateonset      in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_forms
   procedure  ins_wwv_mig_acc_forms  (
       p_dbid                        in number,
       p_formid                      in number,
       p_formname                    in varchar2  default null,
       p_afterdelconfirm             in varchar2  default null,
       p_afterinsert                 in varchar2  default null,
       p_afterupdate                 in varchar2  default null,
       p_allowadditions              in number    default null,
       p_allowdeletions              in number    default null,
       p_allowedits                  in number    default null,
       p_allowediting                in number    default null,
       p_allowfilters                in number    default null,
       p_allowupdating               in number    default null,
       p_autocenter                  in number    default null,
       p_autoresize                  in number    default null,
       p_backcolor                   in number    default null,
       p_beforedelconfirm            in varchar2  default null,
       p_beforeinsert                in varchar2  default null,
       p_beforeupdate                in varchar2  default null,
       p_borderstyle                 in number    default null,
       p_formcaption                 in varchar2  default null,
       p_closebutton                 in number    default null,
       p_controlbox                  in number    default null,
       p_count                       in number    default null,
       p_currentview                 in number    default null,
       p_cycle                       in number    default null,
       p_dataentry                   in number    default null,
       p_datasheetbackcolor          in number    default null,
       p_datasheetcellseffect        in number    default null,
       p_datasheetfontheight         in number    default null,
       p_datasheetfontitalic         in number    default null,
       p_datasheetfontname           in varchar2  default null,
       p_datasheetfontunderline      in number    default null,
       p_datasheetfontweight         in number    default null,
       p_datasheetforecolor          in number    default null,
       p_datasheetgridlinesbehavior  in number    default null,
       p_datasheetgridlinescolor     in number    default null,
       p_defaultediting              in number    default null,
       p_defaultview                 in number    default null,
       p_dividinglines               in number    default null,
       p_fastlaserprinting           in number    default null,
       p_filter                      in varchar2  default null,
       p_filteron                    in number    default null,
       p_frozencolumns               in number    default null,
       p_gridx                       in number    default null,
       p_gridy                       in number    default null,
       p_hasmodule                   in number    default null,
       p_helpcontextid               in number    default null,
       p_helpfile                    in varchar2  default null,
       p_hwnd                        in number    default null,
       p_insideheight                in number    default null,
       p_insidewidth                 in number    default null,
       p_keypreview                  in number    default null,
       p_layoutforprint              in number    default null,
       p_logicalpagewidth            in number    default null,
       p_maxbutton                   in number    default null,
       p_menubar                     in varchar2  default null,
       p_minbutton                   in number    default null,
       p_minmaxbuttons               in number    default null,
       p_modal                       in number    default null,
       p_navigationbuttons           in number    default null,
       p_onactivate                  in varchar2  default null,
       p_onapplyfilter               in varchar2  default null,
       p_onclick                     in varchar2  default null,
       p_onclose                     in varchar2  default null,
       p_oncurrent                   in varchar2  default null,
       p_ondblclick                  in varchar2  default null,
       p_ondeactivate                in varchar2  default null,
       p_ondelete                    in varchar2  default null,
       p_onerror                     in varchar2  default null,
       p_onfilter                    in varchar2  default null,
       p_ongotfocus                  in varchar2  default null,
       p_onkeydown                   in varchar2  default null,
       p_onkeypress                  in varchar2  default null,
       p_onkeyup                     in varchar2  default null,
       p_onload                      in varchar2  default null,
       p_onlostfocus                 in varchar2  default null,
       p_onmousedown                 in varchar2  default null,
       p_onmousemove                 in varchar2  default null,
       p_onmouseup                   in varchar2  default null,
       p_onopen                      in varchar2  default null,
       p_onresize                    in varchar2  default null,
       p_ontimer                     in varchar2  default null,
       p_onunload                    in varchar2  default null,
       p_openargs                    in varchar2  default null,
       p_orderby                     in varchar2  default null,
       p_orderbyon                   in number    default null,
       p_painting                    in number    default null,
       p_palettesource               in varchar2  default null,
       p_picture                     in varchar2  default null,
       p_picturealignment            in number    default null,
       p_picturesizemode             in number    default null,
       p_picturetiling               in number    default null,
       p_picturetype                 in number    default null,
       p_popup                       in number    default null,
       p_recordlocks                 in number    default null,
       p_recordselectors             in number    default null,
       p_recordsettype               in number    default null,
       p_recordsource                in varchar2  default null,
       p_rowheight                   in number    default null,
       p_scrollbars                  in number    default null,
       p_shortcutmenu                in number    default null,
       p_shortcutmenubar             in varchar2  default null,
       p_showgrid                    in number    default null,
       p_tag                         in varchar2  default null,
       p_timerinterval               in number    default null,
       p_toolbar                     in varchar2  default null,
       p_viewsallowed                in number    default null,
       p_visible                     in number    default null,
       p_whatsthisbutton             in number    default null,
       p_width                       in number    default null,
       p_windowheight                in number    default null,
       p_windowwidth                 in number    default null
   );

-----
-- create procedure for table  wwv_mig_acc_forms_controls
   procedure  ins_wwv_mig_acc_forms_controls  (
       p_dbid               in number,
       p_formid             in number,
       p_controlid          in number,
       p_controlname        in varchar2  default null,
       p_controltype        in number    default null,
       p_eventprocprefix    in varchar2  default null,
       p_inselection        in number    default null,
       p_left               in number  default null,
       p_parent             in varchar2  default null,
       p_section            in number    default null,
       p_tag                in varchar2  default null,
       p_top                in number    default null,
       p_visible            in number    default null,
       p_backcolor          in number    default null,
       p_backstyle          in number    default null,
       p_boundcolumn        in number    default null,
       p_ctrlcaption        in varchar2  default null,
       p_columncount        in number    default null,
       p_columnheads        in varchar2  default null,
       p_columnwidths       in varchar2    default null,
       p_controlsource      in varchar2  default null,
       p_controltiptext     in varchar2  default null,
       p_defaultvalue       in varchar2  default null,
       p_displaywhen        in number    default null,
       p_enabled            in number    default null,
       p_fontbold           in number    default null,
       p_fontitalic         in number    default null,
       p_fontname           in varchar2  default null,
       p_fontsize           in number    default null,
       p_fontunderline      in number    default null,
       p_fontwheight        in number    default null,
       p_forecolor          in number    default null,
       p_format             in varchar2  default null,
       p_height             in number    default null,
       p_helpcontextid      in number    default null,
       p_limittolist        in number    default null,
       p_linkchildfields    in varchar2  default null,
       p_linkmasterfields   in varchar2  default null,
       p_listrows           in number    default null,
       p_multirow           in number    default null,
       p_onchange           in varchar2  default null,
       p_onclick            in varchar2  default null,
       p_ondblclick         in varchar2  default null,
       p_onkeydown          in varchar2  default null,
       p_onkeypress         in varchar2  default null,
       p_onkeyup            in varchar2  default null,
       p_onmousedown        in varchar2  default null,
       p_onmousemove        in varchar2  default null,
       p_onmouseup          in varchar2  default null,
       p_optionvalue        in number    default null,
       p_pageindex          in number    default null,
       p_picture            in varchar2  default null,
       p_picturealignment   in number    default null,
       p_pictureresizemode  in number    default null,
       p_picturetiling      in number    default null,
       p_picturetype        in number    default null,
       p_rowsource          in varchar2  default null,
       p_rowsourcetype      in varchar2  default null,
       p_shortcutmenubar    in varchar2  default null,
       p_sourceobject       in varchar2  default null,
       p_statusbartext      in varchar2  default null,
       p_style              in number    default null,
       p_tabfixedheight     in number    default null,
       p_tabfixedwidth      in number    default null,
       p_tabindex           in number    default null,
       p_tabstop            in number    default null,
       p_textalign          in number    default null,
       p_textfontcharset    in number    default null,
       p_width              in number    default null
   );

-----
-- create procedure for table  wwv_mig_acc_forms_modules
   procedure  ins_wwv_mig_acc_forms_modules  (
       p_dbid                     in number,
       p_moduleid                 in number,
       p_formid                   in number,
       p_modulename               in varchar2  default null,
       p_countofdeclarationlines  in number    default null,
       p_countoflines             in number    default null,
       p_lines                    in clob      default null,
       p_moduletype               in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_forms_perm
   procedure  ins_wwv_mig_acc_forms_perm  (
       p_dbid               in number,
       p_formid             in number,
       p_userid             in number    default null,
       p_permissionid       in number,
       p_permission         in number  default null,
       p_permission_desc    in varchar2
   );



-----
-- create procedure for table  wwv_mig_acc_groups
   procedure  ins_wwv_mig_acc_groups  (
       p_groupid            in number,
       p_grpname            in varchar2  default null,
       p_dbid               in number
   );


-- create procedure for table  wwv_mig_acc_indexes
   procedure  ins_wwv_mig_acc_indexes  (
       p_indid              in number,
       p_tblid              in number,
       p_dbid               in number    default null,
       p_indname            in varchar2  default null,
       p_cnvindex           in number    default null,
       p_isprimary          in number    default null,
       p_isunique           in number    default null,
       p_isforeign          in number    default null,
       p_ignorenulls        in number    default null,
       p_isrequired         in number    default null,
       p_distinctcount      in number    default null,
       p_isclustered        in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_indexes_cols
   procedure  ins_wwv_mig_acc_idx_cols  (
       p_indcolid           in number,
       p_indid              in number,
       p_colid              in number    default null,
       p_dbid               in number    default null,
       p_colorder           in number    default null,
       p_tblid              in number    default null,
       p_colname            in varchar2  default null
   );


-----
-- create procedure for table  wwv_mig_acc_modules
   procedure  ins_wwv_mig_acc_modules  (
       p_dbid                     in number,
       p_moduleid                 in number,
       p_modulename               in varchar2  default null,
       p_countofdeclarationlines  in number    default null,
       p_countoflines             in number    default null,
       p_lines                    in clob      default null,
       p_moduletype               in number
   );


-----
-- create procedure for table wwv_mig_acc_modules_perm
   procedure  ins_wwv_mig_acc_mdl_perm  (
       p_dbid               in number,
       p_moduleid           in number,
       p_userid             in number    default null,
       p_permissionid       in number,
       p_permission         in number  default null,
       p_permission_desc    in varchar2
   );


-- create procedure for table  wwv_mig_acc_pages
   procedure  ins_wwv_mig_acc_pages  (
       p_dbid               in number,
       p_pageid             in number,
       p_pagename           in varchar2  default null,
       p_datecreated        in varchar2  default null,
       p_datemodified       in varchar2  default null,
       p_pagetype           in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_queries
   procedure  ins_wwv_mig_acc_queries  (
       p_dbid               in number,
       p_qryid              in number,
       p_qrytype            in varchar2  default null,
       p_qryname            in varchar2  default null,
       p_qrysql             in clob      default null,
       p_datecreated        in varchar2  default null,
       p_query_lastupdated  in varchar2  default null,
       p_maxrecords         in number    default null,
       p_odbctimeout        in number    default null,
       p_returnsrecords     in varchar2  default null,
       p_updatable          in varchar2  default null,
       p_date_created       in varchar2  default null,
       p_date_modified      in varchar2  default null
   );


-----
-- create procedure for table wwv_mig_acc_relations
   procedure  ins_wwv_mig_acc_relations  (
       p_dbid               in number,
       p_relid              in number,
       p_relname            in varchar2  default null,
       p_parenttblid        in number    default null,
       p_childtblid         in number    default null,
       p_isunique           in number    default null,
       p_isenforced         in number    default null,
       p_isinherited        in number    default null,
       p_isupdatecascade    in number    default null,
       p_isdeletecascade    in number    default null,
       p_cnvrelation        in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_relation_cols
   procedure  ins_wwv_mig_acc_rel_col  (
       p_dbid               in number    default null,
       p_relcolid           in number,
       p_relid              in number,
       p_parentcolid        in number    default null,
       p_childcolid         in number    default null,
       p_relcolname         in varchar2    default null
   );


-----
-- create procedure for table  wwv_mig_acc_reports
   procedure  ins_wwv_mig_acc_reports  (
       p_dbid               in number,
       p_reportid           in number,
       p_repname            in varchar2  default null,
       p_backcolor          in number    default null,
       p_repcaption         in varchar2  default null,
       p_count              in number    default null,
       p_dategrouping       in number    default null,
       p_fastlaserprinting  in number    default null,
       p_filter             in varchar2  default null,
       p_filteron           in number    default null,
       p_gridx              in number    default null,
       p_gridy              in number    default null,
       p_grpkeeptogether    in number    default null,
       p_hasmodule          in number    default null,
       p_helpcontextid      in number    default null,
       p_helpfile           in varchar2  default null,
       p_hwnd               in number    default null,
       p_layoutforprint     in number    default null,
       p_logicalpagewidth   in number    default null,
       p_maxbutton          in number    default null,
       p_menubar            in varchar2  default null,
       p_minbutton          in number    default null,
       p_onactivate         in varchar2  default null,
       p_onclose            in varchar2  default null,
       p_ondeactivate       in varchar2  default null,
       p_onerror            in varchar2  default null,
       p_onnodata           in varchar2  default null,
       p_onopen             in varchar2  default null,
       p_onpage             in varchar2  default null,
       p_orderby            in varchar2  default null,
       p_orderbyon          in varchar2    default null,
       p_pagefooter         in number    default null,
       p_pageheader         in number    default null,
       p_painting           in number    default null,
       p_palettesource      in varchar2  default null,
       p_picture            in varchar2  default null,
       p_picturealignment   in number    default null,
       p_picturesizemode    in number    default null,
       p_picturetiling      in number    default null,
       p_picturetype        in number    default null,
       p_recordlocks        in number    default null,
       p_recordsource       in varchar2  default null,
       p_shortcutmenubar    in varchar2  default null,
       p_tag                in varchar2  default null,
       p_toolbar            in varchar2  default null,
       p_visible            in number    default null,
       p_width              in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_rpts_controls
   procedure  ins_wwv_mig_acc_rpt_ctl  (
       p_dbid                  in number,
       p_reportid              in number,
       p_controlid             in number,
       p_controlname           in varchar2  default null,
       p_controltype           in number    default null,
       p_eventprocprefix       in varchar2  default null,
       p_inselection           in number    default null,
       p_left                  in number    default null,
       p_parent                in varchar2  default null,
       p_section               in number    default null,
       p_tag                   in varchar2  default null,
       p_top                   in number    default null,
       p_visible               in number    default null,
       p_backcolor             in number    default null,
       p_backstyle             in number    default null,
       p_boundcolumn           in number    default null,
       p_ctrlcaption           in varchar2  default null,
       p_columncount           in number    default null,
       p_columnheads           in varchar2  default null,
       p_columnwidths          in varchar2    default null,
       p_controlsource         in varchar2  default null,
       p_controltiptext        in varchar2  default null,
       p_defaultvalue          in varchar2  default null,
       p_displaywhen           in number    default null,
       p_enabled               in number    default null,
       p_fontbold              in number    default null,
       p_fontitalic            in number    default null,
       p_fontname              in varchar2  default null,
       p_fontsize              in number    default null,
       p_fontunderline         in number    default null,
       p_fontwheight           in number    default null,
       p_forecolor             in number    default null,
       p_format                in varchar2  default null,
       p_height                in number    default null,
       p_helpcontextid         in number    default null,
       p_limittolist           in number    default null,
       p_linkchildfields       in varchar2  default null,
       p_linkmasterfields      in varchar2  default null,
       p_listrows              in number    default null,
       p_multirow              in number    default null,
       p_onchange              in varchar2  default null,
       p_onclick               in varchar2  default null,
       p_ondblclick            in varchar2  default null,
       p_onkeydown             in varchar2  default null,
       p_onkeypress            in varchar2  default null,
       p_onkeyup               in varchar2  default null,
       p_onmousedown           in varchar2  default null,
       p_onmousemove           in varchar2  default null,
       p_onmouseup             in varchar2  default null,
       p_optionvalue           in number    default null,
       p_pageindex             in number    default null,
       p_picture               in varchar2  default null,
       p_picturealignment      in number    default null,
       p_pictureresizemode     in number    default null,
       p_picturetiling         in number    default null,
       p_picturetype           in number    default null,
       p_rowsource             in varchar2  default null,
       p_rowsourcetype         in varchar2  default null,
       p_shortcutmenubar       in varchar2  default null,
       p_sourceobject          in varchar2  default null,
       p_statusbartext         in varchar2  default null,
       p_style                 in number    default null,
       p_tabfixedheight        in number    default null,
       p_tabfixedwidth         in number    default null,
       p_tabindex              in number    default null,
       p_tabstop               in number    default null,
       p_textalign             in number    default null,
       p_textfontcharset       in number    default null,
       p_width                 in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_rpts_modules

   procedure  ins_wwv_mig_acc_rpts_modules  (
       p_dbid                     in number,
       p_moduleid                 in number,
       p_reportid                 in number,
       p_modulename               in varchar2  default null,
       p_countofdeclarationlines  in number    default null,
       p_countoflines             in number    default null,
       p_lines                    in clob      default null,
       p_moduletype               in number    default null
   );



-----
-- create procedure for table  wwv_mig_acc_rpt_perms

   procedure  ins_wwv_mig_acc_rpt_perms  (
       p_dbid               in number,
       p_reportid           in number,
       p_userid             in number    default null,
       p_permissionid       in number,
       p_permission         in number,
       p_permission_desc    in varchar2
   );


-----
-- create procedure for table  wwv_mig_acc_tables

   procedure  ins_wwv_mig_acc_tables  (
       p_tblid                    in number,
       p_dbid                     in number,
       p_tblname                  in varchar2  default null,
       p_primarykey               in number    default null,
       p_cnvtablestruct           in number    default null,
       p_cnvmovedata              in number    default null,
       p_cnvri                    in number    default null,
       p_cnvvalidation            in number    default null,
       p_cnvdefault               in number    default null,
       p_cnvaddtimestamp          in number    default null,
       p_attachtablebacktoaccess  in number    default null,
       p_savepassword             in number    default null,
       p_cnvmakeupdateable        in number    default null,
       p_retainlocalcopy          in number    default null,
       p_syncwithserver           in number    default null,
       p_ownerid                  in number    default null,
       p_validationtext           in varchar2  default null,
       p_validationrule           in varchar2  default null,
       p_numberofrows             in number    default null,
       p_cachingtable             in number    default null,
       p_description              in varchar2  default null,
       p_attributes               in number    default null,
       p_conflicttable            in number    default null,
       p_datecreated              in varchar2  default null,
       p_lastupdated              in varchar2  default null,
       p_recordcount              in number    default null,
       p_orderbyon                in number    default null,
       p_replicafilter            in number    default null,
       p_sourcetablename          in varchar2  default null,
       p_updatable                in number    default null
   );


-----
-- create procedure for table  wwv_mig_acc_tab_perm

   procedure  ins_wwv_mig_acc_tab_perm  (
       p_dbid               in number    default null,
       p_tblid              in number,
       p_userid             in number    default null,
       p_permissionid       in number,
       p_permission         in number,
       p_permission_desc    in varchar2  default null
   );


-----
-- create procedure for table  wwv_mig_acc_users

   procedure  ins_wwv_mig_acc_users  (
       p_dbid               in number,
       p_userid             in number,
       p_username           in varchar2  default null
   );


----
-- create procedure for table wwv_mig_projects
   procedure  ins_wwv_mig_acc_grpsmembers   (
       p_dbid                   in number,
       p_grpmbrid               in number,
       p_userid                 in number,
       p_groupid                in number
   );



-- create procedure for table wwv_mig_rev_tables
   procedure ins_wwv_mig_rev_tables (
      p_project_id              in number,
      p_dbid                    in number,
      p_tblid                   in number,
      p_orig_tblname            in varchar2  default null,
      p_mig_tblname             in varchar2  default null,
      p_owner                   in varchar2  default null,
      p_status                  in varchar2  default null
   );


-- create procedure for table wwv_mig_rev_queries
   procedure ins_wwv_mig_rev_queries (
      p_project_id              in number,
      p_dbid                    in number,
      p_qryid                   in number,
      p_orig_qryname            in varchar2  default null,
      p_mig_tblname             in varchar2  default null,
      p_orig_sql		in clob default null,
      p_mig_sql			in clob default null,
      p_owner                   in varchar2  default null,
      p_status                  in varchar2  default null
   );


-- create procedure for displaying loaded file confirmation
   procedure display_load_confirm (
       p_file_id          in number,
       p_date_time_format in varchar2
   );


-- create procedure for displaying loaded file information
   procedure display_load_info (
       p_file_id          in number,
       p_date_time_format in varchar2
   );

-- create procedure for setting the Migration Project name
   procedure set_migration_project_name (
       p_project_id       in number,
       p_workspace_id     in number,
       p_name             in varchar2
   );

--
-- Collision Management functions, taken from the Oracle SQL Developer
-- MIGRATION_TRANSFORMER_HEADER.plsql package
--
-- create function check_identifier_length for collision management checking
   function check_identifier_length(
       p_ident VARCHAR2)
   return VARCHAR2;

-- create function add_suffix for collision management checking
   function add_suffix(
       p_work VARCHAR2,
       p_suffix VARCHAR2,
       p_maxlen NUMBER)
   return VARCHAR2;

-- create function check_reserved_word for collision management checking
   function check_reserved_word(
       p_work VARCHAR2)
   return VARCHAR2;

-- create function sys_check for collision management checking
   function sys_check(
       p_work VARCHAR2)
   return VARCHAR2;

-- create function check_allowed_chars for collision management checking
   function check_allowed_chars(
       p_work NVARCHAR2)
   return NVARCHAR2;

-- create function transform_identifier for collision management checking
   function transform_identifier(
       p_identifier NVARCHAR2)
   return NVARCHAR2;

-- create function truncateStringByteSize for collision management checking
   function truncateStringByteSize(
       p_work VARCHAR2,
       p_bsize NUMBER)
   RETURN VARCHAR2;

-- create function lTrimNonAlphaNumeric for collision management checking
   function lTrimNonAlphaNumeric(
       p_work NVARCHAR2)
   RETURN NVARCHAR2;

-- create function removeQuotes for collision management checking
   function removeQuotes(
       p_work NVARCHAR2)
   RETURN NVARCHAR2;

end  wwv_mig_acc_load ;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_FRM_LOAD_XML"
AS
    g_security_grp_id           number := 10;
    g_xmlns                     varchar2(255)   := 'xmlns="http://xmlns.oracle.com/Forms"';
    g_project_id                number := 0;
    g_file_id                   number := 0;
    g_sqlerr                    varchar2(4000)  := null;

    TYPE col_name_arr IS TABLE OF VARCHAR2(30) INDEX BY VARCHAR2(30);

-- Get all the attributes of xml file which are associated with input table's column names
-- as mapped in wwv_mig_frm_xmltagtablemap table
FUNCTION get_forms_column_name (
    p_table_name                VARCHAR2
) RETURN col_name_arr;

-- create function to check for the <FormModule> tag in the export file
FUNCTION is_valid_forms_xml (
       p_file_id             in number,
       p_project_id          in number,
       p_security_group_id   in number)
   return boolean;

-- Load all the forms' table, based on the input Node Element & parent Tag name
PROCEDURE load_all_nodes (
    p_file_id           IN      NUMBER
);

-- Display Loaded File confirmation on Wizard Confirmation Page
procedure display_load_confirm (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

-- Display Loaded File information on Wizard Confirmation Page
procedure display_load_info (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

END wwv_mig_frm_load_xml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_FRM_OLB_LOAD_XML"
AS
    g_security_grp_id           number := 10;
    g_xmlns                     varchar2(255)   := 'xmlns="http://xmlns.oracle.com/Forms"';
    g_project_id                number := 0;
    g_file_id                   number := 0;
    g_sqlerr                    varchar2(4000)  := null;

    TYPE col_name_arr IS TABLE OF VARCHAR2(30) INDEX BY VARCHAR2(30);

-- Get all the attributes of xml file which are associated with input table's column names
-- as mapped in wwv_mig_frm_olb_xmltagtablemap table
FUNCTION get_objlib_column_name (
    p_table_name                VARCHAR2
) RETURN col_name_arr;

-- create function to check for the <FormModule> tag in the export file
FUNCTION is_valid_olb_xml (
       p_file_id             in number,
       p_project_id          in number,
       p_security_group_id   in number)
   return boolean;

-- Load all the forms' table, based on the input Node Element & parent Tag name
PROCEDURE load_all_nodes (
    p_file_id           IN      NUMBER
);

-- Display Loaded File confirmation on Wizard Confirmation Page
procedure display_load_confirm (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

-- Display Loaded File information on Wizard Confirmation Page
procedure display_load_info (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

END wwv_mig_frm_olb_load_xml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_FRM_UPDATE_APX_APP"
AS

PROCEDURE update_page_plug (
    p_flow_id                           IN  NUMBER,
    p_model_id                          IN  NUMBER,
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

PROCEDURE set_apex_app_logo (
    p_app_name                          IN VARCHAR2,
    p_flow_id                           IN NUMBER,
    p_security_group_id                 IN NUMBER
);

PROCEDURE update_forms_pages (
    p_flow_id                           IN  NUMBER,
    p_model_id                          IN  NUMBER,
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

end wwv_mig_frm_update_apx_app;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_FRM_UTILITIES"
AS
--
--  Copyright (c) Oracle Corporation 2000 - 2008. All Rights Reserved.
--
--    DESCRIPTION
--      Forms Migrations utility package.
--
--      Includes:
--      1. Component Applicability Setting Utilities
--
--    NOTES
--      This package contains utility functions for the Application Migrations Forms Migrations service.
--
--

-- SET_COMPONENT_APPLICABILITY
-- Sets the Applicability for all components within a Migration Project
-- of the specified component type, taken from the WWV_MIG_PROJECT_COMPONENTS table.
-- For example, where p_component_name is 'ALERTS', the applicable column for all alerts within the Migration Project
-- will be updated with the 'ALERTS' applicable value, taken from wwv_mig_project_components.applicable.
--
PROCEDURE set_component_applicability (
    p_component_name                    IN  VARCHAR2,
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

-- SET_COMPONENT_DEFAULTS
-- Set the default Component Applicability settings on creation of a new Migration Project
PROCEDURE set_component_defaults(
    p_project_id                        IN NUMBER,
    p_security_group_id                 IN  NUMBER
);

-- SET_TRIGGER_DEFAULTS
-- Set the default Trigger Applicability settings on creation of a new Migration Project
PROCEDURE set_trigger_defaults(
    p_project_id                        IN NUMBER,
    p_security_group_id                 IN  NUMBER
);

-- Update Model Pages For User Interface Settings
-- e.g. Reports should be Classic for Mobile, otherwise Interactive
--      Navigation region should be List View for Mobile, otherwise a Horizontal images list
procedure update_model_pages(
   p_model_id           in number,
   p_project_id         in number,
   p_flow_id            in number,
   p_security_group_id  in number,
   p_is_jqm             in boolean default false
   );

function is_related_block(
    p_block_name        varchar2,
    p_project_id        number,
    p_security_group_id number
) return boolean;

-- CREATE_APEX_PAGES
-- Create pages for selected blocks in an Oracle Forms Migration project.  Used on
-- pg 4400:62 of Generate Application Wizard
PROCEDURE create_apex_pages(
   p_project_id                         in number,
   p_security_group_id                  in number,
   p_schema                             in varchar2,
   p_model_id                           in number,
   p_is_jqm                             in boolean default false
);

-- CREATE_APEX_REPORT_PAGES
-- Create pages for selected Oracle Reports in an Oracle Forms Migration project.  Used on
-- pg 4400:62 of Generate Application Wizard
PROCEDURE create_apex_report_pages(
   p_project_id                         IN NUMBER,
   p_security_group_id                  IN NUMBER,
   p_schema                             IN VARCHAR2,
   p_model_id                           IN NUMBER,
   p_is_jqm                             IN BOOLEAN
);

-- SET_FORMTRIG_APPLICABILITY
-- Sets the Applicability for all form-level triggers within a Migration Project
-- using the default settings from the WWV_MIG_PROJECT_TRIGGERS table.
-- For example, where p_trigger_name is 'KEY-EXIT', the applicable column for all KEY-EXIT form-level triggers
-- within the Migration Project will be updated with the 'KEY-EXIT' applicable value, taken from wwv_mig_project_triggers.form_level.
--
PROCEDURE set_formtrig_applicability (
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

-- SET_BLKTRIG_APPLICABILITY
-- Sets the Applicability for all block-level triggers within a Migration Project
-- using the default settings from the WWV_MIG_PROJECT_TRIGGERS table.
-- For example, where p_trigger_name is 'KEY-EXIT', the applicable column for all KEY-EXIT block-level triggers
-- within the Migration Project will be updated with the 'KEY-EXIT' applicable value, taken from wwv_mig_project_triggers.form_level.
--
PROCEDURE set_blktrig_applicability (
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

-- SET_ITEMTRIG_APPLICABILITY
-- Sets the Applicability for all item-level triggers within a Migration Project
-- using the default settings from the WWV_MIG_PROJECT_TRIGGERS table.
-- For example, where p_trigger_name is 'KEY-EXIT', the applicable column for all KEY-EXIT item-level triggers
-- within the Migration Project will be updated with the 'KEY-EXIT' applicable value, taken from wwv_mig_project_triggers.form_level.
--
PROCEDURE set_itemtrig_applicability (
    p_project_id                        IN  NUMBER,
    p_security_group_id                 IN  NUMBER
);

--
-- Load into Revision tables
--
PROCEDURE load_frm_revision_tables (
    p_file_id           IN      NUMBER
);

-- IS_TABLE_OR_VIEW
-- Identifies the type of the datasource object passed in.
-- Returns 'T' for a Table and 'V' for a View
function is_table_or_view(
    p_owner             in varchar2,
    p_object_name       in varchar2 ) return varchar2
    ;


-- SET_COMPONENT_DEFAULTS
-- Set the default Component Applicability settings on creation of a new Migration Project
function get_block_mapping (
    p_project_id        IN NUMBER,
    p_security_group_id IN NUMBER,
    p_block_id          IN NUMBER,
    p_schema            IN VARCHAR2) return varchar2
    ;

-- IS_TABLE_RELATED
-- Identifies the relationship between two tables passed in.
-- Returns 'true' for a Relationship and 'false' for no relationship
function is_table_related(
    p_owner             in varchar2,
    p_master_table      in varchar2,
    p_detail_table      in varchar2) return boolean
    ;

-- Procedures & Functions related to Trigger Query Parsing - expecially POST-QUERY to ITEM LOV conversion
function trigger_get_primary_key(
    p_sql in varchar2,
    p_alias in varchar2 := null ) return varchar2
    ;
procedure trigger_query_to_lov(
    p_project_id number,
    p_block_id number)
    ;

function trigger_parse_block_sql(
    p_project_id number,
    p_block_id number,
    p_schema varchar2) return varchar2
    ;

procedure set_block_inclusion(
    p_file_id             number,
    p_project_id          number,
    p_security_group_id   number
);

function replace_string(
    p_source_str in varchar2,
    p_search_start_str in varchar2,
    p_search_end_str in varchar2,
    p_replace_str in varchar2 ) return varchar2
    ;

function is_valid_datasource(
    p_project_id in number,
    p_security_group_id in number,
    p_schema in varchar2) return boolean
    ;

function is_valid_query(
    p_query in varchar2
    ) return boolean
    ;

function get_parameter_name(
    p_name in varchar2
    ) return varchar2
    ;

function parse_lov_query(
    p_query in varchar2,
    p_security_group_id in number default null
    ) return varchar2
    ;

end wwv_mig_frm_utilities;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_FRMMENU_LOAD_XML"
AS
    g_security_grp_id           number := 10;
    g_xmlns                     varchar2(255)   := 'xmlns="http://xmlns.oracle.com/Forms"';
    g_project_id                number := 0;
    g_file_id                   number := 0;
    g_sqlerr                    varchar2(4000)  := null;

    TYPE col_name_arr IS TABLE OF VARCHAR2(30) INDEX BY VARCHAR2(30);

-- Get all the attributes of xml file which are associated with input table's column names
-- as mapped in wwv_mig_frm_xmltagtablemap table
FUNCTION get_menus_column_name (
    p_table_name                VARCHAR2
) RETURN col_name_arr;

-- create function to check for the <MenuModule> tag in the export file
FUNCTION is_valid_menu_xml (
       p_file_id             in number,
       p_project_id          in number,
       p_security_group_id   in number)
   return boolean;

-- Load all the forms' table, based on the input Node Element & parent Tag name
PROCEDURE load_all_nodes (
    p_file_id           IN      NUMBER
);

-- Display Loaded File confirmation on Wizard Confirmation Page
procedure display_load_confirm (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

-- Display Loaded File information on Wizard Confirmation Page
procedure display_load_info (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

END wwv_mig_frmmenu_load_xml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_MIG_RPT_LOAD_XML"
AS
    g_security_grp_id           number := 10;
    --g_xmlns                     varchar2(255)   := 'xmlns="http://xmlns.oracle.com/Forms"';
    g_project_id                number := 0;
    g_file_id                   number := 0;
    g_sqlerr                    varchar2(4000)  := null;

    TYPE col_name_arr IS TABLE OF VARCHAR2(30) INDEX BY VARCHAR2(30);

-- Get all the attributes of xml file which are associated with input table's column names
-- as mapped in wwv_mig_rpt_xmltagtablemap table
FUNCTION get_reports_column_name (
    p_table_name                VARCHAR2
) RETURN col_name_arr;

-- create function to check for the <report> tag in the export file
FUNCTION is_valid_report_xml (
       p_file_id             in number,
       p_project_id          in number,
       p_security_group_id   in number)
   return boolean;

-- Load all the Reports' table, based on the input Node Element & parent Tag name
PROCEDURE load_all_nodes (
    p_file_id           IN      NUMBER
);

-- Display Loaded File confirmation on Wizard Confirmation Page
procedure display_load_confirm (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

-- Display Loaded File information on Wizard Confirmation Page
procedure display_load_info (
    p_project_id                in      number,
    p_date_time_format          in      varchar2
);

END wwv_mig_rpt_load_xml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PKG_APP_INSTALL" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2011. All Rights Reserved.
--
--    NAME
--      wwv_flow_pkg_app_install.sql
--
--    DESCRIPTION
--      API to install packaged applications.
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    SCRIPT ARGUMENTS
--      NONE
--
--
--    RUNTIME DEPLOYMENT
--      YES
--
--    MODIFIED  (MM/DD/YYYY)
--    cbcho      10/21/2011 - Created
--    msewtz     04/17/2012 - Added unlock_db_app
--    hfarrell   05/21/2012 - Added install_websheet, deinstall_websheet
--    hfarrell   05/31/2012 - Added update_db_app (feature #921)
--    hfarrell   06/11/2012 - Added app_locking function
--    cbcho      07/03/2012 - Exposed start_log, end_log (feature #992)
--    cbcho      07/06/2012 - Added t_install_log, g_install_log (feature #992)
--    cbcho      07/09/2012 - Moved packaged application log logic to wwv_flow_pkg_app_log
--    cneumuel   07/31/2012 - install: install packaged app and configure authentication scheme (feature #1010)
--    hfarrell   01/28/2013 - Updated update_db_app to remove unrequired parameter p_schema (part of fix for bug #16213494)
--    cneumuel   02/06/2013 - In install_websheet: sets copied websheets's auth scheme now and supports NATIVE_CLOUD_IDM on the cloud (bug #16287458)
--
--------------------------------------------------------------------------------

--##############################################################################
--#
--# SAMPLE DATABASE APPLICATION PROCEDURES
--#
--##############################################################################

--==============================================================================
-- Unlock Database Application
-- p_id:     The ID of the Database application to be unlocked
--==============================================================================
procedure unlock_db_app (
	p_id in number);

--==============================================================================
-- Remove Database Application --
-- p_id:                The Database application ID to be deleted
-- p_supporting_objs:   Setting whether the Supporting Objects should also be deleted: Y or No
--==============================================================================
procedure deinstall_db_app (
  p_id                in number,
  p_supporting_objs   in varchar2 default 'Y');

--==============================================================================
-- Install Database Application
-- p_app_id:    The internal Database application ID for the packaged application
-- p_schema:    The schema the application is being installed to
-- p_id:        The application ID of the new application
--==============================================================================
procedure install_db_app (
  p_app_id            in number,
  p_schema            in varchar2,
  p_id                in number default wwv_flow_utilities.minimum_free_flow);

--==============================================================================
-- Update Database Application
-- p_app_id:    The internal Database application ID for the packaged application
-- p_schema:    The schema the application is being installed to
-- p_id:        The application ID of the existing application being updated
--==============================================================================
procedure update_db_app (
  p_app_id            in number,
  p_id                in number);

--##############################################################################
--#
--# SAMPLE WEBSHEET APPLICATION PROCEDURES
--#
--##############################################################################

--==============================================================================
-- Deinstall Websheet Application
-- p_id:     The ID of the Websheet application to be unlocked
--==============================================================================
procedure deinstall_websheet (
	p_id                in number);

--==============================================================================
-- Install Websheet Application
-- p_app_id:      The internal Websheet application ID for the packaged application
-- p_auth_scheme: The authentication scheme for this websheet. Allowed values:
--                * NATIVE_APEX_ACCOUNTS
--                * NATIVE_CLOUD_IDM (only on the cloud)
-- p_id:          The application ID of the existing application being updated
--==============================================================================
procedure install_websheet (
    p_app_id      in number,
    p_auth_scheme in varchar2,
    p_id          in number default wwv_flow_utilities.minimum_free_flow);

--##############################################################################
--#
--# WIZARD API
--#
--##############################################################################

--==============================================================================
-- Install packaged application.
--
-- This procedure is executed by 4000:83, when a developer clicks on the INSTALL
-- button.
--
-- ARGUMENTS
-- * p_app_type:          DATABASE or WEBSHEET
-- * p_app_id:            The pre-defined packaged application
-- * p_schema:            The runtime schema for the new app
-- * p_auth_scheme:       The internal name of the new app's authentication
--                        plugin, NATIVE_CLOUD_IDM, NATIVE_APEX_ACCOUNTS, ...
-- * p_auth_attribute_xx: Authentication plugin attribute 1-15
--
-- RETURN VALUE
--   The newly installed application's id
--==============================================================================
function install (
    p_app_type          in varchar2,
    p_app_id            in number,
    p_schema            in varchar2,
    p_auth_scheme       in varchar2,
    p_auth_attribute_01 in varchar2 default null,
    p_auth_attribute_02 in varchar2 default null,
    p_auth_attribute_03 in varchar2 default null,
    p_auth_attribute_04 in varchar2 default null,
    p_auth_attribute_05 in varchar2 default null,
    p_auth_attribute_06 in varchar2 default null,
    p_auth_attribute_07 in varchar2 default null,
    p_auth_attribute_08 in varchar2 default null,
    p_auth_attribute_09 in varchar2 default null,
    p_auth_attribute_10 in varchar2 default null,
    p_auth_attribute_11 in varchar2 default null,
    p_auth_attribute_12 in varchar2 default null,
    p_auth_attribute_13 in varchar2 default null,
    p_auth_attribute_14 in varchar2 default null,
    p_auth_attribute_15 in varchar2 default null )
    return number;

--##############################################################################
--#
--# UTILITIES
--#
--##############################################################################

--==============================================================================
-- Create User
--==============================================================================
procedure create_user (
    p_username      in varchar2 default null,
    p_email         in varchar2 default null,
    p_password      in varchar2 default null);

--==============================================================================
function app_locking (
    p_app_id         in number,
    p_app_type       in varchar2
) return varchar2;

end wwv_flow_pkg_app_install;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PKG_APP_UI"
is


function get_data (p_str               varchar2,
                   p_lang              varchar2 default 'en',
                   p_system_message    varchar2 default null,
                   p_escape            boolean  default true,
                   p_app_id            varchar2 default null,
                   p_alternate_message varchar2 default null)
                   return varchar2;

procedure p50_applications (
    p_app_id         in number,
    p_app_page_id    in number,
    p_app_session    in number,
    p_app_category   in varchar2 default null,
    p_app_type       in varchar2 default null
    );

procedure p81_app_detail (
    p_app_id       in number,
    p_app_session  in number,
    p_pkg_app_id   in number default null,
    p_app_type     in varchar2 default null
    );

end wwv_flow_pkg_app_ui;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PKG_APP_API"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_pkg_app_api.plb
--
--    DESCRIPTION
--      Exports all Packaged Application related data of a workspace.
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    hfarrell    05/25/2012 - Created
--
--------------------------------------------------------------------------------

--
-- Export data of Packaged Applications from the INTERNAL workspace into
-- a SQL script with all settings for SQL*Plus.
-- p_format can be DOS or UNIX.
--
procedure export_script (
    p_format  in varchar2 default 'UNIX',
    p_version in varchar2 default null);

--
-- Export data of all Packaged Application components in INTERNAL workspace.
-- p_format can be DOS or UNIX.
--
procedure export (
    p_format in varchar2 default 'UNIX' );

end wwv_flow_pkg_app_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_UPGRADE_APP"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_upgrade_app.sql
--
--    DESCRIPTION
--      This package is used for upgrading selected components from older version to 4.0 version.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    sathikum    01/22/2010 - Created
--    sathikum    02/15/2010 - Added additonal paremeter p_item_id for supporting individual item migration
--    pawolf      03/12/2010 - Added migration for LOV null return value
--    sathikum    03/23/2010 - added procedure migrate_interactive_report for IR
--    sathikum    03/24/2010 - removed procedure migrate_to_required2
--    sathikum    03/26/2010 - Added code for Advanced Migration procedure name migtrate_objects
--    sathikum    04/01/2010 - Updated code for Advanced Migration functionality
--    sbkenned    04/22/2010 - Updated code for Advanced, added packages to create collections used in reports, updated check valid date format and renamed package
--    sbkenned    04/14/2011 - removed get_upgrade_summary (it is not used)
--    hfarrell    04/18/2012 - Renamed update_flash_to_flash5 to update_flash_chart, and update_svg_to_flash to update_svg_chart. Added p_chart_rendering to both procedures
--    hfarrell    04/19/2012 - Updated update_svg_chart to remove p_chart_rendering, as only offering upgrade option to HTML5 via wizard
--    hfarrell    04/19/2012 - Added update_html_chart to support upgrade of existing HTML charts to HTML5
--
--------------------------------------------------------------------------------


-- updates old Date Picker to new jQuery UI based Datepicker
--
procedure update_datepicker (
    p_flow_id       in number,
    p_page_id       in number default null,
    p_item_id       in number default null);

-- removes IS_NUMERIC validations and changes the display as to Numeric
--
procedure update_to_numeric (
    p_flow_id       in number,
    p_page_id       in number default null,
    p_item_id       in number default null);

-- updates the required attribute to yes for items which have not null validations
--
procedure update_to_required (
    p_flow_id       in number,
    p_page_id       in number default null,
    p_item_id       in number default null);

-- updates %null% LOV null return values to null
--
procedure update_lov_null_return_value (
    p_flow_id in number,
    p_page_id in number default null,
    p_item_id in number default null );

--  Update Flash 3 charts to latest version of Flash or HTML5
--  Update Flash 6 charts to HTML5
--
procedure update_flash_chart (
    p_flow_id         in number,
    p_page_id         in number   default null,
    p_region_id       in number   default null,
    p_chart_rendering in varchar2 default 'FLASH_PREFERRED');

-- Updates SVG chart to latest version of Flash or HTML5
--
procedure update_svg_chart (
    p_flow_id         in number,
    p_page_id         in number   default null,
    p_region_id       in number   default null);

--  Update Flash 3 charts to latest version of Flash or HTML5
--  Update Flash 6 charts to HTML5
--
procedure update_html_chart (
    p_flow_id         in number,
    p_page_id         in number   default null,
    p_region_id       in number   default null);

-- updates Editor "FCKEditor v2" to "CKEditor v3"
--
procedure update_to_CKEditor (
    p_flow_id       in number,
    p_page_id       in number default null,
    p_item_id       in number default null);

-- updates Interative Report Settings
--
procedure update_interactive_report (
    p_type          in varchar2,
    p_flow_id       in number,
    p_region_id     in number default null,
    p_report_id     in number default null);

-- used for advanced upgrade (when validations have conditions)
--
procedure update_advanced (
    p_flow_id       in number,
    p_page_id       in number default null);

-- used to populate the collection used for regular upgrade on page 911
--
procedure create_report_collection (
    p_upgrade_type  in varchar2,
    p_app_id        in number,
    p_user          in varchar2 );

-- used to populate the collection used for advanced upgrade on page 911
--
procedure create_adv_report_collection (
    p_app_id        in number,
    p_user          in varchar2,
    p_session_id    in number );

end wwv_flow_upgrade_app;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TRANSLATION_UTILITIES"
as

--  Copyright (c) Oracle Corporation 2001 - 2009. All Rights Reserved.
--
--    DESCRIPTION
--      Global variables and APIs for use with flow translation services
--
--    SECURITY
--      Available to flows owner
--      No sensitive data
--
--    NOTES
--
--      Populate wwv_flow_translatable_text$ from columns identified in wwv_flow_translatable_cols$.
--      P_FLOW_ID identifies primary language flow ID.
--      P_LANGUAGE identifies language code the translation is into.
--      The translation_flow_id will be derived from the wwv_flow_language_map table.


procedure reuse_translations (
    p_from_flow_id          in varchar2 default null,
    p_translated_flow_id    in varchar2 default null,
    p_security_group_id     in varchar2 default null)
    ;

procedure seed_and_publish (
    p_from_flow_id          in varchar2 default null,
    p_language              in varchar2 default null,
    p_insert_only           in varchar2 default 'NO',
    p_translated_flow_id    in varchar2 default null,
    p_security_group_id     in varchar2 default null)
    ;

procedure publish_application (
    p_from_flow_id          in varchar2 default null,
    p_translated_flow_id    in varchar2 default null,
    p_security_group_id     in varchar2 default null)
    ;

procedure sync_translations (
    p_flow_id              in varchar2 default null,
    p_language             in varchar2 default null)
    ;

procedure seed_translations (
    p_flow_id              in varchar2 default null,
    p_language             in varchar2 default null,
    p_insert_only          in varchar2 default 'NO')
    ;


procedure flow_copy (
    p_flow_id_from         in number,
    p_flow_id_to           in number,
    p_alias_to             in varchar2 default null,
    p_flow_language_to     in varchar2,
    p_ok_to_delete_flow    in boolean := false,
    p_perform_translations in boolean := true)
    ;

end wwv_flow_translation_utilities;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_REGION_LAYOUT"
as

    g_first_process boolean := true;

procedure page_rendering_icons (
    p_page in varchar2 default null)
    ;
procedure shared_component_icons (
    p_page in varchar2 default null)
    ;
procedure page_processing_icons (
    p_page in varchar2 default null)
    ;

-------------------------
-- Page Rendering On Load
--
procedure show_on_load_page (
    p_page                 in number,
    p_global_page_id       in number,
    p_flow                 in number,
    p_session              in number)
    ;
procedure show_on_load_regions (
    p_page                 in number,
    p_global_page_id       in number,
    p_flow                 in number,
    p_session              in number)
    ;
procedure show_page_buttons (
    p_page          in number,
    p_flow          in number,
    p_session       in number)
    ;
procedure show_page_items (
    p_page          in number,
    p_flow          in number,
    p_session       in number)
    ;
procedure show_on_load_computations (
    p_page                 in number,
    p_flow                 in number,
    p_session              in number)
    ;
procedure show_on_load_processes (
    p_page                 in number,
    p_flow                 in number,
    p_session              in number)
    ;
procedure show_on_load_dynact (
    p_page                 in number,
    p_flow                 in number,
    p_session              in number)
    ;

----------------------------
-- Page Processing on submit
--
procedure show_on_submit_comp (
    p_page in number,
    p_flow in number,
    p_session in number)
    ;
procedure show_on_submit_val (
    p_page in number,
    p_flow in number,
    p_session in number)
    ;
procedure show_on_submit_proc (
    p_page    in number,
    p_flow    in number,
    p_session in number)
    ;

procedure show_on_submit_branch (
    p_page    in number,
    p_flow    in number,
    p_session in number)
    ;

-- shared
procedure show_shared_tabs (
    p_page in number,
    p_flow in number,
    p_session in number)
    ;
procedure show_shared_standard_tabs (
    p_page in number,
    p_flow in number,
    p_session in number)
    ;
procedure show_shared_lov (
    p_page in number,
    p_flow in number,
    p_session in number)
    ;
procedure show_shared_bc (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;
procedure show_shared_lists (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;
procedure show_shared_theme (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;
procedure show_shared_templates (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;
procedure show_shared_security (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;
procedure show_shared_navbar (
    p_page     in number,
    p_flow     in number,
    p_session  in number)
    ;



-- 4150 helper functions

 procedure show_apex_home_pg_elink (
    p_page     in number default null,
    p_flow     in number default null,
    p_session  in number default null)
    ;
 procedure set_lock_status (
    p_flow in number,
    p_page in number)
    ;



-- other


procedure show_page_template (
    p_flow          in number,
    p_page          in number default null,
    p_template      in varchar2 default null,
    p_template_id   in number   default null)
    ;

procedure page_temp_substitution (
    p_flow          in number,
    p_template_id   in number)
    ;

procedure show_on_load_flow (
    p_page     in number,
    p_flow     in number,
    p_session  in number,
    p_show_all in boolean default false)
    ;

procedure show_on_accept_flow (
    p_page          in number,
    p_flow          in number,
    p_session       in number,
    p_show_all      in boolean default false)
    ;

procedure show_related_pages_report (
    p_flow          in number,
    p_page_id       in number,
    p_session       in number)
    ;


procedure show_region_template (
    p_flow          in number,
    p_template_id   in number);

procedure region_temp_substitution (
    p_flow          in number,
    p_template_id   in number);

procedure set_most_recently_edited (
    p_security_group_id in number,
    p_user              in varchar2);

procedure show_title (
       p_title in varchar2,
       p_t1    in varchar2 default null,
       p_n1    in varchar2 default null,
       p_t2    in varchar2 default null,
       p_n2    in varchar2 default null,
       p_t3    in varchar2 default null,
       p_n3    in varchar2 default null,
       p_t4    in varchar2 default null,
       p_n4    in varchar2 default null,
       p_t5    in varchar2 default null,
       p_n5    in varchar2 default null,
       p_t6    in varchar2 default null,
       p_n6    in varchar2 default null,
       p_button_class in varchar2 default null,
       p_title_tab_attributes in varchar2 default null,
       p_help  in varchar2,
       p_name  in varchar2 default null);

--
-- page zero information reports
--

procedure show_global_page_app_proc (
    p_flow    in number,
    p_session in number)
    ;

procedure show_global_page_app_comp (
    p_flow    in number,
    p_session in number)
    ;

procedure show_global_page_app_items (
    p_flow    in number,
    p_session in number)
    ;

function get_process_type_desc (
    p_flow_id      in number,
    p_process_type in varchar2 )
    return varchar2;

function get_computation_type_desc (
    p_computation_type in varchar2 )
    return varchar2;

function get_validation_type_desc (
    p_validation_type in varchar2 )
    return varchar2;

function get_dyn_action_cond_type_desc (
    p_triggering_condition_type in varchar2 )
    return varchar2;

function get_page_item_type_desc (
    p_flow_id    in number,
    p_display_as in varchar2 )
    return varchar2;

function get_tabform_column_type_desc (
    p_display_as in varchar2 )
    return varchar2;

function get_ir_column_type_desc (
    p_display_as in varchar2 )
    return varchar2;

function get_condition_type_desc (
    p_condition_type in varchar2 )
    return varchar2;

function get_authorization_scheme_desc (
    p_authorization_scheme_id in varchar2 )
    return varchar2;

function get_build_option_desc (
    p_build_option_id in number )
    return varchar2;

end wwv_flow_region_layout;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_QUERY_BUILDER" as
--
--  Copyright (c) Oracle Corporation 1999 - 2005. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package for for use in the query builder.
--
--    NOTES
--      << Please fill in >>
--
--    SECURITY
--      << Please fill in >>
--



--
-- check if a user has access on a schema
--
procedure check_priv (p_schema in varchar2);

--
-- renders the HTML for the query builder to add tables.
--
procedure renderTableV2(p_object_id varchar2, p_count number);

--
-- generates the javascript from meta data
--
procedure loadQuery;

--
-- renders the clone row headers
--
procedure renderCloneRow;


end wwv_flow_query_builder;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_OBJECT_FEED" as

--    Copyright (c) Oracle Corporation 2001 - 2005. All Rights Reserved.
--
--    DESCRIPTION
--      This package facilitates specifc functionality for the database object xml feeds.
--
--    SECURITY
--
--    NOTES
--
--    RUNTIME DEPLOYMENT: YES
--

  procedure getmoreObjects(
    --
    -- Prints a list of database objects. This list can be DIV, XML based or user entered tag type
    --  This should be called using the Application Process on Demand
    --
    -- Arguments:
    --    p_type    = The database object type that will be returned in the list
    --                e.g. TABLE VIEW TRIGGER ....
    --
    --    p_owner   = The Scheme to query agianst for the list of database objects
    --
    --    p_start   = An optional start integer so that a large list of objects can
    --                be subdivided for pagination or cascading load
    --
    --    p_stop    = An optional stop integer so that a large list of objects can
    --                be subdivided for pagination or cascading load
    --
    --    p_display  = picks output type either 'DIV' for html based applications or 'XML' for an XML feed,
    --
    --    p_session  = HTML Session ID,
    --
    --    p_include  = A place holder to add misc xml attributes to every object subelement as an xml attributes
    --
    --    p_onclick  = A class attribute applied to every object subelement as an xml attributes
    --
    --    p_class    = A class attribute applied to every object subelement as an xml attributes

    --
    -- example(s):
    --  wwv_flow_sw_object_feed.getmoreObjects(
    --    p_type    =>  'TABLE',
    --    p_owner   =>  'FLOWS_020000'
    --    );
    --
               p_type     in  varchar2 default  'TABLE',
               p_owner    in  varchar2 default  null,
               p_start    in  varchar2 default  1,
               p_stop     in  varchar2 default  200,
               p_display  in  varchar2 default  'DIV',
               p_session  in  number   default  null,
               p_include  in  varchar2 default  null,
               p_onclick  in  varchar2 default  null,
               p_class    in  varchar2 default  'dbaseObject'
               );

end wwv_flow_sw_object_feed;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LOAD_DATA" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2001 - 2014. All Rights Reserved.
--
-- NAME
--      wwv_flow_data_load.sql
--
--    SCRIPT ARGUMENTS
--      1:
--      2:
--      3:  Flow Schema Owner
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--     sleuniss   2/28/01      Created modified from tkyte
--     sleuniss   3/16/01      began work on dump_ascii
--     sleuniss   3/17/01      dump_ascii working with optional separator
--                             fixed load_data to work across schema
--     sleuniss   3/20/01      changed to dbms_sys_sql.parse_as
--     cbcho      01/21/02     Changed dump_ascii to accept p_enclosed_by parameter
--     cbcho      07/02/02     Added p_mime_header in dump_ascii
--     cbcho      09/23/2002   Added create_csv_collection
--     cbcho      09/24/2002   Added load_csv_data
--     cbcho      09/24/2002   Moved cleanout_column_name, is_number, is_date, build_sql, date_format from wwv_flow_load_excel_data
--     cbcho      09/26/2002   Fixed character buffer string too small bug in cleanout_column_name
--     cbcho      10/01/2002   Added p_inc_col_names option in dump_ascii
--     cbcho      01/16/2003   Added p_data_type, p_data_format in load_csv_data and build_sql to support data format (Bug 2756274)
--     cbcho      02/05/2003   Fixed bug not to drop table if the load is to existing table (Bug 2778057)
--     cbcho      04/01/2003   Bug 2861875: Added logic to accept globalization number format parameters
--     jkallman   08/01/2003   Add p_mime_charset to dump_ascii (Bug 3033754)
--     jkallman   08/03/2003   Added p_charset to create_csv_collection (Bug 3033754)
--     jkallman   08/03/2003   Added p_charset to load_csv_data (Bug 3033754)
--     cbcho      08/04/2003 - Added p_file_format to dump_ascii to support UNIX,DOS file format (Bug 3080891)
--     cbcho      08/05/2003 - Added p_load_type to build_sql (Bug 3044890)
--     cbcho      07/08/2004 - Added p_file_name to dump_ascii to pass table name as file name (Bug 3190734)
--     cbcho      08/10/2004 - Added p_load_id to load_csv_data
--     cbcho      08/12/2004 - Exposed g_number_format, function date_format
--     cbcho      05/19/2005 - Added valid_file_extension
--     cbcho      07/10/2005 - Added p_de_quote argument on build_sql to de quote during spreadsheet import only if the flag is Yes
--     cbcho      03/22/2006 - Added procedure display_etable_property, display_ntable_property
--     jstraub    06/28/2006 - Added p_schema so dump_ascii would correctly parse as proper schema (Bug 5359590)
--     cbcho      08/30/2007 - Added create_tab_info_collection
--     cbcho      08/31/2007 - Added procedure load_data
--     jkallman   02/04/2008 - Change names and values arguments as type sys.wwv_dbms_sql.vc_arr2
--     pmanirah   04/05/2012 - Changed build_sql to return a new parameter of p_types that hold the types of the columns to be uploaded
--     cneumuel   04/30/2014 - In create_csv_collection, load_csv_data: tag wwv_flow_file_objects$ with a file_type (bug #18659423)
--                           - Removed parse, word, load_data(p_id): dead code
--
--------------------------------------------------------------------------------

  g_number_format varchar2(4000);

  function valid_file_extension (
      p_filename in varchar2) return boolean
      ;

  function de_quote( p_str in varchar2, p_enc_by in varchar2 ) return varchar2
  ;

  function cleanout_column_name (
    p_column_name in varchar2
    ) return varchar2
    ;

  function is_number (
     p_string            in varchar2,
     p_currency          in varchar2 default '$',
     p_numeric_chars     in varchar2 default '.,'
     ) return boolean
     ;

  function is_date (
     p_string in varchar2
     ) return boolean
     ;

  function date_format (
   p_string in varchar2
   ) return varchar2
   ;

  procedure build_sql (
  p_line                   in varchar2,
  p_upload                 in wwv_flow_global.vc_arr2,
  p_schema                 in varchar2,
  p_table                  in varchar2,
  p_cnames                 in wwv_flow_global.vc_arr2,
  p_line_ctr               in number,
  --
  p_data_type              in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
  p_data_format            in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
  p_parsed_data_format     in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
  --
  p_separator              in varchar2 default chr(9),
  p_enclosed_by            in varchar2 default null,
  p_first_row_is_col_name  in boolean default false,
  --
  p_currency               in varchar2 default '$',
  p_numeric_chars          in varchar2 default '.,',
  p_load_type              in varchar2 default 'CSV',
  p_de_quote              in varchar2 default 'NO',
  --
  p_sql                    out varchar2,
  p_n                      out sys.wwv_dbms_sql.vc_arr2,
  p_r                      out sys.wwv_dbms_sql.vc_arr2,
  p_types                  out wwv_flow_global.vc_arr2
  )
  ;

  function  dump_ascii( p_query         in varchar2,
                        p_schema        in varchar2,
                        p_separator     in varchar2 default ',',
                        p_enclosed_by   in varchar2 default null,
                        p_inc_col_names in varchar2 default 'N',
                        p_mime_header   in varchar2 default 'application/text',
                        p_mime_charset  in varchar2 default null,
                        p_file_format   in varchar2 default 'UNIX',
                        p_file_name     in varchar2 default 'export')
  return number
  ;

  procedure create_tab_info_collection(
    p_clob                   in clob,
    p_collection_name        in varchar2 default null,
    p_load_type              in varchar2 default null,
    p_separator              in varchar2 default null,
    p_enclosed_by            in varchar2 default null,
    p_first_row_is_col_name  in boolean default false,
    p_currency               in varchar2 default '$',
    p_numeric_chars          in varchar2 default '.,'
    )
    ;

  procedure create_csv_collection (
   p_file_id               in number,
   p_separator             in varchar2 default ',',
   p_enclosed_by           in varchar2 default null,
   p_first_row_is_col_name in boolean default false,
   p_currency              in varchar2 default '$',
   p_numeric_chars         in varchar2 default '.,',
   p_charset               in varchar2 default null
   )
   ;

  procedure load_data (
    p_clob                  in clob,
    p_cnames                in wwv_flow_global.vc_arr2,
    p_upload                in wwv_flow_global.vc_arr2,
    p_schema                in varchar2,
    p_table                 in varchar2,
    --
    p_data_type             in wwv_flow_global.vc_arr2,
    p_data_format           in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_parsed_data_format    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    --
    p_separator             in varchar2 default ',',
    p_enclosed_by           in varchar2 default null,
    p_first_row_is_col_name in boolean default false,
    p_load_to               in varchar2 default 'EXIST' ,
    p_currency              in varchar2 default '$',
    p_numeric_chars         in varchar2 default '.,',
    p_load_id               in number default null,
    --
    p_file_id               in number default null,
    p_load_data_type        in varchar2 default null,
    p_load_type             in varchar2 default null
    )
    ;

  procedure load_csv_data (
   p_file_id               in number,
   p_cnames                in wwv_flow_global.vc_arr2,
   p_upload                in wwv_flow_global.vc_arr2,
   p_schema                in varchar2,
   p_table                 in varchar2,
   --
   p_data_type             in wwv_flow_global.vc_arr2,
   p_data_format           in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   p_parsed_data_format    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   --
   p_separator             in varchar2 default ',',
   p_enclosed_by           in varchar2 default null,
   p_first_row_is_col_name in boolean default false,
   p_load_to               in varchar2 default 'EXIST',
   p_currency              in varchar2 default '$',
   p_numeric_chars         in varchar2 default '.,',
   p_charset               in varchar2 default null,
   p_load_id               in number default null
   )
   ;

   procedure display_ntable_property (
    p_collection_name in varchar2
    );

   procedure display_etable_property (
    p_table_owner     in varchar2,
    p_table_name      in varchar2,
    p_collection_name in varchar2
    );
end wwv_flow_load_data;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_LOAD_EXCEL_DATA"
as


function table_exists (
  p_table_name  in varchar2,
  p_schema      in varchar2
  ) return boolean;


procedure get_table_info (
   p_string                 in varchar2,
   p_separator              in varchar2 default '\t',
   p_enclosed_by            in varchar2 default null,
   p_first_row_is_col_name  in boolean default false,
   p_currency               in varchar2 default '$',
   p_numeric_chars          in varchar2 default '.,',
   p_load_type              in varchar2 default 'EXCEL'
   );

procedure get_table_info (
   p_string                 in clob,
   p_separator              in varchar2 default '\t',
   p_enclosed_by            in varchar2 default null,
   p_first_row_is_col_name  in boolean default false,
   p_currency               in varchar2 default '$',
   p_numeric_chars          in varchar2 default '.,',
   p_load_type              in varchar2 default 'EXCEL'
   );

procedure create_table (
  p_schema        in varchar2,
  p_table_name    in varchar2,
  p_pk1           in varchar2,
  p_pk1_name      in varchar2,
  p_pk1_type      in varchar2,
  p_seq_name      in varchar2 default null,
  --
  p_cnames        in wwv_flow_global.vc_arr2,
  p_data_type     in wwv_flow_global.vc_arr2,
  p_upload        in wwv_flow_global.vc_arr2,
  p_max_length    in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr
  );

procedure load_excel_data (
   p_string                 in varchar2,
   p_cnames                 in wwv_flow_global.vc_arr2,
   p_upload                 in wwv_flow_global.vc_arr2,
   p_schema                 in varchar2,
   p_table                  in varchar2,
   --
   p_data_type              in wwv_flow_global.vc_arr2,
   p_data_format            in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   p_parsed_data_format     in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   --
   p_separator              in varchar2 default '\t',
   p_enclosed_by            in varchar2 default null,
   p_first_row_is_col_name  in boolean default false,
   p_load_to                in varchar2 default 'EXIST',
   p_currency               in varchar2 default '$',
   p_numeric_chars          in varchar2 default '.,',
   p_load_type              in varchar2 default 'EXCEL',
   p_load_id                in number default null
   );

procedure load_excel_data (
   p_string                 in clob,
   p_cnames                 in wwv_flow_global.vc_arr2,
   p_upload                 in wwv_flow_global.vc_arr2,
   p_schema                 in varchar2,
   p_table                  in varchar2,
   --
   p_data_type              in wwv_flow_global.vc_arr2,
   p_data_format            in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   p_parsed_data_format     in wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
   --
   p_separator              in varchar2 default '\t',
   p_enclosed_by            in varchar2 default null,
   p_first_row_is_col_name  in boolean default false,
   p_load_to                in varchar2 default 'EXIST',
   p_currency               in varchar2 default '$',
   p_numeric_chars          in varchar2 default '.,',
   p_load_type              in varchar2 default 'EXCEL',
   p_load_id                in number default null
   );

end wwv_flow_load_excel_data;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COPY_METADATA"
as
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--
--    DESCRIPTION
--      Used to subscribe and pull flow objects.
--
--    NOTES
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

procedure remove_page_reference_id (
    --
    -- This procedure removes reference id from page templates.
    --
    p_id in number
    );

procedure remove_region_reference_id (
    --
    -- This procedure removes reference id from region templates.
    --
    p_id in number
    );

procedure remove_list_reference_id (
    --
    -- This procedure removes reference id from list templates.
    --
    p_id in number
    );

procedure remove_report_reference_id (
    --
    -- This procedure removes reference id from report templates.
    --
    p_id in number
    );

procedure remove_field_reference_id (
    --
    -- This procedure removes reference id from field templates.
    --
    p_id in number
    );

procedure remove_popuplov_reference_id (
    --
    -- This procedure removes reference id from a popup LOV template.
    --
    p_id in number
    );

procedure remove_menu_reference_id (
    --
    -- This procedure removes reference id from a menu template.
    --
    p_id in number
    );

procedure remove_button_reference_id (
    --
    -- This procedure removes reference id from a button template.
    --
    p_id in number
    );

procedure remove_calendar_reference_id (
    --
    -- This procedure removes reference id from a calendar template.
    --
    p_id in number
    );
procedure remove_scheme_reference_id (
    --
    -- This procedure removes reference id from a security scheme.
    --
    p_id in number
    );

procedure remove_shortcut_reference_id (
    --
    -- This procedure removes reference id from a shortcut.
    --
    p_id in number
    );

procedure remove_navbar_reference_id (
    --
    -- This procedure removes reference id from a navbar.
    --
    p_id in number
    );

procedure remove_lov_reference_id (
    --
    -- This procedure removes reference id from a lov.
    --
    p_id in number
    );

procedure remove_authentication_ref_id (
    --
    -- This procedure removes reference id from an authentication.
    --
    p_id in number );

procedure remove_item_help_reference_id (
    --
    -- This procedure removes reference id from an item help
    --
    p_id in number
    );

procedure subscribe_page_template (
    --
    -- This procedure pulls content from the master template and
    -- copies it to the subscribing template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_region_template (
    --
    -- This procedure pulls content from the master region template and
    -- copies it to the subscribing region template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_list_template (
    --
    -- This procedure pulls content from the master list template and
    -- copies it to the subscribing list template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_report_template (
    --
    -- This procedure pulls content from the master report template and
    -- copies it to the subscribing report template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_field_template (
    --
    -- This procedure pulls content from the master field template and
    -- copies it to the subscribing field template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_popuplov_template (
    --
    -- This procedure pulls content from the master popup lov template and
    -- copies it to the subscribing popup lov template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_menu_template (
    --
    -- This procedure pulls content from the master menu template and
    -- copies it to the subscribing menu template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_button_template (
    --
    -- This procedure pulls content from the master button template and
    -- copies it to the subscribing button template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_calendar_template (
    --
    -- This procedure pulls content from the master calendar template and
    -- copies it to the subscribing calendar template.
    --
    p_master_template_id         in number,
    p_subscribing_template_id    in number
    );

procedure subscribe_security_scheme (
    --
    -- This procedure pulls content from the master security scheme and
    -- copies it to the subscribing security scheme.
    --
    p_master_scheme_id         in number,
    p_subscribing_scheme_id    in number
    );

procedure subscribe_shortcut (
    --
    -- This procedure pulls content from the master short cut and
    -- copies it to the subscribing short cut.
    --
    p_master_shortcut_id         in number,
    p_subscribing_shortcut_id    in number
    );

procedure subscribe_navbar (
    --
    -- This procedure pulls content from the master navbar and
    -- copies it to the subscribing navbar.
    --
    p_master_navbar_id         in number,
    p_subscribing_navbar_id    in number
    );

procedure subscribe_lov (
    --
    -- This procedure pulls content from the master lov and
    -- copies it to the subscribing lov.
    --
    p_master_lov_id         in number,
    p_subscribing_lov_id    in number
    );

procedure subscribe_authentication (
    --
    -- This procedure pulls content from the master authentication and
    -- copies it to the subscribing authentication.
    p_master_auth_id      in number,
    p_subscribing_auth_id in number );

procedure subscribe_item_help (
    --
    -- This procedure pulls content from the master item help and
    -- copies it to the subscribing item help.
    p_master_item_id         in number,
    p_subscribing_item_id    in number
    );

--
-- This procedure pulls content from the master theme style and
-- copies it to the subscribing theme style.
--
procedure subscribe_theme_style (
    p_master_theme_style_id      in number,
    p_subscribing_theme_style_id in number );

procedure push_page_template (
    --
    -- This procedure pushes content of the page template to
    -- all templates that reference this page template.
    --
    p_template_id in number
    );

procedure push_region_template (
    --
    -- This procedure pushes content of the region template to
    -- all templates that reference this region template.
    --
    p_template_id in number
    );

procedure push_list_template (
    --
    -- This procedure pushes content of the list template to
    -- all templates that reference this list template.
    --
    p_template_id in number
    );

procedure push_report_template (
    --
    -- This procedure pushes content of the report template to
    -- all templates that reference this report template.
    --
    p_template_id in number
    );

procedure push_field_template (
    --
    -- This procedure pushes content of the field template to
    -- all templates that reference this field template.
    --
    p_template_id in number
    );

procedure push_popuplov_template (
    --
    -- This procedure pushes content of the popup LOV template to
    -- all templates that reference this popup LOV template.
    --
    p_template_id in number
    );

procedure push_menu_template (
    --
    -- This procedure pushes content of the menu template to
    -- all templates that reference this menu template.
    --
    p_template_id in number
    );

procedure push_button_template (
    --
    -- This procedure pushes content of the button template to
    -- all templates that reference this button template.
    --
    p_template_id in number
    );

procedure push_calendar_template (
    --
    -- This procedure pushes content of the calendar template to
    -- all templates that reference this calendar template.
    --
    p_template_id in number
    );

procedure push_security_scheme (
    --
    -- This procedure pushes content of the security scheme to
    -- all security schemes that reference this security scheme.
    --
    p_scheme_id in number
    );

procedure push_shortcut (
    --
    -- This procedure pushes content of the short cut to
    -- all short cuts that reference this short cut.
    --
    p_shortcut_id in number
    );

procedure push_navbar (
    --
    -- This procedure pushes content of the navbar to
    -- all navbars that reference this navbar.
    --
    p_navbar_id in number
    );

procedure push_lov (
    --
    -- This procedure pushes content of the lov to
    -- all lovs that reference this lov.
    --
    p_lov_id in number
    );

procedure push_authentication (
    --
    -- This procedure pushes content of the authentication to
    -- all authentications that reference this authentication.
    --
    p_authentication_id in number );

procedure push_item_help (
    --
    -- This procedure pushes content of the item help to
    -- all item helps that reference this item help.
    --
    p_item_id in number
    );

--
-- This procedure pushes content of the theme style to
-- all theme styles that reference this theme style.
--
procedure push_theme_style (
    p_theme_style_id in number );

procedure refresh_page_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_region_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_report_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_list_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_field_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_popuplov_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_menu_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_button_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_calendar_template (
    --
    -- If the master template ID is not passed, get the master template ID
    -- and refresh subscribing template.
    --
    p_subscribing_template_id    in number
    );

procedure refresh_navbar (
    --
    -- If the master navbar ID is not passed, get the master navbar ID
    -- and refresh subscribing navbar.
    p_subscribing_navbar_id    in number
    );

procedure refresh_lov (
    --
    -- If the master LOV ID is not passed, get the master LOV ID
    -- and refresh subscribing LOV.
    --
    p_subscribing_lov_id   in number
    );

procedure refresh_shortcut (
    --
    -- If the master shortcut ID is not passed, get the master shortcut ID
    -- and refresh subscribing shortcut.
    --
    p_subscribing_shortcut_id    in number
    );

procedure refresh_security_scheme (
    --
    -- If the master security scheme ID is not passed, get the master security scheme ID
    -- and refresh subscribing security scheme.
    --
    p_subscribing_scheme_id   in number
    );

procedure refresh_authentication (
    --
    -- If the master authentication ID is not passed, get the master authentication ID
    -- and refresh subscribing authentication.
    --
    p_subscribing_auth_id in number );

procedure refresh_item_help (
    --
    -- If the master item help ITEM ID is not passed, get the master item help ITEM ID
    -- and refresh subscribing item help.
    --
    p_subscribing_item_id    in number
    );

--
-- If the master theme style ID is not passed, get the master theme style ID
-- and refresh subscribing theme style.
--
procedure refresh_theme_style (
    p_subscribing_theme_style_id in number );

end wwv_flow_copy_metadata;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COPY_UTIL"
as
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--
--    DESCRIPTION
--      Used to copy flow objects.
--
--    NOTES
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--
--
--==============================================================================
procedure copy_shortcut (
    p_copy_from_flow_id  in number,
    p_flow_id            in varchar2,
    p_from_shortcut_id   in number,
    p_to_shortcut_name   in varchar2,
    p_to_shortcut_id     in number default null);
--
--==============================================================================
procedure copy_security_scheme (
    p_copy_from_flow_id   in number,
    p_flow_id             in varchar2,
    p_from_scheme_id      in number,
    p_to_scheme_name      in varchar2,
    p_to_scheme_id        in number default null,
    p_subscribe           in boolean default false );
--
--==============================================================================
procedure copy_navbar (
    p_copy_from_flow_id   in number,
    p_flow_id             in varchar2,
    p_from_navbar_id      in number,
    p_to_navbar_name      in varchar2,
    p_to_navbar_id        in number default null );
--
--==============================================================================
procedure copy_authentication (
    p_copy_from_flow_id      in number,
    p_flow_id                in varchar2,
    p_from_authentication_id in number,
    p_to_authentication_name in varchar2,
    p_to_authentication_id   in number  default null,
    p_subscribe              in boolean default false );
--
end wwv_flow_copy_util;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TAB_MGR"
as

--
--
--
--  Copyright (c) Oracle Corporation 2000 - 2002. All Rights Reserved.
--
--    NAME
--      wwv_flow_tab_mgr
--
--    DESCRIPTION
--      Interface to update tabs
--
--    NOTES
--      All classes for this package are stored in the page header, not the css!!!
--      This is do to the highly specific nature of these classes.
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: NO
--
--

    procedure tabs(
        p_flow          in varchar2,
        p_session       in varchar2,
        p_img_prefix    in varchar2,
        p_current_stab  in out varchar2,
        p_current_page  in out varchar2,
        p_current_ptab  in varchar2 default null,
        p_color1        in varchar2 default '#9cadcc',
        p_color2        in varchar2 default '#ffffff',
        p_color3        in varchar2 default '#cccccc',
        p_color4        in varchar2 default '#000000'
    );

    procedure update_tab_pages(
        p_tab_id        in varchar2,
        p_tab_set       in varchar2,
        p_flow          in varchar2,
        p_tab_page      in varchar2,
        p_also_cur_for  in varchar2 default null
    );

    procedure move_tab_new_ptab(
        p_flow              in varchar2,
        p_tab_id            in varchar2,
        p_new_parent_tab    in varchar2
    );


    procedure move_tab_new_tabset(
        p_flow              in varchar2,
        p_tab_id            in varchar2,
        p_tabset            in varchar2,
        p_new_tabset        in varchar2 default null
    );


    end wwv_flow_tab_mgr;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GENERATE_DDL"
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--    NAME
--      generate_ddl.sql
--
--    DESCRIPTION
--      Used to generate DDL using dbms_metadata.
--
--    NOTES
--      This package will only compile in 9i and above.
--
--    SECURITY
--      Grant execute to Public.  Synonym is NOT availabe on wwv_flow_generate_ddl.
--      This package is invokers right package.
--      Flows owner needs SELECT_CATALOG_ROLE granted to run this package.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--
AUTHID CURRENT_USER
as

empty_vc_arr wwv_flow_global.vc_arr2;

procedure get_ddl (
    p_schema      in varchar2,
    p_object_type in varchar2,
    p_objects     in varchar2 default null,
    p_output_type in varchar2 default null
    );

procedure execute_get_ddl (
    p_schema       in varchar2,
    p_object_types in varchar2,
    p_objects      in varchar2 default null,
    p_output_type  in varchar2 default null,
    p_filename     in varchar2 default null,
    p_file_type    in varchar2 default 'sql',
    p_description  in varchar2 default null
    );

procedure execute_get_table_ddl (
    p_schema       in varchar2,
    p_table_name   in varchar2 default null
    );

end wwv_flow_generate_ddl;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_TABLE_DRILL" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--    NAME
--      table_drill.sql
--
--    DESCRIPTION
--      Given owner and table name this package generates report to drill up and drill down
--      based on the referential integrity.
--
--    MODIFIED (MM/DD/YYYY)
--     cbcho    09/05/2002 - Created
--     cbcho    09/16/2002 - Added build_view_sql
--     cbcho    09/18/2002 - Added p_include parameter
--     cbcho    09/19/2002 - Added draw_data_model
--     cbcho    09/20/2002 - Added p_type parameter
--     cbcho    02/26/2003 - Bug 2814129: Added p_show_drill in build_sql to conditionally show drill up and drill down links
--     klrice   02/02/2005 - Allow for page to be passed in
--     cneumuel 06/08/2012 - In build_sql, build_view_sql: added parameters to move code from 4500:{42,46} to package and fix sql injections (bug #14169394)
--
--------------------------------------------------------------------------------

empty_vc_arr wwv_flow_global.vc_arr2;

function build_sql (
    p_owner           varchar2,
    p_to_table        varchar2,
    p_type            varchar2 default 'TABLE',
    p_from_table      varchar2 default null,
    p_drill           varchar2 default null,
    p_rowid_item_name varchar2 default null,
    p_show_drill      varchar2 default 'Y',
    p_include         varchar2 default null,
    p_where_columns   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_where_values    wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_where_types     wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_order_columns   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_order_ascdesc   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr )
    return varchar2;

function build_view_sql (
    p_owner           varchar2,
    p_to_table        varchar2,
    p_type            varchar2 default 'TABLE',
    p_from_table      varchar2 default null,
    p_drill           varchar2 default null,
    p_rowid_item_name varchar2 default null,
    p_include         varchar2 default null,
    p_where_columns   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_where_values    wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_where_types     wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_order_columns   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr,
    p_order_ascdesc   wwv_flow_global.vc_arr2 default wwv_flow.empty_vc_arr )
    return varchar2;

procedure draw_data_model (
    p_owner       in varchar2,
    p_table_name  in varchar2,
    p_session     in number,
    p_page        in varchar2 default null,
    p_request     in varchar2 default null,
    p_clear_cache in varchar2 default null,
    p_item_oid    in varchar2 default null );

end wwv_flow_table_drill;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DOWNLOAD"
as
--  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
--
--
--    DESCRIPTION
--      Used to download flow source to favorite text editor.
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

procedure get_page_process_source (
    p_process_id in number
    );

end wwv_flow_download;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_COPY_PAGE"
as
--  Copyright (c) Oracle Corporation 1999 - 2003. All Rights Reserved.
--
--    DESCRIPTION
--      Copy page.
--
--    SECURITY
--      For use by flows user, not granted to public
--
--    RUNTIME DEPLOYMENT: YES
--
--    NOTES
--      This is called from the flow builder HTML designer.
--


empty_vc_arr wwv_flow_global.vc_arr2;

function change_page_id_in_branch (
    p_page_id_from             in number,
    p_page_id_to               in number,
    p_url                      in varchar2
    ) return varchar2;

function change_item_name (
    p_flow_id_from             in number,
    p_page_id_from             in number,
    p_flow_id_to               in number,
    p_page_id_to               in number,
    p_source                   in varchar2
    ) return varchar2;

function change_item_name (
    p_flow_id_from             in number,
    p_page_id_from             in number,
    p_flow_id_to               in number,
    p_page_id_to               in number,
    p_source                   in clob
    ) return varchar2;

--
-- Copy one flow plug and its items and buttons to another
-- Set p_clear_global_variables to clear the internal global variables. Should
-- be false when copying a page/application.
--
procedure a_region (
    p_flow_id_from           in number,
    p_page_id_from           in number,
    p_region_id_from         in number,
    p_flow_id_to             in number,
    p_page_id_to             in number,
    p_plug_name_to           in varchar2,
    p_parent_plug_id_to      in number   default null,
    p_display_seq_to         in number   default null,
    p_display_col_to         in number   default null,
    p_display_point_to       in varchar2 default null,
    p_new_region_title       in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_item_label         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_button_label       in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_copy_items             in boolean  default false,
    p_copy_buttons           in boolean  default false,
    p_copy_validations       in boolean  default false,
    p_copy_processes         in boolean  default false,
    p_copy_sub_regions       in boolean  default false,
    p_clear_global_variables in boolean  default true,
    p_region_name_to         in varchar2 default null);

procedure copy (
    p_flow_id_from             in number,
    p_page_id_from             in number,
    p_flow_id_to               in number,
    p_page_id_to               in number,
    p_page_name_to             in varchar2,
    --
    p_breadcrumb_id            in number default null,
    p_breadcrumb_name          in varchar2 default null,
    p_parent_id                in number default null,
    --
    p_new_region_title         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_item_label           in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_button_label         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_branch_value         in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_new_region_name          in wwv_flow_global.vc_arr2 default empty_vc_arr,
    --
    p_tab_set                  in varchar2 default null,
    p_tab_name                 in varchar2 default null, -- current tab name
    --
    p_auto_tab_set             in varchar2 default null,
    p_auto_tab_text            in varchar2 default null,
    p_auto_parent_tab_set      in varchar2 default null,
    p_auto_parent_tab_text     in varchar2 default null,
    --
    p_ui_type_id_to            in number default null
    );


procedure copy_from_other_app (
    p_flow_id_from             in number,
    p_page_id_from             in number,
    p_flow_id_to               in number,
    p_page_id_to               in number,
    p_page_name_to             in varchar2,
    --
    p_breadcrumb_id            in number default null,
    p_breadcrumb_name          in varchar2 default null,
    p_parent_id                in number default null,
    --
    p_tab_set                  in varchar2 default null,
    p_tab_name                 in varchar2 default null, -- current tab name
    --
    p_auto_tab_set             in varchar2 default null,
    p_auto_tab_text            in varchar2 default null,
    p_auto_parent_tab_set      in varchar2 default null,
    p_auto_parent_tab_text     in varchar2 default null,
    p_ui_type_id_to            in number default null
    );

procedure web_services (
    p_process_id_from in number,
    p_flow_id_from    in number,
    p_page_id_from    in number,
    p_process_id_to   in number,
    p_flow_id_to      in number,
    p_page_id_to      in number
    );

end wwv_flow_copy_page;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GENERATE_TABLE_API" IS


  procedure create_api (
    p_owner         in  varchar2,
    p_app_name      in  varchar2,
    p_table_name_01 in  varchar2 default null,
    p_table_name_02 in  varchar2 default null,
    p_table_name_03 in  varchar2 default null,
    p_table_name_04 in  varchar2 default null,
    p_table_name_05 in  varchar2 default null,
    p_table_name_06 in  varchar2 default null,
    p_table_name_07 in  varchar2 default null,
    p_table_name_08 in  varchar2 default null,
    p_table_name_09 in  varchar2 default null,
    p_table_name_10 in  varchar2 default null,
    p_action        in  varchar2 default 'SHOW'
  );


END wwv_flow_generate_table_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GEN_HINT"
is
-------------------------------------------------------------------------
-- Copyright (c) Oracle Corporation 2000 - 2010. All Rights Reserved.  --
--                                                                     --
-- DESCRIPTION                                                         --
-- Generate API calls to create User Interface Defaults for            --
-- table(s) in a schema and the attribute dictionary                                              --
--                                                                     --
-------------------------------------------------------------------------


g_id_offset    number := 0;
g_mime_shown   boolean := false;



procedure export (
    -- This procedure exports User Interface Defaults, Table Dictionary
    --
    -- p_schema.........Schema name
    -- p_format.........Output format UNIX, DOS
    -- p_commit.........Generate a commit statement at end of script (YES or NO)
    --
    p_schema                in varchar2,
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES',
    p_include_script_header in boolean  default true
    );


procedure export_attr_dict (
    -- This procedure exports User Interface Defaults, Attribute Dictionary
    --
    -- p_format.........Output format UNIX, DOS
    -- p_commit.........Generate a commit statement at end of script (YES or NO)
    --
    p_format                in varchar2 default 'UNIX',
    p_commit                in varchar2 default 'YES',
    p_include_script_header in boolean  default true
    );


end wwv_flow_gen_hint;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_XLIFF" as


procedure generate_translation_document(
    p_flow_id             in number,
    p_page_id             in number default null,
    p_translation_flow_id in number,
    p_include_target      in varchar2 default 'N',
    p_include_all         in varchar2 default 'N',
    p_item_help           in varchar2 default null );

procedure print_translation_document(
    p_flow_id             in number,
    p_page_id             in number default null,
    p_translation_flow_id in number,
    p_include_target      in varchar2 default 'N',
    p_include_all         in varchar2 default 'N',
    p_download            in varchar2 default 'Y',
    p_item_help           in varchar2 default null );

procedure apply_xliff_translations(
    p_flow_id             in number,
    p_translation_flow_id in number,
    p_clob                in clob );

procedure apply_xliff_file(
    p_flow_id             in number,
    p_translation_flow_id in number,
    p_file_id             in number );

function get_translation_document(
    p_flow_id             in number,
    p_page_id             in number default null,
    p_translation_flow_id in number,
    p_include_target      in varchar2 default 'N',
    p_include_all         in varchar2 default 'N',
    p_item_help           in varchar2 default null )
return blob;

end wwv_flow_xliff;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CREATE_MODEL_APP"
as
--  Copyright (c) Oracle Corporation 2005. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package creates an application on multiple tables based on information from following tables:
--      WWV_FLOW_MODELS,WWV_FLOW_MODEL_PAGES,WWV_FLOW_MODEL_PAGE_COLS
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

g_flow_id        number := null;
g_home_page_id   number := null;

procedure create_modules (
    p_flow_id                    in number,
    p_model_id                   in number,
    p_create_tabs                in varchar2 default 'SINGLE_LEVEL_TABS',
    p_authentication             in varchar2 default null,
    p_flow_language              in varchar2 default null,
    p_flow_language_derived_from in varchar2 default null,
    p_date_format                in varchar2 default null,
    p_date_time_format           in varchar2 default null,
    p_timestamp_format           in varchar2 default null,
    p_timestamp_tz_format        in varchar2 default null,
    p_copy_from_theme_id         in number   default null,
    p_copy_from_theme_flow_id    in number   default null,
    p_copy_from_flow_id          in number   default null,
    p_copy_option                in varchar2 default null
    );

end wwv_flow_create_model_app;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DATA_QUICK_FLOW"
as
--  Copyright (c) Oracle Corporation 2004. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package creates application on a table from spreadsheet to finished application.
--
--    NOTES
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--


g_flow_id   number := null;
g_page_id   number := null; -- report page
g_run_link  varchar2(32767) := null;


procedure create_modules (
    p_owner                  in varchar2,
    p_table_name             in varchar2,
    -- used only for quick app on table in read write mode
    p_table_pk_column_name   in varchar2 default null,
    p_table_pk_src_type      in varchar2 default null,
    p_table_pk_src           in varchar2 default null,
    p_table_pk2_column_name  in varchar2 default null,
    p_table_pk2_src_type     in varchar2 default null,
    p_table_pk2_src          in varchar2 default null,
    -- used only for quick app on table in read write mode
    p_create_type            in varchar2 default 'NEW',
    p_create_mode            in varchar2 default 'RW',
    p_save_ui_default        in varchar2 default 'Y',
    p_flow_name              in varchar2 default 'Quick Flow',
    p_singular_name          in varchar2 default null,
    p_plural_name            in varchar2 default null,
    p_collection             in varchar2 default 'EXCEL_IMPORT',
    p_group_by               in varchar2 default null,
    p_chart_type             in varchar2 default 'PIE',
    p_report_type            in varchar2 default 'CLASSIC',
    p_aggregate_by           in varchar2 default null,
    p_aggregate_function     in varchar2 default null,
    p_string                 in clob default empty_clob(),
    p_file_name              in varchar2 default null,
    p_file_charset           in varchar2 default null,
    p_theme                  in varchar2 default null,
    p_separator              in varchar2 default '\t',
    p_enclosed_by            in varchar2 default null,
    p_currency               in varchar2 default '$',
    p_numeric_chars          in varchar2 default '.,',
    p_first_row_is_col_name  in boolean default false,
    p_load_id                in number default null,
    p_authentication         in varchar2 default 'Application Express'
    );

end wwv_flow_data_quick_flow;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_THEME_FILES"
as
procedure find_template_files (
    p_flow_id              in number,
    p_theme                in number   default null,
    p_show_templates       in varchar2 default 'N',
    p_show_page_components in varchar2 default 'N',
    p_show_components      in varchar2 default 'N',
    p_show_gif             in varchar2 default 'N',
    p_show_jpg             in varchar2 default 'N',
    p_show_png             in varchar2 default 'N',
    p_show_css             in varchar2 default 'N',
    p_show_js              in varchar2 default 'N',
    p_show_swf             in varchar2 default 'N',
    p_show_ico             in varchar2 default 'N'
    )
    ;

procedure find_css_classes (
    p_flow_id              in number,
    p_theme                in number   default null,
    p_show_templates       in varchar2 default 'N',
    p_show_page_components in varchar2 default 'N',
    p_show_components      in varchar2 default 'N')
    ;

procedure find_substitution_strings (
    p_flow_id              in number,
    p_theme                in number   default null)
    ;

procedure find_object_dependencies (
   p_flow_id      in number,
   p_page_id      in number default null)
   ;

function get_theme_image_name (
   p_id           in number)
   return         varchar2
   ;

end wwv_flow_theme_files;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SESSION_MON"
as
--  Copyright (c) Oracle Corporation 1999 - 2005. All Rights Reserved.
--
--    DESCRIPTION
--      Session monitoring utility package
--
--    SECURITY
--      NOT Publicly executable.
--
--
--    RUNTIME DEPLOYMENT: YES
--

    procedure populate_stats_array(p_sid in number, p_inst_id in number);

    procedure populate_sys_stats_array(p_mode in varchar2 default 'REPORT');

    function highlight_plan_ind_cols(
        p_object_owner  in  varchar2,
        p_object_name   in  varchar2,
        p_string        in  varchar2)
    return varchar2;

end wwv_flow_session_mon;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_SW_PAGE_CALLS"
is

procedure edit_row (p_object_name in varchar2,p_ob_schema in varchar2,p_id in varchar2);
procedure do_compile(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2);
procedure disable_index(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2);
procedure rebuild_index(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2);
procedure disable_trigger(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2);
procedure enable_trigger(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2);
procedure sql_results(p_sql_command2 in varchar2, p_bind_vals in varchar2, p_schema in varchar2);
function restore_object(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2) return varchar2;
function purge_object(p_object_name in varchar2,p_object_owner in varchar2,p_object_type in varchar2) return varchar2;
function purge_recyclebin(p_object_owner in varchar2) return varchar2;
function run_ddl (p_pk1 in varchar2,p_pk_type in varchar2,p_pk2 in varchar2,p_name in varchar2,
                       p_ob_schema in varchar2, p_pk1_name in varchar2,p_sequence in varchar2) return varchar2;
function test_dblink(p_sql in varchar2,p_ob_schema in varchar2) return varchar2;
procedure update_comment(p_owner in varchar2,p_table_name in varchar2,p_table_comment in varchar2);

end wwv_flow_sw_page_calls;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WIZ_CONFIRM" as
--  Copyright (c) Oracle Corporation 2006-2011. All Rights Reserved.
--
--    DESCRIPTION
--     This package displays wizard confirmation pages.
--
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--

procedure copy_application (
    p_old_app_id      in number default null,
    p_old_app_name    in varchar2 default null,
    p_new_app_id      in number default null,
    p_new_app_name    in varchar2 default null,
    p_copy_deployment in varchar2 default 'N'
    );

procedure create_application (
    p_application_id      in number   default null,
    p_application         in varchar2 default null,
    p_application_name    in varchar2 default null,
    p_schema              in varchar2 default null,
    p_language            in varchar2 default null,
    p_authentication      in varchar2 default null,
    p_create_tabs         in varchar2 default null,
    p_shared_components   in varchar2 default null,
    p_copy_options        in varchar2 default null,
    p_copy_from_theme_id  in number   default null,
    p_theme_app_id        in number   default null,
    p_show_title_message  in varchar2 default 'Y');

procedure create_form_on_ws_rpt (
    p_flow_id            in number default null,
    p_region_template    in number default null,
    p_region_template2   in number default null,
    p_report_template    in number default null,
    p_page_id            in number default null,
    p_page_name          in varchar2 default null,
    p_tab_set            in varchar2 default null,
    p_tab_text           in varchar2 default null,
    p_region_name        in varchar2 default null,
    p_region_name2       in varchar2 default null,
    p_ws_id              in number default null,
    p_operation_id       in number default null,
    p_collection_name    in varchar2 default null,
    p_array              in number default null);

procedure create_standard_tab (
    p_flow_id                      in number default null,
    p_new_parent_tabset            in varchar2 default null,
    p_new_parent_tab_text          in varchar2 default null,
    p_parent_tab_set               in varchar2 default null,
    p_tab_set_choice               in varchar2 default null,
    p_tab_set                      in varchar2 default null,
    p_new_tab_display_text         in varchar2 default null,
    p_tab_sequence                 in varchar2 default null,
    p_current_page                 in varchar2 default null,
    p_current_image                in varchar2 default null,
    p_non_current_page             in varchar2 default null,
    p_image_attributes             in varchar2 default null,
    p_display_condition            in varchar2 default null,
    p_condition_type               in varchar2 default null,
    p_display_condition_text       in varchar2 default null,
    p_build_option                 in varchar2 default null);


procedure create_acl (
    p_flow_id     in number default null,
    p_page_id     in number default null,
    p_tab_options in varchar2 default null,
    p_tab_set     in varchar2 default null,
    p_tab_name    in varchar2 default null,
    p_tab_text    in varchar2 default null);


procedure create_query_and_update (
    p_flow_id            in number default null,
    p_columns            in varchar2 default null,
    p_rpt_select_list   in varchar2 default null,
    p_insert             in varchar2 default null,
    p_update             in varchar2 default null,
    p_delete             in varchar2 default null,
    p_rpt_page_id        in number default null,
    p_rpt_page_name      in varchar2 default null,
    p_rpt_implementation in varchar2 default null,
    p_rpt_tab_set        in varchar2 default null,
    p_rpt_tab_text       in varchar2 default null,
    p_form_page_id       in number default null,
    p_form_page_name     in varchar2 default null,
    p_table_owner        in varchar2 default null,
    p_table_name         in varchar2 default null,
    p_pk1                in varchar2 default null,
    p_pk2                in varchar2 default null,
    p_rv                 in varchar2 default null,
    p_where_clause       in varchar2 default null);

procedure create_tree (
    p_flow_id          in number default null,
    p_region_template  in number default null,
    p_start_option     in varchar2 default null,
    p_owner            in varchar2 default null,
    p_table_name       in varchar2 default null,
    p_id               in varchar2 default null,
    p_pid              in varchar2 default null,
    p_name             in varchar2 default null,
    p_start_item       in varchar2 default null,
    p_start_value      in varchar2 default null,
    p_link_option      in varchar2 default null,
    p_link_page_id     in number default null,
    p_link_item        in varchar2 default null,
    p_where            in varchar2 default null,
    p_order_by         in varchar2 default null,
    p_page_id          in number default null,
    p_page_name        in varchar2 default null,
    p_tab_set          in varchar2 default null,
    p_tab_text         in varchar2 default null,
    p_region_name      in varchar2 default null,
    p_tree_name        in varchar2 default null,
    p_tree_type        in varchar2 default null,
    p_max_levels       in number default null,
    p_tooltip          in varchar2 default null,
    p_icon             in varchar2 default null);

procedure create_structured_report (
    p_flow_id         in number default null,
    p_report_template in number default null,
    p_region_template in number default null,
    p_sorting         in varchar2 default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_region_name     in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null);

procedure  create_demo_app (
    p_schema   in varchar2 default null,
    p_demo_app in varchar2 default null);

procedure create_sql_report (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_region_template in number default null,
    p_report_template in number default null,
    p_tab_set         in varchar2 default null,
    p_tab_name        in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_region_name     in varchar2 default null,
    p_region_column   in varchar2 default null,
    p_col_headings    in varchar2 default null,
    p_max_columns     in varchar2 default null,
    p_max_rows        in varchar2 default null,
    p_break_cols      in varchar2 default null,
    p_csv_output      in varchar2 default null,
    p_csv_text        in varchar2 default null,
    p_print_output    in varchar2 default null,
    p_print_label     in varchar2 default null,
    p_print_format    in varchar2 default null,
    p_enable_sorting  in varchar2 default null,
    p_enable_search   in varchar2 default null);

procedure create_page (
    p_flow_id    in number default null,
    p_page_id    in number default null,
    p_page_name  in varchar2 default null,
    p_page_title in varchar2 default null );

procedure create_global_page (
    p_flow_id              in number default null) ;

procedure copy_page_other_app (
    p_flow_id_from         in number default null,
    p_page_id_from         in number default null,
    p_flow_id_to           in number default null,
    p_page_id_to           in number default null,
    p_page_name_to         in varchar2 default null,
    --
    p_new_parent_tabset    in varchar2 default null,
    p_new_parent_tab_text  in varchar2 default null,
    p_parent_tab_set       in varchar2 default null,
    p_tab_set_choice       in varchar2 default null,
    p_tabset               in varchar2 default null,
    p_new_tab_display_text in varchar2 default null,
    p_breadcrumb_id        in number default null,
    p_breadcrumb_name      in varchar2 default null,
    p_parent_breadcrumb    in varchar2 default null
    );
procedure create_form_on_table (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_columns         in varchar2 default null,
    p_region_template in number default null,
    p_insert          in varchar2 default null,
    p_update          in varchar2 default null,
    p_delete          in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_region_name     in varchar2 default null,
    p_schema          in varchar2 default null,
    p_table_name      in varchar2 default null,
    p_pk1             in varchar2 default null,
    p_pk2             in varchar2 default null,
    p_rv              in varchar2 default null);

procedure create_wizard (
    p_flow_id              in number default null,
    p_region_template      in number default null,
    p_info_region          in varchar2 default null,
    p_info_region_template in number default null,
    p_default_info_text    in varchar2 default null,
    p_cancel               in varchar2 default null,
    p_finish               in varchar2 default null,
    p_previous             in varchar2 default null,
    p_next                 in varchar2 default null,
    p_cancel_branch        in varchar2 default null,
    p_finish_branch        in varchar2 default null);

procedure create_breadcrumb_region (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_region_type     in varchar2 default null,
    p_region_template in number default null,
    p_menu_template   in number default null,
    p_menu_template2  in number default null,
    p_parent_menu     in number default null,
    p_menu_text       in varchar2 default null,
    p_display_point   in varchar2 default null);

procedure copy_page (
    p_flow_id              in number default null,
    p_new_parent_tabset    in varchar2 default null,
    p_new_parent_tab_text  in varchar2 default null,
    p_parent_tab_set       in varchar2 default null,
    p_tab_set_choice       in varchar2 default null,
    p_tabset               in varchar2 default null,
    p_new_tab_display_text in varchar2 default null,
    p_copy_to_page_id      in number default null,
    p_copy_to_page_name    in varchar2 default null);

procedure create_auth_scheme (
    p_invalid_sess_target     in varchar2 default null,
    p_invalid_session_url     in varchar2 default null,
    p_invalid_session_page    in varchar2 default null,
    p_name                    in varchar2 default null,
    p_pg_sentry_function      in varchar2 default null,
    p_session_verify_function in varchar2 default null,
    p_pre_auth_process        in varchar2 default null,
    p_auth_type               in varchar2 default null,
    p_auth_function           in varchar2 default null,
    p_ldap_host               in varchar2 default null,
    p_ldap_port               in varchar2 default null,
    p_ldap_string             in varchar2 default null,
    p_ldap_username_edit      in varchar2 default null,
    p_post_auth_process       in varchar2 default null,
    p_cookie_name             in varchar2 default null,
    p_cookie_path             in varchar2 default null,
    p_cookie_domain           in varchar2 default null,
    p_use_secure_cookie_yn    in varchar2 default null,
    p_logout_url              in varchar2 default null);

procedure regular_exp;

procedure create_master_detail (
    p_flow_id      in number default null,
    p_master_owner in varchar2 default null,
    p_master_table in varchar2 default null,
    p_detail_owner in varchar2 default null,
    p_detail_table in varchar2 default null,
    p_master_sort  in varchar2 default null,
    p_tab_set      in varchar2 default null,
    p_tab_text     in varchar2 default null,
    p_layout       in varchar2 default null,
    p_include_master_rpt in varchar2 default 'Y');

procedure create_form_on_ws (
    p_flow_id            in number default null,
    p_region_template_id in number default null,
    p_page_id            in number default null,
    p_page_name          in varchar2 default null,
    p_tab_set            in varchar2 default null,
    p_tab_text           in varchar2 default null,
    p_region_name        in varchar2 default null,
    p_ws_id              in number default null,
    p_operation_id       in number default null);

procedure create_html_chart (
    p_flow_id     in number default null,
    p_region_id   in number default null,
    p_page_id     in number default null,
    p_page_name   in varchar2 default null,
    p_tab_set     in varchar2 default null,
    p_tab_text    in varchar2 default null,
    p_region_name in varchar2 default null,
    p_chart_sql   in varchar2 default null,
    p_axis        in varchar2 default null,
    p_scale       in varchar2 default null,
    p_chart_type  in varchar2 default null,
    p_num_mask    in varchar2 default null);

procedure create_monthly_calendar (
    p_flow_id     in number default null,
    p_region_id   in number default null,
    p_page_id     in number default null,
    p_page_name   in varchar2 default null,
    p_tab_set     in varchar2 default null,
    p_tab_text    in varchar2 default null,
    p_region_name in varchar2 default null,
    p_owner       in varchar2 default null,
    p_table       in varchar2 default null,
    p_date_col    in varchar2 default null,
    p_display     in varchar2 default null,
    p_select_rpt_type in varchar2 default null,
    p_display_type in varchar2 default null);

procedure create_tabular_form (
    p_flow_id      in number default null,
    p_page_id      in number default null,
    p_page_name    in varchar2 default null,
    p_region_title in varchar2 default null,
    p_tab_set      in varchar2 default null,
    p_tab_text     in varchar2 default null,
    p_owner        in varchar2 default null,
    p_table_name   in varchar2 default null,
    p_pk1          in varchar2 default null,
    p_pk2          in varchar2 default null,
    p_columns      in varchar2 default null,
    p_upd_cols     in varchar2 default null);

procedure delete_list_region_warning (
    p_flow_id            in number default null,
    p_session_id         in number default null,
    p_region_id          in number default null,
    p_region_source_type in varchar2 default null);

procedure create_form_on_sp (
    p_flow_id            in number default null,
    p_page_id            in number default null,
    p_page_name          in varchar2 default null,
    p_tab_set            in varchar2 default null,
    p_tab_text           in varchar2 default null,
    p_region_template_id in number default null,
    p_region_name        in varchar2 default null,
    p_owner              in varchar2 default null,
    p_procedure          in varchar2 default null);

procedure create_svg_chart (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_region_template in number default null,
    p_region_name     in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_chart_type      in varchar2 default null);

procedure create_flash_chart (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_region_template in number default null,
    p_region_name     in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_chart_type      in varchar2 default null);

procedure create_form_on_query (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_region_template in number default null,
    p_region_name     in varchar2 default null,
    p_query           in varchar2 default null);

procedure select_rpt_template (
    p_theme         in number default null,
    p_checked_items in varchar2 default null);

procedure create_summary_page (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_text        in varchar2 default null,
    p_region_name     in varchar2 default null,
    p_region_template in varchar2 default null);

procedure create_success_page (
    p_success_msg     in varchar2 default null);

procedure create_warning_page (
    p_title           in varchar2 default null,
    p_warning_msg     in varchar2 default null);

procedure migrate_svg_to_html5 (
    p_flow_id         in number,
    p_page_id         in number,
    p_region_id       in number);

procedure structured_query_condition;

procedure create_dynamic_query (
    p_flow_id         in number default null,
    p_page_id         in number default null,
    p_page_name       in varchar2 default null,
    p_region_template in number default null,
    p_region_name     in varchar2 default null,
    p_tab_set         in varchar2 default null,
    p_tab_name        in varchar2 default null,
    p_tab_text        in varchar2 default null);

procedure create_region_plugin_page (
    p_flow_id     in number,
    p_page_id     in number,
    p_page_name   in varchar2,
    p_region_name in varchar2,
    p_tab_set     in varchar2,
    p_tab_name    in varchar2,
    p_tab_label   in varchar2 );

procedure change_interactive_rpt_region (
    p_flow_id         in number,
    p_region_id       in number,
    p_region_source   in varchar2 default null);

procedure migrate_flash_chart (
    p_flow_id         in number,
    p_page_id         in number,
    p_region_id       in number,
    p_chart_rendering in varchar2);

procedure migrate_html_to_html5 (
    p_flow_id         in number,
    p_page_id         in number,
    p_region_id       in number);

procedure create_data_load_wizard(
    p_flow_id               in number default null,
    --
    p_name                  in varchar2,
    p_owner                 in varchar2 default null,
    p_table_name            in varchar2 default null,
    p_exists                in varchar2 default 'no',
    --
    p_region_template       in number default null,
    --
    p_tab_set               in varchar2 default 'No Tab Set Selected',
    p_tab_name              in varchar2 default null,
    p_tab_label             in varchar2 default null,
    --
    p_page_label_step_1     in varchar2,
    p_page_label_step_2     in varchar2,
    p_page_label_step_3     in varchar2,
    p_page_label_step_4     in varchar2,
    --
    p_page_step_1           in number,
    p_page_step_2           in number,
    p_page_step_3           in number,
    p_page_step_4           in number,
    --
    p_page_next_label       in varchar2 default 'NEXT',
    p_page_previous_label   in varchar2 default 'PREVIOUS',
    p_page_cancel_label     in varchar2 default 'CANCEL',
    p_page_cancel_branch	in varchar2 default '1',
    p_page_submit_label     in varchar2 default 'SUBMIT',
    p_page_submit_branch	in varchar2 default '1');

procedure create_app_from_template (
    p_old_app_id         in number default null,
    p_old_app_name       in varchar2 default null,
    p_new_app_id         in number default null,
    p_new_app_name       in varchar2 default null,
    p_schema             in varchar2 default null,
    p_language           in varchar2 default null,
    p_authentication     in varchar2 default null,
    p_create_tabs        in varchar2 default null,
    p_shared_components  in varchar2 default null,
    p_copy_options       in varchar2 default null,
    p_theme              in varchar2 default null,
    p_theme_id           in number   default null,
    p_copy_deployment    in varchar2 default 'N',
    p_install_deployment in varchar2 default 'N',
    p_app_type           in varchar2 default 'DATABASE'
    );

procedure create_instant_application (
    p_application_id      in number   default null,
    p_application         in varchar2 default null,
    p_application_name    in varchar2 default null,
    p_schema              in varchar2 default null,
    p_language            in varchar2 default null,
    p_authentication      in varchar2 default null,
    p_create_tabs         in varchar2 default null,
    p_shared_components   in varchar2 default null,
    p_copy_options        in varchar2 default null,
    p_theme               in varchar2 default null,
    p_theme_id            in number   default null,
    p_show_title_message  in varchar2 default 'Y');


end wwv_flow_wiz_confirm;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_PAGE_MAP"
as
function page_type (
   p_application_id in number,
   p_page_id in number)
return varchar2;

procedure set_page (
   p_application_id in number,
   p_page_id        in number);

function page_list (
   p_application in number,
   p_string      in varchar2)
   return varchar2;

procedure set_current_application (
   p_application_id in number,
   p_date           in date default null);

end wwv_flow_page_map;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DRAG_LAYOUT" AS

procedure show_layout_region (
  p_page	 in number,
  p_flow	 in number,
  p_session	 in number,
  p_region	 in number,
  p_items_id     in varchar,
  p_items_delete in varchar,
  p_request      in varchar
);

END wwv_flow_drag_layout;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DATALOAD_XML" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2006. All Rights Reserved.
--
-- NAME
--      wwv_flow_dataload_xml.sql
--
--    DESCRIPTION
--      XML Utility routines for the data loader.
--
--    NOTE
--      This package will ONLY compile in 9i due to reference to sys.dbms_xmlgen pkg.
--
--    NOTES
--      This package has various procedures and functions for
--      accepting xml datagrams for loading into tables, and for
--      exporting xml datagrams from sql queries.
--
--    MODIFIED   (MM/DD/YYYY)
--      cbcho     04/18/2002 - Retrieved missing package from Oracle Platform
--      tmuth     05/02/2002 - Changed default values of p_skiprows to match pkg spec (wouldn't compile in 9i)
--      cbcho     07/19/2002 - Removed p_dateformat,p_xmlcase from getQueryXmlPage and getQueryXml
--      mhichwa   05/16/2006 - Added where clause
--      cneumuel  08/08/2012 - Removed empty_vc_arr, load_table, getQueryXml (bug #14053241)
--                           - Renamed getQueryXmlPage to download_xml, and moved code from process in 4300:90 to procedure body, code cleanup (binds, wwv_flow_dynamic_exec)
--
--------------------------------------------------------------------------------

----------------------------------------------------------------------------
-- E X P O R T   R O U T I N E S
--

procedure download_xml (
    p_to_file         in varchar2,
    p_schema          in varchar2,
    p_table           in varchar2,
    p_columns         in wwv_flow_global.vc_arr2,
    p_skiprows        in number   default 0,
    p_maxrows         in number   default NULL,
    p_where           in varchar2 default null );


end wwv_flow_dataload_xml;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."APEX_UI_DEFAULT_UPDATE" as

--  Copyright (c) Oracle Corporation 2008. All Rights Reserved.
--
--    NAME
--      apex_ui_default_update.sql
--
--    DESCRIPTION
--      API to allow update to select attributes via mechanism other than APEX.
--
--    NOTES
--      Within upd_table, upd_group, upd_column, and upd_ad_column, to set attribute to null, pass in 'null%'
--
--    INTERNATIONALIZATION
--      No known issues
--
--    MULTI-CUSTOMER
--      Because UI Defaults are schema specific, there is no SGID check
--      These can only be run for the current user
--

procedure upd_form_region_title (
    p_table_name            in varchar2,
    p_form_region_title     in varchar2 default null
    );

procedure upd_report_region_title (
    p_table_name            in varchar2,
    p_report_region_title   in varchar2 default null
    );

procedure upd_label (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_label                 in varchar2 default null
    );

procedure upd_item_help (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_help_text             in varchar2 default null
    );

procedure upd_display_in_form (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_display_in_form       in varchar2
    );

procedure upd_display_in_report (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_display_in_report     in varchar2
    );

procedure upd_item_display_width (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_display_width         in number
    );

procedure upd_item_display_height (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_display_height        in number
    );

procedure upd_report_alignment (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_report_alignment      in varchar2
    );

procedure upd_item_format_mask (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_format_mask           in varchar2 default null
    );

procedure upd_report_format_mask (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_format_mask           in varchar2 default null
    );

-- new

procedure synch_table (
    p_table_name            in varchar2
    );

procedure upd_table (
    p_table_name            in varchar2,
    p_form_region_title     in varchar2 default null,
    p_report_region_title   in varchar2 default null
    );

procedure upd_group (
    p_table_name            in varchar2,
    p_group_name            in varchar2,
    p_new_group_name        in varchar2 default null,
    p_description           in varchar2 default null,
    p_display_sequence      in varchar2 default null
    );

procedure upd_column (
    p_table_name            in varchar2,
    p_column_name           in varchar2,
    p_group_id              in varchar2  default null,
    p_label                 in varchar2  default null,
    p_help_text             in varchar2  default null,
    p_display_in_form       in varchar2  default null,
    p_display_seq_form      in varchar2  default null,
    p_mask_form             in varchar2  default null,
    p_default_value         in varchar2  default null,
    p_required              in varchar2  default null,
    p_display_width         in varchar2  default null,
    p_max_width             in varchar2  default null,
    p_height                in varchar2  default null,
    p_display_in_report     in varchar2  default null,
    p_display_seq_report    in varchar2  default null,
    p_mask_report           in varchar2  default null,
    p_alignment             in varchar2  default null
    );

procedure del_table (
   p_table_name            in varchar2
   );

procedure del_group (
   p_table_name            in varchar2,
   p_group_name            in varchar2
   );

procedure del_column (
   p_table_name             in varchar2,
   p_column_name            in varchar2
   );

procedure add_ad_column (
    p_column_name           in  varchar2,
    p_label                 in  varchar2  default null,
    p_help_text             in  varchar2  default null,
    p_format_mask           in  varchar2  default null,
    p_default_value         in  varchar2  default null,
    p_form_format_mask      in  varchar2  default null,
    p_form_display_width    in  number    default null,
    p_form_display_height   in  number    default null,
    p_form_data_type        in  varchar2  default null,
    p_report_format_mask    in  varchar2  default null,
    p_report_col_alignment  in  varchar2  default null,
    p_syn_name1             in  varchar2  default null,
    p_syn_name2             in  varchar2  default null,
    p_syn_name3             in  varchar2  default null
    );

procedure upd_ad_column (
    p_column_name           in varchar2,
    p_new_column_name       in varchar2  default null,
    p_label                 in varchar2  default null,
    p_help_text             in varchar2  default null,
    p_format_mask           in varchar2  default null,
    p_default_value         in varchar2  default null,
    p_form_format_mask      in varchar2  default null,
    p_form_display_width    in varchar2  default null,
    p_form_display_height   in varchar2  default null,
    p_form_data_type        in varchar2  default null,
    p_report_format_mask    in varchar2  default null,
    p_report_col_alignment  in varchar2  default null
    );

procedure add_ad_synonym (
   p_column_name        in varchar2,
   p_syn_name           in varchar2
   );

procedure upd_ad_synonym (
    p_syn_name           in varchar2,
    p_new_syn_name       in varchar2  default null
    );

procedure del_ad_column (
    p_column_name           in varchar2
    );

procedure del_ad_synonym (
    p_syn_name           in varchar2
    );

end apex_ui_default_update;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."APEX_MIG_PROJECTS_UPDATE" as

--  Copyright (c) Oracle Corporation 2008. All Rights Reserved.
--
--    NAME
--      apex_mig_projects_update.sql
--
--    DESCRIPTION
--      API to allow update to select attributes via mechanism other than APEX.
--
--    NOTES
--
--    INTERNATIONALIZATION
--      No known issues
--
--    MULTI-CUSTOMER
--      Because UI Defaults are schema specific, there is no SGID check
--      These can only be run for the current user
--

----------------------------------------------------------------------------------------------------------------
-- upd_mig_rev_forms - to update APEX_040000.WWV_MIG_REV_FORMS table
--    p_project_id:      Project ID of existing Migration Project
--    p_dbid:            Database ID associated with the original MS Access database
--    p_formid:          Unique ID associated with the original MS Access Form
--    p_workspace_id:    Workspace ID associated with the Migration Project
--    p_source_name:     Name of the source object associated with the Form. A form can have 4 types of source:
--                             TABLE:     pass in migrated Oracle Table Name
--                             QUERY:     pass in migrated Oracle View Name
--                             SQL Query: pass in NULL (this is the default)
--                             NULL:      pass in NULL, as Form has no source object associated with it
--    p_source_syntax:   The translated/parsed syntax of a SQL Query associated with a Form
--    p_source_status:   Status of the source object associated with the MS Access Form: VALID or INVALID.
--                             VALID:     the translated SQL statement compiles successfully;
--                                        the migrated Oracle table has a primary key
--                                        the migrated Oracle view compiles successfully
--                             INVALID:   the translated SQL statement does not compile successfully
--                                        the migrated Oracle table has no primary key
--                                        the migrated Oracle view does not compile successfully
procedure upd_mig_rev_forms (
    p_project_id            in number,
    p_dbid                  in number,
    p_formid                in number,
    p_workspace_id          in number,
    p_source_name           in varchar2 default null,
    p_source_syntax         in varchar2,
    p_source_status         in varchar2
    );

----------------------------------------------------------------------------------------------------------------
-- upd_mig_rev_reports - to update APEX_040000.WWV_MIG_REV_REPORTS table
--    p_project_id:      Project ID of existing Migration Project
--    p_dbid:            Database ID associated with the original MS Access database
--    p_reportid:        Unique ID associated with the original MS Access Report
--    p_workspace_id:    Workspace ID associated with the Migration Project
--    p_source_name:     Name of the source object associated with the Report. A report can have 4 types of source:
--                             TABLE: pass in migrated Oracle Table Name
--                             QUERY: pass in migrated Oracle View Name
--                             SQL Query: pass in NULL (this is the default)
--                             NULL: pass in NULL, as Form has no source object associated with it
--    p_source_syntax:   The translated/parsed syntax of a SQL Query associated with a Form
--    p_source_status:   Status of the source object associated with the MS Access Form: VALID or INVALID.
--                             VALID:     the translated SQL statement compiles successfully;
--                                        the migrated Oracle table has a primary key
--                                        the migrated Oracle view compiles successfully
--                             INVALID:   the translated SQL statement does not compile successfully
--                                        the migrated Oracle table has no primary key
--                                        the migrated Oracle view does not compile successfully
procedure upd_mig_rev_reports (
    p_project_id            in number,
    p_dbid                  in number,
    p_reportid              in number,
    p_workspace_id          in number,
    p_source_name           in varchar2 default null,
    p_source_syntax         in varchar2,
    p_source_status         in varchar2
    );

end apex_mig_projects_update;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DICTIONARY_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_dictionary_dev.sql
--
--    DESCRIPTION
--      This package provides helper functions for wwv_flow_search and
--      wwv_flow_advisor.
--
--    RUNTIME DEPLOYMENT: YES
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    08/24/2009 - Created
--      pawolf    08/28/2009 - Renamed columns_ignored_by_search to lookup_or_lov_columns
--      pawolf    09/02/2009 - Used CLOB for attribute_value
--      pawolf    02/27/2012 - Renamed packages wwv_flow_advisor to wwv_flow_advisor_dev, wwv_flow_dictionary to wwv_flow_dictionary_dev and wwv_flow_search to wwv_flow_builder_search_dev
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_view is record (
    view_name             wwv_flow_dictionary_views.view_name            %type,
    pk_column_name        wwv_flow_dictionary_views.pk_column_name       %type,
    display_expression    wwv_flow_dictionary_views.display_expression   %type,
    order_expression      wwv_flow_dictionary_views.order_expression     %type,
    parent_view_name      wwv_flow_dictionary_views.view_name            %type,
    parent_fk_column_name wwv_flow_dictionary_views.pk_column_name       %type,
    lookup_or_lov_columns wwv_flow_dictionary_views.lookup_or_lov_columns%type,
    order_seq             wwv_flow_dictionary_views.order_seq            %type,
    link_url              wwv_flow_dictionary_views.link_url             %type,
    has_page_id           boolean );
--
type t_view_map is table of t_view index by wwv_flow_dictionary_views.view_name%type;
--
--==============================================================================
-- Global constants
--==============================================================================
--
--
--==============================================================================
-- Global variables
--==============================================================================
g_view_map t_view_map;
--
--==============================================================================
-- Returns the primary key column for a dictionary view.
--==============================================================================
function get_primary_key_column (
    p_view_name in varchar2 )
    return varchar2;
--
--==============================================================================
-- Adds an object to the specified collection.
--==============================================================================
procedure add_to_result (
    p_collection_name   in varchar2,
    p_application_id    in number,
    p_view_name         in varchar2,
    p_primary_key_value in varchar2,
    p_column_name       in varchar2,
    p_c005              in varchar2 default null,
    p_c006              in varchar2 default null,
    p_c007              in varchar2 default null,
    p_c008              in varchar2 default null,
    p_n002              in number   default null,
    p_n003              in number   default null );
--
end wwv_flow_dictionary_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ADVISOR_CHECKS_API" authid current_user as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_advisor_checks_api.sql
--
--    DESCRIPTION
--      Public advisor checks
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    07/31/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Data types and global for advisor check results
--==============================================================================
type t_check_result is record (
    apex_view_name varchar2(30),
    pk_value       varchar2(255),
    column_name    varchar2(30),
    message_code   varchar2(30),
    parameter_1    varchar2(4000 char),
    parameter_2    varchar2(4000 char) );
type t_check_results is table of t_check_result;

g_check_results t_check_results;

--##############################################################################
--#
--# CHECK FUNCTIONS
--#
--# All checks must share the same interface and store their findings in
--# wwv_flow_advisor_checks_api.g_check_results:
--#
--# procedure xxxx (
--#     p_application_id in number,
--#     p_page_id        in number default null );
--#
--# They have to be registered in apex_install_data.sql
--#
--##############################################################################

--==============================================================================
procedure ajax_items_with_ssp (
    p_application_id in number,
    p_page_id        in number default null );

end wwv_flow_advisor_checks_api;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_ADVISOR_DEV" authid current_user
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_advisor_dev.sql
--
--    DESCRIPTION
--      This package checks the integrity of an Oracle APEX application.
--      eg. if all item references are valid, target page numbers exist, ...
--
--    RUNTIME DEPLOYMENT: NO
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      03/27/2009 - Created
--    pwolf       08/24/2009 - Continue integration
--    pawolf      04/02/2010 - Changed interface to support a list of pages
--    pawolf      02/27/2012 - Renamed packages wwv_flow_advisor to wwv_flow_advisor_dev, wwv_flow_dictionary to wwv_flow_dictionary_dev and wwv_flow_search to wwv_flow_builder_search_dev
--
--
--------------------------------------------------------------------------------
--
c_empty_page_id_list wwv_flow_global.n_arr;
--
--==============================================================================
-- Checks an application based on the specified checks which should be performed.
-- The page id list is optional.
-- p_check_list contains as value wwv_flow_advisor_check_msgs.code to define
-- which checks should be performed.
--==============================================================================
procedure check_application (
    p_application_id in number,
    p_page_id_list   in wwv_flow_global.n_arr default c_empty_page_id_list,
    p_check_list     in wwv_flow_global.vc_arr2 );
--
--==============================================================================
-- The following procedures/functions have to be public because they are called
-- from dynamic SQL which is generated by check_application.
-- NOTE: They are for internal use only!
--==============================================================================
function get_type (
    p_view_name              in varchar2,
    p_column_name            in varchar2,
    p_depending_column_value in varchar2 )
  return varchar2;
--
procedure verify_varchar2_property (
    p_view_name         in varchar2,
    p_primary_key_value in varchar2,
    p_column_name       in varchar2,
    p_value             in varchar2,
    p_type              in varchar2 := null,
    p_page_id           in number );
--
procedure verify_clob_property (
    p_view_name         in varchar2,
    p_primary_key_value in varchar2,
    p_column_name       in varchar2,
    p_value             in clob,
    p_type              in varchar2 := null,
    p_page_id           in number );
--
procedure verify_number_property (
    p_view_name         in varchar2,
    p_primary_key_value in varchar2,
    p_column_name       in varchar2,
    p_value             in number,
    p_type              in varchar2 := null,
    p_page_id           in number );
--
procedure check_target_page_auth (
    p_view_name            in varchar2,
    p_primary_key_value    in varchar2,
    p_column_name          in varchar2,
    p_value                in varchar2,
    p_authorization_scheme in varchar2,
    p_page_id              in number );
--
end wwv_flow_advisor_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_BUILDER_SEARCH_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_builder_search_dev.sql
--
--    DESCRIPTION
--      This package searches for strings in an Oracle APEX application.
--
--    RUNTIME DEPLOYMENT: NO
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      05/13/2009 - Created
--    pawolf      05/25/2009 - Added regexp support
--    pawolf      08/24/2009 - Refactored common functions to wwv_flow_dictionary
--    pawolf      02/27/2012 - Renamed packages wwv_flow_advisor to wwv_flow_advisor_dev, wwv_flow_dictionary to wwv_flow_dictionary_dev and wwv_flow_search to wwv_flow_builder_search_dev
--
--
--------------------------------------------------------------------------------
--
--==============================================================================
-- Searches in an application(s) for the specified string.
-- The application id and page id are optional.
--
-- If p_search_string is prefixed with regexp: the search string will be treated
-- as a regular expression.
--
-- Use the view wwv_flow_search_result to access the result.
--==============================================================================
procedure search_application (
    p_application_id in number   := null,
    p_page_id        in number   := null,
    p_case_sensitive in boolean  := false,
    p_search_string  in varchar2 );
--
END wwv_flow_builder_search_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_F4000_PLUGINS" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_f4000_plugins.sql
--
--    DESCRIPTION
--      This package contains the code for all APEX Builder plug-ins.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      10/01/2009 - Created
--    pawolf      11/03/2009 - Replaced apex_plugin references with wwv_flow_plugin
--    pawolf      12/29/2009 - Modified calling interface for validations
--    pawolf      02/05/2010 - Changed to new plug-in interface
--    pawolf      04/08/2010 - Added hierarchical_checkbox
--    pawolf      04/15/2010 - Added advanced autocomplete
--    pawolf      12/20/2010 - Added render_plugin_attribute
--    pawolf      12/22/2010 - Added popup LOV support for plug-in attributes of type page number (feature# 527)
--    cneumuel    05/06/2011 - Added CLOB textarea plugin
--    cneumuel    05/26/2011 - Added internal authentication (feature #581)
--    cneumuel    06/03/2011 - Moved get_clob_textarea_value to wwv_flow_utilities because it needs to exist in a runtime-only environment
--    cneumuel    06/08/2011 - Added internal_ws_session_sentry,internal_ws_invalid_session for plugin-based 4900 authentication.
--    cneumuel    06/30/2011 - Added internal_4155_session_sentry
--    cneumuel    06/30/2011 - Added internal_post_logout to fix broken sso logout
--    cneumuel    10/21/2011 - Added internal_session_callback (bug #13101596)
--    cneumuel    11/29/2011 - CLOUD_IDM authentication for websheets (bug #13360987)
--    cneumuel    01/13/2012 - Added internal_ws_post_logout (bug #13360987)
--    pawolf      02/27/2012 - Renamed package wwv_flow_plugin to wwv_flow_plugin_api and wwv_flow_plugin_engine to wwv_flow_plugin
--    cneumuel    03/28/2012 - Added internal_authenticate (bug #13713222)
--    hfarrell    04/12/2012 - Added render_html_chart (feature #856) - NOTE: this may not be required, to discuss with Patrick
--    hfarrell    04/13/2012 - Removed render_html_chart and moved it to new package wwv_flow_legacy_plugins
--    pawolf      07/06/2012 - Added render_ui_component_selectlist
--    vuvarov     07/10/2012 - Replaced apex_plugin references with wwv_flow_plugin_api
--    cneumuel    05/17/2013 - moved internal_4155_session_sentry to wwv_flow_authentication_f4155.session_sentry (bug #16827691).
--
--------------------------------------------------------------------------------

--******************************************************************************
-- REGION PLUG-INs
--******************************************************************************

--==============================================================================
-- Renders the anchor links region on APEX Builder property page.
--==============================================================================
function render_anchors (
    p_region              in wwv_flow_plugin_api.t_region,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_region_render_result;
--
--==============================================================================
-- Renders a "Subscriptions" region to displays if there are subscriptions.
--==============================================================================
function render_subscriptions (
    p_region              in wwv_flow_plugin_api.t_region,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_region_render_result;

--******************************************************************************
-- DYNAMIC ACTION PLUG-INs
--******************************************************************************

--==============================================================================
-- Renders the "Hide Required" dynamic action.
--==============================================================================
function render_hide_required (
    p_dynamic_action in wwv_flow_plugin_api.t_dynamic_action,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_dynamic_action_render_result;
--
--==============================================================================
-- Renders the "Show Required" dynamic action.
--==============================================================================
function render_show_required (
    p_dynamic_action in wwv_flow_plugin_api.t_dynamic_action,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_dynamic_action_render_result;

--******************************************************************************
-- ITEM TYPE PLUG-INs
--******************************************************************************

--==============================================================================
-- Renders a search item type.
--==============================================================================
function render_searchbox (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Renders the condition type selectlist and adds the necessary javascript
-- code to show/hide the attached expression1/2 fields.
--==============================================================================
function render_condition_type (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Validates the condition type expression fields.
--==============================================================================
function validate_condition_type (
    p_item   in     wwv_flow_plugin_api.t_page_item,
    p_plugin in     wwv_flow_plugin_api.t_plugin,
    p_value  in     varchar2 )
    return wwv_flow_plugin_api.t_page_item_validation_result;
--
--==============================================================================
-- Renders a hierarchical checkboxes based on the defined attributes in p_item.
--==============================================================================
function render_hierarchical_checkbox (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Renders the autocomplete item type based on the defined attributes in
-- p_item.
--==============================================================================
function render_advanced_auto_complete (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Returns the possible values restricted by the value specified in wwv_flow.g_x01.
-- wwv_flow.g_x02 contains the maximum number of records which should be returned.
--==============================================================================
function ajax_advanced_auto_complete (
    p_item   in wwv_flow_plugin_api.t_page_item,
    p_plugin in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_page_item_ajax_result;
--
--==============================================================================
-- Validates the submitted value if it is contained in the list of possible values.
--==============================================================================
function validate_advanced_auto_compl (
    p_item   in wwv_flow_plugin_api.t_page_item,
    p_plugin in wwv_flow_plugin_api.t_plugin,
    p_value  in varchar2 )
    return wwv_flow_plugin_api.t_page_item_validation_result;
--
--==============================================================================
-- Renders a group select list of components which restricts the output
-- to the component supported by the current user interface.
--==============================================================================
function render_ui_component_selectlist (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Renders a plug-in attribute item type.
--==============================================================================
function render_plugin_attribute (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- Based on the passed attribute type the function will perform different
-- operations.
--==============================================================================
function ajax_plugin_attribute (
    p_item   in wwv_flow_plugin_api.t_page_item,
    p_plugin in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_page_item_ajax_result;
--
--==============================================================================
-- CLOB Textarea item plugin
--
-- emit textarea for clob result of select statement in p_item.attribute_01
--
-- data is passed from browser to server via a synchronous ajax request right
-- before the submit. the ajax request passes 4000 character chunks via the f01
-- array of apex_application.show, where it is stored in a collection's clob001
-- whose name equals the item name.
--==============================================================================
function render_clob_textarea (
    p_item                in wwv_flow_plugin_api.t_page_item,
    p_plugin              in wwv_flow_plugin_api.t_plugin,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return wwv_flow_plugin_api.t_page_item_render_result;
--
--==============================================================================
-- CLOB Textarea item plugin
--
-- write g_f01 array into collection p_item.name
--==============================================================================
function ajax_clob_textarea (
    p_item   in wwv_flow_plugin_api.t_page_item,
    p_plugin in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_page_item_ajax_result;
--
--==============================================================================
-- Internal authentication plugin
--
-- Check if session can be used.
--==============================================================================
function internal_session_sentry (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Internal authentication plugin
--
-- Redirect to login if invalid session
--==============================================================================
function internal_invalid_session (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- Internal authentication plugin
--
-- Check user credentials
--==============================================================================
function internal_authenticate (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_password       in varchar2 )
    return wwv_flow_plugin_api.t_authentication_auth_result;
--
--==============================================================================
-- Internal authentication plugin
--
-- Callback for OAM authentication.
--==============================================================================
function internal_session_callback (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Internal authentication plugin
--
-- Compute logout url
--==============================================================================
function internal_post_logout (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_logout_result;
--
--==============================================================================
-- Internal websheet authentication plugin
--
-- Check if session can be used.
--==============================================================================
function internal_ws_session_sentry (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin,
    p_is_public_page in boolean )
    return wwv_flow_plugin_api.t_authentication_sentry_result;
--
--==============================================================================
-- Internal websheet authentication plugin
--
-- Redirect to login if invalid session
--==============================================================================
function internal_ws_invalid_session (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_inval_result;
--
--==============================================================================
-- Internal websheet authentication plugin
--
-- Callback for CLOUD_IDM/OAM authentication.
--==============================================================================
function internal_ws_session_callback (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_ajax_result;
--
--==============================================================================
-- Internal websheet authentication plugin
--
-- Compute logout url
--==============================================================================
function internal_ws_post_logout (
    p_authentication in wwv_flow_plugin_api.t_authentication,
    p_plugin         in wwv_flow_plugin_api.t_plugin )
    return wwv_flow_plugin_api.t_authentication_logout_result;

end wwv_flow_f4000_plugins;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_4000_UI" as

	procedure p320_create_collection (
	    p_flow_id           in number,
	    p_session           in number,
	    p_security_group_id in number,
	    p_image_prefix      in varchar2
	    );

procedure show_tabs (
	p_application_id    in number   default null,
	p_security_group_id in number   default null,
	p_session_id        in number  default null,
	p_parent_tabset     in varchar2 default null)
	;

function get_timeframe (
	p_days in number default 1)
	return varchar2
	;

function get_validation (
	    p_validation_id     in number default null,
	    p_application_id    in number default null,
	    p_security_group_id in number default null,
	    p_validation        in varchar2 default null,
	    p_bind_01           in varchar2 default null,
	    p_bind_02           in varchar2 default null,
	    p_bind_03           in varchar2 default null,
	    p_bind_04           in varchar2 default null,
	    p_bind_05           in varchar2 default null,
	    p_bind_06           in varchar2 default null
	    )
	return varchar2
	;

procedure print_lov_examples (
    p_display_as in varchar2 )
    ;

procedure print_apex_online_info (
    p_ul_attr in varchar2 default null)
    ;

procedure print_cgi_env (
   p_html_table_attr  in varchar2 default null
   )
   ;

procedure show_news (
  p_workspace_id in number,
  p_num_seconds  in number default 5,
  p_max_rows     in number default 5)
  ;

--
-- logging of internal events
-- such as:
--      seeding translations
--
procedure log_event (
    p_event                    in varchar2 default null,
    p_event_application_id     in varchar2 default null,
    p_event_env                in varchar2 default null,
    p_elap_seconds             in number   default null,
    p_event_details            in varchar2 default null,
    p_event_database_object    in varchar2 default null)
    ;
--
-- workspace notification
--
procedure show_workspace_notification (
   p_workspace_id       in number default null,
   p_session            in number default null,
   p_text_span_class    in varchar2 default 'fielddata')
   ;

function workspace_notification_exists (
    p_workspace_id in number default null)
    return boolean   ;

--
-- history
--
procedure show_history (
   p_id                 in number   default null,
   p_component_type     in varchar2 default null,
   p_LAST_UPDATED_BY    in varchar2 default null,
   p_LAST_UPDATED_ON    in date     default null,
   p_CREATED_BY         in varchar2 default null,
   p_CREATED_ON         in date     default null,
   p_date_format_mask   in varchar2 default 'Day Month DD, YYYY HH24:MI')
   ;


--
-- instance level reporting
--

/* procedure top_applications_combo (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50,
    p_show_internal_yn  in varchar2 default 'Y',
    p_link              in varchar2 default null)
    ;
*/


procedure top_applications_combo2 (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50,
    p_show_internal_yn  in varchar2 default 'Y',
    p_link              in varchar2 default null)
    ;

procedure top_applications (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50,
    p_show_internal_yn  in varchar2 default 'Y')
    ;

procedure top_websheets (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_apex_owner        in varchar2 default null,
    p_chart_width       in number default 50)
    ;

/* procedure top_users (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50,
    p_link              in varchar2 default null)
    ;
*/

procedure top_users2 (
    p_app_session       in varchar2,
    p_security_group_id in varchar2,
    p_image_prefix      in varchar2,
    p_days              in varchar2 default null,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50,
    p_link              in varchar2 default null)
    ;
procedure show_page_event_link (
    p_days              in varchar2 default null,
    p_link              in varchar2 default null)
;
procedure show_sent_statistics;

procedure statistics;

procedure updates;

procedure news;

procedure repository;

end wwv_flow_4000_ui;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_4050_UI" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_4050_ui.sql
--
--    DESCRIPTION
--     User interface plsql for internal administration application
--
--    SECURITY
--      No grants
--
--    MODIFIED (MM/DD/YYYY)
--     mhichwa    05/06/2009 - Created
--     mhichwa    08/14/2009 - added cw and p_chart_width
--     mhichwa    11/16/2009 - added procedure show_edit_system_message
--     jstraub    08/02/2010 - Changed p_days default to be represented is seconds
--     vuvarov    06/26/2012 - Added show_system_message() and system_message_exists()
--
--------------------------------------------------------------------------------


--==============================================================================
-- System Messages/Announcements (defined in app 4050, but can be displayed in
-- other apps)
--==============================================================================
procedure show_edit_system_message (
    p_app_session  in varchar2,
    p_image_prefix in varchar2);

procedure show_system_message (
    p_app_session in number default null);

function system_message_exists
    return boolean;
--==============================================================================

--
-- instance level reporting
--

procedure top_applications (
    p_app_session   in varchar2,
    p_image_prefix  in varchar2,
    p_days          in number default 43200, --p_days is now actually in seconds (bug 9886194)
    p_display_count in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50)
    ;

procedure top_workspaces (
    p_app_session   in varchar2,
    p_image_prefix  in varchar2,
    p_days          in number default 43200, --p_days is now actually in seconds (bug 9886194)
    p_display_count in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50)
    ;

procedure top_users (
    p_app_session   in varchar2,
    p_image_prefix  in varchar2,
    p_days          in number default 43200, --p_days is now actually in seconds (bug 9886194)
    p_display_count in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50)
    ;

--
-- workspace level reporting
--
procedure top_workspace_applications (
    p_app_session       in varchar2,
    p_image_prefix      in varchar2,
    p_security_group_id in number,
    p_days              in number default 1,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50)
    ;

procedure top_workspace_users (
    p_app_session       in varchar2,
    p_image_prefix      in varchar2,
    p_security_group_id in number,
    p_days              in number default 1,
    p_display_count     in number default 8,
    p_max_length        in number default 20,
    p_chart_width       in number default 50)
    ;

procedure show_workspace_admins (
    p_app_session       in varchar2,
    p_security_group_id in number,
    p_image_prefix      in varchar2,
    p_display_count     in number default 8)
    ;

end wwv_flow_4050_ui;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_WORKSPACE_REPORTS"
as

function get_pending_email (
    p_session_id in number default 0)
    return varchar2
    ;

function get_pending_requests (
    p_session_id in number default 0)
    return varchar2
    ;

function get_requests (
   p_max_requests      in number default 7,
   p_app_session       in number default null,
   p_security_group_id in number default 0 )
   return varchar2
   ;

procedure report_workspace_usage (
    p_security_group_id in number,
    p_language          in varchar2 default null,
    p_time_frame_DWMY   in varchar2 default 'W',
    p_email_format_yn   in varchar2 default 'N',
    p_email_title       in varchar2 default null,
    p_max_apps          in number default 10,
    p_max_websheets     in number default 10,
    p_max_db_objects    in number default 10,
    p_date_format       in varchar2 default 'Day Month DD, YYYY HH24:MI',
    p_report_db_obj_yn  in varchar2 default 'Y',
    p_print_report_yn   in varchar2 default 'Y'
    )
    ;

-- call report_workspace_usage first with p_print_report_yn = N
function get_workspace_usage_output
   return varchar2
   ;

function get_purge_summary  (
    p_session_id  in number default 0)
    return varchar2
    ;
function get_purge_summary2 (
	p_session_id in number default 0)
    return varchar2
    ;

end wwv_flow_workspace_reports;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_F4000_P4150"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2009. All Rights Reserved.
--
--    NAME
--      wwv_flow_f4000_p4150.sql
--
--    DESCRIPTION
--      This package is resonsible for the tree handling on 4000:4150.
--
--    RUNTIME DEPLOYMENT: YES
--
--    MODIFIED   (MM/DD/YYYY)
--    pawolf      11/02/2009 - Created
--    pawolf      03/19/2010 - Added view modes "Name" and "Label"
--
--------------------------------------------------------------------------------
--
--==============================================================================
-- Procedure which reads the meta data for the tree and initializes other
-- global variables.
-- Note: This procedure has to be called before calling any other procedure in
--       this package!
--==============================================================================
procedure init (
    p_application_id in number,
    p_page_id        in number );
--
--==============================================================================
-- Procedure which generates the necessary HTML code for the rendering tree.
-- Note: init has to be called before calling this procedure
--==============================================================================
procedure show_rendering_tree (
    p_show_labels in boolean default false );
--
--==============================================================================
-- Procedure which generates the necessary HTML code for the processing tree.
-- Note: init has to be called before calling this procedure
--==============================================================================
procedure show_processing_tree;
--
--==============================================================================
-- Procedure which generates the necessary HTML code for the shared component tree.
-- Note: init has to be called before calling this procedure
--==============================================================================
procedure show_shared_tree;
--
--==============================================================================
-- Central dispatch procedure for refreshing parts of the tree. Called from the
-- on-demand process on page 4150.
--==============================================================================
procedure get_tree_data;
--
--==============================================================================
-- Central dispatch procedure for the tree operations. Called from the
-- on-demand process on page 4150.
--==============================================================================
procedure execute_tree_operation;
--
--
end wwv_flow_f4000_p4150;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_CREATE_APP_FROM_QUERY"
as
--  Copyright (c) Oracle Corporation 2008. All Rights Reserved.
--
--
--    DESCRIPTION
--      This package creates an application based on a query.
--      This gets called from wwv_flow_api.create_app_from_query,
--      so users from SQL Developer or SQL*Plus can create an application based on a query.
--
--    NOTES
--      If run time only installed, create application will fail.
--
--    SECURITY
--      No grants, must be run as FLOW schema owner.
--
--
--    INTERNATIONALIZATION
--      unknown
--
--    MULTI-CUSTOMER
--      unknown
--
--    CUSTOMER MAY CUSTOMIZE
--      NO
--
--    RUNTIME DEPLOYMENT: YES
--

empty_vc_arr       wwv_flow_global.vc_arr2;

procedure create_single_page_app (
    p_schema                     in varchar2,
    p_workspace_id               in number,
    p_application_name           in varchar2,
    p_authentication             in varchar2 default 'DATABASE ACCOUNT',
    p_application_id             out number,
    p_theme                      in number,
    p_theme_type                 in varchar2,
    p_sql                        in varchar2,
    p_page_name                  in varchar2 default 'Page 1',
    p_max_displayed_columns      in number default 30,
    p_group_name                 in varchar2 default null
    );

procedure create_multi_page_app (
    p_schema                     in varchar2,
    p_workspace_id               in number,
    p_application_name           in varchar2,
    p_authentication             in varchar2 default 'DATABASE ACCOUNT',
    p_application_id             out number,
    p_theme                      in number,
    p_theme_type                 in varchar2,
    p_sql                        in wwv_flow_global.vc_arr2,
    p_page_name                  in wwv_flow_global.vc_arr2 default empty_vc_arr,
    p_max_displayed_columns      in number default 30,
    p_group_name                 in varchar2 default null
    );

end wwv_flow_create_app_from_query;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_UI_TYPE_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_ui_type_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling UI types in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    07/04/2012 - Created
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================


--==============================================================================
-- Global constants
--==============================================================================


--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- Returns TRUE if the specified Builder Feature is supported by the specified
-- UI type, otherwise returns FALSE.
--==============================================================================
function supports_feature (
    p_ui_type_id in number,
    p_name       in varchar2 )
    return boolean;
--
end wwv_flow_ui_type_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_GRID_LAYOUT_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_grid_layout_dev.sql
--
--    DESCRIPTION
--      This package is responsible for handling grid layouts in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    05/23/2012 - Created
--      pawolf    05/24/2012 - Moved grid template attributes into wwv_flow_templates and removed wwv_flow_grid_templates (feature #936)
--      pawolf    05/31/2012 - Continued work on grid layout (feature #936)
--      pawolf    06/01/2012 - Added uses_table
--      pawolf    06/01/2012 - Added has_grid_column_attributes
--      pawolf    06/05/2012 - Added grid support for sub regions (feature #936)
--      pawolf    06/18/2012 - Added region display points support (feature# #936)
--
--------------------------------------------------------------------------------

--==============================================================================
-- Global types
--==============================================================================
type t_grid is record (
    has_grid_support boolean,
    uses_table       boolean,
    has_new_grid     boolean,
    has_column_span  boolean,
    has_column_attrs boolean,
    max_columns      pls_integer );

--==============================================================================
-- Global constants
--==============================================================================

--==============================================================================
-- Global variables
--==============================================================================


--==============================================================================
-- $$$
--==============================================================================
function get (
    p_application_id             in number,
    p_theme_id                   in number,
    p_page_template_id           in number,
    p_parent_region_template_id  in number,
    p_is_sub_region              in boolean,
    p_parent_sub_region_template in varchar2,
    p_display_point              in varchar2,
    p_parent_max_grid_columns    in pls_integer )
    return t_grid;
--
--==============================================================================
-- This procedure gets information about the used grid and stores them in the
-- Builder page items xxx_GRID_HAS_GRID_SUPPORT, xxx_GRID_HAS_NEW_GRID,
-- xxx_GRID_HAS_COLUMN_SPAN and xxx_GRID_MAX_COLUMNS.
-- It's for example used on page 4000:4651, 4000:374, ...
--==============================================================================
procedure set_helper_items (
    p_application_id   in number,
    p_page_id          in number,
    p_display_point    in varchar2,
    p_is_sub_region    in boolean,
    p_parent_region_id in number,
    p_item_prefix      in varchar2 );
--
--==============================================================================
-- This procedure resets the page items used to store grid information of a
-- component to default values if the current display point doesn't support
-- a grid. The following page items are affected: xxx_NEW_GRID, xxx_NEW_GRID_ROW,
-- xxx_GRID_DISPLAY_COLUMN, xxx_NEW_GRID_COLUMN, xxx_GRID_COLUMN_ATTR
--==============================================================================
procedure cleanup_grid_items (
    p_application_id   in number,
    p_page_id          in number,
    p_display_point    in varchar2,
    p_is_sub_region    in boolean,
    p_parent_region_id in number,
    p_item_prefix      in varchar2 );
--
end wwv_flow_grid_layout_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_DYNAMIC_ACTION_DEV"
as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_dynamic_action_dev.sql
--
--    DESCRIPTION
--      This package is resonsible for handling dynamic actions in the Builder.
--
--    MODIFIED   (MM/DD/YYYY)
--      pawolf    03/20/2012 - Moved procedures from wwv_flow_dynamic_action.*
--
--------------------------------------------------------------------------------

--==============================================================================
-- Returns whether the Dynamic Action being created requires an Affected
-- Element
--==============================================================================
function requires_affected_element (
    p_da_implementation varchar2,
    p_flow_id           number,
    p_std_true_action   varchar2,
    p_adv_true_action   varchar2,
    p_adv_false_action  varchar2 )
    return boolean;

end wwv_flow_dynamic_action_dev;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "APEX_040200"."WWV_FLOW_AUTHENTICATION_DEV" as
--------------------------------------------------------------------------------
--
--  Copyright (c) Oracle Corporation 1999 - 2012. All Rights Reserved.
--
--    NAME
--      wwv_flow_authentication_dev.sql
--
--    DESCRIPTION
--      Builder-specific internal authentication-related routines
--
--    RUNTIME DEPLOYMENT: NO
--    PUBLIC:             NO
--
--    MODIFIED   (MM/DD/YYYY)
--    cneumuel    05/03/2012 - Created
--                           - moved get_login_help_for_app, get_translated_authent_name, activate_in_app from wwv_flow_authentication to this package
--
--------------------------------------------------------------------------------

--==============================================================================
-- helper routine for app 4155 (scheme authentication login)
--==============================================================================
procedure get_login_help_for_app (
    p_app_id                   in  number,
    p_plugin_help_text         out varchar2,
    p_authentication_help_text out varchar2,
    p_workspace_name           out varchar2,
    p_needs_password_yn        out varchar2 );
--
--==============================================================================
-- helper function to get the translated authentication name
--==============================================================================
function get_translated_authent_name (
    p_authentication_name in varchar2 )
    return varchar2;
--
--==============================================================================
-- helper procedure to activate/create an authentication within the application,
-- also used in wwv_flow_data_quick_flow, etc.
--
-- valid values for p_authentication_name:
--   (a) any authentication that already exists within the app
--   or (b) 'Application Express', 'SSO', 'DATABASE', 'DBACCOUNT'
-- if (b) then the native authentication will be created, if it does not yet
-- exist.
--==============================================================================
procedure activate_in_app (
    p_app_id              in number,
    p_authentication_name in varchar2 );

end wwv_flow_authentication_dev;
/

