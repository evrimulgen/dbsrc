ALTER TABLE "MDSYS"."SDO_GEOM_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_LAYERS" PRIMARY KEY ("SDO_OWNER", "SDO_TABLE_NAME", "SDO_COLUMN_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_INDEX_AGGREGATES_TABLE" ADD CONSTRAINT "UNIQUE_AGGREGATE" PRIMARY KEY ("SDO_INDEX_OWNER", "SDO_INDEX_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_LRS_METADATA_TABLE" ADD CHECK (SDO_DIM_POS = 3 OR SDO_DIM_POS = 4) ENABLE;
ALTER TABLE "MDSYS"."SDO_LRS_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_TABLES" PRIMARY KEY ("SDO_OWNER", "SDO_TABLE_NAME", "SDO_COLUMN_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SRSNAMESPACE_TABLE" ADD PRIMARY KEY ("SRSNAMESPACE", "SRSNAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OGIS_SPATIAL_REFERENCE_SYSTEMS" ADD CONSTRAINT "PK_SRID" PRIMARY KEY ("SRID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UOM_TYPE_CONSTR" CHECK (nls_lower(unit_of_meas_type) in ('area', 'angle', 'length', 'scale', 'volume')) ENABLE;
ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "ONLY_STD_TARGET_UOMS" CHECK (target_uom_id in (9001, 9101, 9201, 10008, 19501)) ENABLE;
ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UOM_ID_MUST_BE_POS" CHECK (UOM_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UOM_UNIQUE1" UNIQUE ("UOM_ID", "UNIT_OF_MEAS_TYPE")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UNIT_OF_MEASURE_PRIM" PRIMARY KEY ("UOM_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "FACTOR_B_MUST_BE_POS" CHECK (FACTOR_B IS NULL OR FACTOR_B > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "FACTOR_C_MUST_BE_POS" CHECK (FACTOR_C IS NULL OR FACTOR_C > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UOM_UNIQUE_SHORT_NAME" UNIQUE ("SHORT_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_PRIME_MERIDIANS" ADD CONSTRAINT "PRIME_MERIDIAN_ID_MUST_BE_POS" CHECK (PRIME_MERIDIAN_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_PRIME_MERIDIANS" ADD UNIQUE ("PRIME_MERIDIAN_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_PRIME_MERIDIANS" ADD CONSTRAINT "PRIME_MERIDIAN_PRIM" PRIMARY KEY ("PRIME_MERIDIAN_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_ELLIPSOIDS" ADD CONSTRAINT "ELLIPSOID_ID_MUST_BE_POS" CHECK (ELLIPSOID_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_ELLIPSOIDS" ADD CONSTRAINT "SEMI_MAJOR_AXIS_MUST_BE_POS" CHECK (SEMI_MAJOR_AXIS > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_ELLIPSOIDS" ADD CONSTRAINT "ELLIPSOID_PRIM" PRIMARY KEY ("ELLIPSOID_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_DATUMS" ADD CONSTRAINT "DATUM_ID_MUST_BE_POS" CHECK (DATUM_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_DATUMS" ADD CONSTRAINT "DATUM_PRIM" PRIMARY KEY ("DATUM_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_SYS" ADD CONSTRAINT "COORD_SYS_ID_MUST_BE_POS" CHECK (COORD_SYS_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_SYS" ADD UNIQUE ("COORD_SYS_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_SYS" ADD CONSTRAINT "COORDINATE_SYSTEM_PRIM" PRIMARY KEY ("COORD_SYS_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXIS_NAMES" ADD UNIQUE ("COORD_AXIS_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXIS_NAMES" ADD CONSTRAINT "COORD_AXIS_NAME_PRIM" PRIMARY KEY ("COORD_AXIS_NAME_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXES" ADD CONSTRAINT "COORD_AXIS_PRIM" PRIMARY KEY ("COORD_SYS_ID", "ORDER")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_GEOGRAPHIC3D" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'GEOGRAPHIC3D') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (NOT  DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_PROJECTED" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'PROJECTED') OR
          (
            (NOT  SOURCE_GEOG_SRID    IS NULL) AND
            (NOT  PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (     DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_VERTICAL" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'VERTICAL') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (NOT  DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "SRID_MUST_BE_POS" CHECK (SRID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYSTEM_PRIM" PRIMARY KEY ("SRID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_COMPOUND" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'COMPOUND') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (NOT  CMPD_HORIZ_SRID     IS NULL) AND
            (NOT  CMPD_VERT_SRID      IS NULL) AND
            (     COORD_SYS_ID        IS NULL) AND
            (     DATUM_ID            IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_ENGINEERING" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'ENGINEERING') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (NOT  DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_GEOCENTRIC" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'GEOCENTRIC') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (NOT  DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "CRS_CHECK_GEOGRAPHIC2D" CHECK (
          (IS_VALID = 'FALSE') OR
          (IS_LEGACY = 'TRUE') OR
          (coord_ref_sys_kind <> 'GEOGRAPHIC2D') OR
          (
            (     SOURCE_GEOG_SRID    IS NULL) AND
            (     PROJECTION_CONV_ID  IS NULL) AND
            (     CMPD_HORIZ_SRID     IS NULL) AND
            (     CMPD_VERT_SRID      IS NULL) AND
            (NOT  COORD_SYS_ID        IS NULL) AND
            (NOT  DATUM_ID            IS NULL) AND
            (NOT  GEOG_CRS_DATUM_ID   IS NULL)
          )
        ) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_METHODS" ADD CONSTRAINT "COORD_OP_METHOD_PRIM" PRIMARY KEY ("COORD_OP_METHOD_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_METHODS" ADD CONSTRAINT "COORD_OP_METHOD_ID_MUST_BE_POS" CHECK (COORD_OP_METHOD_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_METHODS" ADD CONSTRAINT "REVERSE_OP_1_OR_0" CHECK (REVERSE_OP IN (0, 1)) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_METHODS" ADD CONSTRAINT "IS_IMPL_FW_1_OR_0" CHECK (IS_IMPLEMENTED_FORWARD IN (0, 1)) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_METHODS" ADD CONSTRAINT "IS_IMPL_RV_1_OR_0" CHECK (IS_IMPLEMENTED_REVERSE IN (0, 1)) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OP_PRIM" PRIMARY KEY ("COORD_OP_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OP_NAME_UNIQUE" UNIQUE ("COORD_OP_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OP_NAME_NO_LEGACY_NAME" CHECK (
          COORD_OP_NAME NOT IN (
            'Geographic (Lat/Long)',
            'Universal Transverse Mercator',
            'State Plane Coordinates',
            'Albers Conical Equal Area',
            'Lambert Conformal Conic',
            'Mercator',
            'Polar Stereographic',
            'Polyconic',
            'Equidistant Conic',
            'Transverse Mercator',
            'Stereographic',
            'Lambert Azimuthal Equal Area',
            'Azimuthal Equidistant',
            'Gnomonic',
            'Orthographic',
            'General Vertical Near-Side Perspective',
            'Sinusoidal',
            'Equirectangular',
            'Miller Cylindrical',
            'Van der Grinten',
            'Hotine Oblique Mercator',
            'Robinson',
            'Space Oblique Mercator',
            'Alaska Conformal',
            'Interrupted Goode Homolosine',
            'Mollweide',
            'Interrupted Mollweide',
            'Hammer',
            'Wagner IV',
            'Wagner VII',
            'Oblated Equal Area',
            'Non-earth',
            'Transverse Mercator Danish System 45 Bornholm',
            'Transverse Mercator Danish System 34 Jylland-Fyn',
            'Transverse Mercator Sjaelland',
            'Transverse Mercator Finnish KKJ',
            'Eckert IV',
            'Eckert VI',
            'Gall',
            'Lambert Conformal Conic (Belgium 1972)',
            'New Zealand Map Grid',
            'Cylindrical Equal Area',
            'Swiss Oblique Mercator',
            'Bonne',
            'Cassini')) ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OP_ID_MUST_BE_POS" CHECK (COORD_OP_ID > 10) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OP_VARIANT_MUST_BE_POS" CHECK (COORD_OP_VARIANT > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_PREFERRED_OPS_SYSTEM" ADD CONSTRAINT "PREFERRED_OPS_SYS_PRIM" PRIMARY KEY ("SOURCE_SRID", "TARGET_SRID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_PREFERRED_OPS_USER" ADD CONSTRAINT "PREFERRED_OPS_USE_PRIM" PRIMARY KEY ("USE_CASE", "SOURCE_SRID", "TARGET_SRID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PATHS" ADD CONSTRAINT "CONCAT_OP_ID_MUST_BE_POS" CHECK (CONCAT_OPERATION_ID > 10) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_PATHS" ADD CONSTRAINT "OP_PATH_STEP_MUST_BE_POS" CHECK (OP_PATH_STEP > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAMS" ADD CONSTRAINT "COORD_OP_PARA_PRIM" PRIMARY KEY ("PARAMETER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAMS" ADD CONSTRAINT "PARAMETER_ID_MUST_BE_POS" CHECK (PARAMETER_ID > 0) ENABLE;
ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_USE" ADD CONSTRAINT "COORD_OP_PARA_USE_PRIM" PRIMARY KEY ("COORD_OP_METHOD_ID", "SORT_ORDER")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_VALS" ADD CONSTRAINT "COORD_OP_PARA_VAL_PRIM" PRIMARY KEY ("COORD_OP_ID", "PARAMETER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_LIGHTSOURCES_TABLE" ADD CONSTRAINT "UNIQUE_LIGHTSOURCES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_ANIMATIONS_TABLE" ADD CONSTRAINT "UNIQUE_ANIMATIONS" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_VIEWFRAMES_TABLE" ADD CONSTRAINT "UNIQUE_VIEWFRAMES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_SCENES_TABLE" ADD CONSTRAINT "UNIQUE_SCENES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_3DTHEMES_TABLE" ADD CONSTRAINT "UNIQUE_3DTHEMES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_3DTXFMS_TABLE" ADD CONSTRAINT "UNIQUE_3DTXFMS" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_MAPS_TABLE" ADD CONSTRAINT "UNIQUE_MAPS" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_STYLES_TABLE" ADD CONSTRAINT "UNIQUE_STYLES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_THEMES_TABLE" ADD CONSTRAINT "UNIQUE_THEMES" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_CACHED_MAPS_TABLE" ADD CONSTRAINT "UNIQUE_CACHED_MAPS" PRIMARY KEY ("SDO_OWNER", "NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_XML_SCHEMAS" ADD PRIMARY KEY ("ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_ANNOTATION_TEXT_METADATA" ADD CONSTRAINT "UNIQUE_TEXT_LAYERS" PRIMARY KEY ("F_TABLE_SCHEMA", "F_TABLE_NAME", "F_TEXT_COLUMN")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_TXN_IDX_INSERTS" ADD PRIMARY KEY ("SDO_TXN_IDX_ID", "RID") ENABLE;
ALTER TABLE "MDSYS"."SDO_TXN_IDX_DELETES" ADD PRIMARY KEY ("SDO_TXN_IDX_ID", "RID") ENABLE;
ALTER TABLE "MDSYS"."SDO_TXN_IDX_EXP_UPD_RGN" ADD PRIMARY KEY ("SDO_TXN_IDX_ID", "RID") ENABLE;
ALTER TABLE "MDSYS"."MD$RELATE" ADD CONSTRAINT "PK_SDO_MASK" PRIMARY KEY ("SDO_MASK")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_CS_SRS" ADD PRIMARY KEY ("SRID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."NTV2_XML_DATA" ADD CONSTRAINT "NTV2_XML_DATA_PK" PRIMARY KEY ("NTV2_FILE_ID", "SEQUENCE_NUMBER")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+xdsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+zdsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+0dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+1dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+2dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+5dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+7dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+8dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SYS_NT/ZtYSh+3dsjgQ7ap6Aq0gA==" ADD PRIMARY KEY ("NESTED_TABLE_ID", "SYS_NC_ARRAY_INDEX$")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_FEATURE_USAGE" ADD PRIMARY KEY ("FEATURE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_GEOR_XMLSCHEMA_TABLE" ADD PRIMARY KEY ("ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_GEOR_XMLSCHEMA_TABLE" ADD UNIQUE ("GEORASTERFORMAT")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_GEOR_SYSDATA_TABLE" ADD CONSTRAINT "UNIQUE_GEORASTERS" PRIMARY KEY ("SDO_OWNER", "RDT_TABLE_NAME", "RASTER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_GR_MOSAIC_0" ADD PRIMARY KEY ("ID") ENABLE;
ALTER TABLE "MDSYS"."SDO_GR_RDT_1" ADD CONSTRAINT "SDO_GR_RDT_1_PK" PRIMARY KEY ("RASTERDATATABLE", "RASTERID", "PYRAMIDLEVEL", "BANDBLOCKNUMBER", "ROWBLOCKNUMBER", "COLUMNBLOCKNUMBER") ENABLE;
ALTER TABLE "MDSYS"."SDO_GR_RDT_2" ADD CONSTRAINT "SDO_GR_RDT_2_PK" PRIMARY KEY ("RASTERID", "PYRAMIDLEVEL", "BANDBLOCKNUMBER", "ROWBLOCKNUMBER", "COLUMNBLOCKNUMBER") ENABLE;
ALTER TABLE "MDSYS"."SDO_GEOR_PLUGIN_REGISTRY" ADD PRIMARY KEY ("PLUGIN_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CHECK (NETWORK_CATEGORY IN ('SPATIAL','LOGICAL')) ENABLE;
ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CHECK (GEOMETRY_TYPE IN (NULL,'SDO_GEOMETRY','LRS_GEOMETRY',
      'TOPO_GEOMETRY')) ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CHECK (LINK_DIRECTION IN ('UNDIRECTED','BIDIRECTED','DIRECTED')) ENABLE;
ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_NETWORK_LAYER" UNIQUE ("SDO_OWNER", "NETWORK")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_NETWORK_NODE_LAYER" UNIQUE ("SDO_OWNER", "NETWORK", "NODE_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_NETWORK_LINK_LAYER" UNIQUE ("SDO_OWNER", "NETWORK", "LINK_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_LRS_GEOM_LAYER" UNIQUE ("SDO_OWNER", "NETWORK", "LRS_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_NETWORK_PATH_LAYER" UNIQUE ("SDO_OWNER", "NETWORK", "PATH_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_METADATA_TABLE" ADD CONSTRAINT "UNIQUE_NETWORK_PATH_LINK_LAYER" UNIQUE ("SDO_OWNER", "NETWORK", "PATH_LINK_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_CONSTRAINTS" ADD CONSTRAINT "UNIQUE_USER_CONSTRAINT" UNIQUE ("SDO_OWNER", "CONSTRAINT")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_CONSTRAINTS" ADD CONSTRAINT "UNIQUE_CLASS_CONSTRAINT" UNIQUE ("SDO_OWNER", "CLASS_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_LOCKS_WM" ADD CONSTRAINT "UNIQUE_NDM_LOCKS" UNIQUE ("SDO_OWNER", "LOCK_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_USER_DATA" ADD CONSTRAINT "UD_DATA_TYPE_CON" CHECK ( NLS_UPPER(data_type) IN ('VARCHAR2','INTEGER','NUMBER','SDO_GEOMETRY','DATE','TIMESTAMP','OBJECT')) ENABLE;
ALTER TABLE "MDSYS"."SDO_NETWORK_USER_DATA" ADD CONSTRAINT "UNIQUE_NDM_USER_DATA" UNIQUE ("SDO_OWNER", "NETWORK", "TABLE_TYPE", "DATA_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_HISTORIES" ADD CONSTRAINT "NETWORK_HISTROY_CONSTRAINT" UNIQUE ("OWNER", "NETWORK")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_NETWORK_TIMESTAMPS" ADD CONSTRAINT "NETWORK_TIMESTAMP_CONSTRAINT" UNIQUE ("OWNER", "NETWORK", "TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OPENLSSERVICES" ADD CONSTRAINT "OPENLSSERVICEDOMAIN" CHECK (
                SERVICE IN (
                  'Location Utility Service',
                  'Presentation Service',
                  'Route Service',
                  'Directory Service')) ENABLE;

ALTER TABLE "MDSYS"."OPENLSSERVICES" ADD UNIQUE ("SERVICE")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OPENLS_NODES" ADD CONSTRAINT "OPENLS_NODES_PRIM" PRIMARY KEY ("NAME", "VERSION")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OPENLS_XPATHS" ADD CONSTRAINT "OPENLS_PATHS_PRIM" PRIMARY KEY ("NAME", "VERSION")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OPENLS_CLASSIFICATIONS" ADD CONSTRAINT "OPENLS_CL_PRIM" PRIMARY KEY ("CRITERION", "CLASSIFICATION", "VERSION")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OPENLS_NAMESPACES" ADD CONSTRAINT "OPENLS_NA_PRIM" PRIMARY KEY ("SHORTCUT", "VERSION")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_BUSINESS_CHAINS" ADD PRIMARY KEY ("CHAIN_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORY_TYPES" ADD PRIMARY KEY ("CATEGORY_TYPE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIES" ADD PRIMARY KEY ("CATEGORY_ID", "CATEGORY_TYPE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_BUSINESSES" ADD PRIMARY KEY ("BUSINESS_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIZATIONS" ADD CONSTRAINT "CAT_TYPE_CONSTR" CHECK (CATEGORIZATION_TYPE IN ('EXPLICIT', 'IMPLICIT')) ENABLE;
ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIZATIONS" ADD CONSTRAINT "OLSPK1" PRIMARY KEY ("BUSINESS_ID", "CATEGORY_ID", "CATEGORY_TYPE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_WS_CONFERENCE" ADD CONSTRAINT "SDO_WS_CONF_PK" PRIMARY KEY ("CONFERENCE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_WS_CONFERENCE_RESULTS" ADD CONSTRAINT "SDO_WS_CONF_RES__PK" PRIMARY KEY ("CONFERENCE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_WS_CONFERENCE_PARTICIPANTS" ADD CONSTRAINT "SDO_WS_CONF_PART_PK" PRIMARY KEY ("CONFERENCE_ID", "PARTICIPANT")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPE$" ADD PRIMARY KEY ("FEATURETYPEID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPE$" ADD CONSTRAINT "UNIQUE_WFS_FT_COND" UNIQUE ("NAMESPACEURL", "FEATURETYPENAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPEXMLCOLINFO$" ADD PRIMARY KEY ("ID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."WFS_FTXSDINFO$" ADD PRIMARY KEY ("FTXSDREFID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."CURRENTSESSIONTOKENMAP_T$" ADD PRIMARY KEY ("SESSIONID", "TOKENID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."TOKENSESSIONMAP_T$" ADD PRIMARY KEY ("SESSIONID", "TOKENID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."TOKENSESSIONMAP_T$" ADD UNIQUE ("TOKENID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."ROWTOKENMAP_T$" ADD CONSTRAINT "UNIQUE_ROWTOKENMAP_COND" UNIQUE ("TABLENAME", "RPOINTER")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."CSW_RECORD_TYPES$" ADD CONSTRAINT "SDO_CSW_IDEXTTYPE_1" CHECK ( idExtractorType IN ('XPATH', 'USER_FUNC', 'NONE')) ENABLE;
ALTER TABLE "MDSYS"."CSW_RECORD_TYPES$" ADD PRIMARY KEY ("RECORDTYPEID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."CSW_RECORD_TYPES$" ADD CONSTRAINT "UNIQUE_CSW_RT_COND" UNIQUE ("TYPENAMENS", "TYPENAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."CSW_RTXSDINFO$" ADD PRIMARY KEY ("RTXSDREFID")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_TIN_PC_SEQ" ADD CONSTRAINT "SDO_PK_SEQ_TIN_PC" PRIMARY KEY ("SDO_OWNER", "TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_TIN_PC_SYSDATA_TABLE" ADD CONSTRAINT "SDO_PK_TIN_PC" PRIMARY KEY ("DEP_TABLE_SCHEMA", "DEP_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."SDO_TIN_PC_SYSDATA_TABLE" ADD CONSTRAINT "SDO_UNQ_PCATTR_TIN_PC" UNIQUE ("SDO_OWNER", "TABLE_NAME", "COLUMN_NAME", "DEP_TABLE_SCHEMA", "DEP_TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "MDSYS"."OGIS_GEOMETRY_COLUMNS" ADD CONSTRAINT "FK_SRID" FOREIGN KEY ("SRID")
	  REFERENCES "MDSYS"."OGIS_SPATIAL_REFERENCE_SYSTEMS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UNIT_OF_MEASURE_FOREIGN_LEGACY" FOREIGN KEY ("LEGACY_CODE")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "UNIT_OF_MEASURE_FOREIGN_UOM" FOREIGN KEY ("TARGET_UOM_ID")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_UNITS_OF_MEASURE" ADD CONSTRAINT "ELLIPSOID_FOREIGN_LEGACY" FOREIGN KEY ("LEGACY_CODE")
	  REFERENCES "MDSYS"."SDO_ELLIPSOIDS" ("ELLIPSOID_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_PRIME_MERIDIANS" ADD CONSTRAINT "PRIME_MERIDIAN_FOREIGN_UOM" FOREIGN KEY ("UOM_ID")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_ELLIPSOIDS" ADD CONSTRAINT "ELLIPSOID_FOREIGN_UOM" FOREIGN KEY ("UOM_ID")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_DATUMS" ADD CONSTRAINT "DATUM_FOREIGN_ELLIPSOID" FOREIGN KEY ("ELLIPSOID_ID")
	  REFERENCES "MDSYS"."SDO_ELLIPSOIDS" ("ELLIPSOID_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_DATUMS" ADD CONSTRAINT "DATUM_FOREIGN_MERIDIAN" FOREIGN KEY ("PRIME_MERIDIAN_ID")
	  REFERENCES "MDSYS"."SDO_PRIME_MERIDIANS" ("PRIME_MERIDIAN_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_DATUMS" ADD CONSTRAINT "DATUM_FOREIGN_LEGACY" FOREIGN KEY ("LEGACY_CODE")
	  REFERENCES "MDSYS"."SDO_DATUMS" ("DATUM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXES" ADD CONSTRAINT "COORD_AXIS_FOREIGN_CS" FOREIGN KEY ("COORD_SYS_ID")
	  REFERENCES "MDSYS"."SDO_COORD_SYS" ("COORD_SYS_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXES" ADD CONSTRAINT "COORD_AXIS_FOREIGN_UOM" FOREIGN KEY ("UOM_ID")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_AXES" ADD CONSTRAINT "COORD_AXIS_FOREIGN_AXIS" FOREIGN KEY ("COORD_AXIS_NAME_ID")
	  REFERENCES "MDSYS"."SDO_COORD_AXIS_NAMES" ("COORD_AXIS_NAME_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_CS" FOREIGN KEY ("COORD_SYS_ID")
	  REFERENCES "MDSYS"."SDO_COORD_SYS" ("COORD_SYS_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_DATUM" FOREIGN KEY ("DATUM_ID")
	  REFERENCES "MDSYS"."SDO_DATUMS" ("DATUM_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_PROJ" FOREIGN KEY ("PROJECTION_CONV_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OPS" ("COORD_OP_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_LEGACY" FOREIGN KEY ("LEGACY_CODE")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_GEOG" FOREIGN KEY ("SOURCE_GEOG_SRID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_HORIZ" FOREIGN KEY ("CMPD_HORIZ_SRID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_REF_SYS" ADD CONSTRAINT "COORD_REF_SYS_FOREIGN_VERT" FOREIGN KEY ("CMPD_VERT_SRID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OPERATION_FOREIGN_SOURCE" FOREIGN KEY ("SOURCE_SRID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OPERATION_FOREIGN_TARGET" FOREIGN KEY ("TARGET_SRID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OPERATION_FOREIGN_METHOD" FOREIGN KEY ("COORD_OP_METHOD_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OP_METHODS" ("COORD_OP_METHOD_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OPS" ADD CONSTRAINT "COORD_OPERATION_FOREIGN_LEGACY" FOREIGN KEY ("LEGACY_CODE")
	  REFERENCES "MDSYS"."SDO_COORD_OPS" ("COORD_OP_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PATHS" ADD CONSTRAINT "COORD_OP_PATH_FOREIGN_SOURCE" FOREIGN KEY ("SINGLE_OP_SOURCE_ID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PATHS" ADD CONSTRAINT "COORD_OP_PATH_FOREIGN_TARGET" FOREIGN KEY ("SINGLE_OP_TARGET_ID")
	  REFERENCES "MDSYS"."SDO_COORD_REF_SYS" ("SRID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_USE" ADD CONSTRAINT "COORD_OP_PARA_USE_FOREIGN_METH" FOREIGN KEY ("COORD_OP_METHOD_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OP_METHODS" ("COORD_OP_METHOD_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_USE" ADD CONSTRAINT "COORD_OP_PARA_USE_FOREIGN_PARA" FOREIGN KEY ("PARAMETER_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OP_PARAMS" ("PARAMETER_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_VALS" ADD CONSTRAINT "COORD_OP_PARA_VAL_FOREIGN_OP" FOREIGN KEY ("COORD_OP_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OPS" ("COORD_OP_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_VALS" ADD CONSTRAINT "COORD_OP_PARA_VAL_FOREIGN_METH" FOREIGN KEY ("COORD_OP_METHOD_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OP_METHODS" ("COORD_OP_METHOD_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_VALS" ADD CONSTRAINT "COORD_OP_PARA_VAL_FOREIGN_PARA" FOREIGN KEY ("PARAMETER_ID")
	  REFERENCES "MDSYS"."SDO_COORD_OP_PARAMS" ("PARAMETER_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_COORD_OP_PARAM_VALS" ADD CONSTRAINT "COORD_OP_PARA_VAL_FOREIGN_UOM" FOREIGN KEY ("UOM_ID")
	  REFERENCES "MDSYS"."SDO_UNITS_OF_MEASURE" ("UOM_ID") ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIES" ADD CONSTRAINT "OLSFK1" FOREIGN KEY ("PARENT_ID", "CATEGORY_TYPE_ID")
	  REFERENCES "MDSYS"."OLS_DIR_CATEGORIES" ("CATEGORY_ID", "CATEGORY_TYPE_ID") ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIES" ADD CONSTRAINT "OLSFK2" FOREIGN KEY ("CATEGORY_TYPE_ID")
	  REFERENCES "MDSYS"."OLS_DIR_CATEGORY_TYPES" ("CATEGORY_TYPE_ID") ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_BUSINESSES" ADD CONSTRAINT "OLSFK3" FOREIGN KEY ("CHAIN_ID")
	  REFERENCES "MDSYS"."OLS_DIR_BUSINESS_CHAINS" ("CHAIN_ID") ENABLE;

ALTER TABLE "MDSYS"."OLS_DIR_CATEGORIZATIONS" ADD CONSTRAINT "OLSFK5" FOREIGN KEY ("CATEGORY_ID", "CATEGORY_TYPE_ID")
	  REFERENCES "MDSYS"."OLS_DIR_CATEGORIES" ("CATEGORY_ID", "CATEGORY_TYPE_ID") ENABLE;

ALTER TABLE "MDSYS"."SDO_WS_CONFERENCE_PARTICIPANTS" ADD CONSTRAINT "SDO_WS_CONF_PART_FK" FOREIGN KEY ("CONFERENCE_ID")
	  REFERENCES "MDSYS"."SDO_WS_CONFERENCE" ("CONFERENCE_ID") ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPETAGS$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATUREINSTANCEMETADATA$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPEATTRS$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPESIMPLETAGATTRS$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPEXMLCOLINFO$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."WFS_FEATURETYPENESTEDSDOS$" ADD FOREIGN KEY ("FEATURETYPEID")
	  REFERENCES "MDSYS"."WFS_FEATURETYPE$" ("FEATURETYPEID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."ROWTOKENMAP_T$" ADD FOREIGN KEY ("TOKENID")
	  REFERENCES "MDSYS"."TOKENSESSIONMAP_T$" ("TOKENID") ON DELETE CASCADE ENABLE;

ALTER TABLE "MDSYS"."CSW_DOMAININFO$" ADD FOREIGN KEY ("RECORDTYPEID")
	  REFERENCES "MDSYS"."CSW_RECORD_TYPES$" ("RECORDTYPEID") ON DELETE CASCADE ENABLE;

