ALTER USER "SYSTEM" IDENTIFIED BY VALUES 'S:958238B9854573441EFF12B282D2212CB26D9A8DC1E6106D2F21E1ACBD37;H:D205D19B0D570D6FD820BD1FE805415E;T:587348AB8EE8FD938679EABD8D25B4C386084FF3A836EAAFEFB67B44334FF889649E198D9B71C16C5C918E50C061F6405B55BB078C9EB4E06B917BDF4BF51629055FAABD281A02BB6749C8D58648AA45;EED9B65CCECDB2E9'
      TEMPORARY TABLESPACE "TEMP";

ALTER USER "SYSTEM" DEFAULT ROLE ALL;
CREATE SEQUENCE  "SYSTEM"."LOGMNR_EVOLVE_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."LOGMNR_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."LOGMNR_DIDS$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."LOGMNR_UIDS$"  MINVALUE 100 MAXVALUE 99999 INCREMENT BY 1 START WITH 100 NOCACHE  ORDER  CYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."ROLLING_EVENT_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."MVIEW$_ADVSEQ_GENERIC"  MINVALUE 1 MAXVALUE 4294967295 INCREMENT BY 1 START WITH 1 CACHE 50 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."MVIEW$_ADVSEQ_ID"  MINVALUE 1 MAXVALUE 4294967295 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_FLAVORS_S"  MINVALUE -2147483647 MAXVALUE 2147483647 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_FLAVOR_NAME_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_REPPROP_KEY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT_LOG_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_REFRESH_TEMPLATES_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_TEMPLATE_PARMS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_USER_PARM_VALUES_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_TEMPLATE_SITES_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_TEMP_OUTPUT_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_RUNTIME_PARMS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."TEMPLATE$_TARGETS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  "SYSTEM"."REPCAT$_EXCEPTIONS_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."SYSCATALOG" FOR "SYS"."SYSCATALOG";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."CATALOG" FOR "SYS"."CATALOG";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."TAB" FOR "SYS"."TAB";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."COL" FOR "SYS"."COL";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."TABQUOTAS" FOR "SYS"."TABQUOTAS";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."SYSFILES" FOR "SYS"."SYSFILES";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."PUBLICSYN" FOR "SYS"."PUBLICSYN";
CREATE OR REPLACE NONEDITIONABLE SYNONYM "SYSTEM"."PRODUCT_USER_PROFILE" FOR "SYSTEM"."SQLPLUS_PRODUCT_PROFILE";
CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."REPCAT$_OBJECT_NULL_VECTOR" AS OBJECT
(
  -- type owner, name, hashcode for the type represented by null_vector
  type_owner      VARCHAR2(30),
  type_name       VARCHAR2(30),
  type_hashcode   RAW(17),
  -- null_vector for a particular object instance
  -- ROBJ REVISIT: should only contain the null image, and not version#
  null_vector     RAW(2000)
)
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$TAB_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
BASEOBJV# NUMBER,
MD_TAB_USERID NUMBER,                /* owner# */
MD_TAB_COLCOUNT NUMBER,              /* user column count */
MD_TAB_TOTAL_COL_NUM NUMBER,         /* kernal column count */
MD_TAB_LOG_GROUP_EXISTS NUMBER,      /* Any log group exists for this table */
MD_TAB_IOT VARCHAR2(3) ,             /* 'YES'/'NO' IS IOT? */
MD_TAB_IOT_OVERFLOW VARCHAR2(3) ,    /* 'YES'/'NO' IOT with overflow ? */
MD_TAB_PARTITION  VARCHAR2(3) ,      /* 'YES'/'NO' is partitioned ? */
MD_TAB_SUBPARTITION VARCHAR2(3) ,    /* 'YES'/'NO' is sub partitioned? */
MD_TAB_XMLTYPETABLE VARCHAR2(3) ,    /* 'YES'/'NO' is xmltype table? */
MD_TAB_OBJECTID NUMBER,              /* object id if table object */
MD_TAB_OWNER VARCHAR2(128),          /* owner name */
MD_TAB_NAME VARCHAR2(128),           /* table name */
MD_TAB_OBJTYPE VARCHAR2(128),        /* Object type name */
MD_TAB_SCN NUMBER,                   /* COMMIT_SCN of this table version */
TAB_FLAGS NUMBER,
TRIGFLAG NUMBER,
OBJ_FLAGS NUMBER,
PROPERTY NUMBER,
PARTTYPE NUMBER,
SUBPARTTYPE NUMBER,
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000),
/* Following fields added in 12.1.0.2 */
LVLCNT NUMBER,
LVL1OBJ# NUMBER,
LVL2OBJ# NUMBER,
LVL1TYPE# NUMBER,
LVL2TYPE# NUMBER,
LVL1NAME  VARCHAR2(128),
LVL2NAME  VARCHAR2(128),
INTCOLS   NUMBER,
ASSOC#    NUMBER,
XIDUSN    NUMBER,
XIDSLT    NUMBER,
XIDSQN    NUMBER,
DROP_SCN  NUMBER,
FLAGS     NUMBER,
LOGMNR_SPARE1   NUMBER,
LOGMNR_SPARE2   NUMBER,
LOGMNR_SPARE3   VARCHAR2(1000),
LOGMNR_SPARE4   DATE,
LOGMNR_SPARE5   NUMBER,
LOGMNR_SPARE6   NUMBER,
LOGMNR_SPARE7   NUMBER,
LOGMNR_SPARE8   NUMBER,
LOGMNR_SPARE9   NUMBER,
UNSUPPORTEDCOLS  NUMBER,
COMPLEXTYPECOLS  NUMBER,
NTPARENTOBJNUM   NUMBER,
NTPARENTOBJVERSION NUMBER,
NTPARENTINTCOLNUM  NUMBER,
LOGMNRTLOFLAGS    NUMBER,
LOGMNRMCV VARCHAR2(30)
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$COL_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
MD_COL_NAME VARCHAR2(128),
MD_COL_NUM NUMBER,                 /* col# */
MD_COL_SEGCOL NUMBER,              /* segcol# */
MD_COL_TYPE NUMBER,                /* type# */
MD_COL_LEN NUMBER,
MD_COL_PREC NUMBER,                /* precision */
MD_COL_SCALE NUMBER,
MD_COL_CHARSETID NUMBER,           /* character set id */
MD_COL_CHARSETFORM NUMBER,         /* character set form */
MD_COL_ALT_TYPE VARCHAR2(4000),    /* adt type if any */
MD_COL_ALT_PREC NUMBER,            /* precision of the adt attribute */
MD_COL_ALT_CHAR_USED VARCHAR2(2),  /* charset used by the adt attribute */
MD_COL_ALT_LENGTH NUMBER,          /* length of the adt attribute */
MD_COL_ALT_XML_TYPE NUMBER,        /* 0/1. is xml_type column */
MD_COL_ALT_BINARYXML_TYPE NUMBER,  /* 0/1. is xml_type stored as binary */
MD_COL_ENC_ISENC VARCHAR2(3) ,     /* 'YES'/'NO' */
MD_COL_ENC_NOSALT VARCHAR2(3) ,    /* 'YES'/'NO' */
MD_COL_ENC_ISLOB VARCHAR2(3) ,     /* 'YES'/'NO' */
MD_COL_ALT_OBJECTXML_TYPE NUMBER,  /* 0/1 xml_type stored as object */
MD_COL_HASNOTNULLDEFAULT VARCHAR2(3) ,   /* 'YES'/'NO' */
MD_COL_ALT_TYPE_OWNER VARCHAR2(128),  /* owner of the adt type if any */
PROPERTY NUMBER,
XCOLTYPEFLAGS NUMBER,
XOPQTYPEFLAGS NUMBER,
EAFLAGS NUMBER,
XFQCOLNAME VARCHAR2(4000),
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000),
/* Following fields added in 12.1.0.2 */
OBJV# NUMBER,
INTCOL# NUMBER,
INTERVAL_LEADING_PRECISION NUMBER,
INTERVAL_TRAILING_PRECISION NUMBER,
TOID RAW(16),
TYPENAME VARCHAR2(128),
NUMINTCOLS NUMBER,
NUMATTRS NUMBER,
ADTORDER NUMBER,
LOGMNR_SPARE1 NUMBER,
LOGMNR_SPARE2 NUMBER,
LOGMNR_SPARE3 VARCHAR2(1000),
LOGMNR_SPARE4 DATE,
LOGMNR_SPARE5 NUMBER,
LOGMNR_SPARE6 NUMBER,
LOGMNR_SPARE7 NUMBER,
LOGMNR_SPARE8 NUMBER,
LOGMNR_SPARE9 NUMBER,
XTYPENAME VARCHAR2(4000),
XTOPINTCOL NUMBER,
XREFFEDTABLEOBJN NUMBER,
XREFFEDTABLEOBJV NUMBER,
XOPQTYPETYPE NUMBER,
XOPQLOBINTCOL NUMBER,
XOPQOBJINTCOL NUMBER,
XXMLINTCOL    NUMBER,
LOGMNRDERIVEDFLAGS NUMBER
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$SEQ_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
NAME VARCHAR2(128),
OWNER# NUMBER,
OWNERNAME VARCHAR2(128),
FLAGS NUMBER,
MD_TAB_SEQCACHE NUMBER,
MD_TAB_SEQINCREMENTBY NUMBER,
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000)
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$KEY_GG_REC" as object
(
LOGMNR_UID NUMBER,
KEY# NUMBER,                   /* index obj# or con# */
KEY_FLAGS NUMBER,              /* index or constraint */
KEY_NAME VARCHAR2(128),        /* index name or constraint name */
INDEX_OWNER# NUMBER,
INDEX_OWNERNAME VARCHAR2(128),
COLNAME VARCHAR2(128),
INTCOL# NUMBER,
which number,
KEY_ORDER VARCHAR2(10),              /* asc or desc */
KEYCOL_FLAGS NUMBER,           /* Column properties such as is_null */
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000)
);
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$TAB_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$TAB_GG_REC;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$COL_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$COL_GG_REC;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$SEQ_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$SEQ_GG_REC;
/

CREATE OR REPLACE NONEDITIONABLE TYPE "SYSTEM"."LOGMNR$KEY_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$KEY_GG_REC;
/

CREATE TABLE "SYSTEM"."LOGMNR_DICTSTATE$"
   (	"LOGMNR_UID" NUMBER(22,0),
	"START_SCNBAS" NUMBER,
	"START_SCNWRP" NUMBER,
	"END_SCNBAS" NUMBER,
	"END_SCNWRP" NUMBER,
	"REDO_THREAD" NUMBER,
	"RBASQN" NUMBER,
	"RBABLK" NUMBER,
	"RBABYTE" NUMBER,
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_GTLO"
   (	"LOGMNR_UID" NUMBER,
	"KEYOBJ#" NUMBER,
	"LVLCNT" NUMBER,
	"BASEOBJ#" NUMBER,
	"BASEOBJV#" NUMBER,
	"LVL1OBJ#" NUMBER,
	"LVL2OBJ#" NUMBER,
	"LVL0TYPE#" NUMBER,
	"LVL1TYPE#" NUMBER,
	"LVL2TYPE#" NUMBER,
	"OWNER#" NUMBER,
	"OWNERNAME" VARCHAR2(128),
	"LVL0NAME" VARCHAR2(128),
	"LVL1NAME" VARCHAR2(128),
	"LVL2NAME" VARCHAR2(128),
	"INTCOLS" NUMBER,
	"COLS" NUMBER,
	"KERNELCOLS" NUMBER,
	"TAB_FLAGS" NUMBER,
	"TRIGFLAG" NUMBER,
	"ASSOC#" NUMBER,
	"OBJ_FLAGS" NUMBER,
	"TS#" NUMBER,
	"TSNAME" VARCHAR2(30),
	"PROPERTY" NUMBER,
	"START_SCN" NUMBER,
	"DROP_SCN" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"FLAGS" NUMBER,
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE,
	"LOGMNR_SPARE5" NUMBER,
	"LOGMNR_SPARE6" NUMBER,
	"LOGMNR_SPARE7" NUMBER,
	"LOGMNR_SPARE8" NUMBER,
	"LOGMNR_SPARE9" NUMBER,
	"PARTTYPE" NUMBER,
	"SUBPARTTYPE" NUMBER,
	"UNSUPPORTEDCOLS" NUMBER,
	"COMPLEXTYPECOLS" NUMBER,
	"NTPARENTOBJNUM" NUMBER,
	"NTPARENTOBJVERSION" NUMBER,
	"NTPARENTINTCOLNUM" NUMBER,
	"LOGMNRTLOFLAGS" NUMBER,
	"LOGMNRMCV" VARCHAR2(30)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_GTCS"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"OBJV#" NUMBER,
	"SEGCOL#" NUMBER,
	"INTCOL#" NUMBER,
	"COLNAME" VARCHAR2(128),
	"TYPE#" NUMBER,
	"LENGTH" NUMBER,
	"PRECISION" NUMBER,
	"SCALE" NUMBER,
	"INTERVAL_LEADING_PRECISION" NUMBER,
	"INTERVAL_TRAILING_PRECISION" NUMBER,
	"PROPERTY" NUMBER,
	"TOID" RAW(16),
	"CHARSETID" NUMBER,
	"CHARSETFORM" NUMBER,
	"TYPENAME" VARCHAR2(128),
	"FQCOLNAME" VARCHAR2(4000),
	"NUMINTCOLS" NUMBER,
	"NUMATTRS" NUMBER,
	"ADTORDER" NUMBER,
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE,
	"LOGMNR_SPARE5" NUMBER,
	"LOGMNR_SPARE6" NUMBER,
	"LOGMNR_SPARE7" NUMBER,
	"LOGMNR_SPARE8" NUMBER,
	"LOGMNR_SPARE9" NUMBER,
	"COL#" NUMBER,
	"XTYPESCHEMANAME" VARCHAR2(128),
	"XTYPENAME" VARCHAR2(4000),
	"XFQCOLNAME" VARCHAR2(4000),
	"XTOPINTCOL" NUMBER,
	"XREFFEDTABLEOBJN" NUMBER,
	"XREFFEDTABLEOBJV" NUMBER,
	"XCOLTYPEFLAGS" NUMBER,
	"XOPQTYPETYPE" NUMBER,
	"XOPQTYPEFLAGS" NUMBER,
	"XOPQLOBINTCOL" NUMBER,
	"XOPQOBJINTCOL" NUMBER,
	"XXMLINTCOL" NUMBER,
	"EAOWNER#" NUMBER,
	"EAMKEYID" VARCHAR2(64),
	"EAENCALG" NUMBER,
	"EAINTALG" NUMBER,
	"EACOLKLC" RAW(2000),
	"EAKLCLEN" NUMBER,
	"EAFLAGS" NUMBER,
	"LOGMNRDERIVEDFLAGS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_SEQ_GG"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"COMMIT_SCN" NUMBER,
	"DROP_SCN" NUMBER,
	"SEQ_FLAGS" NUMBER,
	"OWNER#" NUMBER,
	"OWNERNAME" VARCHAR2(128),
	"OBJNAME" VARCHAR2(128),
	"SEQCACHE" NUMBER,
	"SEQINC" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000),
	"SPARE4" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_CON_GG"
   (	"LOGMNR_UID" NUMBER,
	"CON#" NUMBER,
	"NAME" VARCHAR2(128),
	"COMMIT_SCN" NUMBER,
	"DROP_SCN" NUMBER,
	"BASEOBJ#" NUMBER,
	"BASEOBJV#" NUMBER,
	"FLAGS" NUMBER,
	"INDEXOBJ#" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" VARCHAR2(4000),
	"SPARE5" VARCHAR2(4000),
	"SPARE6" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_CONCOL_GG"
   (	"LOGMNR_UID" NUMBER,
	"CON#" NUMBER,
	"COMMIT_SCN" NUMBER,
	"INTCOL#" NUMBER,
	"POS#" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_IND_GG"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"NAME" VARCHAR2(128),
	"COMMIT_SCN" NUMBER,
	"DROP_SCN" NUMBER,
	"BASEOBJ#" NUMBER,
	"BASEOBJV#" NUMBER,
	"FLAGS" NUMBER,
	"OWNER#" NUMBER,
	"OWNERNAME" VARCHAR2(128),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" VARCHAR2(4000),
	"SPARE5" VARCHAR2(4000),
	"SPARE6" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_INDCOL_GG"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"COMMIT_SCN" NUMBER,
	"INTCOL#" NUMBER,
	"POS#" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_GSII"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"BO#" NUMBER,
	"INDTYPE#" NUMBER,
	"DROP_SCN" NUMBER,
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_GSBA"
   (	"LOGMNR_UID" NUMBER,
	"AS_OF_SCN" NUMBER,
	"FDO_LENGTH" NUMBER,
	"FDO_VALUE" RAW(255),
	"CHARSETID" NUMBER,
	"NCHARSETID" NUMBER,
	"DBTIMEZONE_LEN" NUMBER,
	"DBTIMEZONE_VALUE" VARCHAR2(64),
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_SEED$"
   (	"SEED_VERSION" NUMBER(22,0),
	"GATHER_VERSION" NUMBER(22,0),
	"SCHEMANAME" VARCHAR2(128),
	"OBJ#" NUMBER,
	"OBJV#" NUMBER(22,0),
	"TABLE_NAME" VARCHAR2(128),
	"COL_NAME" VARCHAR2(128),
	"COL#" NUMBER,
	"INTCOL#" NUMBER,
	"SEGCOL#" NUMBER,
	"TYPE#" NUMBER,
	"LENGTH" NUMBER,
	"PRECISION#" NUMBER,
	"SCALE" NUMBER,
	"NULL$" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_DICTIONARY$"
   (	"DB_NAME" VARCHAR2(9),
	"DB_ID" NUMBER(20,0),
	"DB_CREATED" VARCHAR2(20),
	"DB_DICT_CREATED" VARCHAR2(20),
	"DB_DICT_SCN" NUMBER(22,0),
	"DB_THREAD_MAP" RAW(8),
	"DB_TXN_SCNBAS" NUMBER(22,0),
	"DB_TXN_SCNWRP" NUMBER(22,0),
	"DB_RESETLOGS_CHANGE#" NUMBER(22,0),
	"DB_RESETLOGS_TIME" VARCHAR2(20),
	"DB_VERSION_TIME" VARCHAR2(20),
	"DB_REDO_TYPE_ID" VARCHAR2(8),
	"DB_REDO_RELEASE" VARCHAR2(60),
	"DB_CHARACTER_SET" VARCHAR2(128),
	"DB_VERSION" VARCHAR2(64),
	"DB_STATUS" VARCHAR2(64),
	"DB_GLOBAL_NAME" VARCHAR2(128),
	"DB_DICT_MAXOBJECTS" NUMBER(22,0),
	"DB_DICT_OBJECTCOUNT" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0),
	"PDB_NAME" VARCHAR2(30),
	"PDB_ID" NUMBER,
	"PDB_UID" NUMBER,
	"PDB_DBID" NUMBER,
	"PDB_GUID" RAW(16),
	"PDB_CREATE_SCN" NUMBER,
	"PDB_COUNT" NUMBER,
	"PDB_GLOBAL_NAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_OBJ$"
   (	"OBJV#" NUMBER(22,0),
	"OWNER#" NUMBER(22,0),
	"NAME" VARCHAR2(128),
	"NAMESPACE" NUMBER(22,0),
	"SUBNAME" VARCHAR2(128),
	"TYPE#" NUMBER(22,0),
	"OID$" RAW(16),
	"REMOTEOWNER" VARCHAR2(128),
	"LINKNAME" VARCHAR2(128),
	"FLAGS" NUMBER(22,0),
	"SPARE3" NUMBER(22,0),
	"STIME" DATE,
	"OBJ#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0),
	"START_SCNBAS" NUMBER,
	"START_SCNWRP" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TAB$"
   (	"TS#" NUMBER(22,0),
	"COLS" NUMBER(22,0),
	"PROPERTY" NUMBER(22,0),
	"INTCOLS" NUMBER(22,0),
	"KERNELCOLS" NUMBER(22,0),
	"BOBJ#" NUMBER(22,0),
	"TRIGFLAG" NUMBER(22,0),
	"FLAGS" NUMBER(22,0),
	"OBJ#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_COL$"
   (	"COL#" NUMBER(22,0),
	"SEGCOL#" NUMBER(22,0),
	"NAME" VARCHAR2(128),
	"TYPE#" NUMBER(22,0),
	"LENGTH" NUMBER(22,0),
	"PRECISION#" NUMBER(22,0),
	"SCALE" NUMBER(22,0),
	"NULL$" NUMBER(22,0),
	"INTCOL#" NUMBER(22,0),
	"PROPERTY" NUMBER(22,0),
	"CHARSETID" NUMBER(22,0),
	"CHARSETFORM" NUMBER(22,0),
	"SPARE1" NUMBER(22,0),
	"SPARE2" NUMBER(22,0),
	"OBJ#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_ATTRCOL$"
   (	"INTCOL#" NUMBER,
	"NAME" VARCHAR2(4000),
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TS$"
   (	"TS#" NUMBER(22,0),
	"NAME" VARCHAR2(30),
	"OWNER#" NUMBER(22,0),
	"BLOCKSIZE" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_IND$"
   (	"BO#" NUMBER(22,0),
	"COLS" NUMBER(22,0),
	"TYPE#" NUMBER(22,0),
	"FLAGS" NUMBER,
	"PROPERTY" NUMBER,
	"OBJ#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_USER$"
   (	"USER#" NUMBER(22,0),
	"NAME" VARCHAR2(128),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TABPART$"
   (	"OBJ#" NUMBER(22,0),
	"TS#" NUMBER(22,0),
	"PART#" NUMBER,
	"BO#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TABSUBPART$"
   (	"OBJ#" NUMBER(22,0),
	"DATAOBJ#" NUMBER(22,0),
	"POBJ#" NUMBER(22,0),
	"SUBPART#" NUMBER(22,0),
	"TS#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TABCOMPART$"
   (	"OBJ#" NUMBER(22,0),
	"BO#" NUMBER(22,0),
	"PART#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_TYPE$"
   (	"VERSION#" NUMBER,
	"VERSION" VARCHAR2(128),
	"TVOID" RAW(16),
	"TYPECODE" NUMBER,
	"PROPERTIES" NUMBER,
	"ATTRIBUTES" NUMBER,
	"METHODS" NUMBER,
	"HIDDENMETHODS" NUMBER,
	"SUPERTYPES" NUMBER,
	"SUBTYPES" NUMBER,
	"EXTERNTYPE" NUMBER,
	"EXTERNNAME" VARCHAR2(4000),
	"HELPERCLASSNAME" VARCHAR2(4000),
	"LOCAL_ATTRS" NUMBER,
	"LOCAL_METHODS" NUMBER,
	"TYPEID" RAW(16),
	"ROOTTOID" RAW(16),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SUPERTOID" RAW(16),
	"HASHCODE" RAW(17),
	"TOID" RAW(16),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_COLTYPE$"
   (	"COL#" NUMBER,
	"INTCOL#" NUMBER,
	"TOID" RAW(16),
	"VERSION#" NUMBER,
	"PACKED" NUMBER,
	"INTCOLS" NUMBER,
	"INTCOL#S" RAW(2000),
	"FLAGS" NUMBER,
	"TYPIDCOL#" NUMBER,
	"SYNOBJ#" NUMBER,
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$"
   (	"VERSION#" NUMBER,
	"NAME" VARCHAR2(128),
	"ATTRIBUTE#" NUMBER,
	"ATTR_TOID" RAW(16),
	"ATTR_VERSION#" NUMBER,
	"SYNOBJ#" NUMBER,
	"PROPERTIES" NUMBER,
	"CHARSETID" NUMBER,
	"CHARSETFORM" NUMBER,
	"LENGTH" NUMBER,
	"PRECISION#" NUMBER,
	"SCALE" NUMBER,
	"EXTERNNAME" VARCHAR2(4000),
	"XFLAGS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" NUMBER,
	"SETTER" NUMBER,
	"GETTER" NUMBER,
	"TOID" RAW(16),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_LOB$"
   (	"OBJ#" NUMBER,
	"INTCOL#" NUMBER,
	"COL#" NUMBER,
	"LOBJ#" NUMBER,
	"CHUNK" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_CON$"
   (	"OWNER#" NUMBER,
	"NAME" VARCHAR2(128),
	"CON#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0),
	"START_SCNBAS" NUMBER,
	"START_SCNWRP" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_CONTAINER$"
   (	"OBJ#" NUMBER,
	"CON_ID#" NUMBER,
	"DBID" NUMBER,
	"CON_UID" NUMBER,
	"CREATE_SCNWRP" NUMBER,
	"CREATE_SCNBAS" NUMBER,
	"FLAGS" NUMBER,
	"STATUS" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_CDEF$"
   (	"CON#" NUMBER,
	"COLS" NUMBER,
	"TYPE#" NUMBER,
	"ROBJ#" NUMBER,
	"RCON#" NUMBER,
	"ENABLED" NUMBER,
	"DEFER" NUMBER,
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_CCOL$"
   (	"CON#" NUMBER,
	"OBJ#" NUMBER,
	"COL#" NUMBER,
	"POS#" NUMBER,
	"INTCOL#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_ICOL$"
   (	"OBJ#" NUMBER,
	"BO#" NUMBER,
	"COL#" NUMBER,
	"POS#" NUMBER,
	"SEGCOL#" NUMBER,
	"INTCOL#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_LOBFRAG$"
   (	"FRAGOBJ#" NUMBER,
	"PARENTOBJ#" NUMBER,
	"TABFRAGOBJ#" NUMBER,
	"INDFRAGOBJ#" NUMBER,
	"FRAG#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_INDPART$"
   (	"OBJ#" NUMBER,
	"BO#" NUMBER,
	"PART#" NUMBER,
	"TS#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_INDSUBPART$"
   (	"OBJ#" NUMBER(22,0),
	"DATAOBJ#" NUMBER(22,0),
	"POBJ#" NUMBER(22,0),
	"SUBPART#" NUMBER(22,0),
	"TS#" NUMBER(22,0),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_INDCOMPART$"
   (	"OBJ#" NUMBER,
	"DATAOBJ#" NUMBER,
	"BO#" NUMBER,
	"PART#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG"
   (	"BUILD_DATE" VARCHAR2(20),
	"DB_TXN_SCNBAS" NUMBER,
	"DB_TXN_SCNWRP" NUMBER,
	"CURRENT_BUILD_STATE" NUMBER,
	"COMPLETION_STATUS" NUMBER,
	"MARKED_LOG_FILE_LOW_SCN" NUMBER,
	"INITIAL_XID" VARCHAR2(22),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0),
	"CDB_XID" VARCHAR2(22),
	"SPARE1" NUMBER,
	"SPARE2" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_NTAB$"
   (	"COL#" NUMBER,
	"INTCOL#" NUMBER,
	"NTAB#" NUMBER,
	"NAME" VARCHAR2(4000),
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_OPQTYPE$"
   (	"INTCOL#" NUMBER,
	"TYPE" NUMBER,
	"FLAGS" NUMBER,
	"LOBCOL" NUMBER,
	"OBJCOL" NUMBER,
	"EXTRACOL" NUMBER,
	"SCHEMAOID" RAW(16),
	"ELEMNUM" NUMBER,
	"SCHEMAURL" VARCHAR2(4000),
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$"
   (	"INTCOL#" NUMBER,
	"TOID" RAW(16),
	"VERSION#" NUMBER,
	"INTCOLS" NUMBER,
	"INTCOL#S" RAW(2000),
	"FLAGS" NUMBER,
	"SYNOBJ#" NUMBER,
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_KOPM$"
   (	"LENGTH" NUMBER,
	"METADATA" RAW(255),
	"NAME" VARCHAR2(128),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_PROPS$"
   (	"VALUE$" VARCHAR2(4000),
	"COMMENT$" VARCHAR2(4000),
	"NAME" VARCHAR2(128),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_ENC$"
   (	"OBJ#" NUMBER,
	"OWNER#" NUMBER,
	"ENCALG" NUMBER,
	"INTALG" NUMBER,
	"COLKLC" RAW(2000),
	"KLCLEN" NUMBER,
	"FLAG" NUMBER,
	"MKEYID" VARCHAR2(64),
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_REFCON$"
   (	"COL#" NUMBER,
	"INTCOL#" NUMBER,
	"REFTYP" NUMBER,
	"STABID" RAW(16),
	"EXPCTOID" RAW(16),
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_PARTOBJ$"
   (	"PARTTYPE" NUMBER,
	"PARTCNT" NUMBER,
	"PARTKEYCOLS" NUMBER,
	"FLAGS" NUMBER,
	"DEFTS#" NUMBER,
	"DEFPCTFREE" NUMBER,
	"DEFPCTUSED" NUMBER,
	"DEFPCTTHRES" NUMBER,
	"DEFINITRANS" NUMBER,
	"DEFMAXTRANS" NUMBER,
	"DEFTINIEXTS" NUMBER,
	"DEFEXTSIZE" NUMBER,
	"DEFMINEXTS" NUMBER,
	"DEFMAXEXTS" NUMBER,
	"DEFEXTPCT" NUMBER,
	"DEFLISTS" NUMBER,
	"DEFGROUPS" NUMBER,
	"DEFLOGGING" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"DEFINCLCOL" NUMBER,
	"PARAMETERS" VARCHAR2(1000),
	"OBJ#" NUMBER,
	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_FLAGS" NUMBER(22,0)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP"
   (	"LOGMNR_UID" NUMBER,
	"BASEOBJ#" NUMBER,
	"BASEOBJV#" NUMBER,
	"KEYOBJ#" NUMBER,
	"PART#" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(1000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$APPLY_PROGRESS"
   (	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"COMMIT_SCN" NUMBER,
	"COMMIT_TIME" DATE,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_SESSION_EVOLVE$"
   (	"BRANCH_LEVEL" NUMBER,
	"SESSION#" NUMBER,
	"DB_ID" NUMBER,
	"RESET_SCN" NUMBER,
	"RESET_TIMESTAMP" NUMBER,
	"PREV_RESET_SCN" NUMBER,
	"PREV_RESET_TIMESTAMP" NUMBER,
	"STATUS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_GLOBAL$"
   (	"HIGH_RECID_FOREIGN" NUMBER,
	"HIGH_RECID_DELETED" NUMBER,
	"LOCAL_RESET_SCN" NUMBER,
	"LOCAL_RESET_TIMESTAMP" NUMBER,
	"VERSION_TIMESTAMP" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" VARCHAR2(2000),
	"SPARE5" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_PDB_INFO$"
   (	"LOGMNR_DID" NUMBER,
	"LOGMNR_MDH" NUMBER,
	"PDB_NAME" VARCHAR2(128),
	"PDB_ID" NUMBER,
	"PDB_UID" NUMBER,
	"PLUGIN_SCN" NUMBER,
	"UNPLUG_SCN" NUMBER,
	"FLAGS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000),
	"SPARE4" TIMESTAMP (6),
	"PDB_GLOBAL_NAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_DID$"
   (	"SESSION#" NUMBER,
	"LOGMNR_DID" NUMBER,
	"FLAGS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000),
	"SPARE4" TIMESTAMP (6)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_UID$"
   (	"LOGMNR_UID" NUMBER(22,0),
	"LOGMNR_DID" NUMBER,
	"LOGMNR_MDH" NUMBER,
	"PDB_NAME" VARCHAR2(30),
	"PDB_ID" NUMBER,
	"PDB_UID" NUMBER,
	"START_SCN" NUMBER,
	"END_SCN" NUMBER,
	"FLAGS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000),
	"SPARE4" TIMESTAMP (6)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP"
   (	"GLOBAL_NAME" VARCHAR2(128),
	"LOGMNR_UID" NUMBER,
	"FLAGS" NUMBER,
	"PDB_NAME" VARCHAR2(128),
	"LOGMNR_MDH" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_LOG$"
   (	"SESSION#" NUMBER,
	"THREAD#" NUMBER,
	"SEQUENCE#" NUMBER,
	"FIRST_CHANGE#" NUMBER,
	"NEXT_CHANGE#" NUMBER,
	"FIRST_TIME" DATE,
	"NEXT_TIME" DATE,
	"FILE_NAME" VARCHAR2(513),
	"STATUS" NUMBER,
	"INFO" VARCHAR2(32),
	"TIMESTAMP" DATE,
	"DICT_BEGIN" VARCHAR2(3),
	"DICT_END" VARCHAR2(3),
	"STATUS_INFO" VARCHAR2(32),
	"DB_ID" NUMBER,
	"RESETLOGS_CHANGE#" NUMBER,
	"RESET_TIMESTAMP" NUMBER,
	"PREV_RESETLOGS_CHANGE#" NUMBER,
	"PREV_RESET_TIMESTAMP" NUMBER,
	"BLOCKS" NUMBER,
	"BLOCK_SIZE" NUMBER,
	"FLAGS" NUMBER,
	"CONTENTS" NUMBER,
	"RECID" NUMBER,
	"RECSTAMP" NUMBER,
	"MARK_DELETE_TIMESTAMP" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_PROCESSED_LOG$"
   (	"SESSION#" NUMBER,
	"THREAD#" NUMBER,
	"SEQUENCE#" NUMBER,
	"FIRST_CHANGE#" NUMBER,
	"NEXT_CHANGE#" NUMBER,
	"FIRST_TIME" DATE,
	"NEXT_TIME" DATE,
	"FILE_NAME" VARCHAR2(513),
	"STATUS" NUMBER,
	"INFO" VARCHAR2(32),
	"TIMESTAMP" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_ERROR$"
   (	"SESSION#" NUMBER,
	"TIME_OF_ERROR" DATE,
	"CODE" NUMBER,
	"MESSAGE" VARCHAR2(4000),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" VARCHAR2(4000),
	"SPARE5" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_FILTER$"
   (	"SESSION#" NUMBER,
	"FILTER_TYPE" VARCHAR2(30),
	"ATTR1" NUMBER,
	"ATTR2" NUMBER,
	"ATTR3" NUMBER,
	"ATTR4" NUMBER,
	"ATTR5" NUMBER,
	"ATTR6" NUMBER,
	"FILTER_SCN" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$"
   (	"FLAGSRUNTIME" NUMBER DEFAULT 0,
	"DROPSCN" NUMBER,
	"MODIFYTIME" TIMESTAMP (6),
	"DISPATCHTIME" TIMESTAMP (6),
	"DROPTIME" TIMESTAMP (6),
	"LCRCOUNT" NUMBER DEFAULT 0,
	"ACTIONNAME" VARCHAR2(30),
	"LOGMNRSESSION#" NUMBER,
	"PROCESSROLE#" NUMBER,
	"ACTIONTYPE#" NUMBER,
	"FLAGSDEFINETIME" NUMBER,
	"CREATETIME" TIMESTAMP (6),
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"THREAD#" NUMBER,
	"STARTSCN" NUMBER,
	"STARTSUBSCN" NUMBER,
	"ENDSCN" NUMBER,
	"ENDSUBSCN" NUMBER,
	"RBASQN" NUMBER,
	"RBABLK" NUMBER,
	"RBABYTE" NUMBER,
	"SESSION#" NUMBER,
	"OBJ#" NUMBER,
	"ATTR1" NUMBER,
	"ATTR2" NUMBER,
	"ATTR3" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" TIMESTAMP (6),
	"SPARE4" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."REDO_DB"
   (	"DBID" NUMBER,
	"GLOBAL_DBNAME" VARCHAR2(129),
	"DBUNAME" VARCHAR2(32),
	"VERSION" VARCHAR2(32),
	"THREAD#" NUMBER,
	"RESETLOGS_SCN_BAS" NUMBER,
	"RESETLOGS_SCN_WRP" NUMBER,
	"RESETLOGS_TIME" NUMBER,
	"PRESETLOGS_SCN_BAS" NUMBER,
	"PRESETLOGS_SCN_WRP" NUMBER,
	"PRESETLOGS_TIME" NUMBER,
	"SEQNO_RCV_CUR" NUMBER,
	"SEQNO_RCV_LO" NUMBER,
	"SEQNO_RCV_HI" NUMBER,
	"SEQNO_DONE_CUR" NUMBER,
	"SEQNO_DONE_LO" NUMBER,
	"SEQNO_DONE_HI" NUMBER,
	"GAP_SEQNO" NUMBER,
	"GAP_RET" NUMBER,
	"GAP_DONE" NUMBER,
	"APPLY_SEQNO" NUMBER,
	"APPLY_DONE" NUMBER,
	"PURGE_DONE" NUMBER,
	"HAS_CHILD" NUMBER,
	"ERROR1" NUMBER,
	"STATUS" NUMBER,
	"CREATE_DATE" DATE,
	"TS1" NUMBER,
	"TS2" NUMBER,
	"GAP_NEXT_SCN" NUMBER,
	"GAP_NEXT_TIME" NUMBER,
	"CURSCN_TIME" NUMBER,
	"RESETLOGS_SCN" NUMBER,
	"PRESETLOGS_SCN" NUMBER,
	"GAP_RET2" NUMBER,
	"CURLOG" NUMBER,
	"ENDIAN" NUMBER,
	"ENQIDX" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" DATE,
	"SPARE6" VARCHAR2(65),
	"SPARE7" VARCHAR2(129),
	"TS3" NUMBER,
	"CURBLKNO" NUMBER,
	"SPARE8" NUMBER,
	"SPARE9" NUMBER,
	"SPARE10" NUMBER,
	"SPARE11" NUMBER,
	"SPARE12" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REDO_LOG"
   (	"DBID" NUMBER,
	"GLOBAL_DBNAME" VARCHAR2(129),
	"DBUNAME" VARCHAR2(32),
	"VERSION" VARCHAR2(32),
	"THREAD#" NUMBER,
	"RESETLOGS_SCN_BAS" NUMBER,
	"RESETLOGS_SCN_WRP" NUMBER,
	"RESETLOGS_TIME" NUMBER,
	"PRESETLOGS_SCN_BAS" NUMBER,
	"PRESETLOGS_SCN_WRP" NUMBER,
	"PRESETLOGS_TIME" NUMBER,
	"SEQUENCE#" NUMBER,
	"DUPID" NUMBER,
	"STATUS1" NUMBER,
	"STATUS2" NUMBER,
	"CREATE_TIME" VARCHAR2(32),
	"CLOSE_TIME" VARCHAR2(32),
	"DONE_TIME" VARCHAR2(32),
	"FIRST_SCN_BAS" NUMBER,
	"FIRST_SCN_WRP" NUMBER,
	"FIRST_TIME" NUMBER,
	"NEXT_SCN_BAS" NUMBER,
	"NEXT_SCN_WRP" NUMBER,
	"NEXT_TIME" NUMBER,
	"FIRST_SCN" NUMBER,
	"NEXT_SCN" NUMBER,
	"RESETLOGS_SCN" NUMBER,
	"BLOCKS" NUMBER,
	"BLOCK_SIZE" NUMBER,
	"OLD_BLOCKS" NUMBER,
	"CREATE_DATE" DATE,
	"ERROR1" NUMBER,
	"ERROR2" NUMBER,
	"FILENAME" VARCHAR2(513),
	"TS1" NUMBER,
	"TS2" NUMBER,
	"ENDIAN" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" DATE,
	"SPARE6" VARCHAR2(65),
	"SPARE7" VARCHAR2(129),
	"TS3" NUMBER,
	"PRESETLOGS_SCN" NUMBER,
	"SPARE8" NUMBER,
	"SPARE9" NUMBER,
	"SPARE10" NUMBER,
	"OLD_STATUS1" NUMBER,
	"OLD_STATUS2" NUMBER,
	"OLD_FILENAME" VARCHAR2(513)
   ) ;

CREATE TABLE "SYSTEM"."REDO_RTA"
   (	"DBID" NUMBER,
	"DBUNAME" VARCHAR2(32),
	"THREAD" NUMBER,
	"RLS" NUMBER,
	"SPARE9" NUMBER,
	"RLC" NUMBER,
	"SEQNO" NUMBER,
	"BLKNO" NUMBER,
	"PSCN" NUMBER,
	"SPARE10" NUMBER,
	"PTIME" NUMBER,
	"PSEQ" NUMBER,
	"RSCN" NUMBER,
	"SPARE11" NUMBER,
	"RTIME" NUMBER,
	"RCVNAB" NUMBER,
	"RCVSEQ" NUMBER,
	"CTIME" NUMBER,
	"FLAG" NUMBER,
	"TIMEDIF" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" DATE,
	"SPARE6" VARCHAR2(32),
	"SPARE7" NUMBER,
	"SPARE8" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$APPLY_MILESTONE"
   (	"SESSION_ID" NUMBER,
	"COMMIT_SCN" NUMBER,
	"COMMIT_TIME" DATE,
	"SYNCH_SCN" NUMBER,
	"EPOCH" NUMBER,
	"PROCESSED_SCN" NUMBER,
	"PROCESSED_TIME" DATE,
	"FETCHLWM_SCN" NUMBER DEFAULT (0),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000),
	"FLAGS" NUMBER,
	"LWM_UPD_TIME" DATE,
	"SPARE4" NUMBER,
	"SPARE5" NUMBER,
	"SPARE6" NUMBER,
	"SPARE7" DATE,
	"PTO_RECOVERY_SCN" NUMBER,
	"PTO_RECOVERY_INCARNATION" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$SCN"
   (	"OBJ#" NUMBER,
	"OBJNAME" VARCHAR2(4000),
	"SCHEMA" VARCHAR2(128),
	"TYPE" VARCHAR2(20),
	"SCN" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN"
   (	"PRIMARY_SCN" NUMBER,
	"PRIMARY_TIME" DATE,
	"STANDBY_SCN" NUMBER,
	"STANDBY_TIME" DATE,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" DATE
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP_TRANSACTION"
   (	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"ACTIVE" NUMBER,
	"COMMIT_SCN" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP"
   (	"ERROR" NUMBER,
	"STATEMENT_OPT" VARCHAR2(128),
	"SCHEMA" VARCHAR2(128),
	"NAME" VARCHAR2(261),
	"USE_LIKE" NUMBER,
	"ESC" VARCHAR2(1),
	"PROC" VARCHAR2(392),
	"ACTIVE" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$SKIP_SUPPORT"
   (	"ACTION" NUMBER,
	"NAME" VARCHAR2(128),
	"NAME2" VARCHAR2(128),
	"NAME3" VARCHAR2(128),
	"NAME4" VARCHAR2(128),
	"NAME5" VARCHAR2(128),
	"REG" NUMBER(*,0),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$HISTORY"
   (	"STREAM_SEQUENCE#" NUMBER,
	"LMNR_SID" NUMBER,
	"DBID" NUMBER,
	"FIRST_CHANGE#" NUMBER,
	"LAST_CHANGE#" NUMBER,
	"SOURCE" NUMBER,
	"STATUS" NUMBER,
	"FIRST_TIME" DATE,
	"LAST_TIME" DATE,
	"DGNAME" VARCHAR2(255),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$EDS_TABLES"
   (	"OWNER" VARCHAR2(128),
	"TABLE_NAME" VARCHAR2(128),
	"SHADOW_TABLE_NAME" VARCHAR2(128),
	"BASE_TRIGGER_NAME" VARCHAR2(128),
	"SHADOW_TRIGGER_NAME" VARCHAR2(128),
	"DBLINK" VARCHAR2(255),
	"FLAGS" NUMBER,
	"STATE" VARCHAR2(255),
	"OBJV" NUMBER,
	"OBJ#" NUMBER,
	"SOBJ#" NUMBER,
	"CTIME" TIMESTAMP (6),
	"SPARE1" NUMBER,
	"SPARE2" VARCHAR2(255),
	"SPARE3" NUMBER,
	"MVIEW_NAME" VARCHAR2(128),
	"MVIEW_LOG_NAME" VARCHAR2(128),
	"MVIEW_TRIGGER_NAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRGGC_GTLO"
   (	"LOGMNR_UID" NUMBER,
	"KEYOBJ#" NUMBER,
	"LVLCNT" NUMBER,
	"BASEOBJ#" NUMBER,
	"BASEOBJV#" NUMBER,
	"LVL1OBJ#" NUMBER,
	"LVL2OBJ#" NUMBER,
	"LVL0TYPE#" NUMBER,
	"LVL1TYPE#" NUMBER,
	"LVL2TYPE#" NUMBER,
	"OWNER#" NUMBER,
	"OWNERNAME" VARCHAR2(128),
	"LVL0NAME" VARCHAR2(128),
	"LVL1NAME" VARCHAR2(128),
	"LVL2NAME" VARCHAR2(128),
	"INTCOLS" NUMBER,
	"COLS" NUMBER,
	"KERNELCOLS" NUMBER,
	"TAB_FLAGS" NUMBER,
	"TRIGFLAG" NUMBER,
	"ASSOC#" NUMBER,
	"OBJ_FLAGS" NUMBER,
	"TS#" NUMBER,
	"TSNAME" VARCHAR2(30),
	"PROPERTY" NUMBER,
	"START_SCN" NUMBER,
	"DROP_SCN" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"FLAGS" NUMBER,
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE,
	"LOGMNR_SPARE5" NUMBER,
	"LOGMNR_SPARE6" NUMBER,
	"LOGMNR_SPARE7" NUMBER,
	"LOGMNR_SPARE8" NUMBER,
	"LOGMNR_SPARE9" NUMBER,
	"PARTTYPE" NUMBER,
	"SUBPARTTYPE" NUMBER,
	"UNSUPPORTEDCOLS" NUMBER,
	"COMPLEXTYPECOLS" NUMBER,
	"NTPARENTOBJNUM" NUMBER,
	"NTPARENTOBJVERSION" NUMBER,
	"NTPARENTINTCOLNUM" NUMBER,
	"LOGMNRTLOFLAGS" NUMBER,
	"LOGMNRMCV" VARCHAR2(30)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNRGGC_GTCS"
   (	"LOGMNR_UID" NUMBER,
	"OBJ#" NUMBER,
	"OBJV#" NUMBER,
	"SEGCOL#" NUMBER,
	"INTCOL#" NUMBER,
	"COLNAME" VARCHAR2(128),
	"TYPE#" NUMBER,
	"LENGTH" NUMBER,
	"PRECISION" NUMBER,
	"SCALE" NUMBER,
	"INTERVAL_LEADING_PRECISION" NUMBER,
	"INTERVAL_TRAILING_PRECISION" NUMBER,
	"PROPERTY" NUMBER,
	"TOID" RAW(16),
	"CHARSETID" NUMBER,
	"CHARSETFORM" NUMBER,
	"TYPENAME" VARCHAR2(30),
	"FQCOLNAME" VARCHAR2(4000),
	"NUMINTCOLS" NUMBER,
	"NUMATTRS" NUMBER,
	"ADTORDER" NUMBER,
	"LOGMNR_SPARE1" NUMBER,
	"LOGMNR_SPARE2" NUMBER,
	"LOGMNR_SPARE3" VARCHAR2(1000),
	"LOGMNR_SPARE4" DATE,
	"LOGMNR_SPARE5" NUMBER,
	"LOGMNR_SPARE6" NUMBER,
	"LOGMNR_SPARE7" NUMBER,
	"LOGMNR_SPARE8" NUMBER,
	"LOGMNR_SPARE9" NUMBER,
	"COL#" NUMBER,
	"XTYPESCHEMANAME" VARCHAR2(128),
	"XTYPENAME" VARCHAR2(4000),
	"XFQCOLNAME" VARCHAR2(4000),
	"XTOPINTCOL" NUMBER,
	"XREFFEDTABLEOBJN" NUMBER,
	"XREFFEDTABLEOBJV" NUMBER,
	"XCOLTYPEFLAGS" NUMBER,
	"XOPQTYPETYPE" NUMBER,
	"XOPQTYPEFLAGS" NUMBER,
	"XOPQLOBINTCOL" NUMBER,
	"XOPQOBJINTCOL" NUMBER,
	"XXMLINTCOL" NUMBER,
	"EAOWNER#" NUMBER,
	"EAMKEYID" VARCHAR2(64),
	"EAENCALG" NUMBER,
	"EAINTALG" NUMBER,
	"EACOLKLC" RAW(2000),
	"EAKLCLEN" NUMBER,
	"EAFLAGS" NUMBER,
	"LOGMNRDERIVEDFLAGS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_PARAMETER$"
   (	"SESSION#" NUMBER,
	"NAME" VARCHAR2(128),
	"VALUE" VARCHAR2(2000),
	"TYPE" NUMBER,
	"SCN" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_SESSION$"
   (	"SESSION#" NUMBER,
	"CLIENT#" NUMBER,
	"SESSION_NAME" VARCHAR2(128),
	"DB_ID" NUMBER,
	"RESETLOGS_CHANGE#" NUMBER,
	"SESSION_ATTR" NUMBER,
	"SESSION_ATTR_VERBOSE" VARCHAR2(400),
	"START_SCN" NUMBER,
	"END_SCN" NUMBER,
	"SPILL_SCN" NUMBER,
	"SPILL_TIME" DATE,
	"OLDEST_SCN" NUMBER,
	"RESUME_SCN" NUMBER,
	"GLOBAL_DB_NAME" VARCHAR2(128) DEFAULT null,
	"RESET_TIMESTAMP" NUMBER,
	"BRANCH_SCN" NUMBER,
	"VERSION" VARCHAR2(64),
	"REDO_COMPAT" VARCHAR2(20),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" NUMBER,
	"SPARE5" NUMBER,
	"SPARE6" DATE,
	"SPARE7" VARCHAR2(1000),
	"SPARE8" VARCHAR2(1000)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$CONNECTIONS"
   (	"SOURCE_RDBID" NUMBER,
	"DEST_RDBID" NUMBER,
	"ATTRIBUTES" NUMBER,
	"SERVICE_NAME" VARCHAR2(256),
	"CONN_HANDLE" NUMBER,
	"CONNECT_TIME" TIMESTAMP (6),
	"SEND_TIME" TIMESTAMP (6),
	"DISCONNECT_TIME" TIMESTAMP (6),
	"UPDATE_TIME" TIMESTAMP (6),
	"SOURCE_PID" NUMBER,
	"DEST_PID" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$DATABASES"
   (	"RDBID" NUMBER,
	"ATTRIBUTES" NUMBER,
	"ATTRIBUTES2" NUMBER,
	"DBUN" VARCHAR2(128),
	"DBID" NUMBER,
	"PROD_RSCN" NUMBER,
	"PROD_RID" NUMBER,
	"PROD_SCN" NUMBER,
	"CONS_RSCN" NUMBER,
	"CONS_RID" NUMBER,
	"CONS_SCN" NUMBER,
	"ENGINE_STATUS" NUMBER,
	"VERSION" VARCHAR2(128),
	"REDO_SOURCE" NUMBER,
	"UPDATE_TIME" TIMESTAMP (6),
	"REVISION" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$DIRECTIVES"
   (	"DIRECTID" NUMBER,
	"PHASE" NUMBER,
	"TASKID" NUMBER,
	"FEATURE" VARCHAR2(32),
	"DESCRIPTION" VARCHAR2(256),
	"TARGET" NUMBER,
	"FLAGS" VARCHAR2(64),
	"OPCODE" NUMBER,
	"P1" VARCHAR2(256),
	"P2" VARCHAR2(256),
	"P3" VARCHAR2(256),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(256)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$EVENTS"
   (	"EVENTID" NUMBER,
	"INSTID" NUMBER,
	"REVISION" NUMBER,
	"EVENT_TIME" TIMESTAMP (6),
	"TYPE" VARCHAR2(16),
	"STATUS" NUMBER,
	"MESSAGE" VARCHAR2(256),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$PARAMETERS"
   (	"SCOPE" NUMBER,
	"NAME" VARCHAR2(32),
	"ID" NUMBER,
	"DESCRIP" VARCHAR2(256),
	"TYPE" NUMBER,
	"DATATYPE" NUMBER,
	"ATTRIBUTES" NUMBER,
	"CURVAL" VARCHAR2(256),
	"LSTVAL" VARCHAR2(256),
	"DEFVAL" VARCHAR2(256),
	"MINVAL" NUMBER,
	"MAXVAL" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$PLAN"
   (	"INSTID" NUMBER,
	"BATCHID" NUMBER,
	"DIRECTID" NUMBER,
	"TASKID" NUMBER,
	"REVISION" NUMBER,
	"PHASE" NUMBER,
	"STATUS" NUMBER,
	"PROGRESS" NUMBER,
	"SOURCE" NUMBER,
	"TARGET" NUMBER,
	"RFLAGS" NUMBER,
	"OPCODE" NUMBER,
	"P1" VARCHAR2(256),
	"P2" VARCHAR2(256),
	"P3" VARCHAR2(256),
	"P4" VARCHAR2(256),
	"DESCRIPTION" VARCHAR2(256),
	"EXEC_STATUS" NUMBER,
	"EXEC_INFO" VARCHAR2(256),
	"EXEC_TIME" TIMESTAMP (6),
	"FINISH_TIME" TIMESTAMP (6),
	"POST_STATUS" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(256)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$STATISTICS"
   (	"STATID" NUMBER,
	"RDBID" NUMBER,
	"ATTRIBUTES" NUMBER,
	"TYPE" NUMBER,
	"NAME" VARCHAR2(256),
	"VALUESTR" VARCHAR2(256),
	"VALUENUM" NUMBER,
	"VALUETS" TIMESTAMP (6),
	"VALUEINT" INTERVAL DAY (3) TO SECOND (2),
	"UPDATE_TIME" TIMESTAMP (6),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."ROLLING$STATUS"
   (	"REVISION" NUMBER,
	"PHASE" NUMBER,
	"BATCHID" NUMBER,
	"STATUS" NUMBER,
	"COORDID" NUMBER,
	"OPRIMARY" NUMBER,
	"FPRIMARY" NUMBER,
	"PID" NUMBER,
	"INSTANCE" NUMBER,
	"DBTOTAL" NUMBER,
	"DBACTIVE" NUMBER,
	"LOCATION" VARCHAR2(128),
	"INIT_TIME" TIMESTAMP (6),
	"BUILD_TIME" TIMESTAMP (6),
	"START_TIME" TIMESTAMP (6),
	"SWITCH_TIME" TIMESTAMP (6),
	"FINISH_TIME" TIMESTAMP (6),
	"LAST_INSTID" NUMBER,
	"LAST_BATCHID" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD"
   (	"QUERYID#" NUMBER,
	"COLLECTIONID#" NUMBER,
	"COLLECTTIME" DATE,
	"APPLICATION" VARCHAR2(128),
	"CARDINALITY" NUMBER,
	"RESULTSIZE" NUMBER,
	"UNAME" VARCHAR2(128),
	"QDATE" DATE,
	"PRIORITY" NUMBER,
	"EXEC_TIME" NUMBER,
	"SQL_TEXT" LONG,
	"SQL_TEXTLEN" NUMBER,
	"SQL_HASH" NUMBER,
	"SQL_ADDR" RAW(16),
	"FREQUENCY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE"
   (	"COLLECTIONID#" NUMBER,
	"QUERYID#" NUMBER,
	"OWNER" VARCHAR2(128),
	"TABLE_NAME" VARCHAR2(128),
	"TABLE_TYPE" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_SQLDEPEND"
   (	"COLLECTIONID#" NUMBER,
	"INST_ID" NUMBER,
	"FROM_ADDRESS" RAW(16),
	"FROM_HASH" NUMBER,
	"TO_OWNER" VARCHAR2(128),
	"TO_NAME" VARCHAR2(1000),
	"TO_TYPE" NUMBER,
	"CARDINALITY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_PRETTY"
   (	"QUERYID#" NUMBER,
	"SQL_TEXT" LONG
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_TEMP"
   (	"ID#" NUMBER,
	"SEQ#" NUMBER,
	"TEXT" LONG
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_FILTER"
   (	"FILTERID#" NUMBER,
	"SUBFILTERNUM#" NUMBER,
	"SUBFILTERTYPE" NUMBER,
	"STR_VALUE" VARCHAR2(1028),
	"NUM_VALUE1" NUMBER,
	"NUM_VALUE2" NUMBER,
	"DATE_VALUE1" DATE,
	"DATE_VALUE2" DATE
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_LOG"
   (	"RUNID#" NUMBER,
	"FILTERID#" NUMBER,
	"RUN_BEGIN" DATE,
	"RUN_END" DATE,
	"RUN_TYPE" NUMBER,
	"UNAME" VARCHAR2(128),
	"STATUS" NUMBER,
	"MESSAGE" VARCHAR2(2000),
	"COMPLETED" NUMBER,
	"TOTAL" NUMBER,
	"ERROR_CODE" VARCHAR2(20)
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE"
   (	"RUNID#" NUMBER,
	"FILTERID#" NUMBER,
	"SUBFILTERNUM#" NUMBER,
	"SUBFILTERTYPE" NUMBER,
	"STR_VALUE" VARCHAR2(1028),
	"NUM_VALUE1" NUMBER,
	"NUM_VALUE2" NUMBER,
	"DATE_VALUE1" DATE,
	"DATE_VALUE2" DATE
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_LEVEL"
   (	"RUNID#" NUMBER,
	"LEVELID#" NUMBER,
	"DIMOBJ#" NUMBER,
	"FLAGS" NUMBER,
	"TBLOBJ#" NUMBER,
	"COLUMNLIST" RAW(70),
	"LEVELNAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP"
   (	"RUNID#" NUMBER,
	"CLEVELID#" NUMBER,
	"PLEVELID#" NUMBER,
	"FLAGS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_AJG"
   (	"AJGID#" NUMBER,
	"RUNID#" NUMBER,
	"AJGDESLEN" NUMBER,
	"AJGDES" LONG RAW,
	"HASHVALUE" NUMBER,
	"FREQUENCY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_FJG"
   (	"FJGID#" NUMBER,
	"AJGID#" NUMBER,
	"FJGDESLEN" NUMBER,
	"FJGDES" LONG RAW,
	"HASHVALUE" NUMBER,
	"FREQUENCY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_GC"
   (	"GCID#" NUMBER,
	"FJGID#" NUMBER,
	"GCDESLEN" NUMBER,
	"GCDES" LONG RAW,
	"HASHVALUE" NUMBER,
	"FREQUENCY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE"
   (	"CLIQUEID#" NUMBER,
	"RUNID#" NUMBER,
	"CLIQUEDESLEN" NUMBER,
	"CLIQUEDES" LONG RAW,
	"HASHVALUE" NUMBER,
	"FREQUENCY" NUMBER,
	"BYTECOST" NUMBER,
	"ROWSIZE" NUMBER,
	"NUMROWS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE"
   (	"SUMOBJN#" NUMBER,
	"RUNID#" NUMBER,
	"BYTECOST" NUMBER,
	"FLAGS" NUMBER,
	"FREQUENCY" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT"
   (	"RUNID#" NUMBER,
	"OUTPUT_TYPE" NUMBER,
	"RANK#" NUMBER,
	"ACTION_TYPE" VARCHAR2(6),
	"SUMMARY_OWNER" VARCHAR2(128),
	"SUMMARY_NAME" VARCHAR2(128),
	"GROUP_BY_COLUMNS" VARCHAR2(2000),
	"WHERE_CLAUSE" VARCHAR2(2000),
	"FROM_CLAUSE" VARCHAR2(2000),
	"MEASURES_LIST" VARCHAR2(2000),
	"FACT_TABLES" VARCHAR2(1000),
	"GROUPING_LEVELS" VARCHAR2(2000),
	"QUERYLEN" NUMBER,
	"QUERY_TEXT" LONG,
	"STORAGE_IN_BYTES" NUMBER,
	"PCT_PERFORMANCE_GAIN" NUMBER,
	"FREQUENCY" NUMBER,
	"CUMULATIVE_BENEFIT" NUMBER,
	"BENEFIT_TO_COST_RATIO" NUMBER,
	"VALIDATED" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS"
   (	"RUNID#" NUMBER,
	"OWNER" VARCHAR2(128),
	"TABLE_NAME" VARCHAR2(128),
	"DIMENSION_NAME" VARCHAR2(128),
	"RELATIONSHIP" VARCHAR2(11),
	"BAD_ROWID" ROWID
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS"
   (	"PARAMETER_NAME" VARCHAR2(128),
	"PARAMETER_TYPE" NUMBER,
	"STRING_VALUE" VARCHAR2(30),
	"DATE_VALUE" DATE,
	"NUMERICAL_VALUE" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_INFO"
   (	"RUNID#" NUMBER,
	"SEQ#" NUMBER,
	"TYPE" NUMBER,
	"INFOLEN" NUMBER,
	"INFO" LONG RAW,
	"STATUS" NUMBER,
	"FLAG" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL"
   (	"RUNID#" NUMBER,
	"SEQ#" NUMBER,
	"TIMESTAMP" DATE,
	"FLAGS" NUMBER,
	"NUM" NUMBER,
	"TEXT" LONG,
	"TEXTLEN" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."MVIEW$_ADV_PLAN"
   (	"STATEMENT_ID" VARCHAR2(30),
	"TIMESTAMP" DATE,
	"REMARKS" VARCHAR2(80),
	"OPERATION" VARCHAR2(30),
	"OPTIONS" VARCHAR2(255),
	"OBJECT_NODE" VARCHAR2(128),
	"OBJECT_OWNER" VARCHAR2(128),
	"OBJECT_NAME" VARCHAR2(128),
	"OBJECT_INSTANCE" NUMBER(*,0),
	"OBJECT_TYPE" VARCHAR2(30),
	"OPTIMIZER" VARCHAR2(255),
	"SEARCH_COLUMNS" NUMBER,
	"ID" NUMBER(*,0),
	"PARENT_ID" NUMBER(*,0),
	"POSITION" NUMBER(*,0),
	"COST" NUMBER(*,0),
	"CARDINALITY" NUMBER(*,0),
	"BYTES" NUMBER(*,0),
	"OTHER_TAG" VARCHAR2(255),
	"PARTITION_START" VARCHAR2(255),
	"PARTITION_STOP" VARCHAR2(255),
	"PARTITION_ID" NUMBER(*,0),
	"OTHER" LONG,
	"DISTRIBUTION" VARCHAR2(30),
	"CPU_COST" NUMBER(*,0),
	"IO_COST" NUMBER(*,0),
	"TEMP_SPACE" NUMBER(*,0)
   ) ;

CREATE TABLE "SYSTEM"."AQ$_QUEUE_TABLES"
   (	"SCHEMA" VARCHAR2(128),
	"NAME" VARCHAR2(128),
	"UDATA_TYPE" NUMBER,
	"OBJNO" NUMBER,
	"FLAGS" NUMBER,
	"SORT_COLS" NUMBER,
	"TIMEZONE" VARCHAR2(64),
	"TABLE_COMMENT" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."AQ$_SCHEDULES"
   (	"OID" RAW(16),
	"DESTINATION" VARCHAR2(128),
	"START_TIME" DATE,
	"DURATION" VARCHAR2(8),
	"NEXT_TIME" VARCHAR2(128),
	"LATENCY" VARCHAR2(8),
	"LAST_TIME" DATE,
	"JOBNO" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."AQ$_INTERNET_AGENTS"
   (	"AGENT_NAME" VARCHAR2(128),
	"PROTOCOL" NUMBER(*,0),
	"SPARE1" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS"
   (	"AGENT_NAME" VARCHAR2(128),
	"DB_USERNAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."DEF$_ERROR"
   (	"ENQ_TID" VARCHAR2(22),
	"ORIGIN_TRAN_DB" VARCHAR2(128),
	"ORIGIN_ENQ_TID" VARCHAR2(22),
	"DESTINATION" VARCHAR2(128),
	"STEP_NO" NUMBER,
	"RECEIVER" NUMBER,
	"ENQ_TIME" DATE,
	"ERROR_NUMBER" NUMBER,
	"ERROR_MSG" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."DEF$_DESTINATION"
   (	"DBLINK" VARCHAR2(128),
	"LAST_DELIVERED" NUMBER DEFAULT 0,
	"LAST_ENQ_TID" VARCHAR2(22),
	"LAST_SEQ" NUMBER,
	"DISABLED" CHAR(1),
	"JOB" NUMBER,
	"LAST_TXN_COUNT" NUMBER,
	"LAST_ERROR_NUMBER" NUMBER,
	"LAST_ERROR_MESSAGE" VARCHAR2(2000),
	"APPLY_INIT" VARCHAR2(4000),
	"CATCHUP" RAW(16) DEFAULT '00',
	"ALTERNATE" CHAR(1) DEFAULT 'F',
	"TOTAL_TXN_COUNT" NUMBER DEFAULT 0,
	"TOTAL_PROP_TIME_THROUGHPUT" NUMBER DEFAULT 0,
	"TOTAL_PROP_TIME_LATENCY" NUMBER DEFAULT 0,
	"TO_COMMUNICATION_SIZE" NUMBER DEFAULT 0,
	"FROM_COMMUNICATION_SIZE" NUMBER DEFAULT 0,
	"FLAG" RAW(4) DEFAULT '00000000',
	"SPARE1" NUMBER DEFAULT 0,
	"SPARE2" NUMBER DEFAULT 0,
	"SPARE3" NUMBER DEFAULT 0,
	"SPARE4" NUMBER DEFAULT 0
   ) ;

CREATE TABLE "SYSTEM"."DEF$_CALLDEST"
   (	"ENQ_TID" VARCHAR2(22),
	"STEP_NO" NUMBER,
	"DBLINK" VARCHAR2(128),
	"SCHEMA_NAME" VARCHAR2(128),
	"PACKAGE_NAME" VARCHAR2(128),
	"CATCHUP" RAW(16) DEFAULT '00'
   ) ;

CREATE TABLE "SYSTEM"."DEF$_DEFAULTDEST"
   (	"DBLINK" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."DEF$_PROPAGATOR"
   (	"USERID" NUMBER,
	"USERNAME" VARCHAR2(128),
	"CREATED" DATE DEFAULT SYSDATE
   ) ;

CREATE TABLE "SYSTEM"."DEF$_ORIGIN"
   (	"ORIGIN_DB" VARCHAR2(128),
	"ORIGIN_DBLINK" VARCHAR2(128),
	"INUSR" NUMBER,
	"CSCN" NUMBER,
	"ENQ_TID" VARCHAR2(22),
	"RECO_SEQ_NO" NUMBER,
	"CATCHUP" RAW(16) DEFAULT '00'
   ) ;

CREATE TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"
   (	"SOURCE_SITE_ID" NUMBER,
	"LAST_TRAN_ID" NUMBER DEFAULT 0,
	"DISABLED" VARCHAR2(1) DEFAULT 'F',
	"SOURCE_SITE" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPCAT"
   (	"GOWNER" VARCHAR2(128) DEFAULT 'PUBLIC',
	"SNAME" VARCHAR2(30),
	"MASTER" VARCHAR2(1),
	"STATUS" NUMBER(*,0),
	"SCHEMA_COMMENT" VARCHAR2(80),
	"FLAVOR_ID" NUMBER,
	"FLAG" RAW(4) DEFAULT '00000000'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_FLAVORS"
   (	"FLAVOR_ID" NUMBER,
	"GOWNER" VARCHAR2(128) DEFAULT 'PUBLIC',
	"GNAME" VARCHAR2(30),
	"FNAME" VARCHAR2(30),
	"CREATION_DATE" DATE DEFAULT SYSDATE,
	"CREATED_BY" NUMBER DEFAULT UID,
	"PUBLISHED" VARCHAR2(1) DEFAULT 'N'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPSCHEMA"
   (	"GOWNER" VARCHAR2(128) DEFAULT 'PUBLIC',
	"SNAME" VARCHAR2(30),
	"DBLINK" VARCHAR2(128),
	"MASTERDEF" VARCHAR2(1),
	"SNAPMASTER" VARCHAR2(1),
	"MASTER_COMMENT" VARCHAR2(80),
	"MASTER" VARCHAR2(1),
	"PROP_UPDATES" NUMBER DEFAULT 0,
	"MY_DBLINK" VARCHAR2(1),
	"EXTENSION_ID" RAW(16) DEFAULT '00'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_SNAPGROUP"
   (	"GOWNER" VARCHAR2(128) DEFAULT 'PUBLIC',
	"GNAME" VARCHAR2(30),
	"DBLINK" VARCHAR2(128),
	"GROUP_COMMENT" VARCHAR2(80),
	"REP_TYPE" NUMBER,
	"FLAVOR_ID" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPOBJECT"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"VERSION#" NUMBER,
	"HASHCODE" RAW(17),
	"ID" NUMBER,
	"OBJECT_COMMENT" VARCHAR2(80),
	"STATUS" NUMBER(*,0),
	"GENPACKAGE" NUMBER(*,0),
	"GENPLOGID" NUMBER(*,0),
	"GENTRIGGER" NUMBER(*,0),
	"GENTLOGID" NUMBER(*,0),
	"GOWNER" VARCHAR2(128),
	"GNAME" VARCHAR2(30),
	"FLAG" RAW(4) DEFAULT '00000000'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPCOLUMN"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"CNAME" VARCHAR2(128),
	"LCNAME" VARCHAR2(4000),
	"TOID" RAW(16),
	"VERSION#" NUMBER,
	"HASHCODE" RAW(17),
	"CTYPE_NAME" VARCHAR2(128),
	"CTYPE_OWNER" VARCHAR2(128),
	"ID" NUMBER,
	"POS" NUMBER,
	"TOP" VARCHAR2(128),
	"FLAG" RAW(2) DEFAULT '0000',
	"CTYPE" NUMBER,
	"LENGTH" NUMBER,
	"PRECISION#" NUMBER,
	"SCALE" NUMBER,
	"NULL$" NUMBER,
	"CHARSETID" NUMBER,
	"CHARSETFORM" NUMBER,
	"PROPERTY" RAW(4) DEFAULT '00000000',
	"CLENGTH" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"COL" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_GENERATED"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"REASON" NUMBER,
	"BASE_SNAME" VARCHAR2(128),
	"BASE_ONAME" VARCHAR2(128),
	"BASE_TYPE" NUMBER(*,0),
	"PACKAGE_PREFIX" VARCHAR2(128),
	"PROCEDURE_PREFIX" VARCHAR2(128),
	"DISTRIBUTED" VARCHAR2(1)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPPROP"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"DBLINK" VARCHAR2(128),
	"HOW" NUMBER(*,0),
	"PROPAGATE_COMMENT" VARCHAR2(80),
	"DELIVERY_ORDER" NUMBER,
	"RECIPIENT_KEY" NUMBER,
	"EXTENSION_ID" RAW(16) DEFAULT '00'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPCATLOG"
   (	"VERSION" NUMBER,
	"ID" NUMBER,
	"SOURCE" VARCHAR2(128),
	"USERID" VARCHAR2(128),
	"TIMESTAMP" DATE,
	"ROLE" VARCHAR2(1),
	"MASTER" VARCHAR2(128),
	"SNAME" VARCHAR2(128),
	"REQUEST" NUMBER(*,0),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER(*,0),
	"A_COMMENT" VARCHAR2(2000),
	"BOOL_ARG" VARCHAR2(1),
	"ANO_BOOL_ARG" VARCHAR2(1),
	"INT_ARG" NUMBER(*,0),
	"ANO_INT_ARG" NUMBER(*,0),
	"LINES" NUMBER(*,0),
	"STATUS" NUMBER(*,0),
	"MESSAGE" VARCHAR2(200),
	"ERRNUM" NUMBER,
	"GNAME" VARCHAR2(30)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_DDL"
   (	"LOG_ID" NUMBER,
	"SOURCE" VARCHAR2(128),
	"ROLE" VARCHAR2(1),
	"MASTER" VARCHAR2(128),
	"LINE" NUMBER(*,0),
	"TEXT" VARCHAR2(2000),
	"DDL_NUM" NUMBER(*,0) DEFAULT 1       -- order of ddls to execute

   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS"
   (	"USERID" NUMBER,
	"USERNAME" VARCHAR2(128),
	"GOWNER" VARCHAR2(128),
	"GNAME" VARCHAR2(30),
	"GLOBAL_FLAG" NUMBER,
	"CREATED" DATE,
	"PRIVILEGE" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP"
   (	"SNAME" VARCHAR2(30),
	"PRIORITY_GROUP" VARCHAR2(30),
	"DATA_TYPE_ID" NUMBER(*,0),
	"FIXED_DATA_LENGTH" NUMBER(*,0),
	"PRIORITY_COMMENT" VARCHAR2(80)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_PRIORITY"
   (	"SNAME" VARCHAR2(30),
	"PRIORITY_GROUP" VARCHAR2(30),
	"PRIORITY" NUMBER,
	"RAW_VALUE" RAW(2000),
	"CHAR_VALUE" CHAR(255),
	"NUMBER_VALUE" NUMBER,
	"DATE_VALUE" DATE,
	"VARCHAR2_VALUE" VARCHAR2(4000),
	"NCHAR_VALUE" NCHAR(500),
	"NVARCHAR2_VALUE" NVARCHAR2(1000),
	"LARGE_CHAR_VALUE" CHAR(2000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"GROUP_NAME" VARCHAR2(30),
	"GROUP_COMMENT" VARCHAR2(80)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"GROUP_NAME" VARCHAR2(30),
	"COLUMN_NAME" VARCHAR2(128),
	"POS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_CONFLICT"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"CONFLICT_TYPE_ID" NUMBER(*,0),
	"REFERENCE_NAME" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD"
   (	"CONFLICT_TYPE_ID" NUMBER(*,0),
	"METHOD_NAME" VARCHAR2(80)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"CONFLICT_TYPE_ID" NUMBER(*,0),
	"REFERENCE_NAME" VARCHAR2(128),
	"SEQUENCE_NO" NUMBER,
	"METHOD_NAME" VARCHAR2(80),
	"FUNCTION_NAME" VARCHAR2(386),
	"PRIORITY_GROUP" VARCHAR2(30),
	"RESOLUTION_COMMENT" VARCHAR2(80)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"CONFLICT_TYPE_ID" NUMBER(*,0),
	"REFERENCE_NAME" VARCHAR2(128),
	"METHOD_NAME" VARCHAR2(80),
	"FUNCTION_NAME" VARCHAR2(386),
	"PRIORITY_GROUP" VARCHAR2(30),
	"RESOLVED_DATE" DATE,
	"PRIMARY_KEY_VALUE" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"CREATED" DATE,
	"STATUS" NUMBER(*,0),
	"STATUS_UPDATE_DATE" DATE,
	"PURGED_DATE" DATE,
	"LAST_PURGE_START_DATE" DATE,
	"LAST_PURGE_END_DATE" DATE
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"CONFLICT_TYPE_ID" NUMBER(*,0),
	"REFERENCE_NAME" VARCHAR2(128),
	"SEQUENCE_NO" NUMBER,
	"PARAMETER_TABLE_NAME" VARCHAR2(128),
	"PARAMETER_COLUMN_NAME" VARCHAR2(4000),
	"PARAMETER_SEQUENCE_NO" NUMBER,
	"COLUMN_POS" NUMBER,
	"ATTRIBUTE_SEQUENCE_NO" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"
   (	"ATTRIBUTE" VARCHAR2(128),
	"DATA_TYPE_ID" NUMBER(*,0),
	"DATA_LENGTH" NUMBER(*,0),
	"SOURCE" VARCHAR2(386)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN"
   (	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"COLUMN_NAME" VARCHAR2(128),
	"BASE_SNAME" VARCHAR2(128),
	"BASE_ONAME" VARCHAR2(128),
	"BASE_CONFLICT_TYPE_ID" NUMBER(*,0),
	"BASE_REFERENCE_NAME" VARCHAR2(128),
	"ATTRIBUTE" VARCHAR2(128)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"
   (	"FLAVOR_ID" NUMBER,
	"GOWNER" VARCHAR2(128) DEFAULT 'PUBLIC',
	"GNAME" VARCHAR2(30),
	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"TYPE" NUMBER,
	"VERSION#" NUMBER,
	"HASHCODE" RAW(17),
	"COLUMNS_PRESENT" RAW(125)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS"
   (	"TEMPLATE_STATUS_ID" NUMBER,
	"STATUS_TYPE_NAME" VARCHAR2(100)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES"
   (	"TEMPLATE_TYPE_ID" NUMBER,
	"TEMPLATE_DESCRIPTION" VARCHAR2(200),
	"FLAGS" RAW(255),
	"SPARE1" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"
   (	"REFRESH_TEMPLATE_ID" NUMBER,
	"OWNER" VARCHAR2(128),
	"REFRESH_GROUP_NAME" VARCHAR2(30),
	"REFRESH_TEMPLATE_NAME" VARCHAR2(30),
	"TEMPLATE_COMMENT" VARCHAR2(2000),
	"PUBLIC_TEMPLATE" VARCHAR2(1),
	"LAST_MODIFIED" DATE,
	"MODIFIED_BY" NUMBER,
	"CREATION_DATE" DATE,
	"CREATED_BY" NUMBER,
	"REFRESH_GROUP_ID" NUMBER DEFAULT 0,
	"TEMPLATE_TYPE_ID" NUMBER DEFAULT 1,
	"TEMPLATE_STATUS_ID" NUMBER DEFAULT 0,
	"FLAGS" RAW(255),
	"SPARE1" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"
   (	"USER_AUTHORIZATION_ID" NUMBER,
	"USER_ID" NUMBER,
	"REFRESH_TEMPLATE_ID" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES"
   (	"OBJECT_TYPE_ID" NUMBER,
	"OBJECT_TYPE_NAME" VARCHAR2(200),
	"FLAGS" RAW(255),
	"SPARE1" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"
   (	"REFRESH_GROUP_ID" NUMBER,
	"REFRESH_GROUP_NAME" VARCHAR2(30),
	"REFRESH_TEMPLATE_ID" NUMBER,
	"ROLLBACK_SEG" VARCHAR2(30),
	"START_DATE" VARCHAR2(200),
	"INTERVAL" VARCHAR2(200)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS"
   (	"TEMPLATE_PARAMETER_ID" NUMBER,
	"TEMPLATE_OBJECT_ID" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES"
   (	"TEMPLATE_SITE_ID" NUMBER,
	"REFRESH_TEMPLATE_NAME" VARCHAR2(30),
	"REFRESH_GROUP_NAME" VARCHAR2(30),
	"TEMPLATE_OWNER" VARCHAR2(128),
	"USER_NAME" VARCHAR2(128),
	"SITE_NAME" VARCHAR2(128),
	"REPAPI_SITE_ID" NUMBER,
	"STATUS" NUMBER,
	"REFRESH_TEMPLATE_ID" NUMBER,
	"USER_ID" NUMBER,
	"INSTANTIATION_DATE" DATE
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS"
   (	"TEMPLATE_SITE_ID" NUMBER,
	"SNAME" VARCHAR2(128),
	"ONAME" VARCHAR2(128),
	"OBJECT_TYPE_ID" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"
   (	"TEMPLATE_TARGET_ID" NUMBER,
	"TARGET_DATABASE" VARCHAR2(128),
	"TARGET_COMMENT" VARCHAR2(2000),
	"CONNECT_STRING" VARCHAR2(4000),
	"SPARE1" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_EXTENSION"
   (	"EXTENSION_ID" RAW(16),
	"EXTENSION_CODE" NUMBER,
	"MASTERDEF" VARCHAR2(128),
	"EXPORT_REQUIRED" VARCHAR2(1),
	"REPCATLOG_ID" NUMBER,
	"EXTENSION_STATUS" NUMBER,
	"FLASHBACK_SCN" NUMBER,
	"PUSH_TO_MDEF" VARCHAR2(1),
	"PUSH_TO_NEW" VARCHAR2(1),
	"PERCENTAGE_FOR_CATCHUP_MDEF" NUMBER,
	"CYCLE_SECONDS_MDEF" NUMBER,
	"PERCENTAGE_FOR_CATCHUP_NEW" NUMBER,
	"CYCLE_SECONDS_NEW" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_SITES_NEW"
   (	"EXTENSION_ID" RAW(16),
	"GOWNER" VARCHAR2(128),
	"GNAME" VARCHAR2(30),
	"DBLINK" VARCHAR2(128),
	"FULL_INSTANTIATION" VARCHAR2(1),
	"MASTER_STATUS" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$PARAMETERS"
   (	"NAME" VARCHAR2(30),
	"VALUE" VARCHAR2(2000),
	"TYPE" NUMBER,
	"SCN" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."SQLPLUS_PRODUCT_PROFILE"
   (	"PRODUCT" VARCHAR2(30),
	"USERID" VARCHAR2(30),
	"ATTRIBUTE" VARCHAR2(240),
	"SCOPE" VARCHAR2(240),
	"NUMERIC_VALUE" NUMBER(15,2),
	"CHAR_VALUE" VARCHAR2(240),
	"DATE_VALUE" DATE,
	"LONG_VALUE" LONG
   ) ;

CREATE TABLE "SYSTEM"."HELP"
   (	"TOPIC" VARCHAR2(50),
	"SEQ" NUMBER,
	"INFO" VARCHAR2(80)
   ) ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."LOGMNR_GT_TAB_INCLUDE$"
   (	"SCHEMA_NAME" VARCHAR2(130),
	"TABLE_NAME" VARCHAR2(130),
	"PDB_NAME" VARCHAR2(130),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000)
   ) ON COMMIT PRESERVE ROWS ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."LOGMNR_GT_USER_INCLUDE$"
   (	"USER_NAME" VARCHAR2(130),
	"USER_TYPE" NUMBER,
	"PDB_NAME" VARCHAR2(130),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000)
   ) ON COMMIT PRESERVE ROWS ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."LOGMNR_GT_XID_INCLUDE$"
   (	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(4000)
   ) ON COMMIT PRESERVE ROWS ;

CREATE TABLE "SYSTEM"."LOGMNR_SPILL$"
   (	"SESSION#" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"CHUNK" NUMBER,
	"STARTIDX" NUMBER,
	"ENDIDX" NUMBER,
	"FLAG" NUMBER,
	"SEQUENCE#" NUMBER,
	"SPILL_DATA" BLOB,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_AGE_SPILL$"
   (	"SESSION#" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"CHUNK" NUMBER,
	"SEQUENCE#" NUMBER,
	"OFFSET" NUMBER,
	"SPILL_DATA" BLOB,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$"
   (	"SESSION#" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"SESSION_NUM" NUMBER,
	"SERIAL_NUM" NUMBER,
	"FLAG" NUMBER,
	"START_SCN" NUMBER,
	"EFFECTIVE_SCN" NUMBER,
	"OFFSET" NUMBER,
	"TX_DATA" BLOB
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_RESTART_CKPT$"
   (	"SESSION#" NUMBER,
	"VALID" NUMBER,
	"CKPT_SCN" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"SESSION_NUM" NUMBER,
	"SERIAL_NUM" NUMBER,
	"CKPT_INFO" BLOB,
	"FLAG" NUMBER,
	"OFFSET" NUMBER,
	"CLIENT_DATA" BLOB,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGMNR_INTEGRATED_SPILL$"
   (	"SESSION#" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"CHUNK" NUMBER,
	"FLAG" NUMBER,
	"CTIME" DATE,
	"MTIME" DATE,
	"SPILL_DATA" BLOB,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" NUMBER,
	"SPARE4" DATE,
	"SPARE5" DATE
   ) ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."LOGMNRT_MDDL$"
   (	"SOURCE_OBJ#" NUMBER,
	"SOURCE_ROWID" ROWID,
	"DEST_ROWID" ROWID
   ) ON COMMIT DELETE ROWS ;

CREATE TABLE "SYSTEM"."AQ$_QUEUES"
   (	"OID" RAW(16),
	"EVENTID" NUMBER,
	"NAME" VARCHAR2(128),
	"TABLE_OBJNO" NUMBER,
	"USAGE" NUMBER,
	"ENABLE_FLAG" NUMBER,
	"MAX_RETRIES" NUMBER,
	"RETRY_DELAY" NUMBER,
	"PROPERTIES" NUMBER,
	"RET_TIME" NUMBER,
	"QUEUE_COMMENT" VARCHAR2(2000),
	"SUBSCRIBERS" "SYS"."AQ$_SUBSCRIBERS" ,
	"MEMORY_THRESHOLD" NUMBER,
	"SERVICE_NAME" VARCHAR2(64),
	"NETWORK_NAME" VARCHAR2(256),
	"SUB_OID" RAW(16),
	"SHARDED" NUMBER
   ) ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."OL$"
   (	"OL_NAME" VARCHAR2(128),
	"SQL_TEXT" LONG,
	"TEXTLEN" NUMBER,
	"SIGNATURE" RAW(16),
	"HASH_VALUE" NUMBER,
	"HASH_VALUE2" NUMBER,
	"CATEGORY" VARCHAR2(128),
	"VERSION" VARCHAR2(64),
	"CREATOR" VARCHAR2(128),
	"TIMESTAMP" DATE,
	"FLAGS" NUMBER,
	"HINTCOUNT" NUMBER,
	"SPARE1" NUMBER,
	"SPARE2" VARCHAR2(1000)
   ) ON COMMIT PRESERVE ROWS ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."OL$HINTS"
   (	"OL_NAME" VARCHAR2(128),
	"HINT#" NUMBER,
	"CATEGORY" VARCHAR2(128),
	"HINT_TYPE" NUMBER,
	"HINT_TEXT" VARCHAR2(512),
	"STAGE#" NUMBER,
	"NODE#" NUMBER,
	"TABLE_NAME" VARCHAR2(128),
	"TABLE_TIN" NUMBER,
	"TABLE_POS" NUMBER,
	"REF_ID" NUMBER,
	"USER_TABLE_NAME" VARCHAR2(260),
	"COST" FLOAT(126),
	"CARDINALITY" FLOAT(126),
	"BYTES" FLOAT(126),
	"HINT_TEXTOFF" NUMBER,
	"HINT_TEXTLEN" NUMBER,
	"JOIN_PRED" VARCHAR2(2000),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"HINT_STRING" CLOB
   ) ON COMMIT PRESERVE ROWS ;

CREATE GLOBAL TEMPORARY TABLE "SYSTEM"."OL$NODES"
   (	"OL_NAME" VARCHAR2(128),
	"CATEGORY" VARCHAR2(128),
	"NODE_ID" NUMBER,
	"PARENT_ID" NUMBER,
	"NODE_TYPE" NUMBER,
	"NODE_TEXTLEN" NUMBER,
	"NODE_TEXTOFF" NUMBER,
	"NODE_NAME" VARCHAR2(64)
   ) ON COMMIT PRESERVE ROWS ;

CREATE TABLE "SYSTEM"."DEF$_LOB"
   (	"ID" RAW(16),
	"ENQ_TID" VARCHAR2(22),
	"BLOB_COL" BLOB,
	"CLOB_COL" CLOB,
	"NCLOB_COL" NCLOB
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"
   (	"TEMPLATE_OBJECT_ID" NUMBER,
	"REFRESH_TEMPLATE_ID" NUMBER,
	"OBJECT_NAME" VARCHAR2(128),
	"OBJECT_TYPE" NUMBER,
	"OBJECT_VERSION#" NUMBER,
	"DDL_TEXT" CLOB,
	"MASTER_ROLLBACK_SEG" VARCHAR2(30),
	"DERIVED_FROM_SNAME" VARCHAR2(128),
	"DERIVED_FROM_ONAME" VARCHAR2(128),
	"FLAVOR_ID" NUMBER,
	"SCHEMA_NAME" VARCHAR2(128),
	"DDL_NUM" NUMBER DEFAULT 1,
	"TEMPLATE_REFGROUP_ID" NUMBER DEFAULT 0,
	"FLAGS" RAW(255),
	"SPARE1" VARCHAR2(4000)
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS"
   (	"TEMPLATE_PARAMETER_ID" NUMBER,
	"REFRESH_TEMPLATE_ID" NUMBER,
	"PARAMETER_NAME" VARCHAR2(128),
	"DEFAULT_PARM_VALUE" CLOB,
	"PROMPT_STRING" VARCHAR2(2000),
	"USER_OVERRIDE" VARCHAR2(1) DEFAULT 'Y'
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES"
   (	"USER_PARAMETER_ID" NUMBER,
	"TEMPLATE_PARAMETER_ID" NUMBER,
	"USER_ID" NUMBER,
	"PARM_VALUE" CLOB
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_RUNTIME_PARMS"
   (	"RUNTIME_PARM_ID" NUMBER,
	"PARAMETER_NAME" VARCHAR2(128),
	"PARM_VALUE" CLOB
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_EXCEPTIONS"
   (	"EXCEPTION_ID" NUMBER,
	"USER_NAME" VARCHAR2(128),
	"REQUEST" CLOB,
	"JOB" NUMBER,
	"ERROR_DATE" DATE,
	"ERROR_NUMBER" NUMBER,
	"ERROR_MESSAGE" VARCHAR2(4000),
	"LINE_NUMBER" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL"
   (	"REFRESH_TEMPLATE_ID" NUMBER,
	"DDL_TEXT" CLOB,
	"DDL_NUM" NUMBER,
	"PHASE" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."SCHEDULER_PROGRAM_ARGS_TBL"
   (	"OWNER" VARCHAR2(128),
	"PROGRAM_NAME" VARCHAR2(128),
	"ARGUMENT_NAME" VARCHAR2(128),
	"ARGUMENT_POSITION" NUMBER,
	"ARGUMENT_TYPE" VARCHAR2(257),
	"METADATA_ATTRIBUTE" VARCHAR2(19),
	"DEFAULT_VALUE" VARCHAR2(4000),
	"DEFAULT_ANYDATA_VALUE" "SYS"."ANYDATA" ,
	"OUT_ARGUMENT" VARCHAR2(5)
   ) ;

CREATE TABLE "SYSTEM"."SCHEDULER_JOB_ARGS_TBL"
   (	"OWNER" VARCHAR2(128),
	"JOB_NAME" VARCHAR2(128),
	"ARGUMENT_NAME" VARCHAR2(128),
	"ARGUMENT_POSITION" NUMBER,
	"ARGUMENT_TYPE" VARCHAR2(257),
	"VALUE" VARCHAR2(4000),
	"ANYDATA_VALUE" "SYS"."ANYDATA" ,
	"OUT_ARGUMENT" VARCHAR2(5)
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$EVENTS"
   (	"EVENT_TIME" TIMESTAMP (6),
	"CURRENT_SCN" NUMBER,
	"COMMIT_SCN" NUMBER,
	"XIDUSN" NUMBER,
	"XIDSLT" NUMBER,
	"XIDSQN" NUMBER,
	"ERRVAL" NUMBER,
	"EVENT" VARCHAR2(2000),
	"FULL_EVENT" CLOB,
	"ERROR" VARCHAR2(2000),
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000),
	"CON_NAME" VARCHAR2(30),
	"CON_ID" NUMBER
   ) ;

CREATE TABLE "SYSTEM"."LOGSTDBY$PLSQL"
   (	"SESSION_ID" NUMBER,
	"START_FINISH" NUMBER,
	"CALL_TEXT" CLOB,
	"SPARE1" NUMBER,
	"SPARE2" NUMBER,
	"SPARE3" VARCHAR2(2000)
   ) ;

CREATE TABLE "SYSTEM"."DEF$_AQCALL"
   (	"Q_NAME" VARCHAR2(30),
	"MSGID" RAW(16),
	"CORRID" VARCHAR2(128),
	"PRIORITY" NUMBER,
	"STATE" NUMBER,
	"DELAY" TIMESTAMP (6),
	"EXPIRATION" NUMBER,
	"TIME_MANAGER_INFO" TIMESTAMP (6),
	"LOCAL_ORDER_NO" NUMBER,
	"CHAIN_NO" NUMBER,
	"CSCN" NUMBER,
	"DSCN" NUMBER,
	"ENQ_TIME" TIMESTAMP (6),
	"ENQ_UID" NUMBER,
	"ENQ_TID" VARCHAR2(30),
	"DEQ_TIME" TIMESTAMP (6),
	"DEQ_UID" NUMBER,
	"DEQ_TID" VARCHAR2(30),
	"RETRY_COUNT" NUMBER,
	"EXCEPTION_QSCHEMA" VARCHAR2(30),
	"EXCEPTION_QUEUE" VARCHAR2(30),
	"STEP_NO" NUMBER,
	"RECIPIENT_KEY" NUMBER,
	"DEQUEUE_MSGID" RAW(16),
	"USER_DATA" BLOB
   ) USAGE QUEUE ;

CREATE TABLE "SYSTEM"."DEF$_AQERROR"
   (	"Q_NAME" VARCHAR2(30),
	"MSGID" RAW(16),
	"CORRID" VARCHAR2(128),
	"PRIORITY" NUMBER,
	"STATE" NUMBER,
	"DELAY" TIMESTAMP (6),
	"EXPIRATION" NUMBER,
	"TIME_MANAGER_INFO" TIMESTAMP (6),
	"LOCAL_ORDER_NO" NUMBER,
	"CHAIN_NO" NUMBER,
	"CSCN" NUMBER,
	"DSCN" NUMBER,
	"ENQ_TIME" TIMESTAMP (6),
	"ENQ_UID" NUMBER,
	"ENQ_TID" VARCHAR2(30),
	"DEQ_TIME" TIMESTAMP (6),
	"DEQ_UID" NUMBER,
	"DEQ_TID" VARCHAR2(30),
	"RETRY_COUNT" NUMBER,
	"EXCEPTION_QSCHEMA" VARCHAR2(30),
	"EXCEPTION_QUEUE" VARCHAR2(30),
	"STEP_NO" NUMBER,
	"RECIPIENT_KEY" NUMBER,
	"DEQUEUE_MSGID" RAW(16),
	"USER_DATA" BLOB
   ) USAGE QUEUE ;

GRANT UPDATE ON "SYSTEM"."OL$" TO PUBLIC;
GRANT SELECT ON "SYSTEM"."HELP" TO PUBLIC;
GRANT SELECT ON "SYSTEM"."OL$" TO PUBLIC;
GRANT INSERT ON "SYSTEM"."OL$" TO PUBLIC;
GRANT DELETE ON "SYSTEM"."OL$" TO PUBLIC;
GRANT UPDATE ON "SYSTEM"."OL$HINTS" TO PUBLIC;
GRANT SELECT ON "SYSTEM"."OL$HINTS" TO PUBLIC;
GRANT INSERT ON "SYSTEM"."OL$HINTS" TO PUBLIC;
GRANT DELETE ON "SYSTEM"."OL$HINTS" TO PUBLIC;
GRANT UPDATE ON "SYSTEM"."OL$NODES" TO PUBLIC;
GRANT SELECT ON "SYSTEM"."OL$NODES" TO PUBLIC;
GRANT INSERT ON "SYSTEM"."OL$NODES" TO PUBLIC;
GRANT DELETE ON "SYSTEM"."OL$NODES" TO PUBLIC;
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD"  IS 'Shared workload repository for DBA users of summary advisor';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE"  IS 'Base tables refered by a query';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_SQLDEPEND"  IS 'Temporary table for workload collections';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PRETTY"  IS 'Table for sql parsing';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_TEMP"  IS 'Table for temporary data';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FILTER"  IS 'Table for workload filter definition';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_LOG"  IS 'Log all calls to summary advisory functions';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE"  IS 'Table for workload filter instance definition';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_LEVEL"  IS 'Level definition';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP"  IS 'Each row repesents either a functional dependency or join-key relationship';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_AJG"  IS 'Anchor-join graph representation';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_FJG"  IS 'Representation for query join sub-graph not in AJG ';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_GC"  IS 'Group-by columns of a query';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE"  IS 'Table for storing canonical form of Clique queries';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE"  IS 'Summary management rewrite eligibility information';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT"  IS 'Output table for summary recommendations and evaluations';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS"  IS 'Output table for dimension validations';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS"  IS 'Summary advisor tuning parameters';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_INFO"  IS 'Internal table for passing information from the SQL analyzer';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL"  IS 'Summary advisor journal table for debugging and information';
COMMENT ON TABLE "SYSTEM"."MVIEW$_ADV_PLAN"  IS 'Private plan table for estimate_mview_size operations';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ENQ_TID" IS 'The ID of the transaction that created the error';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ORIGIN_TRAN_DB" IS 'The database originating the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ORIGIN_ENQ_TID" IS 'The original ID of the transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."DESTINATION" IS 'Database link used to address destination';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."STEP_NO" IS 'Unique ID of call that caused an error';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."RECEIVER" IS 'User ID of the original receiver';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ENQ_TIME" IS 'Time original transaction enqueued';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ERROR_NUMBER" IS 'Oracle error number';
COMMENT ON COLUMN "SYSTEM"."DEF$_ERROR"."ERROR_MSG" IS 'Error message text';
COMMENT ON TABLE "SYSTEM"."DEF$_ERROR"  IS 'Information about all deferred transactions that caused an error';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."DBLINK" IS 'Destination';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_DELIVERED" IS 'Value of delivery_order of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ENQ_TID" IS 'Transaction ID of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_SEQ" IS 'Parallel prop seq number of last transaction propagated';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."DISABLED" IS 'Is propagation to destination disabled';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."JOB" IS 'Number of job that pushes queue';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_TXN_COUNT" IS 'Number of transactions pushed during last attempt';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ERROR_NUMBER" IS 'Oracle error number from last push';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."LAST_ERROR_MESSAGE" IS 'Error message from last push';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."CATCHUP" IS 'Used to break transaction into pieces';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."ALTERNATE" IS 'Used to break transaction into pieces';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_TXN_COUNT" IS 'Total number of transactions pushed';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_PROP_TIME_THROUGHPUT" IS 'Total propagation time in seconds for measuring throughput';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TOTAL_PROP_TIME_LATENCY" IS 'Total propagation time in seconds for measuring latency';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."TO_COMMUNICATION_SIZE" IS 'Total number of bytes sent to this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."FROM_COMMUNICATION_SIZE" IS 'Total number of bytes received from this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE1" IS 'Total number of round trips for this dblink';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE2" IS 'Total number of administrative requests';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE3" IS 'Total number of error transactions pushed';
COMMENT ON COLUMN "SYSTEM"."DEF$_DESTINATION"."SPARE4" IS 'Total time in seconds spent sleeping during push';
COMMENT ON TABLE "SYSTEM"."DEF$_DESTINATION"  IS 'Information about propagation to different destinations';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."ENQ_TID" IS 'Transaction ID';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."STEP_NO" IS 'Unique ID of call within transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."DBLINK" IS 'The destination database';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."SCHEMA_NAME" IS 'The schema of the deferred remote procedure call';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."PACKAGE_NAME" IS 'The package of the deferred remote procedure call';
COMMENT ON COLUMN "SYSTEM"."DEF$_CALLDEST"."CATCHUP" IS 'Dummy column for foreign key';
COMMENT ON TABLE "SYSTEM"."DEF$_CALLDEST"  IS 'Information about call destinations for D-type and error transactions';
COMMENT ON COLUMN "SYSTEM"."DEF$_DEFAULTDEST"."DBLINK" IS 'Default destination';
COMMENT ON TABLE "SYSTEM"."DEF$_DEFAULTDEST"  IS 'Default destinations for deferred remote procedure calls';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."ID" IS 'Identifier of LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."ENQ_TID" IS 'Transaction identifier for deferred RPC with this LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."BLOB_COL" IS 'Binary LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."CLOB_COL" IS 'Character LOB parameter';
COMMENT ON COLUMN "SYSTEM"."DEF$_LOB"."NCLOB_COL" IS 'National Character LOB parameter';
COMMENT ON TABLE "SYSTEM"."DEF$_LOB"  IS 'Storage for LOB parameters to deferred RPCs';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."USERID" IS 'User ID of the propagator';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."USERNAME" IS 'User name of the propagator';
COMMENT ON COLUMN "SYSTEM"."DEF$_PROPAGATOR"."CREATED" IS 'The time when the propagator is registered';
COMMENT ON TABLE "SYSTEM"."DEF$_PROPAGATOR"  IS 'The propagator for deferred remote procedure calls';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ORIGIN_DB" IS 'Originating database for the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ORIGIN_DBLINK" IS 'Database link from deferred transaction origin to this site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."INUSR" IS 'Connected user receiving the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."CSCN" IS 'Prepare SCN assigned at origin site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."ENQ_TID" IS 'Transaction id assigned at origin site';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."RECO_SEQ_NO" IS 'Deferred transaction sequence number for recovery';
COMMENT ON COLUMN "SYSTEM"."DEF$_ORIGIN"."CATCHUP" IS 'Used to break transaction into pieces';
COMMENT ON TABLE "SYSTEM"."DEF$_ORIGIN"  IS 'Information about deferred transactions pushed to this site';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."SOURCE_SITE_ID" IS 'Originating database identifier for the deferred transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."LAST_TRAN_ID" IS 'Last committed transaction';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."DISABLED" IS 'Disable propagation';
COMMENT ON COLUMN "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"."SOURCE_SITE" IS 'Obsolete - do not use';
COMMENT ON TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS"  IS 'Information about deferred transactions pushed to this site by RepAPI clients';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."MASTER" IS 'Is the site a master site for the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."STATUS" IS 'If the site is a master, the master''s status';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."SCHEMA_COMMENT" IS 'Description of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."FLAVOR_ID" IS 'Flavor identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCAT"."FLAG" IS 'Miscellaneous repgroup info';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCAT"  IS 'Information about all replicated object groups';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."FLAVOR_ID" IS 'Flavor identifier, unique within object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."GNAME" IS 'Name of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."FNAME" IS 'Name of the flavor';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."CREATION_DATE" IS 'Date on which the flavor was created';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."CREATED_BY" IS 'Identifier of user that created the flavor';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVORS"."PUBLISHED" IS 'Indicates whether flavor is published (Y/N) or obsolete (O)';
COMMENT ON TABLE "SYSTEM"."REPCAT$_FLAVORS"  IS 'Flavors defined for replicated object groups';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."GOWNER" IS 'Owner of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."DBLINK" IS 'A database site replicating the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTERDEF" IS 'Is the database the master definition site for the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."SNAPMASTER" IS 'For a snapshot site, is this the current refresh_master';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTER_COMMENT" IS 'Description of the database site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MASTER" IS 'Redundant information from repcat$_repcat.master';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."PROP_UPDATES" IS 'Number of requested updates for master in repcat$_repprop';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."MY_DBLINK" IS 'A sanity check after import: is this master the current site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPSCHEMA"."EXTENSION_ID" IS 'Dummy column for foreign key';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPSCHEMA"  IS 'N-way replication information';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GOWNER" IS 'Owner of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GNAME" IS 'Name of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."DBLINK" IS 'Database site of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."GROUP_COMMENT" IS 'Description of the snapshot repgroup';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SNAPGROUP"."REP_TYPE" IS 'Identifier of flavor at snapshot';
COMMENT ON TABLE "SYSTEM"."REPCAT$_SNAPGROUP"  IS 'Snapshot repgroup registration information';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."VERSION#" IS 'Version of objects of TYPE';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."HASHCODE" IS 'Hashcode of objects of TYPE';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."ID" IS 'Identifier of the local object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."OBJECT_COMMENT" IS 'Description of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."STATUS" IS 'Status of the last create or alter request on the local object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENPACKAGE" IS 'Status of whether the object needs to generate replication package';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENPLOGID" IS 'Log id of message sent for generating package support';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENTRIGGER" IS 'Status of whether the object needs to generate replication trigger';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GENTLOGID" IS 'Log id of message sent for generating trigger support';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GOWNER" IS 'Owner of the object''s object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."GNAME" IS 'Name of the object''s object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPOBJECT"."FLAG" IS 'Information about replicated object';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPOBJECT"  IS 'Information about replicated objects';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CNAME" IS 'Column name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."LCNAME" IS 'Long column name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TOID" IS 'Type object identifier of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."VERSION#" IS 'Version# of a column of user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."HASHCODE" IS 'Hashcode of a column of user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."ID" IS 'Column ID';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."POS" IS 'Ordering of column used as IN parameter in the replication procedures';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."TOP" IS 'Top column name for an attribute';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."FLAG" IS 'Replication information about column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CTYPE" IS 'Type of the column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."LENGTH" IS 'Length of the column in bytes';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."PRECISION#" IS 'Length: decimal digits (NUMBER) or binary digits (FLOAT)';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."SCALE" IS 'Digits to right of decimal point in a number';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."NULL$" IS 'Does column allow NULL values?';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CHARSETID" IS 'Character set identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CHARSETFORM" IS 'Character set form';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCOLUMN"."CLENGTH" IS 'The maximum length of the column in characters';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCOLUMN"  IS 'Replicated columns for a table sorted alphabetically in ascending order';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."SNAME" IS 'Schema containing table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."ONAME" IS 'Name of the table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."TYPE" IS 'Type identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_KEY_COLUMNS"."COL" IS 'Column in the table';
COMMENT ON TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS"  IS 'Primary columns for a table using column-level replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."SNAME" IS 'Schema containing the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."ONAME" IS 'Name of the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."TYPE" IS 'Type of the generated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."REASON" IS 'Reason the object was generated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_SNAME" IS 'Name of the object''s owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."BASE_TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."PACKAGE_PREFIX" IS 'Prefix for package wrapper';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."PROCEDURE_PREFIX" IS 'Procedure prefix for package wrapper or procedure wrapper';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GENERATED"."DISTRIBUTED" IS 'Is the generated object separately generated at each master';
COMMENT ON TABLE "SYSTEM"."REPCAT$_GENERATED"  IS 'Objects generated to support replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."SNAME" IS 'Name of the object owner';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."ONAME" IS 'Name of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."TYPE" IS 'Type of the object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."DBLINK" IS 'Destination database for propagation';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."HOW" IS 'Propagation choice for the destination database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."PROPAGATE_COMMENT" IS 'Description of the propagation choice';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."DELIVERY_ORDER" IS 'Value of delivery order when the master was added';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."RECIPIENT_KEY" IS 'Recipient key for sname and oname, used in joining with def$_aqcall';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPPROP"."EXTENSION_ID" IS 'Identifier of any active extension request';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPPROP"  IS 'Propagation information about replicated objects';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."VERSION" IS 'Version of the repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ID" IS 'Identifying number of repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."SOURCE" IS 'Name of the database at which the request originated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."USERID" IS 'Name of the user who submitted the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."TIMESTAMP" IS 'When the request was submitted';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ROLE" IS 'Is this database the masterdef for the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."MASTER" IS 'Name of the database that processes this request$_ddl';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."SNAME" IS 'Schema of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."REQUEST" IS 'Name of the requested operation';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ONAME" IS 'Replicated object name, if applicable';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."TYPE" IS 'Type of replicated object, if applicable';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."A_COMMENT" IS 'Textual argument used for comments';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."BOOL_ARG" IS 'Boolean argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ANO_BOOL_ARG" IS 'Another Boolean argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."INT_ARG" IS 'Integer argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ANO_INT_ARG" IS 'Another integer argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."LINES" IS 'The number of rows in system.repcat$_ddl at the processing site';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."STATUS" IS 'Status of the request at this database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."MESSAGE" IS 'Error message associated with processing the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."ERRNUM" IS 'Oracle error number associated with processing the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPCATLOG"."GNAME" IS 'Name of the replicated object group';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPCATLOG"  IS 'Information about asynchronous administration requests';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."LOG_ID" IS 'Identifying number of the repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."SOURCE" IS 'Name of the database at which the request originated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."ROLE" IS 'Is this database the masterdef for the request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."MASTER" IS 'Name of the database that processes this request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."LINE" IS 'Ordering of records within a single request';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."TEXT" IS 'Portion of an argument';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_DDL"."DDL_NUM" IS 'Ordering of DDLs to execute';
COMMENT ON TABLE "SYSTEM"."REPCAT$_DDL"  IS 'Arguments that do not fit in a single repcat log record';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."USERID" IS 'OBSOLETE COLUMN: Identifying number of the user';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."USERNAME" IS 'Identifying name of the registered user';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GOWNER" IS 'Owner of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."GLOBAL_FLAG" IS '1 if gname is NULL, 0 otherwise';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."CREATED" IS 'Registration date';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REPGROUP_PRIVS"."PRIVILEGE" IS 'Registered privileges';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS"  IS 'Information about users who are registered for object group privileges';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."PRIORITY_GROUP" IS 'Name of the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."DATA_TYPE_ID" IS 'Datatype of the value in the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."FIXED_DATA_LENGTH" IS 'Length of the value in bytes if the datatype is CHAR';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY_GROUP"."PRIORITY_COMMENT" IS 'Description of the priority group';
COMMENT ON TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP"  IS 'Information about all priority groups in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."SNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."PRIORITY_GROUP" IS 'Name of the priority group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."PRIORITY" IS 'Priority of the value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."RAW_VALUE" IS 'Raw value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."CHAR_VALUE" IS 'Blank-padded character string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NUMBER_VALUE" IS 'Numeric value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."DATE_VALUE" IS 'Date value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."VARCHAR2_VALUE" IS 'Character string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NCHAR_VALUE" IS 'NCHAR string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."NVARCHAR2_VALUE" IS 'NVARCHAR2 string';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PRIORITY"."LARGE_CHAR_VALUE" IS 'Blank-padded character string over 255 characters';
COMMENT ON TABLE "SYSTEM"."REPCAT$_PRIORITY"  IS 'Values and their corresponding priorities in all priority groups in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."GROUP_NAME" IS 'Name of the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_COLUMN_GROUP"."GROUP_COMMENT" IS 'Description of the column group';
COMMENT ON TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP"  IS 'All column groups of replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."GROUP_NAME" IS 'Name of the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."COLUMN_NAME" IS 'Name of the column in the column group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_GROUPED_COLUMN"."POS" IS 'Position of a column or an attribute in the table';
COMMENT ON TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN"  IS 'Columns in all column groups of replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_CONFLICT"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON TABLE "SYSTEM"."REPCAT$_CONFLICT"  IS 'All conflicts for which users have specified resolutions in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_METHOD"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_METHOD"."METHOD_NAME" IS 'Name of the conflict resolution method';
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD"  IS 'All conflict resolution methods in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."SEQUENCE_NO" IS 'Ordering on resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."METHOD_NAME" IS 'Name of the conflict resolution method';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."FUNCTION_NAME" IS 'Name of the resolution function';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."PRIORITY_GROUP" IS 'Name of the priority group used in conflict resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION"."RESOLUTION_COMMENT" IS 'Description of the conflict resolution';
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION"  IS 'Description of all conflict resolutions in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."METHOD_NAME" IS 'Name of the conflict resolution method';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."FUNCTION_NAME" IS 'Name of the resolution function';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."PRIORITY_GROUP" IS 'Name of the priority group used in conflict resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."RESOLVED_DATE" IS 'Timestamp for the resolution of the conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"."PRIMARY_KEY_VALUE" IS 'Primary key of the replicated row (character data)';
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS"  IS 'Statistics for conflict resolutions for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."CREATED" IS 'Timestamp for which statistics collection was first started';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."STATUS" IS 'Status of statistics collection: ACTIVE, CANCELLED';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."STATUS_UPDATE_DATE" IS 'Timestamp for which the status was last updated';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."PURGED_DATE" IS 'Timestamp for the last purge of statistics data';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."LAST_PURGE_START_DATE" IS 'The last start date of the statistics purging date range';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"."LAST_PURGE_END_DATE" IS 'The last end date of the statistics purging date range';
COMMENT ON TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL"  IS 'Information about statistics collection for conflict resolutions for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."SNAME" IS 'Owner of replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."ONAME" IS 'Name of the replicated object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."SEQUENCE_NO" IS 'Ordering on resolution';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_TABLE_NAME" IS 'Name of the table to which the parameter column belongs';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_COLUMN_NAME" IS 'Name of the parameter column used for resolving the conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."PARAMETER_SEQUENCE_NO" IS 'Ordering on parameter column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."COLUMN_POS" IS 'Column position of an attribute or a column';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_PARAMETER_COLUMN"."ATTRIBUTE_SEQUENCE_NO" IS 'Sequence number for an attribute of an ADT/pkREF column or a scalar column';
COMMENT ON TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN"  IS 'All columns used for resolving conflicts in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."ATTRIBUTE" IS 'Description of the attribute';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."DATA_TYPE_ID" IS 'Datatype of the attribute value';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."DATA_LENGTH" IS 'Length of the attribute value in byte';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"."SOURCE" IS 'Name of the function which returns the attribute value';
COMMENT ON TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE"  IS 'Information about attributes automatically maintained for replication';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."SNAME" IS 'Owner of the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."ONAME" IS 'Name of the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."COLUMN_NAME" IS 'Name of the column in the shadow table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_SNAME" IS 'Owner of replicated table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_ONAME" IS 'Name of the replicated table';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_CONFLICT_TYPE_ID" IS 'Type of conflict';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."BASE_REFERENCE_NAME" IS 'Table name, unique constraint name, or column group name';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_AUDIT_COLUMN"."ATTRIBUTE" IS 'Description of the attribute';
COMMENT ON TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN"  IS 'Information about columns in all shadow tables for all replicated tables in the database';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."FLAVOR_ID" IS 'Flavor identifier';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."GOWNER" IS 'Owner of the object group containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."GNAME" IS 'Object group containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."SNAME" IS 'Schema containing object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."ONAME" IS 'Name of object';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."TYPE" IS 'Object type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."VERSION#" IS 'Version# of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."HASHCODE" IS 'Hashcode of a user-defined type';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"."COLUMNS_PRESENT" IS 'For tables, encoded mapping of columns present';
COMMENT ON TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS"  IS 'Replicated objects in flavors';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_STATUS"."TEMPLATE_STATUS_ID" IS 'Internal primary key for the template status table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_STATUS"."STATUS_TYPE_NAME" IS 'User friendly name for the template status.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS"  IS 'Table for template status and template status codes.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."TEMPLATE_TYPE_ID" IS 'Internal primary key of the template types table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."TEMPLATE_DESCRIPTION" IS 'Description of the template type.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."FLAGS" IS 'Bitmap flags controlling each type of template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TYPES"."SPARE1" IS 'Reserved for future expansion.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES"  IS 'Internal table for maintaining types of templates.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."OWNER" IS 'Owner of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_GROUP_NAME" IS 'Name of the refresh group to create during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_TEMPLATE_NAME" IS 'Name of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_COMMENT" IS 'Optional comment field for the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."PUBLIC_TEMPLATE" IS 'Flag specifying public template or private template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."LAST_MODIFIED" IS 'Date the row was last modified.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."MODIFIED_BY" IS 'User id of the user that modified the row.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."CREATION_DATE" IS 'Date the row was created.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."CREATED_BY" IS 'User id of the user that created the row.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."REFRESH_GROUP_ID" IS 'Internal primary key to default refresh group for the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_TYPE_ID" IS 'Internal primary key to the template types.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."TEMPLATE_STATUS_ID" IS 'Internal primary key to the template status table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."FLAGS" IS 'Internal flags for the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"."SPARE1" IS 'Reserved for future use.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES"  IS 'Primary table containing deployment template information.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."USER_AUTHORIZATION_ID" IS 'Internal primary key of the REPCAT$_USER_AUTHORIZATIONS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."USER_ID" IS 'Database user id.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."OBJECT_TYPE_ID" IS 'Internal primary key of the template object types table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."OBJECT_TYPE_NAME" IS 'Descriptive name for the object type.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."FLAGS" IS 'Internal flags for object type processing.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_TYPES"."SPARE1" IS 'Reserved for future use.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES"  IS 'Internal table for template object types.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_GROUP_ID" IS 'Internal primary key of the refresh groups table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_GROUP_NAME" IS 'Name of the refresh group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."REFRESH_TEMPLATE_ID" IS 'Primary key of the template containing the refresh group.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."ROLLBACK_SEG" IS 'Name of the rollback segment to use during refresh.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."START_DATE" IS 'Refresh start date.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"."INTERVAL" IS 'Refresh interval.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS"  IS 'Table for maintaining refresh group information for template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."TEMPLATE_OBJECT_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_OBJECTS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_NAME" IS 'Name of the database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_TYPE" IS 'Type of database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."OBJECT_VERSION#" IS 'Version# of database object of TYPE.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DDL_TEXT" IS 'DDL string for creating the object or WHERE clause for snapshot query.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."MASTER_ROLLBACK_SEG" IS 'Rollback segment for use during snapshot refreshes.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DERIVED_FROM_SNAME" IS 'Schema name of schema containing object this was derived from.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DERIVED_FROM_ONAME" IS 'Object name of object this object was derived from.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."FLAVOR_ID" IS 'Foreign key to the REPCAT$_FLAVORS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."SCHEMA_NAME" IS 'Schema containing the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."DDL_NUM" IS 'Order of ddls to execute.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."TEMPLATE_REFGROUP_ID" IS 'Internal ID of the refresh group to contain the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."FLAGS" IS 'Internal flags for the object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS"."SPARE1" IS 'Reserved for future use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."TEMPLATE_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."REFRESH_TEMPLATE_ID" IS 'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."PARAMETER_NAME" IS 'name of the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."DEFAULT_PARM_VALUE" IS 'Default value for the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."PROMPT_STRING" IS 'String for use in prompting for parameter values.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_PARMS"."USER_OVERRIDE" IS 'User override flag.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_PARMS"."TEMPLATE_PARAMETER_ID" IS 'Primary key of template parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_OBJECT_PARMS"."TEMPLATE_OBJECT_ID" IS 'Primary key of object using the paramter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."USER_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_USER_PARM_VALUES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."TEMPLATE_PARAMETER_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."USER_ID" IS 'Database user id.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_USER_PARM_VALUES"."PARM_VALUE" IS 'Value of the parameter for this user.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."TEMPLATE_SITE_ID" IS 'Internal primary key of the REPCAT$_TEMPLATE_SITES table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_TEMPLATE_NAME" IS 'Name of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_GROUP_NAME" IS 'Name of the refresh group to create during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."TEMPLATE_OWNER" IS 'Owner of the refresh group template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."USER_NAME" IS 'Database user name.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."SITE_NAME" IS 'Name of the site that has instantiated the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REPAPI_SITE_ID" IS 'Name of the site that has instantiated the template.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."STATUS" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."REFRESH_TEMPLATE_ID" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."USER_ID" IS 'Obsolete - do not use.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_SITES"."INSTANTIATION_DATE" IS 'Date template was instantiated.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."TEMPLATE_SITE_ID" IS 'Internal primary key of the template sites table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."SNAME" IS 'Schema containing the deployed database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."ONAME" IS 'Name of the deployed database object.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITE_OBJECTS"."OBJECT_TYPE_ID" IS 'Internal ID of the object type of the deployed database object.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS"  IS 'Table for maintaining database objects deployed at a site.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."RUNTIME_PARM_ID" IS 'Primary key of the parameter values table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."PARAMETER_NAME" IS 'Name of the parameter.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_RUNTIME_PARMS"."PARM_VALUE" IS 'Parameter value.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TEMPLATE_TARGET_ID" IS 'Internal primary key of the template targets table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TARGET_DATABASE" IS 'Global identifier of the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."TARGET_COMMENT" IS 'Comment on the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."CONNECT_STRING" IS 'The connection descriptor used to connect to the target database.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"."SPARE1" IS 'The spare column';
COMMENT ON TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS"  IS 'Internal table for tracking potential target databases for templates.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."EXCEPTION_ID" IS 'Internal primary key of the exceptions table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."USER_NAME" IS 'User name of user submitting the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."REQUEST" IS 'Originating request containing the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."JOB" IS 'Originating job containing the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_DATE" IS 'Date of occurance for the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_NUMBER" IS 'Error number generating the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."ERROR_MESSAGE" IS 'Error message associated with the error generating the exception.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXCEPTIONS"."LINE_NUMBER" IS 'Line number of the exception.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_EXCEPTIONS"  IS 'Repcat processing exceptions table.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."REFRESH_TEMPLATE_ID" IS 'Primary key of template containing supplementary DDL.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."DDL_TEXT" IS 'Supplementary DDL string.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."DDL_NUM" IS 'Column for ordering of supplementary DDL.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_INSTANTIATION_DDL"."PHASE" IS 'Phase to execute the DDL string.';
COMMENT ON TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL"  IS 'Table containing supplementary DDL to be executed during instantiation.';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_ID" IS 'Globally unique identifier for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_CODE" IS 'Kind of replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."MASTERDEF" IS 'Master definition site for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXPORT_REQUIRED" IS 'YES if this extension requires an export, and NO if no export is required';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."REPCATLOG_ID" IS 'Identifier of repcatlog records related to replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."EXTENSION_STATUS" IS 'Status of replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."FLASHBACK_SCN" IS 'Flashback_scn for export or change-based recovery for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PUSH_TO_MDEF" IS 'YES if existing masters partially push to masterdef, NO if no pushing';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PUSH_TO_NEW" IS 'YES if existing masters partially push to new masters, NO if no pushing';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PERCENTAGE_FOR_CATCHUP_MDEF" IS 'Fraction of push to masterdef cycle devoted to catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."CYCLE_SECONDS_MDEF" IS 'Length of push to masterdef cycle when catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."PERCENTAGE_FOR_CATCHUP_NEW" IS 'Fraction of push to new masters cycle devoted to catching up';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_EXTENSION"."CYCLE_SECONDS_NEW" IS 'Length of push to new masters cycle when catching up';
COMMENT ON TABLE "SYSTEM"."REPCAT$_EXTENSION"  IS 'Information about replication extension requests';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."EXTENSION_ID" IS 'Globally unique identifier for replication extension';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."GOWNER" IS 'Owner of the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."GNAME" IS 'Name of the replicated object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."DBLINK" IS 'A database site that will replicate the object group';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."FULL_INSTANTIATION" IS 'Y if the database uses full-database export or change-based recovery';
COMMENT ON COLUMN "SYSTEM"."REPCAT$_SITES_NEW"."MASTER_STATUS" IS 'Instantiation status of the new master';
COMMENT ON TABLE "SYSTEM"."REPCAT$_SITES_NEW"  IS 'Information about new masters for replication extension';
BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_ERROR"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_DESTINATION"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_CALLDEST"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_DEFAULTDEST"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_LOB"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_PROPAGATOR"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_ORIGIN"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"DEF$_PUSHED_TRANSACTIONS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPCAT"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_FLAVORS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPSCHEMA"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_SNAPGROUP"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPOBJECT"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPCOLUMN"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_KEY_COLUMNS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_GENERATED"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPPROP"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPCATLOG"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_DDL"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REPGROUP_PRIVS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPGROUP_PRIVS_FUN"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_PRIORITY_GROUP"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_PRIORITY"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_COLUMN_GROUP"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_GROUPED_COLUMN"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_CONFLICT"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_RESOLUTION_METHOD"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_RESOLUTION"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_RESOLUTION_STATISTICS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_RESOL_STATS_CONTROL"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_PARAMETER_COLUMN"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_AUDIT_ATTRIBUTE"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_AUDIT_COLUMN"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_FLAVOR_OBJECTS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_STATUS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_TYPES"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_REFRESH_TEMPLATES"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_USER_AUTHORIZATIONS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_OBJECT_TYPES"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_REFGROUPS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_OBJECTS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_PARMS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_OBJECT_PARMS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_USER_PARM_VALUES"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_SITES"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_SITE_OBJECTS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_RUNTIME_PARMS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_TEMPLATE_TARGETS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_EXCEPTIONS"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_INSTANTIATION_DDL"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_EXTENSION"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

BEGIN DBMS_RLS.ADD_GROUPED_POLICY('"SYSTEM"','"REPCAT$_SITES_NEW"','"SYS_DEFAULT"','"REPCAT_POLICY"','"SYS"','"DBMS_REPCAT_ADMIN"."REPCAT_ISDBA"','DELETE,UPDATE,INSERT',FALSE,TRUE,FALSE,dbms_rls.DYNAMIC,FALSE,'',NULL); END;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE "SYSTEM"."DBMS_REPCAT_AUTH" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
9
bf d6
0cfc6e4Sm6mfaMYwsbW2JygBepcwg/BKmJ4VZy/pO06UXsVUMejsissTcGWYR4qeK4TPqfDK
q7UPH+SmKP6nW9zmxMZnuK1VDzM0Iv9O4E4SvvsnHWn+EPF9hR+oBFe3fEro6RQ5R5Ejd1nr
e+fAK010dExf76gg/c6ZB3YxGPHDOqkGI4lV6HNsd57gKLwTd0bxan5UwJriIpt7Vjc=
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION "SYSTEM"."LOGMNR$COL_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
3c36 9ca
FBUOB0XD9oOnBCwu8fzvRjihnrAwg826DCCG3y+5MZ2sZ5605gLK/2pS4F3KDKCMK1E000MU
SftVYlBiyLmoea74htrPGImhulLhVm/VW1oU/88sB7tYawPloVnrrA7YVMEa5K3RwsntSBGg
cSoTI1hjCOcIchTZE57qlH1BygnBDHFAaYlJ/vyyr/Yt5IEaTrx5mRSUttvpQbCgJuBmYzen
p3U8bDU9XulSPycFXAZT5hP11gOJjzZjPedp0t7Ws0qHto0BaukObCZrk4hglZcM4o5e8Y+A
oM/m2YmiQ1630xixU3FL/N0jN/b8Ifc8lmBHueX/DqF1uX9APtQy9HvbfTPLkFLxBvuS6Bt3
O8pQXMxmj+LsBC7g63WJfbxKlVT1DGFgzA661XtNFYhKJqsHKvAK66fajkRfISEq3cvTQwTt
M7dJsh4cQM2bkA4LIhhL/2K8nmTQDomR4X4ILTV6rRl6OcTOZVk80vkw5t26z/11eT66Y8az
f1NVqlKJ7ow7hhESz7uM06fnWTyxwN4abSBciTp/fnSwzoXfE7j/gN/yi0ddCoahlgcU8N62
gAgAyeuNPk5Cet5JWrQN15EJT/8wAnmq2ZXozefhAZ822kf/dnvJR7Iix0dDTzbG6eAq5y6E
XEVZ3qLx9NhFtI/xIgJObTrPn98oFQO4NHYHhjB2RmKaucHJMyMilogmA1Z9BXHfxS5M7l3w
HlAOjnC/LOw7ElbfLFS/m/NuOe6OP//hKCkLSCAfB97qk6DiFYj1g37idbLmUlH13v6y4exM
rnJwdtE3zCIChklxrzDI4HZfUBMiJSFZBhs7j7+WbeLRyU4eAxMpQi/8xv4D+nz0jpT1o5YT
6MFQQ6XVokCoSt/JlWWK2hhKMX8jDLe0Nqlq/cvOsVmmfY8p10OBipLgb3WWaz1QsxN7+CLl
WjUx09ylxeUFIiD+3Z5hg3r87hf1n/roMMqPklq8n90cQ2FiRasxANC4GpfqLBoSjBZTW5Ss
melYXq8suL7wtH92bD6TeCPV35GgXyVHb/J7o3zG8k/fR5a2d5SqShZi7j7yEcwbaIxvwa4N
9PJ6XBTJ7r47xzidh4Nk6tFAWDvHeZ3/zbH9lVBBdaVUfqLvj77bCpTcUwWyTICf8mHs3WiI
Ov1Wby4dZA7YDzg5ChcKRFCAKW9Jz9JTcFxvvsMtevlTOMdtrnzREFPGbBy+aIf1B1Yo/afj
a8ZMitpD9ruFYaPnrpj/EqJbuxClGVu7EKUZW7sQpRlbuxClGVu7cxKbGZ2ZsOqQI35X7OUZ
fhjxPx3GnETaAY4Lffxi//U8z/SxPjjAyd7CR6+i7rCcfGayGdxowWFW+8XmhLdXuJF9ILt6
sLWrXszno7aaxXziAF0QgBFMDzaZYWGAIiiGa1k+SEYCHoHbfD1SHErtnHzEhmQPpJLElqo0
NG5oN1B86zs65CmuY+d5uB7k+Dq3Jd74cjuSQ/6dicUT4YdjtXQ7O4DNhpzBwXK1IZYstadF
ybtKzjmN4nvWIwf/L+3GkXcZBH9cWcpfo6HIQXGL5PF2z0K3FtoBC0Tt1OKjdXz5eeBcFBuO
zqlWvOB4rVamtu4TO01knYMSlp/sAekt93nJsSJ8HzFPD1D1fwnETPw8EeHxZ/8rwUN3Rs3C
ax7qZGJobRwwP7hBZ3mzVTEwgzFgldN88gADdU8oOantksPww6yTB8zP55PB0XCQLN300qkd
xTZbUOTJQh8KuTD+yqhouKZr0qZKOizLytUidwlBRLghiY0s3WHztdGH2ZJSpRaa2RUaWzCJ
C33KzFEcdEE/w1EcdHs5gVARQijRiL5F9EZLW20Ynnp68mjW+suCiJr2Bh2AVd/u+5n1ISkR
46eBjy/uTwei5xKT4flTsdPIgX2u2icSB/mgvShUS7aQ7bOppLxB1StGwBI8O2mlLSa0chRp
ASJflGzsZwyP6RM1YwLfRCKgXzUublabPLDWXAplTPwAa+lfAU8Nurs41YQPXg9vzTUw4F0/
XvpN1GrHS4tV5+SF5b/0zzIDba0Dt7SY6urJ+1YQk4tqoB8QG+ViVdaGnKykjpZOOHeBa/TM
AW1zP09TEfVTP+ZQWxC5hE/+NQ/OUB8QUJwi0gEs0o0oED1bAE5rFxBQsSLSMizSaAdB/jWa
zlB4GdfZDTYcKDs3arpBZN+N9gMKXmOHcUmWF2vawkF2BQB2BYSADLEPgtn+ODJKS5k8rBAR
kAmKUQ3dbTyIWpnlDP5yYoIuvtqvWT6lhVnLDEGgvcrU1JsiN/LkVwNl86SbZR1yyJyIm2WE
h8mF2XRCWKhiTvneWCCQjYjxZYQJi1tZl3Q4iy/JvBd1MfRlBbvLj8YEIM6qlSJnGvSe43jZ
5XNFNU+703fbOkzhSDA2xmPYuH8jtpCBKIxmQEyF3XUCAy+OrrMpJmsLgLyKLN5YLy57kIhW
2LyIDQ8tBH+MqpIsGqIsNg==
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION "SYSTEM"."LOGMNR$KEY_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
2e13 be5
O/KmLl1NP2JZ5iwpk0PI9iaI0cMwgw2jkyCG3y+5A6pENzZUJtUEYfGfLRNFqVmzSqOTwDJX
E0n7AKlh3WEoBTPeqs8HnKIJFOl4uvvMfpsT7rhXbtaLa2S46neUxR6GJidInUlyaghX9TH5
fG74EJNwoOaK9JfrUPFhRKWy5ZLrQSG9rGFe+U0/VRdiJv6aLi814tJMISNxT9zpeKBT8Tue
lWtHSjsRgK2tkRAxay5WWN8aHhOeDXJ5gNz2EJ6yr2J7HxcJb5T6zLPiqU0SIrYharKT63TY
mWnguFBnoWkQuGWc3VGX+hKgqmD4UZfswWtNe8AU12oYSurDU4rHZcMyMvqXZnJ7L0SxXAUB
XBdpDr/aoBBp46sJIu86MOMlW3uOEW3ZV9Lp0cNgvioaRGOvJTJB9F7Kuf2R7rw4WfxJVE0Z
e3pEppEBqi8G2AVFNXy42nCOOFwl4HG/RkkezKPqhc9L4KGrvuAMCxJWb435DRoUU4zAaBHP
JmDliqLJ8Ef5oCthaIRzw/c5MFcjyTS4TP+DZwJQz7d9hOa3BFzeqiNWpe9zPxH8thgwKKpt
PjdC2H9VWO/v8H8DTyqUr24IdNvEbmv7slyBAfR2q702/wcin1NMmSqtjtRd1koNUG4u1u+L
ccRZiKWdDsv/nidyk4RhSO3voJD1lqBkOh0nwJR+G5d8LfXM4jQfIiZusn0t1faiD/o0W2gE
EDtGbMhA2NKUXt/ry94SDPvJXNEXpF+w4UzWQJQ0YKeBUwW//Dy/HZarm+ACxdGPE5C501Z9
NCZy2Lu6lok+4V+RzFQ5dJyn4jkFDZjeHQXMJV2/cdebCm1DV/eQJo4FUfTeJhWWclkJh0h0
XbypV42A2LV0kmwu/m5oY39QfnQXSGlgrMM5+aKZAok3klVfmS9wNgCQZZqDwGjOJEoK1Hky
zw0AWkoS8hAsulnIQukcTsrrJtruKqRmShx7+ySov7qHj0jdiD8Ud1oHvMU/faFfvDpveeQV
YlJ7eJW9UQAXbEZbuTIB0Ge6SK88jwNDs4DUpBodaGZLNLD63Y+zHpMbLzXc4x5uolcP6yGL
G6GcF7dHthgxx8TYGYicsQkEJo/PsojVFBv+UoXI/kGogLoM305SCyBuh+P/GXVfOuz6VH7S
OoylBNbN+1TiBezyUhN+02S9iR0CbF4GICK5pkH/4VMcOAe8bNdi/IFZhAdwVMa6RseW6OJI
WJAeoWs3rBA/bSckT9POFBymgN26+uchQO3angp8i6mb1Uv1tluMHtUED/uBi5bHiIv7BdPh
G4pWkQUtJQVQZu/yt5i0HKNWiZZtuOX+p/8Bf91zKPP/G8Z63Qg3+2fFowzBJ89teebyp/nY
NVZvxxFQMWQpObxYZLNTM634IbtPCcXYyVQrt7c0PMknITWRHJwDrm+3WNPtzVbrtwR/3AC2
WJwlQCc+sGHZq6cxACoX0mxFrpoZnXOSLpIzHgTh8UqmA0ButO41PdKxdvTiq0IPoExtZvPN
xJmVafxtMGgBzMNU7Y8wRl7yc+xMDnNZ4UaOpAxxdpVaNJtJhy8VvlVHTtGDY2NMTkiHudpl
59TsuyGuZn9RMM0ch4sFbc8OD1abRGCOOjOOhHCi8Lv/L7mn8s9wojur+Wyn0cwGTq61gPRy
0ph+6Hdf24lq3Tc9c5Rj7S84a+J4af9lkwbh35xG0Y1OOA3PuKhkTXG4/f5RRFFcQ9TbVrgS
lZ1F5Z8oVmiQXNplHUvDIQW8IVZQdFrOqDyL0J6HF1dgAh86XdUorKdTNnYvYi11nuT6Im8n
KXsyQvV9s6RF0aFd4lHOu47VD5WjWdWd8LfN4LJ61YXJbLjluDQFSBkaLc67TeNV74salRqX
bfwRPN1Ok7hJT0gZvDE/RO9I4hyKCaBEGtiLWi2GePthVmbcRWqRlqf/D8CwvOzaTOMYVxpd
3CQM181KsP4MlHgWj2+UGDnwSCuPb/KyfgrIXurEFi3t7dzgUgTIg2ZS82kwZbXjHTdXsjY8
a1NpQBDOhWGeg12V1UtVoJlZJhr+utBsUxCJ4O1kIFkBJ9vo4VzmXX3YwYkCK/ljyfVc71GL
jvvtkPQgUp9lSNzdCMFpLn9hV3tzCcGyZU5a2kE1bPvu+j8VAoera4SG4PmtVAQHfNlGN9gf
rt7hzl++mMFXxgg2T5vkxD7ih00dhtsRMjvFNEkMr6stbng68JXAnjJMeyYcuw6lUipJRuDX
HaKP4TRbVyed/s7UQkbHPTrXwyno+7ZduamsD6ct9mMCiFbisLVuwjTY43x1rXK/MEhYjUNn
IIWpDcEaa3gY6BQPyfV9NwfI4vp8iPLAqEMwPRcNScZRUXMhO9n+sJ8v2QXIViyFlcx242+P
XDL0l61haNUjxMcU8IAlCGBn6dFVFuqF0z8yVrNIqZUoVglFCU6w6H2F3Wx6HO/pwwxAtfJo
n/zC7VKMzVUKrk9Wzr8sqjrOCMlbkBh1n10HT6qNZ3XWpE7+ICQMRxok2tJyLKqcaVgBrTe1
BIVtHZLrTywi5DOxpQiwJDaHPWWdjVx2X5VjiAz+WlNOj78eFolpHSJ8C48b32D3s1DUR7yM
6S6+6G05/Ix4lRFJ+SIlYBgCiCzdLdaEUeqzEQTB/mr1TZ8mfLNI89HorZLYrUXYHgPKjB8Z
3UEpnbHki6RPxDSWHzWuVlYZI0R84JTxzZRByuMs4LbSwIeeLMban1kJgVj1FUWTU+N9KTZe
KA81M1XWlJytMuEZzql6kXof34VUjPZ8DTnqvT2fwchgQkp2dDThX/60jqMxi2/sse+DuNj6
jOstNnjSgmGYEZP04tMtQFuBVhiSW/cy129Wva1NOD4KjypFlLHFTg5b4e2Xo+TyGC6Xpzbx
s1JJe+7CzklFwSxUcai7f60DZ576DAInLwreSe7m5JMPk3OItnzVo2Y5lCIzRHYN9sRorszo
dxcJnET5wG089kQDJTT97ZJZ2syRfWI8dxVA8+I/6UP5Bg/qXx8p
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION "SYSTEM"."LOGMNR$SEQ_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
11c6 58f
gySaLpM2/dy/FuJ95b/w61eAZaYwg81Ur0gFVy9VA52sZ+HDJ0RrvayO9BPh0yorU9XMh/Hl
HrepeR8RmZEShbk7LJqICcKhk8A0Z0rzLzEULCz6WEJu9Oo7XWAh8Vwukwwy4u5y4lbat0MK
SFWLjY9+r4q2XDKwNfY2T38xPK1NRjgPTGj41xu1AASLLkyZ697R+BkwysNwo2xYGScdMqvi
ZKn2YW/2TUZGrL3t3aHJmDmfqR5lY3vaRhbGR7j4lEvJKgwipgJWj7bZxFYfZV4F3FodbE1s
YgcTv05FK45zi5yZg8RI1Xrzde8TqMoglP3zAwXaMzzxIf0hLtXXdN0usfDgWuLaHFKqguB8
yRWQr3PLcgZmfCMgLLKUpTi7opx0HC0oCAIA9TRcjY3sMf7nvPcO/7SisEcncFtoYZyH+hG9
QQgScDI1LbGyzX9aWkoPM8p+1U017M/299U9d2vrQsE0hANikcconk2NIzntCzcQgpNWrDJe
9gHmMZYHhkGzmrZH9u918FACJzyfioTnDVIfzgCCSRIZeFy1bnZ0Lnv9y7l9hk0WqXhEor58
MDRNoUyRcdS9mFmF+x0PqFMp2NVemx2SAVUWX/5deeSLPmHVkZh71EDvbFoa4K7ATHHGzpx2
7hXewrjaE0td7oYwgOjA4Lgsa6QFd2D53IgL1a4e5mFclDbka8XLyq72rGbBbir6TcQ9Dv+T
2XpYIUltGrL3r9svMXaUXhMl3/9W6SD/L6nRPRte3+h4J9eHAwrZEwoTHr+ceLEE50f9/4IA
K4bCF8IsYAF2RZ4i5g2YmscWAhSICU2OQjuYGVqewlHW0LP154EAWmwuBrbGtr42u87ep9Nf
HqLDIR8ChxzccfkurHr9llU66Jy0FjgOx/1W2YUFKdtEmydhxVMQgU7BNvkzCLvGxgPadtKf
rfDPzpsypgbz6H+1EPhlcDOLE0D5zh74pmNN7DkQ+Qilpc2auQhOJAB3xIMVoy7YYP8Vz0dH
AIWVvMmoFo870Ss8vpjIKWonH60AmWOfd8+N8f1Qyom53si180QMvmk1r4MFnVEjrNHNvKbn
DpgJ9sMLlXU8EzKq9eUkfHd9hrKYVLmX4mvP9LgUudZSwvLg80zRvU4ZSUzwjMbcz8tKF1gZ
nU/WbEEt3nslRU5jsdp4chkHGXQncjh5FaVLd0FDMh8mcn4SSgbGmYp7wcm+q7MTONqLUIxu
i3L9sgDXj2M03hwoj7RavBSNh8BNIwYULcbczdz/gDb0jTFtFA8UOmb6wZxdUPxO1c8GS2Ek
CXDMxZPWksMjT7euocQ7blnEM+dYUFAX0gFpznOqvI8sErDH4Oj41hTQv8ZEDF4ohGPu+Z8O
LHoRyOnvmNSElS2YwkDmkTWY+c0fvRhsDg==
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION "SYSTEM"."LOGMNR$TAB_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
3aea c6f
/cCEdSj6hIAboJakHcX9IAmxhHMwg8269iAF345VF7We4Ygv/basVCkFhaaT6KQ7wl3x8bfP
00vi3XvS+6BMN/tzCIZDhGY+CQkUILRLiDt5VRJy7oRdbDJ9ftlW0fF6hN68BRdd+Gaj6phM
lSJhPWtxsKFfyeOdiym8UXUJb89AwsCd1BRnR2GaaH2cOpKwgh6StAQUH1cGz52uGBjUWNLR
J5av6aFlorveN/4fydfnSj57FFtuG4gZDkb/BOVTJHB3GApm5sW54Mzx7EJeX5s7nHFEGzE5
mmuBAKNJk6K5ChTVpcu3lJZKon/iCc/bJtj4J9QFFLTlZTERn6zeWMJABlGMGC8EnDaTlWsf
sX3xt13E2MaX2KVEGsYhyYdcVgqLdBkESde9IRMrCHo89nWRgXn0lXkDYoDXoHCQhSAvlT5K
XF5XzKXTmsd6NEQRpMxW3Tf8WTOXIIJZ/1AdD/iydJXlGnUUE8nOS+pusI7wGgtUGZwjc4fg
8e71fAqRxZtm8jdk4O2Rd5bV69JrgeAQo81ahxzFz5xQrPyBBY9Xmo86ez5RfoIkyOSpoVIs
ekKgcLXWThJZctZOViQPzoW3NATd/jCI0Y87lbRLwzrzt3nsmqvNjc+gcSxmCd3Iy6eE5Wz7
vRSogHM58YiJTM/C7eDSb968LoykslDxMu9FdC9LA78W3n+Ehg/CG7/4jsVyt0qHiK3p/9S4
ZXYTqn7ftLfVbTMwcSqtccEL+l3ANkwu51SQ0Gy6WN4KLtMfXHaVeM6sDTYjB4Bya1pTe7pX
q0eAqf/qS7pHnEr3lJFpkChZwBSOFDGvsabCWGU86x09hvMp71WKe6cHHc5xGM+FvAKBxGwg
jHzfD5w0asihtp7vDNLIjeGOzOzGVvnRMYkhhk8hYtvB1YytwjzCxj4KG4fsnGtCQgGHImWr
Gq0cE1KuR9mwi0OCLNlOpo2IYigHbo4w76vGnx0Hjpo1nOeEK2cRK0tB9mM81JVl835a7Liz
unY4cggreTMI83668bvXzWdxzQR0r/02aBlwrDo9AmH8TO8LKgGT6dU3WwoBCKM7ZEp1yS00
4rFolKwuQPnQ8J0EIPLhE251YlemlLdNRfCFHLdCnjJp2h8NGCiXcFCvjPfGfo4JWfHFlpk2
tROk1H4bvwcGYQwofsDdSyU0xqf4FnMecc146lHEPcN+k4SwXBpr3wIFdntHwGTrYQhuI19a
z7b3uD8NcRFjn86npLxQwbYpFdg2mhkEb1hMWYxhH2WKMuygR2UBo7IrKeue6Bdhr7HhvH6X
dxNwbcaXyhKSCf2y6qXxjOkuMjtGuC3xVTgUpHlyStjkC6dV3GdIqpBf2G/ZiZGJsDzTak07
f0VMdMc0DGUyOOItyBziiy7A4CiZfZKANq0VJCQ40ePdI5IyOSyoq8mWfLFeJSizi3rK/NUk
rC6RlP+8n2VOOjtSbWPEmfOj40sfqJusOfNAuSMxdQEkG6B/OChgGv1EL+rUwMHnB60Xyopi
upg6e6JMv3gZ5lYS82sC55jzZpUmML4km2Bqjuotz9Du8ImhzEQKpHV4vPqcniVU5E17E8Vp
A5mBC5HlO6iBSA325eyVIfijqn+guVwzDdXcnTgGlyw7n7OjEoHkuVujvofuBQxnxo8J2WcA
RYlr9t0E2YSCn0c75R8g0aieSHl+Bw5DZoZwafiah6cjPsKh7LIDtdHZgeW8ICcMzZ3rwLMJ
57HW8TolK3tEm3pwWGTqbBv+IZahVhwriLnT9LI2yZh5cp9CKhMIQ7ZhE0tISDwSo/qApqyM
LgLQx/6CCqCP70AHei7ncbgBUHemMdzb18JqAnzCTb5keewZq+eQKnyRXjzyRsOZgwFo8Rrd
jU3uSHix5fx918dk5PgG5AV4gORtciAiqiKYydw77LmF/p3k5eGT/Wh/nZ1z6ZUhc8HLc85O
IMWOp34gUOpi/H29EnMIc/jED+VyZCSFVO2/lYzqwg1I/Cr9cJWy/8nwCe3xjGIxmzVpKGIQ
9aE5yHkxoxOH3ZDgEDkJ0VeGnMeMBH9uYa377ZSJ4PlfbAFx78IrVf2+pBoKIXIowvoO1QNr
5ywkDkMn6KKfbAxyWBeoWwpetk/WdYi4oYJLGTkAud64u/gkSn2qQaqU0HV8SjcQOGyRf5D1
1ZtZ9JnRKBEEqDGSUf0+gNYhYJb/V4ZQLeiMKGTLKnZ0DQrQalf/uC9Y+SLf+FfW8994BeBI
lTP3Sb4KY3CkqdjQfGiO8JjQCiInuC8qvCJvc3TbNZFT+FPS71tbnO65hgmAsstBgz3Z+yic
0eFIu4TH3k2ybxe2cw3BFfQDm2jrEg/gwc3j2rnm7/fe3dR9xj6yLgc+uuqsJ5w8BO1XgRTo
aicTLGMaFqRjfoeJ4jjeZ1WKlZeEeQB5mQxbcN4XzYM8+56kDksoFJQ4ChY4isXZRJkSOAwS
0Xdh4sJ2Dku2GjY4soxZIuPD7CpGoM6mBjYMW1oMW6noAkSmDB+PjUzhVM+pPFbTQFz+QeZ2
O61hlCV/NhySj+7Kzo0oPyrn+YVbqiHn+bRbqnrn+dtbqmXn+Xdbqnvn+Udbqt/n+WhbqrkC
uhiN3HCYz44zWAJgOJjPjjyzQNRwQjkvTU4oePSbM/MqW2zLQdQxEOr8C408eSYAVTa4WncV
rPcko+etPiSlbYiqUjKP0/SAHqO2fXtRQwfVgwP42LuRK5DUboFAHAOLyuhJRa3PONLkmCMj
kgxjFNIp15yuquTqRGx4j1Wxv2Qkz+6v1PCPILZdLISmm6Fnqgrn9eaBi7vokk8pD9kakWgm
JVCElWsIm1D1N30h07Mm6VFSZbMdRlE+CbPelVFe+umwlF/c1YiQYCHsxf0utkrcqKQu89DU
2YALRBoI0yVU897YXyEuWquobPCOt2CXoYxEY7PxJVrM3hrYIfJUq6hi8C+cYIUM7zboWwxZ
t+no+mXrkWvewnchk37sVngub24bDNy36bC3hdxJ80HcygCQac97WOT14fsnRjZsLAuriJfO
1728bQg3u/5IILhAmwZADbyzGkDkdGNHbiSE7o3w0xgB9AoxftNPCMZf5rdU+k9FqXr3kRH0
0dGgBE7GVqWwT4+ixwpbH9W6Gl4k/1g1O534tvu3+kM=
/

CREATE OR REPLACE NONEDITIONABLE PROCEDURE "SYSTEM"."ORA$_SYS_REP_AUTH" as
begin
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.repcat$_repschema TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.repcat$_repprop TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_aqcall TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_calldest TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_error TO SYS ' ||
                 'WITH GRANT OPTION';
  EXECUTE IMMEDIATE 'GRANT SELECT ON SYSTEM.def$_destination TO SYS ' ||
                 'WITH GRANT OPTION';
end;
/


ALTER FUNCTION "SYSTEM"."LOGMNR$TAB_GG_TABF_PUBLIC"
  COMPILE
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2014-07-07 05:50:21'
/


ALTER FUNCTION "SYSTEM"."LOGMNR$COL_GG_TABF_PUBLIC"
  COMPILE
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2014-07-07 05:50:21'
/


ALTER FUNCTION "SYSTEM"."LOGMNR$SEQ_GG_TABF_PUBLIC"
  COMPILE
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2014-07-07 05:50:21'
/


ALTER FUNCTION "SYSTEM"."LOGMNR$KEY_GG_TABF_PUBLIC"
  COMPILE
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2014-07-07 05:50:21'
/


ALTER PROCEDURE "SYSTEM"."ORA$_SYS_REP_AUTH"
  COMPILE
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2014-07-07 05:43:45'
/

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_SESSION_EVOLVE$_PK" ON "SYSTEM"."LOGMNR_SESSION_EVOLVE$" ("SESSION#", "DB_ID", "RESET_SCN", "RESET_TIMESTAMP")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_PDB_INFO$_PK" ON "SYSTEM"."LOGMNR_PDB_INFO$" ("LOGMNR_DID", "LOGMNR_MDH", "PLUGIN_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_DID$_PK" ON "SYSTEM"."LOGMNR_DID$" ("SESSION#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_UID$_PK" ON "SYSTEM"."LOGMNR_UID$" ("LOGMNR_UID")
  ;

CREATE INDEX "SYSTEM"."LOGMNRGGC_I2GTLO" ON "SYSTEM"."LOGMNRGGC_GTLO" ("LOGMNR_UID", "BASEOBJ#", "BASEOBJV#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRGGC_I3GTLO" ON "SYSTEM"."LOGMNRGGC_GTLO" ("LOGMNR_UID", "DROP_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRGGC_GTLO_PK" ON "SYSTEM"."LOGMNRGGC_GTLO" ("LOGMNR_UID", "KEYOBJ#", "BASEOBJV#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRGGC_GTCS_PK" ON "SYSTEM"."LOGMNRGGC_GTCS" ("LOGMNR_UID", "OBJ#", "OBJV#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRGGC_I2GTCS" ON "SYSTEM"."LOGMNRGGC_GTCS" ("LOGMNR_UID", "OBJ#", "OBJV#", "SEGCOL#", "INTCOL#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_DBNAME_UID_MAP_PK" ON "SYSTEM"."LOGMNRC_DBNAME_UID_MAP" ("GLOBAL_NAME", "LOGMNR_MDH")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_LOG$_FLAGS" ON "SYSTEM"."LOGMNR_LOG$" ("FLAGS")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_LOG$_FIRST_CHANGE#" ON "SYSTEM"."LOGMNR_LOG$" ("FIRST_CHANGE#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_LOG$_RECID" ON "SYSTEM"."LOGMNR_LOG$" ("RECID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_LOG$_PK" ON "SYSTEM"."LOGMNR_LOG$" ("SESSION#", "THREAD#", "SEQUENCE#", "FIRST_CHANGE#", "DB_ID", "RESETLOGS_CHANGE#", "RESET_TIMESTAMP")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_PROCESSED_LOG$_PK" ON "SYSTEM"."LOGMNR_PROCESSED_LOG$" ("SESSION#", "THREAD#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_SPILL$_PK" ON "SYSTEM"."LOGMNR_SPILL$" ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "STARTIDX", "ENDIDX", "FLAG", "SEQUENCE#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_AGE_SPILL$_PK" ON "SYSTEM"."LOGMNR_AGE_SPILL$" ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "SEQUENCE#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$_PK" ON "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$" ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM", "EFFECTIVE_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_RESTART_CKPT$_PK" ON "SYSTEM"."LOGMNR_RESTART_CKPT$" ("SESSION#", "CKPT_SCN", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_INTEG_SPILL$_PK" ON "SYSTEM"."LOGMNR_INTEGRATED_SPILL$" ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "FLAG")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_SESSION_ACTION$_PK" ON "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ("LOGMNRSESSION#", "ACTIONNAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_PARAMETER_INDX" ON "SYSTEM"."LOGMNR_PARAMETER$" ("SESSION#", "NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_SESSION_PK" ON "SYSTEM"."LOGMNR_SESSION$" ("SESSION#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNR_SESSION_UK1" ON "SYSTEM"."LOGMNR_SESSION$" ("SESSION_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRT_MDDL$_PK" ON "SYSTEM"."LOGMNRT_MDDL$" ("SOURCE_OBJ#", "SOURCE_ROWID") ;
CREATE INDEX "SYSTEM"."REDO_DB_IDX" ON "SYSTEM"."REDO_DB" ("DBID", "THREAD#", "RESETLOGS_SCN", "RESETLOGS_TIME")
  ;

CREATE INDEX "SYSTEM"."REDO_LOG_IDX" ON "SYSTEM"."REDO_LOG" ("DBID", "THREAD#", "RESETLOGS_SCN", "RESETLOGS_TIME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REDO_RTA_IDX" ON "SYSTEM"."REDO_RTA" ("DBID", "THREAD")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_WORKLOAD_PK" ON "SYSTEM"."MVIEW$_ADV_WORKLOAD" ("QUERYID#")
  ;

CREATE INDEX "SYSTEM"."MVIEW$_ADV_WORKLOAD_IDX_01" ON "SYSTEM"."MVIEW$_ADV_WORKLOAD" ("COLLECTIONID#", "QUERYID#")
  ;

CREATE INDEX "SYSTEM"."MVIEW$_ADV_BASETABLE_IDX_01" ON "SYSTEM"."MVIEW$_ADV_BASETABLE" ("QUERYID#")
  ;

CREATE INDEX "SYSTEM"."MVIEW$_ADV_SQLDEPEND_IDX_01" ON "SYSTEM"."MVIEW$_ADV_SQLDEPEND" ("COLLECTIONID#", "FROM_ADDRESS", "FROM_HASH", "INST_ID")
  ;

CREATE INDEX "SYSTEM"."MVIEW$_ADV_PRETTY_IDX_01" ON "SYSTEM"."MVIEW$_ADV_PRETTY" ("QUERYID#")
  ;

CREATE INDEX "SYSTEM"."MVIEW$_ADV_TEMP_IDX_01" ON "SYSTEM"."MVIEW$_ADV_TEMP" ("ID#", "SEQ#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_FILTER_PK" ON "SYSTEM"."MVIEW$_ADV_FILTER" ("FILTERID#", "SUBFILTERNUM#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_LOG_PK" ON "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_LEVEL_PK" ON "SYSTEM"."MVIEW$_ADV_LEVEL" ("RUNID#", "LEVELID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_ROLLUP_PK" ON "SYSTEM"."MVIEW$_ADV_ROLLUP" ("RUNID#", "CLEVELID#", "PLEVELID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_AJG_PK" ON "SYSTEM"."MVIEW$_ADV_AJG" ("AJGID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_FJG_PK" ON "SYSTEM"."MVIEW$_ADV_FJG" ("FJGID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_GC_PK" ON "SYSTEM"."MVIEW$_ADV_GC" ("GCID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_CLIQUE_PK" ON "SYSTEM"."MVIEW$_ADV_CLIQUE" ("CLIQUEID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_ELIGIBLE_PK" ON "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ("SUMOBJN#", "RUNID#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_OUTPUT_PK" ON "SYSTEM"."MVIEW$_ADV_OUTPUT" ("RUNID#", "RANK#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_PARAMETERS_PK" ON "SYSTEM"."MVIEW$_ADV_PARAMETERS" ("PARAMETER_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_INFO_PK" ON "SYSTEM"."MVIEW$_ADV_INFO" ("RUNID#", "SEQ#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."MVIEW$_ADV_JOURNAL_PK" ON "SYSTEM"."MVIEW$_ADV_JOURNAL" ("RUNID#", "SEQ#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."AQ$_QUEUE_TABLES_PRIMARY" ON "SYSTEM"."AQ$_QUEUE_TABLES" ("OBJNO")
  ;

CREATE INDEX "SYSTEM"."I1_QUEUE_TABLES" ON "SYSTEM"."AQ$_QUEUE_TABLES" ("OBJNO", "SCHEMA", "FLAGS")
  ;

CREATE UNIQUE INDEX "SYSTEM"."AQ$_QUEUES_PRIMARY" ON "SYSTEM"."AQ$_QUEUES" ("OID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."AQ$_QUEUES_CHECK" ON "SYSTEM"."AQ$_QUEUES" ("NAME", "TABLE_OBJNO")
  ;

CREATE INDEX "SYSTEM"."I1_QUEUES" ON "SYSTEM"."AQ$_QUEUES" ("NAME", "EVENTID", "TABLE_OBJNO")
  ;

CREATE UNIQUE INDEX "SYSTEM"."AQ$_SCHEDULES_PRIMARY" ON "SYSTEM"."AQ$_SCHEDULES" ("OID", "DESTINATION")
  ;

CREATE UNIQUE INDEX "SYSTEM"."AQ$_SCHEDULES_CHECK" ON "SYSTEM"."AQ$_SCHEDULES" ("JOBNO")
  ;

CREATE UNIQUE INDEX "SYSTEM"."UNQ_PAIRS" ON "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ("AGENT_NAME", "DB_USERNAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."OL$NAME" ON "SYSTEM"."OL$" ("OL_NAME") ;
CREATE UNIQUE INDEX "SYSTEM"."OL$SIGNATURE" ON "SYSTEM"."OL$" ("SIGNATURE", "CATEGORY") ;
CREATE UNIQUE INDEX "SYSTEM"."OL$HNT_NUM" ON "SYSTEM"."OL$HINTS" ("OL_NAME", "HINT#") ;
CREATE UNIQUE INDEX "SYSTEM"."DEF$_ERROR_PRIMARY" ON "SYSTEM"."DEF$_ERROR" ("ENQ_TID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_DESTINATION_PRIMARY" ON "SYSTEM"."DEF$_DESTINATION" ("DBLINK", "CATCHUP")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_CALLDEST_PRIMARY" ON "SYSTEM"."DEF$_CALLDEST" ("ENQ_TID", "DBLINK", "STEP_NO")
  ;

CREATE INDEX "SYSTEM"."DEF$_CALLDEST_N2" ON "SYSTEM"."DEF$_CALLDEST" ("DBLINK", "CATCHUP")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_DEFAULTDEST_PRIMARY" ON "SYSTEM"."DEF$_DEFAULTDEST" ("DBLINK")
  ;

CREATE INDEX "SYSTEM"."DEF$_LOB_N1" ON "SYSTEM"."DEF$_LOB" ("ENQ_TID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_LOB_PRIMARY" ON "SYSTEM"."DEF$_LOB" ("ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_PROPAGATOR_PRIMARY" ON "SYSTEM"."DEF$_PROPAGATOR" ("USERID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."DEF$_PUSHED_TRAN_PRIMARY" ON "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" ("SOURCE_SITE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPCAT_PRIMARY" ON "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_FLAVORS_UNQ1" ON "SYSTEM"."REPCAT$_FLAVORS" ("GNAME", "FLAVOR_ID", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_FLAVORS_FNAME" ON "SYSTEM"."REPCAT$_FLAVORS" ("FNAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_FLAVORS_GNAME" ON "SYSTEM"."REPCAT$_FLAVORS" ("GNAME", "FNAME", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_FLAVORS_FK1_IDX" ON "SYSTEM"."REPCAT$_FLAVORS" ("GNAME", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPSCHEMA_PRIMARY" ON "SYSTEM"."REPCAT$_REPSCHEMA" ("SNAME", "DBLINK", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPSCHEMA_DEST_IDX" ON "SYSTEM"."REPCAT$_REPSCHEMA" ("DBLINK", "EXTENSION_ID")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPSCHEMA_PRNT_IDX" ON "SYSTEM"."REPCAT$_REPSCHEMA" ("SNAME", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."I_REPCAT$_SNAPGROUP1" ON "SYSTEM"."REPCAT$_SNAPGROUP" ("GNAME", "DBLINK", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPOBJECT_PRIMARY" ON "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPOBJECT_GNAME" ON "SYSTEM"."REPCAT$_REPOBJECT" ("GNAME", "ONAME", "TYPE", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPOBJECT_PRNT_IDX" ON "SYSTEM"."REPCAT$_REPOBJECT" ("GNAME", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPCOLUMN_PK" ON "SYSTEM"."REPCAT$_REPCOLUMN" ("SNAME", "ONAME", "TYPE", "CNAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPCOLUMN_FK_IDX" ON "SYSTEM"."REPCAT$_REPCOLUMN" ("SNAME", "ONAME", "TYPE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_KEY_COLUMNS_PRIMARY" ON "SYSTEM"."REPCAT$_KEY_COLUMNS" ("SNAME", "ONAME", "COL")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_KEY_COLUMNS_PRNT_IDX" ON "SYSTEM"."REPCAT$_KEY_COLUMNS" ("SNAME", "ONAME", "TYPE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPGEN_PRIMARY" ON "SYSTEM"."REPCAT$_GENERATED" ("SNAME", "ONAME", "TYPE", "BASE_SNAME", "BASE_ONAME", "BASE_TYPE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_GENERATED_N1" ON "SYSTEM"."REPCAT$_GENERATED" ("BASE_SNAME", "BASE_ONAME", "BASE_TYPE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPGEN_PRNT_IDX" ON "SYSTEM"."REPCAT$_GENERATED" ("SNAME", "ONAME", "TYPE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPPROP_PRIMARY" ON "SYSTEM"."REPCAT$_REPPROP" ("SNAME", "ONAME", "TYPE", "DBLINK")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_DBLINK_HOW" ON "SYSTEM"."REPCAT$_REPPROP" ("DBLINK", "HOW", "EXTENSION_ID", "RECIPIENT_KEY")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_KEY_INDEX" ON "SYSTEM"."REPCAT$_REPPROP" ("RECIPIENT_KEY")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_PRNT_IDX" ON "SYSTEM"."REPCAT$_REPPROP" ("SNAME", "ONAME", "TYPE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPPROP_PRNT2_IDX" ON "SYSTEM"."REPCAT$_REPPROP" ("SNAME", "DBLINK")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPCATLOG_PRIMARY" ON "SYSTEM"."REPCAT$_REPCATLOG" ("ID", "SOURCE", "ROLE", "MASTER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPCATLOG_GNAME" ON "SYSTEM"."REPCAT$_REPCATLOG" ("GNAME", "SNAME", "ONAME", "TYPE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_DDL_INDEX" ON "SYSTEM"."REPCAT$_DDL" ("LOG_ID", "SOURCE", "ROLE", "MASTER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_DDL" ON "SYSTEM"."REPCAT$_DDL" ("LOG_ID", "SOURCE", "ROLE", "MASTER", "LINE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REPGROUP_PRIVS_UK" ON "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ("USERNAME", "GNAME", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPGROUP_PRIVS_N1" ON "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ("GLOBAL_FLAG", "USERNAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_REPGROUP_PRIVS_FK_IDX" ON "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ("GNAME", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_PRIORITY_GROUP_PK" ON "SYSTEM"."REPCAT$_PRIORITY_GROUP" ("PRIORITY_GROUP", "SNAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_PRIORITY_GROUP_U1" ON "SYSTEM"."REPCAT$_PRIORITY_GROUP" ("SNAME", "PRIORITY_GROUP", "DATA_TYPE_ID", "FIXED_DATA_LENGTH")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_PRIORITY_PK" ON "SYSTEM"."REPCAT$_PRIORITY" ("SNAME", "PRIORITY_GROUP", "PRIORITY")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_PRIORITY_F1_IDX" ON "SYSTEM"."REPCAT$_PRIORITY" ("PRIORITY_GROUP", "SNAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_COLUMN_GROUP_PK" ON "SYSTEM"."REPCAT$_COLUMN_GROUP" ("SNAME", "ONAME", "GROUP_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_GROUPED_COLUMN_PK" ON "SYSTEM"."REPCAT$_GROUPED_COLUMN" ("SNAME", "ONAME", "GROUP_NAME", "COLUMN_NAME", "POS")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_GROUPED_COLUMN_F1_IDX" ON "SYSTEM"."REPCAT$_GROUPED_COLUMN" ("SNAME", "ONAME", "GROUP_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_CONFLICT_PK" ON "SYSTEM"."REPCAT$_CONFLICT" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_RESOL_METHOD_PK" ON "SYSTEM"."REPCAT$_RESOLUTION_METHOD" ("CONFLICT_TYPE_ID", "METHOD_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_RESOLUTION_PK" ON "SYSTEM"."REPCAT$_RESOLUTION" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_F3_IDX" ON "SYSTEM"."REPCAT$_RESOLUTION" ("CONFLICT_TYPE_ID", "METHOD_NAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_IDX2" ON "SYSTEM"."REPCAT$_RESOLUTION" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_RESOLUTION_STATS_N1" ON "SYSTEM"."REPCAT$_RESOLUTION_STATISTICS" ("SNAME", "ONAME", "RESOLVED_DATE", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "METHOD_NAME", "FUNCTION_NAME", "PRIORITY_GROUP")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_RESOL_STATS_CTRL_PK" ON "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ("SNAME", "ONAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_PARAMETER_COLUMN_PK" ON "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO", "PARAMETER_TABLE_NAME", "PARAMETER_SEQUENCE_NO", "COLUMN_POS")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_PARAMETER_COLUMN_F1_I" ON "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE_PK" ON "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ("ATTRIBUTE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_AUDIT_COLUMN_PK" ON "SYSTEM"."REPCAT$_AUDIT_COLUMN" ("COLUMN_NAME", "ONAME", "SNAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_AUDIT_COLUMN_F1_IDX" ON "SYSTEM"."REPCAT$_AUDIT_COLUMN" ("ATTRIBUTE")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_AUDIT_COLUMN_F2_IDX" ON "SYSTEM"."REPCAT$_AUDIT_COLUMN" ("BASE_SNAME", "BASE_ONAME", "BASE_CONFLICT_TYPE_ID", "BASE_REFERENCE_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_PK" ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("SNAME", "ONAME", "TYPE", "GNAME", "FLAVOR_ID", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FG" ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("FLAVOR_ID", "GNAME", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FK1_IDX" ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("GNAME", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_FLAVOR_OBJECTS_FK2_IDX" ON "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ("GNAME", "FLAVOR_ID", "GOWNER")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_STATUS_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ("TEMPLATE_STATUS_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_TYPES_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_TYPES" ("TEMPLATE_TYPE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REFRESH_TEMPLATES_PK" ON "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_REFRESH_TEMPLATES_U1" ON "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_PK" ON "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ("USER_AUTHORIZATION_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_U1" ON "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ("USER_ID", "REFRESH_TEMPLATE_ID")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS_N1" ON "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ("REFRESH_TEMPLATE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_OBJECT_TYPE_PK" ON "SYSTEM"."REPCAT$_OBJECT_TYPES" ("OBJECT_TYPE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ("REFRESH_GROUP_ID")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_N1" ON "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ("REFRESH_GROUP_NAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS_N2" ON "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ("REFRESH_TEMPLATE_ID")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_N2" ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("REFRESH_TEMPLATE_ID", "OBJECT_NAME", "SCHEMA_NAME", "OBJECT_TYPE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("TEMPLATE_OBJECT_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_U1" ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("OBJECT_NAME", "OBJECT_TYPE", "REFRESH_TEMPLATE_ID", "SCHEMA_NAME", "DDL_NUM")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS_N1" ON "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("REFRESH_TEMPLATE_ID", "OBJECT_TYPE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_PARMS_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("TEMPLATE_PARAMETER_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_PARMS_U1" ON "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("REFRESH_TEMPLATE_ID", "PARAMETER_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_OBJECT_PARMS_PK" ON "SYSTEM"."REPCAT$_OBJECT_PARMS" ("TEMPLATE_PARAMETER_ID", "TEMPLATE_OBJECT_ID")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_OBJECT_PARMS_N2" ON "SYSTEM"."REPCAT$_OBJECT_PARMS" ("TEMPLATE_OBJECT_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_USER_PARM_VALUES_PK" ON "SYSTEM"."REPCAT$_USER_PARM_VALUES" ("USER_PARAMETER_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_USER_PARM_VALUES_U1" ON "SYSTEM"."REPCAT$_USER_PARM_VALUES" ("TEMPLATE_PARAMETER_ID", "USER_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_SITES_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_SITES" ("TEMPLATE_SITE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_SITES_U1" ON "SYSTEM"."REPCAT$_TEMPLATE_SITES" ("REFRESH_TEMPLATE_NAME", "USER_NAME", "SITE_NAME", "REPAPI_SITE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_SITE_OBJECTS_U1" ON "SYSTEM"."REPCAT$_SITE_OBJECTS" ("TEMPLATE_SITE_ID", "ONAME", "OBJECT_TYPE_ID", "SNAME")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_SITE_OBJECTS_N1" ON "SYSTEM"."REPCAT$_SITE_OBJECTS" ("TEMPLATE_SITE_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_RUNTIME_PARMS_PK" ON "SYSTEM"."REPCAT$_RUNTIME_PARMS" ("RUNTIME_PARM_ID", "PARAMETER_NAME")
  ;

CREATE UNIQUE INDEX "SYSTEM"."TEMPLATE$_TARGETS_PK" ON "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ("TEMPLATE_TARGET_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_TEMPLATE_TARGETS_U1" ON "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ("TARGET_DATABASE")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_EXCEPTIONS_PK" ON "SYSTEM"."REPCAT$_EXCEPTIONS" ("EXCEPTION_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_INSTANTIATION_DDL_PK" ON "SYSTEM"."REPCAT$_INSTANTIATION_DDL" ("REFRESH_TEMPLATE_ID", "PHASE", "DDL_NUM")
  ;

CREATE UNIQUE INDEX "SYSTEM"."REPCAT$_SITES_NEW_PK" ON "SYSTEM"."REPCAT$_SITES_NEW" ("EXTENSION_ID", "GOWNER", "GNAME", "DBLINK")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_SITES_NEW_FK2_IDX" ON "SYSTEM"."REPCAT$_SITES_NEW" ("GNAME", "GOWNER")
  ;

CREATE INDEX "SYSTEM"."REPCAT$_SITES_NEW_FK1_IDX" ON "SYSTEM"."REPCAT$_SITES_NEW" ("EXTENSION_ID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_GTLO_PK" ON "SYSTEM"."LOGMNRC_GTLO" ("LOGMNR_UID", "KEYOBJ#", "BASEOBJV#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I2GTLO" ON "SYSTEM"."LOGMNRC_GTLO" ("LOGMNR_UID", "BASEOBJ#", "BASEOBJV#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I3GTLO" ON "SYSTEM"."LOGMNRC_GTLO" ("LOGMNR_UID", "DROP_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_GTCS_PK" ON "SYSTEM"."LOGMNRC_GTCS" ("LOGMNR_UID", "OBJ#", "OBJV#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I2GTCS" ON "SYSTEM"."LOGMNRC_GTCS" ("LOGMNR_UID", "OBJ#", "OBJV#", "SEGCOL#", "INTCOL#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_SEQ_GG_PK" ON "SYSTEM"."LOGMNRC_SEQ_GG" ("LOGMNR_UID", "OBJ#", "COMMIT_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I2SEQGG" ON "SYSTEM"."LOGMNRC_SEQ_GG" ("LOGMNR_UID", "DROP_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_CON_GG_PK" ON "SYSTEM"."LOGMNRC_CON_GG" ("LOGMNR_UID", "CON#", "COMMIT_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I1CONGG" ON "SYSTEM"."LOGMNRC_CON_GG" ("LOGMNR_UID", "BASEOBJ#", "BASEOBJV#", "COMMIT_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I2CONGG" ON "SYSTEM"."LOGMNRC_CON_GG" ("LOGMNR_UID", "DROP_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_CONCOL_GG_PK" ON "SYSTEM"."LOGMNRC_CONCOL_GG" ("LOGMNR_UID", "CON#", "COMMIT_SCN", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I1INDGG" ON "SYSTEM"."LOGMNRC_IND_GG" ("LOGMNR_UID", "BASEOBJ#", "BASEOBJV#", "COMMIT_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGMNRC_I2INDGG" ON "SYSTEM"."LOGMNRC_IND_GG" ("LOGMNR_UID", "DROP_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_IND_GG_PK" ON "SYSTEM"."LOGMNRC_IND_GG" ("LOGMNR_UID", "OBJ#", "COMMIT_SCN")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_INDCOL_GG_PK" ON "SYSTEM"."LOGMNRC_INDCOL_GG" ("LOGMNR_UID", "OBJ#", "COMMIT_SCN", "INTCOL#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_GSII_PK" ON "SYSTEM"."LOGMNRC_GSII" ("LOGMNR_UID", "OBJ#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRC_GSBA_PK" ON "SYSTEM"."LOGMNRC_GSBA" ("LOGMNR_UID", "AS_OF_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1SEED$" ON "SYSTEM"."LOGMNR_SEED$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2SEED$" ON "SYSTEM"."LOGMNR_SEED$" ("LOGMNR_UID", "SCHEMANAME", "TABLE_NAME", "COL_NAME", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1DICTIONARY$" ON "SYSTEM"."LOGMNR_DICTIONARY$" ("LOGMNR_UID")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1OBJ$" ON "SYSTEM"."LOGMNR_OBJ$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2OBJ$" ON "SYSTEM"."LOGMNR_OBJ$" ("LOGMNR_UID", "OID$")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I3OBJ$" ON "SYSTEM"."LOGMNR_OBJ$" ("LOGMNR_UID", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TAB$" ON "SYSTEM"."LOGMNR_TAB$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2TAB$" ON "SYSTEM"."LOGMNR_TAB$" ("LOGMNR_UID", "BOBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1COL$" ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2COL$" ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID", "OBJ#", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I3COL$" ON "SYSTEM"."LOGMNR_COL$" ("LOGMNR_UID", "OBJ#", "COL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1ATTRCOL$" ON "SYSTEM"."LOGMNR_ATTRCOL$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TS$" ON "SYSTEM"."LOGMNR_TS$" ("LOGMNR_UID", "TS#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1IND$" ON "SYSTEM"."LOGMNR_IND$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2IND$" ON "SYSTEM"."LOGMNR_IND$" ("LOGMNR_UID", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2USER$" ON "SYSTEM"."LOGMNR_USER$" ("LOGMNR_UID", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1USER$" ON "SYSTEM"."LOGMNR_USER$" ("LOGMNR_UID", "USER#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TABPART$" ON "SYSTEM"."LOGMNR_TABPART$" ("LOGMNR_UID", "OBJ#", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2TABPART$" ON "SYSTEM"."LOGMNR_TABPART$" ("LOGMNR_UID", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TABSUBPART$" ON "SYSTEM"."LOGMNR_TABSUBPART$" ("LOGMNR_UID", "OBJ#", "POBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2TABSUBPART$" ON "SYSTEM"."LOGMNR_TABSUBPART$" ("LOGMNR_UID", "POBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TABCOMPART$" ON "SYSTEM"."LOGMNR_TABCOMPART$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2TABCOMPART$" ON "SYSTEM"."LOGMNR_TABCOMPART$" ("LOGMNR_UID", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1TYPE$" ON "SYSTEM"."LOGMNR_TYPE$" ("LOGMNR_UID", "TOID", "VERSION#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1COLTYPE$" ON "SYSTEM"."LOGMNR_COLTYPE$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1ATTRIBUTE$" ON "SYSTEM"."LOGMNR_ATTRIBUTE$" ("LOGMNR_UID", "TOID", "VERSION#", "ATTRIBUTE#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1LOB$" ON "SYSTEM"."LOGMNR_LOB$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1CON$" ON "SYSTEM"."LOGMNR_CON$" ("LOGMNR_UID", "CON#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1CONTAINER$" ON "SYSTEM"."LOGMNR_CONTAINER$" ("LOGMNR_UID", "CON_ID#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1CDEF$" ON "SYSTEM"."LOGMNR_CDEF$" ("LOGMNR_UID", "CON#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2CDEF$" ON "SYSTEM"."LOGMNR_CDEF$" ("LOGMNR_UID", "ROBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1CCOL$" ON "SYSTEM"."LOGMNR_CCOL$" ("LOGMNR_UID", "CON#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1ICOL$" ON "SYSTEM"."LOGMNR_ICOL$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1LOBFRAG$" ON "SYSTEM"."LOGMNR_LOBFRAG$" ("LOGMNR_UID", "FRAGOBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1INDPART$" ON "SYSTEM"."LOGMNR_INDPART$" ("LOGMNR_UID", "OBJ#", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2INDPART$" ON "SYSTEM"."LOGMNR_INDPART$" ("LOGMNR_UID", "BO#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1INDSUBPART$" ON "SYSTEM"."LOGMNR_INDSUBPART$" ("LOGMNR_UID", "OBJ#", "POBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1INDCOMPART$" ON "SYSTEM"."LOGMNR_INDCOMPART$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1LOGMNR_BUILDLOG" ON "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" ("LOGMNR_UID", "INITIAL_XID")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1NTAB$" ON "SYSTEM"."LOGMNR_NTAB$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I2NTAB$" ON "SYSTEM"."LOGMNR_NTAB$" ("LOGMNR_UID", "NTAB#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1OPQTYPE$" ON "SYSTEM"."LOGMNR_OPQTYPE$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1SUBCOLTYPE$" ON "SYSTEM"."LOGMNR_SUBCOLTYPE$" ("LOGMNR_UID", "OBJ#", "INTCOL#", "TOID")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1KOPM$" ON "SYSTEM"."LOGMNR_KOPM$" ("LOGMNR_UID", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1PROPS$" ON "SYSTEM"."LOGMNR_PROPS$" ("LOGMNR_UID", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1ENC$" ON "SYSTEM"."LOGMNR_ENC$" ("LOGMNR_UID", "OBJ#", "OWNER#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1REFCON$" ON "SYSTEM"."LOGMNR_REFCON$" ("LOGMNR_UID", "OBJ#", "INTCOL#")
  ;

CREATE INDEX "SYSTEM"."LOGMNR_I1PARTOBJ$" ON "SYSTEM"."LOGMNR_PARTOBJ$" ("LOGMNR_UID", "OBJ#")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGMNRP_CTAS_PART_MAP_PK" ON "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ("LOGMNR_UID", "BASEOBJV#", "KEYOBJ#")
  ;

CREATE INDEX "SYSTEM"."LOGMNRP_CTAS_PART_MAP_I" ON "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ("LOGMNR_UID", "BASEOBJ#", "BASEOBJV#", "PART#")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND" ON "SYSTEM"."LOGSTDBY$EVENTS" ("EVENT_TIME")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND_SCN" ON "SYSTEM"."LOGSTDBY$EVENTS" ("COMMIT_SCN")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$EVENTS_IND_XID" ON "SYSTEM"."LOGSTDBY$EVENTS" ("XIDUSN", "XIDSLT", "XIDSQN")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$SKIP_IDX1" ON "SYSTEM"."LOGSTDBY$SKIP" ("USE_LIKE", "SCHEMA", "NAME")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$SKIP_IDX2" ON "SYSTEM"."LOGSTDBY$SKIP" ("STATEMENT_OPT")
  ;

CREATE INDEX "SYSTEM"."LOGSTDBY$SKIP_IND" ON "SYSTEM"."LOGSTDBY$SKIP_SUPPORT" ("NAME", "ACTION")
  ;

CREATE UNIQUE INDEX "SYSTEM"."LOGSTDBY$EDS_TABLES_PKEY" ON "SYSTEM"."LOGSTDBY$EDS_TABLES" ("OWNER", "TABLE_NAME")
  ;

CREATE INDEX "SYSTEM"."DEF$_TRANORDER" ON "SYSTEM"."DEF$_AQCALL" ("CSCN", "ENQ_TID")
  ;

CREATE UNIQUE INDEX "SYSTEM"."HELP_TOPIC_SEQ" ON "SYSTEM"."HELP" ("TOPIC", "SEQ")
  ;

ALTER TABLE "SYSTEM"."LOGMNR_SESSION_EVOLVE$" ADD CONSTRAINT "LOGMNR_SESSION_EVOLVE$_PK" PRIMARY KEY ("SESSION#", "DB_ID", "RESET_SCN", "RESET_TIMESTAMP")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_PDB_INFO$" ADD CONSTRAINT "LOGMNR_PDB_INFO$_PK" PRIMARY KEY ("LOGMNR_DID", "LOGMNR_MDH", "PLUGIN_SCN")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_DID$" ADD CONSTRAINT "LOGMNR_DID$_PK" PRIMARY KEY ("SESSION#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_UID$" ADD CONSTRAINT "LOGMNR_UID$_PK" PRIMARY KEY ("LOGMNR_UID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRGGC_GTLO" ADD CONSTRAINT "LOGMNRGGC_GTLO_PK" PRIMARY KEY ("LOGMNR_UID", "KEYOBJ#", "BASEOBJV#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRGGC_GTCS" ADD CONSTRAINT "LOGMNRGGC_GTCS_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "OBJV#", "INTCOL#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_DBNAME_UID_MAP" ADD CONSTRAINT "LOGMNRC_DBNAME_UID_MAP_PK" PRIMARY KEY ("GLOBAL_NAME", "LOGMNR_MDH")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_LOG$" ADD CONSTRAINT "LOGMNR_LOG$_PK" PRIMARY KEY ("SESSION#", "THREAD#", "SEQUENCE#", "FIRST_CHANGE#", "DB_ID", "RESETLOGS_CHANGE#", "RESET_TIMESTAMP")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_PROCESSED_LOG$" ADD CONSTRAINT "LOGMNR_PROCESSED_LOG$_PK" PRIMARY KEY ("SESSION#", "THREAD#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_SPILL$" ADD CONSTRAINT "LOGMNR_SPILL$_PK" PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "STARTIDX", "ENDIDX", "FLAG", "SEQUENCE#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_AGE_SPILL$" ADD CONSTRAINT "LOGMNR_AGE_SPILL$_PK" PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "SEQUENCE#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_RESTART_CKPT_TXINFO$" ADD CONSTRAINT "LOGMNR_RESTART_CKPT_TXINFO$_PK" PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM", "EFFECTIVE_SCN")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_RESTART_CKPT$" ADD CONSTRAINT "LOGMNR_RESTART_CKPT$_PK" PRIMARY KEY ("SESSION#", "CKPT_SCN", "XIDUSN", "XIDSLT", "XIDSQN", "SESSION_NUM", "SERIAL_NUM")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_INTEGRATED_SPILL$" ADD CONSTRAINT "LOGMNR_INTEG_SPILL$_PK" PRIMARY KEY ("SESSION#", "XIDUSN", "XIDSLT", "XIDSQN", "CHUNK", "FLAG")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_SESSION_ACTIONS$" ADD CONSTRAINT "LOGMNR_SESSION_ACTION$_PK" PRIMARY KEY ("LOGMNRSESSION#", "ACTIONNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_SESSION$" ADD CONSTRAINT "LOGMNR_SESSION_PK" PRIMARY KEY ("SESSION#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_SESSION$" ADD CONSTRAINT "LOGMNR_SESSION_UK1" UNIQUE ("SESSION_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRT_MDDL$" ADD CONSTRAINT "LOGMNRT_MDDL$_PK" PRIMARY KEY ("SOURCE_OBJ#", "SOURCE_ROWID") ENABLE;
ALTER TABLE "SYSTEM"."MVIEW$_ADV_WORKLOAD" ADD CONSTRAINT "MVIEW$_ADV_WORKLOAD_PK" PRIMARY KEY ("QUERYID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTER" ADD CONSTRAINT "MVIEW$_ADV_FILTER_PK" PRIMARY KEY ("FILTERID#", "SUBFILTERNUM#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_LOG" ADD CONSTRAINT "MVIEW$_ADV_LOG_PK" PRIMARY KEY ("RUNID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CONSTRAINT "MVIEW$_ADV_LEVEL_PK" PRIMARY KEY ("RUNID#", "LEVELID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CONSTRAINT "MVIEW$_ADV_ROLLUP_PK" PRIMARY KEY ("RUNID#", "CLEVELID#", "PLEVELID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CONSTRAINT "MVIEW$_ADV_AJG_PK" PRIMARY KEY ("AJGID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CONSTRAINT "MVIEW$_ADV_FJG_PK" PRIMARY KEY ("FJGID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CONSTRAINT "MVIEW$_ADV_GC_PK" PRIMARY KEY ("GCID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CONSTRAINT "MVIEW$_ADV_CLIQUE_PK" PRIMARY KEY ("CLIQUEID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CONSTRAINT "MVIEW$_ADV_ELIGIBLE_PK" PRIMARY KEY ("SUMOBJN#", "RUNID#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD CONSTRAINT "MVIEW$_ADV_OUTPUT_PK" PRIMARY KEY ("RUNID#", "RANK#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_PARAMETERS" ADD CONSTRAINT "MVIEW$_ADV_PARAMETERS_PK" PRIMARY KEY ("PARAMETER_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CONSTRAINT "MVIEW$_ADV_INFO_PK" PRIMARY KEY ("RUNID#", "SEQ#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CONSTRAINT "MVIEW$_ADV_JOURNAL_PK" PRIMARY KEY ("RUNID#", "SEQ#")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_QUEUE_TABLES" ADD CONSTRAINT "AQ$_QUEUE_TABLES_PRIMARY" PRIMARY KEY ("OBJNO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CONSTRAINT "AQ$_QUEUES_PRIMARY" PRIMARY KEY ("OID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_QUEUES" ADD CONSTRAINT "AQ$_QUEUES_CHECK" UNIQUE ("NAME", "TABLE_OBJNO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_SCHEDULES" ADD CONSTRAINT "AQ$_SCHEDULES_PRIMARY" PRIMARY KEY ("OID", "DESTINATION")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_SCHEDULES" ADD CONSTRAINT "AQ$_SCHEDULES_CHECK" UNIQUE ("JOBNO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENTS" ADD PRIMARY KEY ("AGENT_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD CONSTRAINT "UNQ_PAIRS" UNIQUE ("AGENT_NAME", "DB_USERNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_ERROR" ADD CONSTRAINT "DEF$_ERROR_PRIMARY" PRIMARY KEY ("ENQ_TID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_DESTINATION" ADD CONSTRAINT "DEF$_DESTINATION_PRIMARY" PRIMARY KEY ("DBLINK", "CATCHUP")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_CALLDEST" ADD CONSTRAINT "DEF$_CALLDEST_PRIMARY" PRIMARY KEY ("ENQ_TID", "DBLINK", "STEP_NO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_DEFAULTDEST" ADD CONSTRAINT "DEF$_DEFAULTDEST_PRIMARY" PRIMARY KEY ("DBLINK")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_LOB" ADD CONSTRAINT "DEF$_LOB_PRIMARY" PRIMARY KEY ("ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_PROPAGATOR" ADD CONSTRAINT "DEF$_PROPAGATOR_PRIMARY" PRIMARY KEY ("USERID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" ADD CHECK (disabled IN ('T', 'F')) ENABLE;
ALTER TABLE "SYSTEM"."DEF$_PUSHED_TRANSACTIONS" ADD CONSTRAINT "DEF$_PUSHED_TRAN_PRIMARY" PRIMARY KEY ("SOURCE_SITE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCAT" ADD CONSTRAINT "REPCAT$_REPCAT_STATUS" CHECK (status IN (0, 1, 2)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPCAT" ADD CONSTRAINT "REPCAT$_REPCAT_PRIMARY" PRIMARY KEY ("SNAME", "GOWNER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CONSTRAINT "REPCAT$_FLAVORS_C2" CHECK (published is NULL or (published in ('Y','N','O'))) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CONSTRAINT "REPCAT$_FLAVORS_UNQ1" UNIQUE ("GNAME", "FLAVOR_ID", "GOWNER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD CONSTRAINT "REPCAT$_REPSCHEMA_PRIMARY" PRIMARY KEY ("SNAME", "DBLINK", "GOWNER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_TYPE" CHECK (type IN (-1, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                      -4, 13, 14, 32, 33)) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_VERSION" CHECK (version# >= 0 AND version# < 65536) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_STATUS" CHECK (status IN (0, 1, 2, 3, 4, 5, 6)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_GENPACKAGE" CHECK (genpackage IN (0, 1, 2)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_GENTRIGGER" CHECK (gentrigger IN (0, 1, 2)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_PRIMARY" PRIMARY KEY ("SNAME", "ONAME", "TYPE")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD CONSTRAINT "REPCAT$_REPCOLUMN_VERSION" CHECK (version# >= 0 AND version# < 65536) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD CONSTRAINT "REPCAT$_REPCOLUMN_PK" PRIMARY KEY ("SNAME", "ONAME", "TYPE", "CNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" ADD CONSTRAINT "REPCAT$_KEY_COLUMNS_PRIMARY" PRIMARY KEY ("SNAME", "ONAME", "COL")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD CONSTRAINT "REPCAT$_GENERATED_OBJ" CHECK (reason IN (0, 1, 2, 3, 4, 5, 6, 7, 9, 10)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD CONSTRAINT "REPCAT$_REPGEN_PRIMARY" PRIMARY KEY ("SNAME", "ONAME", "TYPE", "BASE_SNAME", "BASE_ONAME", "BASE_TYPE")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD CONSTRAINT "REPCAT$_REPPROP_HOW" CHECK (how IN (0, 1, 2, 3)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD CONSTRAINT "REPCAT$_REPPROP_PRIMARY" PRIMARY KEY ("SNAME", "ONAME", "TYPE", "DBLINK")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CONSTRAINT "REPCAT$_REPCATLOG_REQUEST" CHECK (request IN (-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                                       11, 12, 13, 14, 15, 16, 17,
                                       18, 19, 20, 21, 22, 23, 24, 25)) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CONSTRAINT "REPCAT$_REPCATLOG_TYPE" CHECK (type IN (-1, 0, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                    13, 14, 32, 33)) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CONSTRAINT "REPCAT$_REPCATLOG_STATUS" CHECK (status IN (0, 1, 2, 3, 4)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_REPCATLOG" ADD CONSTRAINT "REPCAT$_REPCATLOG_PRIMARY" PRIMARY KEY ("ID", "SOURCE", "ROLE", "MASTER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD CONSTRAINT "REPCAT$_REPGROUP_PRIVS_UK" UNIQUE ("USERNAME", "GNAME", "GOWNER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CONSTRAINT "REPCAT$_PRIORITY_GROUP_C1" CHECK (data_type_id in (1, 2, 3, 4, 5, 6, 7)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CONSTRAINT "REPCAT$_PRIORITY_GROUP_C2" CHECK ((data_type_id in (4, 7) and
                  fixed_data_length is not null)
              or (data_type_id in (1, 2, 3, 5, 6) and
                  fixed_data_length is null)) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CONSTRAINT "REPCAT$_PRIORITY_GROUP_PK" PRIMARY KEY ("PRIORITY_GROUP", "SNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY_GROUP" ADD CONSTRAINT "REPCAT$_PRIORITY_GROUP_U1" UNIQUE ("SNAME", "PRIORITY_GROUP", "DATA_TYPE_ID", "FIXED_DATA_LENGTH")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD CONSTRAINT "REPCAT$_PRIORITY_PK" PRIMARY KEY ("SNAME", "PRIORITY_GROUP", "PRIORITY")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_COLUMN_GROUP" ADD CONSTRAINT "REPCAT$_COLUMN_GROUP_PK" PRIMARY KEY ("SNAME", "ONAME", "GROUP_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" ADD CONSTRAINT "REPCAT$_GROUPED_COLUMN_PK" PRIMARY KEY ("SNAME", "ONAME", "GROUP_NAME", "COLUMN_NAME", "POS")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_CONFLICT" ADD CONSTRAINT "REPCAT$_CONFLICT_C1" CHECK (conflict_type_id in (1, 2, 3)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_CONFLICT" ADD CONSTRAINT "REPCAT$_CONFLICT_PK" PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION_METHOD" ADD CONSTRAINT "REPCAT$_RESOL_METHOD_PK" PRIMARY KEY ("CONFLICT_TYPE_ID", "METHOD_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD CONSTRAINT "REPCAT$_RESOLUTION_PK" PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_RESOL_STATS_CONTROL" ADD CONSTRAINT "REPCAT$_RESOL_STATS_CTRL_PK" PRIMARY KEY ("SNAME", "ONAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ADD CONSTRAINT "REPCAT$_PARAMETER_COLUMN_PK" PRIMARY KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO", "PARAMETER_TABLE_NAME", "PARAMETER_SEQUENCE_NO", "COLUMN_POS")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD CONSTRAINT "REPCAT$_AUDIT_ATTRIBUTE_C1" CHECK ((data_type_id in (2, 4, 5, 6, 7) and
                  data_length is not null)
              or (data_type_id not in (2, 4, 5, 6, 7) and
                  data_length is null)
                 ) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ADD CONSTRAINT "REPCAT$_AUDIT_ATTRIBUTE_PK" PRIMARY KEY ("ATTRIBUTE")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CONSTRAINT "REPCAT$_AUDIT_COLUMN_PK" PRIMARY KEY ("COLUMN_NAME", "ONAME", "SNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD CONSTRAINT "REPCAT$_FLAVOR_OBJECTS_VERSION" CHECK (version# >= 0 AND version# < 65536) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD CONSTRAINT "REPCAT$_FLAVOR_OBJECTS_PK" PRIMARY KEY ("SNAME", "ONAME", "TYPE", "GNAME", "FLAVOR_ID", "GOWNER")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ADD CONSTRAINT "REPCAT$_TEMPLATE_STATUS_PK" PRIMARY KEY ("TEMPLATE_STATUS_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_TYPES" ADD CONSTRAINT "REPCAT$_TEMPLATE_TYPES_PK" PRIMARY KEY ("TEMPLATE_TYPE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CONSTRAINT "REFRESH_TEMPLATES_C1" CHECK ((public_template in ('Y','N'))
   or public_template is NULL) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CONSTRAINT "REPCAT$_REFRESH_TEMPLATES_PK" PRIMARY KEY ("REFRESH_TEMPLATE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CONSTRAINT "REPCAT$_REFRESH_TEMPLATES_U1" UNIQUE ("REFRESH_TEMPLATE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CONSTRAINT "REPCAT$_USER_AUTHORIZATIONS_PK" PRIMARY KEY ("USER_AUTHORIZATION_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CONSTRAINT "REPCAT$_USER_AUTHORIZATIONS_U1" UNIQUE ("USER_ID", "REFRESH_TEMPLATE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_TYPES" ADD CONSTRAINT "REPCAT$_OBJECT_TYPE_PK" PRIMARY KEY ("OBJECT_TYPE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD CONSTRAINT "REPCAT$_TEMPLATE_REFGROUPS_PK" PRIMARY KEY ("REFRESH_GROUP_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CONSTRAINT "REPCAT$_TEMPLATE_OBJECTS_VER" CHECK (object_version# >= 0 AND object_version# < 65536) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CONSTRAINT "REPCAT$_TEMPLATE_OBJECTS_PK" PRIMARY KEY ("TEMPLATE_OBJECT_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CONSTRAINT "REPCAT$_TEMPLATE_OBJECTS_U1" UNIQUE ("OBJECT_NAME", "OBJECT_TYPE", "REFRESH_TEMPLATE_ID", "SCHEMA_NAME", "DDL_NUM")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CONSTRAINT "REPCAT$_TEMPLATE_PARMS_C1" CHECK (user_override in ('Y','N')) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CONSTRAINT "REPCAT$_TEMPLATE_PARMS_PK" PRIMARY KEY ("TEMPLATE_PARAMETER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CONSTRAINT "REPCAT$_TEMPLATE_PARMS_U1" UNIQUE ("REFRESH_TEMPLATE_ID", "PARAMETER_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD CONSTRAINT "REPCAT$_OBJECT_PARMS_PK" PRIMARY KEY ("TEMPLATE_PARAMETER_ID", "TEMPLATE_OBJECT_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD CONSTRAINT "REPCAT$_USER_PARM_VALUES_PK" PRIMARY KEY ("USER_PARAMETER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD CONSTRAINT "REPCAT$_USER_PARM_VALUES_U1" UNIQUE ("TEMPLATE_PARAMETER_ID", "USER_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CONSTRAINT "REPCAT$_TEMPLATE_SITES_C1" CHECK (status in (-100,-1,0,1)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CONSTRAINT "REPCAT$_TEMPLATE_SITES_C2" CHECK ((site_name is not null and repapi_site_id is null) or
   (site_name is null and repapi_site_id is not null)) ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CONSTRAINT "REPCAT$_TEMPLATE_SITES_PK" PRIMARY KEY ("TEMPLATE_SITE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_SITES" ADD CONSTRAINT "REPCAT$_TEMPLATE_SITES_U1" UNIQUE ("REFRESH_TEMPLATE_NAME", "USER_NAME", "SITE_NAME", "REPAPI_SITE_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CONSTRAINT "REPCAT$_SITE_OBJECTS_U1" UNIQUE ("TEMPLATE_SITE_ID", "ONAME", "OBJECT_TYPE_ID", "SNAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_TARGETS" ADD CONSTRAINT "TEMPLATE$_TARGETS_PK" PRIMARY KEY ("TEMPLATE_TARGET_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_EXCEPTIONS" ADD CONSTRAINT "REPCAT$_EXCEPTIONS_PK" PRIMARY KEY ("EXCEPTION_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" ADD CONSTRAINT "REPCAT$_INSTANTIATION_DDL_PK" PRIMARY KEY ("REFRESH_TEMPLATE_ID", "PHASE", "DDL_NUM")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CONSTRAINT "REPCAT$_EXTENSION_CODE" CHECK (extension_code IN (0)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CONSTRAINT "REPCAT$_EXTENSION_EXPORTREQ" CHECK (export_required IN ('Y', 'N')) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CONSTRAINT "REPCAT$_EXTENSION_STATUS" CHECK (extension_status IN (0, 1, 2, 3, 4)) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CONSTRAINT "REPCAT$_EXTENSION_PUSH_TO_MDEF" CHECK (push_to_mdef IN ('Y', 'N')) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD CONSTRAINT "REPCAT$_EXTENSION_PUSH_TO_NEW" CHECK (push_to_new IN ('Y', 'N')) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_EXTENSION" ADD PRIMARY KEY ("EXTENSION_ID")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD CONSTRAINT "REPCAT$_SITES_NEW_FULL_INST" CHECK (full_instantiation IN ('Y', 'N')) ENABLE;
ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD CONSTRAINT "REPCAT$_SITES_NEW_PK" PRIMARY KEY ("EXTENSION_ID", "GOWNER", "GNAME", "DBLINK")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_DICTSTATE$" ADD CONSTRAINT "LOGMNR_DICTSTATE$_PK" PRIMARY KEY ("LOGMNR_UID") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNRC_GTLO" ADD CONSTRAINT "LOGMNRC_GTLO_PK" PRIMARY KEY ("LOGMNR_UID", "KEYOBJ#", "BASEOBJV#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_GTCS" ADD CONSTRAINT "LOGMNRC_GTCS_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "OBJV#", "INTCOL#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_SEQ_GG" ADD CONSTRAINT "LOGMNRC_SEQ_GG_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "COMMIT_SCN")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_CON_GG" ADD CONSTRAINT "LOGMNRC_CON_GG_PK" PRIMARY KEY ("LOGMNR_UID", "CON#", "COMMIT_SCN")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_CONCOL_GG" ADD CONSTRAINT "LOGMNRC_CONCOL_GG_PK" PRIMARY KEY ("LOGMNR_UID", "CON#", "COMMIT_SCN", "INTCOL#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_IND_GG" ADD CONSTRAINT "LOGMNRC_IND_GG_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "COMMIT_SCN")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_INDCOL_GG" ADD CONSTRAINT "LOGMNRC_INDCOL_GG_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "COMMIT_SCN", "INTCOL#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_GSII" ADD CONSTRAINT "LOGMNRC_GSII_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNRC_GSBA" ADD CONSTRAINT "LOGMNRC_GSBA_PK" PRIMARY KEY ("LOGMNR_UID", "AS_OF_SCN")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGMNR_SEED$" ADD CONSTRAINT "LOGMNR_SEED$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_DICTIONARY$" ADD CONSTRAINT "LOGMNR_DICTIONARY$_PK" PRIMARY KEY ("LOGMNR_UID") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_OBJ$" ADD CONSTRAINT "LOGMNR_OBJ$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TAB$" ADD CONSTRAINT "LOGMNR_TAB$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_COL$" ADD CONSTRAINT "LOGMNR_COL$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_ATTRCOL$" ADD CONSTRAINT "LOGMNR_ATTRCOL$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TS$" ADD CONSTRAINT "LOGMNR_TS$_PK" PRIMARY KEY ("LOGMNR_UID", "TS#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_IND$" ADD CONSTRAINT "LOGMNR_IND$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_USER$" ADD CONSTRAINT "LOGMNR_USER$_PK" PRIMARY KEY ("LOGMNR_UID", "USER#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TABPART$" ADD CONSTRAINT "LOGMNR_TABPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "BO#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TABSUBPART$" ADD CONSTRAINT "LOGMNR_TABSUBPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "POBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TABCOMPART$" ADD CONSTRAINT "LOGMNR_TABCOMPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_TYPE$" ADD CONSTRAINT "LOGMNR_TYPE$_PK" PRIMARY KEY ("LOGMNR_UID", "TOID", "VERSION#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_COLTYPE$" ADD CONSTRAINT "LOGMNR_COLTYPE$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_ATTRIBUTE$" ADD CONSTRAINT "LOGMNR_ATTRIBUTE$_PK" PRIMARY KEY ("LOGMNR_UID", "TOID", "VERSION#", "ATTRIBUTE#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_LOB$" ADD CONSTRAINT "LOGMNR_LOB$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_CON$" ADD CONSTRAINT "LOGMNR_CON$_PK" PRIMARY KEY ("LOGMNR_UID", "CON#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_CONTAINER$" ADD CONSTRAINT "LOGMNR_CONTAINER$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_CDEF$" ADD CONSTRAINT "LOGMNR_CDEF$_PK" PRIMARY KEY ("LOGMNR_UID", "CON#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_CCOL$" ADD CONSTRAINT "LOGMNR_CCOL$_PK" PRIMARY KEY ("LOGMNR_UID", "CON#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_ICOL$" ADD CONSTRAINT "LOGMNR_ICOL$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_LOBFRAG$" ADD CONSTRAINT "LOGMNR_LOBFRAG$_PK" PRIMARY KEY ("LOGMNR_UID", "FRAGOBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_INDPART$" ADD CONSTRAINT "LOGMNR_INDPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "BO#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_INDSUBPART$" ADD CONSTRAINT "LOGMNR_INDSUBPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "POBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_INDCOMPART$" ADD CONSTRAINT "LOGMNR_INDCOMPART$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_LOGMNR_BUILDLOG" ADD CONSTRAINT "LOGMNR_LOGMNR_BUILDLOG_PK" PRIMARY KEY ("LOGMNR_UID", "INITIAL_XID") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_NTAB$" ADD CONSTRAINT "LOGMNR_NTAB$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_OPQTYPE$" ADD CONSTRAINT "LOGMNR_OPQTYPE$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_SUBCOLTYPE$" ADD CONSTRAINT "LOGMNR_SUBCOLTYPE$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#", "TOID") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_KOPM$" ADD CONSTRAINT "LOGMNR_KOPM$_PK" PRIMARY KEY ("LOGMNR_UID", "NAME") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_PROPS$" ADD CONSTRAINT "LOGMNR_PROPS$_PK" PRIMARY KEY ("LOGMNR_UID", "NAME") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_ENC$" ADD CONSTRAINT "LOGMNR_ENC$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "OWNER#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_REFCON$" ADD CONSTRAINT "LOGMNR_REFCON$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#", "INTCOL#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNR_PARTOBJ$" ADD CONSTRAINT "LOGMNR_PARTOBJ$_PK" PRIMARY KEY ("LOGMNR_UID", "OBJ#") DISABLE;
ALTER TABLE "SYSTEM"."LOGMNRP_CTAS_PART_MAP" ADD CONSTRAINT "LOGMNRP_CTAS_PART_MAP_PK" PRIMARY KEY ("LOGMNR_UID", "BASEOBJV#", "KEYOBJ#")
  USING INDEX  LOCAL
 (PARTITION "P_LESSTHAN100" )  ENABLE;

ALTER TABLE "SYSTEM"."LOGSTDBY$FLASHBACK_SCN" ADD PRIMARY KEY ("PRIMARY_SCN")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."LOGSTDBY$EDS_TABLES" ADD CONSTRAINT "LOGSTDBY$EDS_TABLES_PKEY" PRIMARY KEY ("OWNER", "TABLE_NAME")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_AQCALL" ADD PRIMARY KEY ("ENQ_TID", "STEP_NO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."DEF$_AQERROR" ADD PRIMARY KEY ("ENQ_TID", "STEP_NO")
  USING INDEX  ENABLE;

ALTER TABLE "SYSTEM"."HELP" ADD CONSTRAINT "HELP_TOPIC_SEQ" PRIMARY KEY ("TOPIC", "SEQ")
  USING INDEX  ENABLE;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_WORKLOAD" ("WORKLOADID",
"IMPORT_TIME",
"QUERYID",
"APPLICATION",
"CARDINALITY",
"RESULTSIZE",
"LASTUSE",
"FREQUENCY",
"OWNER",
"PRIORITY",
"QUERY",
"RESPONSETIME") AS
  select
  a.collectionid# as workloadid,
  a.collecttime as import_time,
  a.queryid# as queryid,
  a.application,
  a.cardinality,
  a.resultsize,
  a.qdate as lastuse,
  a.frequency,
  a.uname as owner,
  a.priority,
  a.sql_text as query,
  a.exec_time as responsetime
from SYSTEM.MVIEW$_ADV_WORKLOAD A, SYSTEM.MVIEW$_ADV_LOG B, ALL_USERS D
WHERE a.collectionid# = b.runid#
AND b.uname = d.username
AND d.user_id = userenv('SCHEMAID');

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_FILTER" ("FILTERID",
"SUBFILTERNUM",
"SUBFILTERTYPE",
"STR_VALUE",
"NUM_VALUE1",
"NUM_VALUE2",
"DATE_VALUE1",
"DATE_VALUE2") AS
  select
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'USER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             11,'SCHEMA','UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filter a, system.mview$_adv_log b, ALL_USERS u
   WHERE a.filterid# = b.runid#
   AND b.uname = u.username
   AND u.user_id = userenv('SCHEMAID');

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_LOG" ("ID",
"FILTERID",
"RUN_BEGIN",
"RUN_END",
"TYPE",
"STATUS",
"MESSAGE",
"COMPLETED",
"TOTAL",
"ERROR_CODE") AS
  select
      m.runid# as id,
      m.filterid# as filterid,
      m.run_begin,
      m.run_end,
      decode(m.run_type,1,'EVALUATE',2,'EVALUATE_W',3,'RECOMMEND',
                      4,'RECOMMEND_W',5,'VALIDATE',6,'WORKLOAD',
                      7,'FILTER','UNKNOWN') AS type,
      decode(m.status,0,'UNUSED',1,'CANCELLED',2,'IN_PROGRESS',3,'COMPLETED',
                    4,'ERROR','UNKNOWN') AS status,
      m.message,
      m.completed,
      m.total,
      m.error_code
   from system.mview$_adv_log m, all_users u
   where m.uname = u.username
   and   u.user_id = userenv('SCHEMAID');

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_FILTERINSTANCE" ("RUNID",
"FILTERID",
"SUBFILTERNUM",
"SUBFILTERTYPE",
"STR_VALUE",
"NUM_VALUE1",
"NUM_VALUE2",
"DATE_VALUE1",
"DATE_VALUE2") AS
  select
      a.runid# as runid,
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'USER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             11,'SCHEMA','UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filterinstance a;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_RECOMMENDATIONS" ("RUNID",
"ALL_TABLES",
"FACT_TABLES",
"GROUPING_LEVELS",
"QUERY_TEXT",
"RECOMMENDATION_NUMBER",
"RECOMMENDED_ACTION",
"MVIEW_OWNER",
"MVIEW_NAME",
"STORAGE_IN_BYTES",
"PCT_PERFORMANCE_GAIN",
"BENEFIT_TO_COST_RATIO") AS
  select
  t1.runid# as runid,
  t1.from_clause as all_tables,
  fact_tables,
  grouping_levels,
  query_text,
  rank# as recommendation_number,
  action_type as recommended_action,
  summary_owner as mview_owner,
  summary_name as mview_name,
  storage_in_bytes,
  pct_performance_gain,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID') and
  t1.output_type = 0
order by t1.rank#;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_EVALUATIONS" ("RUNID",
"MVIEW_OWNER",
"MVIEW_NAME",
"RANK",
"STORAGE_IN_BYTES",
"FREQUENCY",
"CUMULATIVE_BENEFIT",
"BENEFIT_TO_COST_RATIO") AS
  select
  t1.runid# as runid,
  summary_owner AS mview_owner,
  summary_name AS mview_name,
  rank# as rank,
  storage_in_bytes,
  frequency,
  cumulative_benefit,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID') and
  t1.output_type = 1
order by t1.rank#;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."MVIEW_EXCEPTIONS" ("RUNID",
"OWNER",
"TABLE_NAME",
"DIMENSION_NAME",
"RELATIONSHIP",
"BAD_ROWID") AS
  select
  t1.runid# as runid,
  owner,
  table_name,
  dimension_name,
  relationship,
  bad_rowid
from SYSTEM.MVIEW$_ADV_EXCEPTIONS t1, SYSTEM.MVIEW$_ADV_LOG t2, ALL_USERS u
where
  t1.runid# = t2.runid# and
  u.username = t2.uname and
  u.user_id = userenv('SCHEMAID');

-- [dbsrc POST-PROCESSED]:
-- (16) Handle sqlplus limitation by injecting newlines after commas
--      between double-quotes in "select *" view bodies (SP2-0027:
--      Input is too long (> 2499 characters) - line ignored).
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."SCHEDULER_PROGRAM_ARGS" ("OWNER",
"PROGRAM_NAME",
"ARGUMENT_NAME",
"ARGUMENT_POSITION",
"ARGUMENT_TYPE",
"METADATA_ATTRIBUTE",
"DEFAULT_VALUE",
"DEFAULT_ANYDATA_VALUE",
"OUT_ARGUMENT") AS
  SELECT "OWNER",
"PROGRAM_NAME",
"ARGUMENT_NAME",
"ARGUMENT_POSITION",
"ARGUMENT_TYPE",
"METADATA_ATTRIBUTE",
"DEFAULT_VALUE",
"DEFAULT_ANYDATA_VALUE",
"OUT_ARGUMENT" FROM sys.all_scheduler_program_args;

-- [dbsrc POST-PROCESSED]:
-- (16) Handle sqlplus limitation by injecting newlines after commas
--      between double-quotes in "select *" view bodies (SP2-0027:
--      Input is too long (> 2499 characters) - line ignored).
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."SCHEDULER_JOB_ARGS" ("OWNER",
"JOB_NAME",
"ARGUMENT_NAME",
"ARGUMENT_POSITION",
"ARGUMENT_TYPE",
"VALUE",
"ANYDATA_VALUE",
"OUT_ARGUMENT") AS
  SELECT "OWNER",
"JOB_NAME",
"ARGUMENT_NAME",
"ARGUMENT_POSITION",
"ARGUMENT_TYPE",
"VALUE",
"ANYDATA_VALUE",
"OUT_ARGUMENT" FROM sys.all_scheduler_job_args;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."AQ$DEF$_AQCALL" ("QUEUE",
"MSG_ID",
"CORR_ID",
"MSG_PRIORITY",
"MSG_STATE",
"DELAY",
"DELAY_TIMESTAMP",
"EXPIRATION",
"ENQ_TIME",
"ENQ_TIMESTAMP",
"ENQ_USER_ID",
"ENQ_TXN_ID",
"DEQ_TIME",
"DEQ_TIMESTAMP",
"DEQ_USER_ID",
"DEQ_TXN_ID",
"RETRY_COUNT",
"EXCEPTION_QUEUE_OWNER",
"EXCEPTION_QUEUE",
"USER_DATA",
"ORIGINAL_QUEUE_NAME",
"ORIGINAL_QUEUE_OWNER",
"EXPIRATION_REASON") AS
  SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp)
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp)
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema,
                                  1, exception_qschema,
                                  2, exception_qschema,
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue,
                                  1, exception_queue,
                                  2, exception_queue,
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3,
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL,
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3,
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL,
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3,
                     decode(deq_time, NULL,
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL)
                             EXPIRATION_REASON  FROM "DEF$_AQCALL" WHERE state != 7 AND   state != 9 WITH READ ONLY;

-- [dbsrc POST-PROCESSED]:
-- (16) Handle sqlplus limitation by injecting newlines after commas
--      between double-quotes in "select *" view bodies (SP2-0027:
--      Input is too long (> 2499 characters) - line ignored).
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."AQ$_DEF$_AQCALL_F" ("Q_NAME",
"ROW_ID",
"MSGID",
"CORRID",
"PRIORITY",
"STATE",
"DELAY",
"EXPIRATION",
"ENQ_TIME",
"ENQ_UID",
"ENQ_TID",
"DEQ_TIME",
"DEQ_UID",
"DEQ_TID",
"RETRY_COUNT",
"EXCEPTION_QSCHEMA",
"EXCEPTION_QUEUE",
"CSCN",
"DSCN",
"CHAIN_NO",
"LOCAL_ORDER_NO",
"TIME_MANAGER_INFO",
"STEP_NO",
"USER_DATA",
"QUEUE_ID") AS
  SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA , qo.qid QUEUE_ID  FROM "DEF$_AQCALL" qt, SYS.ALL_INT_DEQUEUE_QUEUES  qo  WHERE qt.q_name = qo.name AND qo.owner = 'SYSTEM' WITH READ ONLY;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."AQ$DEF$_AQERROR" ("QUEUE",
"MSG_ID",
"CORR_ID",
"MSG_PRIORITY",
"MSG_STATE",
"DELAY",
"DELAY_TIMESTAMP",
"EXPIRATION",
"ENQ_TIME",
"ENQ_TIMESTAMP",
"ENQ_USER_ID",
"ENQ_TXN_ID",
"DEQ_TIME",
"DEQ_TIMESTAMP",
"DEQ_USER_ID",
"DEQ_TXN_ID",
"RETRY_COUNT",
"EXCEPTION_QUEUE_OWNER",
"EXCEPTION_QUEUE",
"USER_DATA",
"ORIGINAL_QUEUE_NAME",
"ORIGINAL_QUEUE_OWNER",
"EXPIRATION_REASON") AS
  SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp)
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp)
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema,
                                  1, exception_qschema,
                                  2, exception_qschema,
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue,
                                  1, exception_queue,
                                  2, exception_queue,
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3,
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL,
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3,
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL,
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3,
                     decode(deq_time, NULL,
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL)
                             EXPIRATION_REASON  FROM "DEF$_AQERROR" WHERE state != 7 AND   state != 9 WITH READ ONLY;

-- [dbsrc POST-PROCESSED]:
-- (16) Handle sqlplus limitation by injecting newlines after commas
--      between double-quotes in "select *" view bodies (SP2-0027:
--      Input is too long (> 2499 characters) - line ignored).
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."AQ$_DEF$_AQERROR_F" ("Q_NAME",
"ROW_ID",
"MSGID",
"CORRID",
"PRIORITY",
"STATE",
"DELAY",
"EXPIRATION",
"ENQ_TIME",
"ENQ_UID",
"ENQ_TID",
"DEQ_TIME",
"DEQ_UID",
"DEQ_TID",
"RETRY_COUNT",
"EXCEPTION_QSCHEMA",
"EXCEPTION_QUEUE",
"CSCN",
"DSCN",
"CHAIN_NO",
"LOCAL_ORDER_NO",
"TIME_MANAGER_INFO",
"STEP_NO",
"USER_DATA",
"QUEUE_ID") AS
  SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA , qo.qid QUEUE_ID  FROM "DEF$_AQERROR" qt, SYS.ALL_INT_DEQUEUE_QUEUES  qo  WHERE qt.q_name = qo.name AND qo.owner = 'SYSTEM' WITH READ ONLY;

-- [dbsrc POST-PROCESSED]:
-- (17) Handle sqlplus limitation by injecting newlines after commas in
--      view column specs (SP2-0027: Input is too long (> 2499 characters)
--      - line ignored).
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."PRODUCT_PRIVS" ("PRODUCT",
"USERID",
"ATTRIBUTE",
"SCOPE",
"NUMERIC_VALUE",
"CHAR_VALUE",
"DATE_VALUE",
"LONG_VALUE") AS
  SELECT PRODUCT, USERID, ATTRIBUTE, SCOPE,
         NUMERIC_VALUE, CHAR_VALUE, DATE_VALUE, LONG_VALUE
  FROM SQLPLUS_PRODUCT_PROFILE
  WHERE USERID = 'PUBLIC' OR USER LIKE USERID;

GRANT SELECT ON "SYSTEM"."PRODUCT_PRIVS" TO PUBLIC;
COMMENT ON TABLE "SYSTEM"."MVIEW_WORKLOAD"  IS 'This view gives DBA access to shared workload';
COMMENT ON TABLE "SYSTEM"."MVIEW_FILTER"  IS 'Workload filter records';
COMMENT ON TABLE "SYSTEM"."MVIEW_LOG"  IS 'Advisor session log';
COMMENT ON TABLE "SYSTEM"."MVIEW_FILTERINSTANCE"  IS 'Workload filter instance records';
COMMENT ON TABLE "SYSTEM"."MVIEW_RECOMMENDATIONS"  IS 'This view gives DBA access to summary recommendations';
COMMENT ON TABLE "SYSTEM"."MVIEW_EVALUATIONS"  IS 'This view gives DBA access to summary evaluation output';
COMMENT ON TABLE "SYSTEM"."MVIEW_EXCEPTIONS"  IS 'This view gives DBA access to dimension validation results';
ALTER TABLE "SYSTEM"."MVIEW$_ADV_BASETABLE" ADD CONSTRAINT "MVIEW$_ADV_BASETABLE_FK" FOREIGN KEY ("QUERYID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_WORKLOAD" ("QUERYID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_FILTERINSTANCE" ADD CONSTRAINT "MVIEW$_ADV_FILTERINSTANCE_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_LEVEL" ADD CONSTRAINT "MVIEW$_ADV_LEVEL_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CONSTRAINT "MVIEW$_ADV_ROLLUP_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CONSTRAINT "MVIEW$_ADV_ROLLUP_CFK" FOREIGN KEY ("RUNID#", "CLEVELID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LEVEL" ("RUNID#", "LEVELID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ROLLUP" ADD CONSTRAINT "MVIEW$_ADV_ROLLUP_PFK" FOREIGN KEY ("RUNID#", "PLEVELID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LEVEL" ("RUNID#", "LEVELID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_AJG" ADD CONSTRAINT "MVIEW$_ADV_AJG_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_FJG" ADD CONSTRAINT "MVIEW$_ADV_FJG_FK" FOREIGN KEY ("AJGID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_AJG" ("AJGID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_GC" ADD CONSTRAINT "MVIEW$_ADV_GC_FK" FOREIGN KEY ("FJGID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_FJG" ("FJGID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_CLIQUE" ADD CONSTRAINT "MVIEW$_ADV_CLIQUE_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_ELIGIBLE" ADD CONSTRAINT "MVIEW$_ADV_ELIGIBLE_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_OUTPUT" ADD CONSTRAINT "MVIEW$_ADV_OUTPUT_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_EXCEPTIONS" ADD CONSTRAINT "MVIEW$_ADV_EXCEPTION_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_INFO" ADD CONSTRAINT "MVIEW$_ADV_INFO_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."MVIEW$_ADV_JOURNAL" ADD CONSTRAINT "MVIEW$_ADV_JOURNAL_FK" FOREIGN KEY ("RUNID#")
	  REFERENCES "SYSTEM"."MVIEW$_ADV_LOG" ("RUNID#") ENABLE;

ALTER TABLE "SYSTEM"."AQ$_INTERNET_AGENT_PRIVS" ADD CONSTRAINT "AGENT_MUST_BE_CREATED" FOREIGN KEY ("AGENT_NAME")
	  REFERENCES "SYSTEM"."AQ$_INTERNET_AGENTS" ("AGENT_NAME") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."DEF$_CALLDEST" ADD CONSTRAINT "DEF$_CALL_DESTINATION" FOREIGN KEY ("DBLINK", "CATCHUP")
	  REFERENCES "SYSTEM"."DEF$_DESTINATION" ("DBLINK", "CATCHUP") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_FLAVORS" ADD CONSTRAINT "REPCAT$_FLAVORS_FK1" FOREIGN KEY ("GNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD CONSTRAINT "REPCAT$_REPSCHEMA_PRNT" FOREIGN KEY ("SNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPSCHEMA" ADD CONSTRAINT "REPCAT$_REPSCHEMA_DEST" FOREIGN KEY ("DBLINK", "EXTENSION_ID")
	  REFERENCES "SYSTEM"."DEF$_DESTINATION" ("DBLINK", "CATCHUP") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPOBJECT" ADD CONSTRAINT "REPCAT$_REPOBJECT_PRNT" FOREIGN KEY ("GNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPCOLUMN" ADD CONSTRAINT "REPCAT$_REPCOLUMN_FK" FOREIGN KEY ("SNAME", "ONAME", "TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_KEY_COLUMNS" ADD CONSTRAINT "REPCAT$_KEY_COLUMNS_PRNT" FOREIGN KEY ("SNAME", "ONAME", "TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD CONSTRAINT "REPCAT$_REPGEN_PRNT" FOREIGN KEY ("SNAME", "ONAME", "TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_GENERATED" ADD CONSTRAINT "REPCAT$_REPGEN_PRNT2" FOREIGN KEY ("BASE_SNAME", "BASE_ONAME", "BASE_TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPPROP" ADD CONSTRAINT "REPCAT$_REPPROP_PRNT" FOREIGN KEY ("SNAME", "ONAME", "TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_REPOBJECT" ("SNAME", "ONAME", "TYPE") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_DDL" ADD CONSTRAINT "REPCAT$_DDL_PRNT" FOREIGN KEY ("LOG_ID", "SOURCE", "ROLE", "MASTER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCATLOG" ("ID", "SOURCE", "ROLE", "MASTER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REPGROUP_PRIVS" ADD CONSTRAINT "REPCAT$_REPGROUP_PRIVS_FK" FOREIGN KEY ("GNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PRIORITY" ADD CONSTRAINT "REPCAT$_PRIORITY_F1" FOREIGN KEY ("PRIORITY_GROUP", "SNAME")
	  REFERENCES "SYSTEM"."REPCAT$_PRIORITY_GROUP" ("PRIORITY_GROUP", "SNAME") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_GROUPED_COLUMN" ADD CONSTRAINT "REPCAT$_GROUPED_COLUMN_F1" FOREIGN KEY ("SNAME", "ONAME", "GROUP_NAME")
	  REFERENCES "SYSTEM"."REPCAT$_COLUMN_GROUP" ("SNAME", "ONAME", "GROUP_NAME") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD CONSTRAINT "REPCAT$_RESOLUTION_F1" FOREIGN KEY ("CONFLICT_TYPE_ID", "METHOD_NAME")
	  REFERENCES "SYSTEM"."REPCAT$_RESOLUTION_METHOD" ("CONFLICT_TYPE_ID", "METHOD_NAME") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_RESOLUTION" ADD CONSTRAINT "REPCAT$_RESOLUTION_F3" FOREIGN KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME")
	  REFERENCES "SYSTEM"."REPCAT$_CONFLICT" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_PARAMETER_COLUMN" ADD CONSTRAINT "REPCAT$_PARAMETER_COLUMN_F1" FOREIGN KEY ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO")
	  REFERENCES "SYSTEM"."REPCAT$_RESOLUTION" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME", "SEQUENCE_NO") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CONSTRAINT "REPCAT$_AUDIT_COLUMN_F1" FOREIGN KEY ("ATTRIBUTE")
	  REFERENCES "SYSTEM"."REPCAT$_AUDIT_ATTRIBUTE" ("ATTRIBUTE") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_AUDIT_COLUMN" ADD CONSTRAINT "REPCAT$_AUDIT_COLUMN_F2" FOREIGN KEY ("BASE_SNAME", "BASE_ONAME", "BASE_CONFLICT_TYPE_ID", "BASE_REFERENCE_NAME")
	  REFERENCES "SYSTEM"."REPCAT$_CONFLICT" ("SNAME", "ONAME", "CONFLICT_TYPE_ID", "REFERENCE_NAME") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD CONSTRAINT "REPCAT$_FLAVOR_OBJECTS_FK1" FOREIGN KEY ("GNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_FLAVOR_OBJECTS" ADD CONSTRAINT "REPCAT$_FLAVOR_OBJECTS_FK2" FOREIGN KEY ("GNAME", "FLAVOR_ID", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_FLAVORS" ("GNAME", "FLAVOR_ID", "GOWNER") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CONSTRAINT "REPCAT$_REFRESH_TEMPLATES_FK1" FOREIGN KEY ("TEMPLATE_TYPE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_TYPES" ("TEMPLATE_TYPE_ID") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ADD CONSTRAINT "REPCAT$_REFRESH_TEMPLATES_FK2" FOREIGN KEY ("TEMPLATE_STATUS_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_STATUS" ("TEMPLATE_STATUS_ID") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_AUTHORIZATIONS" ADD CONSTRAINT "REPCAT$_USER_AUTHORIZATION_FK2" FOREIGN KEY ("REFRESH_TEMPLATE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_REFGROUPS" ADD CONSTRAINT "REPCAT$_TEMPLATE_REFGROUPS_FK1" FOREIGN KEY ("REFRESH_TEMPLATE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CONSTRAINT "REPCAT$_TEMPLATE_OBJECTS_FK1" FOREIGN KEY ("REFRESH_TEMPLATE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ADD CONSTRAINT "REPCAT$_TEMPLATE_OBJECTS_FK3" FOREIGN KEY ("OBJECT_TYPE")
	  REFERENCES "SYSTEM"."REPCAT$_OBJECT_TYPES" ("OBJECT_TYPE_ID") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ADD CONSTRAINT "REPCAT$_TEMPLATE_PARMS_FK1" FOREIGN KEY ("REFRESH_TEMPLATE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD CONSTRAINT "REPCAT$_OBJECT_PARMS_FK1" FOREIGN KEY ("TEMPLATE_PARAMETER_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("TEMPLATE_PARAMETER_ID") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_OBJECT_PARMS" ADD CONSTRAINT "REPCAT$_OBJECT_PARMS_FK2" FOREIGN KEY ("TEMPLATE_OBJECT_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_OBJECTS" ("TEMPLATE_OBJECT_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_USER_PARM_VALUES" ADD CONSTRAINT "REPCAT$_USER_PARM_VALUES_FK1" FOREIGN KEY ("TEMPLATE_PARAMETER_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_PARMS" ("TEMPLATE_PARAMETER_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CONSTRAINT "REPCAT$_SITE_OBJECT_FK2" FOREIGN KEY ("TEMPLATE_SITE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_TEMPLATE_SITES" ("TEMPLATE_SITE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITE_OBJECTS" ADD CONSTRAINT "REPCAT$_SITE_OBJECTS_FK1" FOREIGN KEY ("OBJECT_TYPE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_OBJECT_TYPES" ("OBJECT_TYPE_ID") ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_INSTANTIATION_DDL" ADD CONSTRAINT "REPCAT$_INSTANTIATION_DDL_FK1" FOREIGN KEY ("REFRESH_TEMPLATE_ID")
	  REFERENCES "SYSTEM"."REPCAT$_REFRESH_TEMPLATES" ("REFRESH_TEMPLATE_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD CONSTRAINT "REPCAT$_SITES_NEW_FK1" FOREIGN KEY ("EXTENSION_ID")
	  REFERENCES "SYSTEM"."REPCAT$_EXTENSION" ("EXTENSION_ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "SYSTEM"."REPCAT$_SITES_NEW" ADD CONSTRAINT "REPCAT$_SITES_NEW_FK2" FOREIGN KEY ("GNAME", "GOWNER")
	  REFERENCES "SYSTEM"."REPCAT$_REPCAT" ("SNAME", "GOWNER") ON DELETE CASCADE ENABLE;

CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."REPCATLOGTRIG"
AFTER UPDATE OR DELETE ON system.repcat$_repcatlog
BEGIN
  sys.dbms_alert.signal('repcatlog_alert', '');
END;
/

ALTER TRIGGER "SYSTEM"."REPCATLOGTRIG" ENABLE;
CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."DEF$_PROPAGATOR_TRIG"
  BEFORE INSERT ON system.def$_propagator
DECLARE
  prop_count  NUMBER;
BEGIN
  SELECT count(*) into prop_count
    FROM system.def$_propagator;

  IF (prop_count > 0) THEN
    -- Raise duplicate propagator error
    sys.dbms_sys_error.raise_system_error(-23394);
  END IF;
END;
/

ALTER TRIGGER "SYSTEM"."DEF$_PROPAGATOR_TRIG" ENABLE;
