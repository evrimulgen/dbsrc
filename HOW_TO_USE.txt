
--    Copyright 2019 Steve Rutledge
--    =========================================================================
--    This file is part of DBSRC Librarian.
--
--    DBSRC Librarian is free software: you can redistribute it and/or modify
--    it under the terms of the GNU General Public License as published by
--    the Free Software Foundation, version 3 of the License.
--
--    DBSRC Librarian is distributed in the hope that it will be useful,
--    but WITHOUT ANY WARRANTY; without even the implied warranty of
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--    GNU General Public License for more details.
--
--    You should have received a copy of the GNU General Public License
--    along with DBSRC Librarian (see file COPYING.txt).  
--    If not, see <https://www.gnu.org/licenses/>.
--    =========================================================================

-- ============================================================================
-- (1) Introduction
-- ============================================================================

	This is a utility for comprehensive, flexible, performant DDL export of
	large database systems consisting of hundreds of thousands of DDL objects
	(or more).

	This is not a complete utility, not is it production ready, so comes with
	no warranties in any way whatsoever. This utility has not be productized or
	packaged for ease-of-use or understandability. It is simply a prototype to
	explore feasibility. Having said all that, I share it freely in case it
	may be useful to someone somehow...


-- ============================================================================
-- Details of files and directories
-- ============================================================================

/init.bat
	
	Edit values to match your environment. Run this to set file path
	and database credentials within the cmd window you will use to execute
	scripts from /bin.

/bin

	The "user interface": a handful of windows batch scripts.  Scripts
	starting with "_" (underscore) are "helper scripts" called by other
	scripts, not intended to be executed directly.

	_export_ddl.bat - export database source for a given dbsrc configuration

	_get_db_creds.bat - prompt for the username, password and database name
		one time only, then store in environment vairables for future use 
			
	_get_dbscript.bat - generate set of database source scripts for a given
		dbsrc configuration

	install.bat - install the DBSRC Librarian utility.

	re_post_prcs.bat - reload post-processing configurations for the given
		dbsrc config, then re-post-process the dbsrc.raw_ddl_text into the
		dbsrc.cooked_ddl_text

	reconfig.bat - reload all post_processing configurations for all dbsrc
		configs.

	status.bat - report a brief status summarizing the contents of the dbsrc table

	status2.bat - report a brief status summarizing the contents of the dbsrc
		table for the :: current (most recent) set of dbsrc records

	x_all.bat - example script for reverse-engineering all interesting
		objects in an oracle database and generating a set of database source
		scripts.

	x_selftest.bat - example script for reverse-engineering the DBSRC
		Librarion database objects and generating a set of database source
		scripts.

/cfg/

	
	Each "configuration" for exporting the DDL for a system is captured in a
	"configuration" script in this dir.  Review the configuration scripts in
	/dbsrc/cfg to understand how to configure the utility for a new set of
	database source code. 

	Some notable examples:

	/dbsrc/cfg/all.sql 
		
		Configuration to export database source for all interesting objects in
		an Oracle 12.1 db, which amounts to over 53k objects in a vanilla
		Oracle 12.1 database.

	/dbsrc/cfg/selftest.sql 
	
		Configuration to export database source for the DBSRC Librarian,
		generated by the DBSRC Librarian. 

	/dbsrc/cfg/defaults/_default_*.sql 
	
		These are factored out common configuration settings. These scripts
		are called from other configuration scripts which leverage these
		defaults.
/log

	All scripts in /bin will log to this directory. The logfile naming
	convention is [script_name]_yyyymmdd_hh24miss.log. Examples:

		dbsrc_cfg_all_20181102_094454.log
		dbsrc_cfg_all_20181102_104048.log
		dbsrc_cfg_sdh_build_20181102_094455.log
		dbsrc_cfg_sdh_build_p_20181102_094456.log
		dbsrc_cfg_selftest_20181102_094457.log
		export_ddl_20181102_104107.log
		install_20181102_094338.log

/out

	Database Source generated by DBSRC Librarian is written to this directory.
	Review EXAMPLE output in the /out directory to see example output.  There
	are two example sets of Database Source Code produced by the DBSRC
	Librarian:

	dbsrc/out/selftest_example/
		EXAMPLE Database source for the DBSRC Librarian, generated by the DBSRC
		Librarian.

	dbsrc/out/all_example/
		EXAMPLE Database source for all interesting objects in an Oracle 12.1 db.

  Within each set, you will find the following scripts:

	dbsrc/out/[name]/[name]_create.sql

		exported DDL for the [name] system. It is suitable for executing in a
		Vanilla Oracle database for a "sandbox" replica of the system.

		The intent of this script is for it to be executable by ORACLE, so DDL
		is arranged in dependency order as determined by dbms_metadata.  As
		multi-cycle dependencies are possible, ORA errors encountered by
		missing dependencies may be encountered. It should be feasible to
		successfully force a recompile of all remaining invalid objects (there
		is a script included for that -
		dbsrc/out/dbscript_helpers/compile_invalid.sql).
		
	dbsrc/out/[name]/[name]_create_ordered.sql

		Similar to the [name]_create.sql, except:

		The intent of this script is for it to be readable by HUMAN BEINGS, so
		objects are grouped and arranged in a logical order intended for mere
		humans to find useful. In this script, DDL objects are grouped by
		type. The order of types is based on dbsrc_cfg.dbscript.order_no for
		this cfg_name. Explicitly grouping DDL by type will of course destroy
		the build dependencies, so don't even try to execute this script. This
		script is intended to be useful for analysis and change management.

	dbsrc/out/[name]/[name]_define.sql

		This is a companion script to the create script intended to be a
		helper for managing password references. Each password in the create
		script has been replaced with a SQLPlus substitution variable which is
		declared here. It is left up to a human to set the password values.

	dbsrc/out/[name]/[name]_drop.sql

		This is a companion script to create script, intended to drop all
		objects created by the create script.

	dbsrc/out/[name]/[name]_manifest.txt

		This is a companion script to the create script, intended to be a
		sorted list of all DDL objects contained in the create script.

	dbsrc/out/[name]/create_o/*
		
		Instead of a single script containing DDL for the entire system, there
		is a script for each owner.  These scripts are not useful for
		executing, because the build dependency order cannot be preserved when
		grouping scripts by owner and object type. These scripts are intended to be
		useful for analysis and change management.

	dbsrc/out/[name]/create_ot/*

		Instead of a single script containing DDL for the entire system, there
		is a script for each owner and object type.  These scripts are not
		useful for executing, because the build dependency order cannot be
		preserved when grouping scripts by owner and object type. These
		scripts are intended to be useful for analysis and change management.

	dbsrc/out/[name]/create_otn/*

		Instead of a single script containing DDL for the entire system, there
		is a script for each owner, object type and object name.  These
		scripts are not useful for executing, because the build dependency
		order cannot be preserved when grouping scripts by owner and object
		type. These scripts are intended to be useful for analysis and change
		management.

		I purposefully omitted create_otn for the "all" configuration (too
		many files!).

/sql

	Most SQL scripts are "under the hood" and are called by Windows batch
	scripts in the /bin dir.  Review the core code in
	/dbsrc/sql/01_install.sql and 02_install.sql to see the "guts". If you
	really want to understand dbms_metadata, look at the Oracle Database
	PL/SQL Packages and Types Reference: DBMS_METADATA documentation at
	https://docs.oracle.com/database/121/ARPLS/d_metada.htm#ARPLS026.

-- ============================================================================
-- (3) Installing and Using
-- ============================================================================


	* You need a working oracle client, including the SQLPlus utility.

	* You need Windows on your client. I'm using 7. I imagine older and newer
	  would work as well. In the past, I built alternate scripts for linux
	  (bash), but rarely used them, so dropped that. If you want to add linux
	  support, it is trivial to do (just convert .bat to shell scripts).

	* As dba, create schema for this utility to live in:

		cd to /dbsrc/sql
		sqlplus sys/password@orcl as sysdba @create_dbsrc_user dbsrc_u

			(dbsrc_u is the username I chose)

	* Set the DBSRC environment variable values to log into this new schema:

		set DSRC_USER=dbsrc_u
		set DSRC_PW=password
		set DSRC_DB=sterutlernd2

		verify:
		sqlplus  %DBSRC_USER%/%DBSRC_PW%@%DBSRC_DB%

	* Install

		cd /dbsrc/bin
		install.bat

		(details are written to stdout and logged to files as well)

		Review the log files and look for errors. 

		cd /dbsrc/log
		dir
		comments_20181030_114541.log
		dbsrc_cfg_all_20181030_114542.log
		dbsrc_cfg_selftest_20181030_114543.log
		install_20181030_114538.log

	* Run selftest

		cd /dbsrc/bin
		x_selftest

		(wait 1-2 minutes)
		(details are written to stdout and logged to files as well)

		Here is what stdout from a typical execution looks like:

		-- DBSRC table stats are stale or missing. Gathering stats...
		-- DBSRC_CFG table stats are stale or missing. Gathering stats...
		-- DBSRC_CFG_DBSCRIPT table stats are stale or missing. Gathering stats...
		-- DBSRC_CFG_FILTER table stats are stale or missing. Gathering stats...
		-- DBSRC_CFG_POST_PRCS table stats are stale or missing. Gathering stats...
		-- DBSRC_CFG_TRANSFORM table stats are stale or missing. Gathering stats...
		-- DBSRC table stats are stale or missing. Gathering stats...
		-- ========================================================================
		-- BEGIN export_ddl OCT-30-2018 11:52:19
		-- export_ddl elapsed seconds: 53.46
		-- export_ddl object count: 100
		-- export_ddl rate in objects/s: 1.87
		-- export_ddl all-time objects exported: 1121
		-- END export_ddl OCT-30-2018 11:53:13
		-- ========================================================================
		-- DBSRC table stats are stale or missing. Gathering stats...
		-- ========================================================================
		-- BEGIN Post-processing OCT-30-2018 11:53:15
		-- Post-processing Elapsed seconds: 3.34
		-- END Post-processing OCT-30-2018 11:53:18
		-- ========================================================================
		-- ========================================================================
		-- BEGIN Configuration Details
		-- selftest:  30-OCT-18
		--    SELFTEST: export everything relevant to a build, for current user
		--    sterutle@ ../cfg/..\cfg\selftest.sql:@sterutle
		--
		-- dbms_metadata.set_filter() Parameters:
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/GRANT/SYSTEM_GRANT/PROC_SYSTEM_GRANT',
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/SCHEMA/DVPS_STAGING_REALM_MEMBERSHIP',
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/SCHEMA/PASSWORD_HISTORY',
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/SCHEMA/PROCACT_SCHEMA',
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/SCHEMA/TABLESPACE_QUOTA',
		--    EXCLUDE_PATH_EXPR ='DATABASE_EXPORT/XS_SECURITY',
		--    INCLUDE_PATH_EXPR ='DATABASE_EXPORT/SCHEMA',
		--    NAME_EXPR =USER,SCHEMA
		--
		-- dbms_metadata.set_transform() Parameters:
		--    CONSTRAINTS,false,TABLE
		--    CONSTRAINTS_AS_ALTER,true,TABLE
		--    FORCE,TRUE,VIEW
		--    PARTITIONING,true,INDEX
		--    PARTITIONING,true,MATERIALIZED VIEW
		--    PARTITIONING,true,TABLE
		--    PRETTY,true,
		--    REF_CONSTRAINTS,false,TABLE
		--    SEGMENT_ATTRIBUTES,false,CLUSTER
		--    SEGMENT_ATTRIBUTES,false,CONSTRAINT
		--    SEGMENT_ATTRIBUTES,false,INDEX
		--    SEGMENT_ATTRIBUTES,false,MATERIALIZED VIEW
		--    SEGMENT_ATTRIBUTES,false,ROLLBACK_SEGMENT
		--    SEGMENT_ATTRIBUTES,false,TABLE
		--    SEGMENT_ATTRIBUTES,false,TABLESPACE
		--    SQLTERMINATOR,true,
		--    STORAGE,false,INDEX
		--    STORAGE,false,MATERIALIZED VIEW
		--    STORAGE,false,TABLE
		--    TABLESPACE,false,MATERIALIZED VIEW
		--    TABLESPACE,false,TABLE
		-- END Configuration Details
		-- ========================================================================
		-- ========================================================================
		-- BEGIN Database Source Details
		-- dbsrc_set_no=1000 cfg_name=selftest create_date=30-OCT-18
		-- create_process=sterutle@sterutle@ ../sql/export_ddl.sql:@sterutle
		-- TOTAL: 101
		--   COMMENT: 60
		--   CONSTRAINT: 12
		--   DEFAULT_ROLE: 1
		--   EPILOGUE: 1
		--   INDEX: 10
		--   PACKAGE: 1
		--   PACKAGE BODY: 1
		--   PROLOGUE: 1
		--   ROLE_GRANT: 3
		--   SEQUENCE: 2
		--   SYSTEM_GRANT: 1
		--   TABLE: 6
		--   USER: 1
		--   VIEW: 1
		-- END Database Source Details
		-- ========================================================================
		-- ========================================================================
		-- BEGIN Post-Processing Details
		-- Total object(s) excluded due to post-processing: 1
		-- Total object(s) affected in any way due to post-processing: 7
		-- (1) Exclude package alter function, procedure, package compile --
		--      don't currently see any value in these.
		--   Post-processing 1 object(s) affected.
		-- (6) Change all user default tablepaces to the USERS tablespace.
		--   Post-processing 1 object(s) affected.
		-- (7) Default all user passwords to username.
		--   Post-processing 1 object(s) affected.
		-- (8) Add "show errors" after all stored code to make log files more useful.
		--   Post-processing 3 object(s) affected.
		-- (12) Add force option to view creation, because set_transform
		--      option that is supposed to do exactly this apparently does not work.
		--   Post-processing 1 object(s) affected.
		-- (17) Handle sqlplus limitation by injecting newlines after commas in
		--      view column specs (SP2-0027: Input is too long (> 2499 characters)
		--      - line ignored).
		--   Post-processing 1 object(s) affected.
		-- (28) inject a call to a prologue script for customizations.
		--   Post-processing 1 object(s) affected.
		-- (29) inject a call to an epilogue script for customizations.
		--   Post-processing 1 object(s) affected.
		-- END Post-Processing Details
		-- ========================================================================
		-- BEGIN get_def_dbscript ...
		--   Creating ..\out\selftest\selftest_define.sql
		-- END get_def_dbscript.
		-- BEGIN get_manifest ...
		--   Creating ..\out\selftest\selftest_manifest.txt
		-- END get_manifest.
		-- BEGIN get_drop_dbscript ...
		--   Creating ..\out\selftest\selftest_drop_dbscript.sql
		-- END get_drop_dbscript.
		-- BEGIN get_create_dbscript...
		--   Creating ..\out\selftest\selftest_create.sql
		-- END get_create_dbscript.
		-- BEGIN get_create_ordered_dbscript...
		--   Creating ..\out\selftest\selftest_created_ordered.sql
		-- END get_create_ordered_dbscript.
		-- BEGIN get_create_o_dbscripts...
		--   Creating ..\out\selftest\create_o\_readme.txt
		--   Creating ..\out\selftest\create_o\selftest_create.[owner].all.all.sql script(s)
		-- END get_create_o_dbscripts.
		-- BEGIN get_create_ot_dbscripts ...
		--   Creating ..\out\selftest\create_ot\_readme.txt
		--   Creating ..\out\selftest\create_ot\[cfg_name]_create.[owner].[type].all.sql script(s)
		-- END get_create_ot_dbscripts.
		-- BEGIN get_create_otn_dbscripts ...
		--   Creating ..\out\selftest\create_otn\_readme.txt
		--   Creating ..\out\selftest\create_otn\[cfg_name]_create.[owner].[type].[name].sql scripts
		-- END get_create_otn_dbscripts.

		Review the log files and look for errors. 

		cd /dbsrc/log
		dir
		...
		...
		export_ddl_20181030_115217.log

		Review the output files:

		cd /dbsrc/out/selftest/
		dir

		create_o/
		create_ot/
		create_otn/
		sdh_build_create.sql
		sdh_build_create_ordered.sql
		sdh_build_define.sql
		sdh_build_drop.sql
		sdh_build_manifest.txt

	* After this, you are on your own. You will most likely want to
	  reverse-engineer database code for your own system. You will need to
	  build a new configuration that identifies what you want to generate
	  dbsrc for. Use the existing configurations as a starting point.

	  cd /dbsrc/cfg
	  ...
	  (scratching of head and figuring things out happens here)
	  ...
 
